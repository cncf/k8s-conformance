  I0731 00:27:49.591222      24 e2e.go:109] Starting e2e run "4b066364-17ae-41c5-a60a-5a4b242efaf1" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1753921668 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0731 00:27:49.746064 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  I0731 00:27:49.747639 24 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0731 00:27:49.797016 24 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0731 00:27:49.801583 24 e2e.go:153] 7 / 7 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
  I0731 00:27:49.801637 24 e2e.go:153] 7 / 7 pods ready in namespace 'kube-system' in daemonset 'cilium-envoy' (0 seconds elapsed)
  I0731 00:27:49.801646 24 e2e.go:153] 7 / 7 pods ready in namespace 'kube-system' in daemonset 'csi-nfs-node' (0 seconds elapsed)
  I0731 00:27:49.801653 24 e2e.go:153] 7 / 7 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0731 00:27:49.801691 24 e2e.go:245] e2e test version: v1.33.3
  I0731 00:27:49.802635 24 e2e.go:254] kube-apiserver version: v1.33.3
  I0731 00:27:49.802813 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  I0731 00:27:49.806565 24 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.061 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 07/31/25 00:27:49.921
  I0731 00:27:49.921223 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pods @ 07/31/25 00:27:49.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:27:49.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:27:49.945
  STEP: creating the pod @ 07/31/25 00:27:49.948
  STEP: submitting the pod to kubernetes @ 07/31/25 00:27:49.948
  STEP: verifying QOS class is set on the pod @ 07/31/25 00:27:49.962
  I0731 00:27:49.965870 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1482" for this suite. @ 07/31/25 00:27:49.972
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 07/31/25 00:27:49.988
  I0731 00:27:49.988493 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 00:27:49.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:27:50.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:27:50.008
  STEP: Creating configMap with name cm-test-opt-del-b99b7b88-0136-4f8e-bca4-99704e2b61f9 @ 07/31/25 00:27:50.073
  STEP: Creating configMap with name cm-test-opt-upd-1a5e446d-1b3b-41dd-b866-40d5b54d9c61 @ 07/31/25 00:27:50.081
  STEP: Creating the pod @ 07/31/25 00:27:50.087
  STEP: Deleting configmap cm-test-opt-del-b99b7b88-0136-4f8e-bca4-99704e2b61f9 @ 07/31/25 00:27:52.139
  STEP: Updating configmap cm-test-opt-upd-1a5e446d-1b3b-41dd-b866-40d5b54d9c61 @ 07/31/25 00:27:52.147
  STEP: Creating configMap with name cm-test-opt-create-09d6ba6c-beb2-4815-9fae-781320220961 @ 07/31/25 00:27:52.155
  STEP: waiting to observe update in volume @ 07/31/25 00:27:52.163
  I0731 00:29:04.523994 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-468" for this suite. @ 07/31/25 00:29:04.529
• [74.548 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 07/31/25 00:29:04.537
  I0731 00:29:04.537030 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 00:29:04.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:29:04.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:29:04.56
  STEP: Creating configMap with name configmap-test-volume-c3f635f6-8e69-4b07-a6c2-44beb8369e8e @ 07/31/25 00:29:04.562
  STEP: Creating a pod to test consume configMaps @ 07/31/25 00:29:04.568
  STEP: Saw pod success @ 07/31/25 00:29:08.596
  I0731 00:29:08.599484 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-configmaps-36fde8dd-f04f-4051-bb43-aaa125a9c930 container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 00:29:08.605
  I0731 00:29:08.623117 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8502" for this suite. @ 07/31/25 00:29:08.627
• [4.099 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 07/31/25 00:29:08.636
  I0731 00:29:08.636433 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename field-validation @ 07/31/25 00:29:08.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:29:08.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:29:08.66
  I0731 00:29:08.663054 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  I0731 00:29:16.202051      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0731 00:29:16.202102      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0731 00:29:16.202115      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0731 00:29:16.202125      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0731 00:29:16.202174      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0731 00:29:16.741972 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7029" for this suite. @ 07/31/25 00:29:16.746
• [8.121 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/31/25 00:29:16.757
  I0731 00:29:16.757252 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename replicaset @ 07/31/25 00:29:16.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:29:16.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:29:16.774
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/31/25 00:29:16.78
  STEP: When a replicaset with a matching selector is created @ 07/31/25 00:29:18.81
  STEP: Then the orphan pod is adopted @ 07/31/25 00:29:18.839
  STEP: When the matched label of one of its pods change @ 07/31/25 00:29:19.849
  I0731 00:29:19.853411 24 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/31/25 00:29:19.866
  I0731 00:29:20.876428 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7025" for this suite. @ 07/31/25 00:29:20.88
• [4.132 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 07/31/25 00:29:20.889
  I0731 00:29:20.889231 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 00:29:20.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:29:20.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:29:20.908
  STEP: Creating configMap that has name configmap-test-emptyKey-74c10faa-f84d-4dd4-a414-2c23b46cfe49 @ 07/31/25 00:29:20.911
  I0731 00:29:20.913387 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3907" for this suite. @ 07/31/25 00:29:20.983
• [0.107 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 07/31/25 00:29:20.996
  I0731 00:29:20.997543 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename namespaces @ 07/31/25 00:29:20.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:29:21.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:29:21.015
  STEP: Creating namespace "e2e-ns-s5kjh" @ 07/31/25 00:29:21.018
  I0731 00:29:21.032584 24 namespace.go:412] Namespace "e2e-ns-s5kjh-7376" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-s5kjh-7376" @ 07/31/25 00:29:21.032
  I0731 00:29:21.044405 24 namespace.go:435] Namespace "e2e-ns-s5kjh-7376" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-s5kjh-7376" @ 07/31/25 00:29:21.044
  I0731 00:29:21.052587 24 namespace.go:464] Namespace "e2e-ns-s5kjh-7376" has []v1.FinalizerName{"kubernetes"}
  I0731 00:29:21.052840 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2990" for this suite. @ 07/31/25 00:29:21.083
  STEP: Destroying namespace "e2e-ns-s5kjh-7376" for this suite. @ 07/31/25 00:29:21.093
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 07/31/25 00:29:21.103
  I0731 00:29:21.103463 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 00:29:21.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:29:21.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:29:21.123
  STEP: Creating configMap configmap-2422/configmap-test-6efdced4-c992-41d3-ad4b-3e269afca8d2 @ 07/31/25 00:29:21.125
  STEP: Creating a pod to test consume configMaps @ 07/31/25 00:29:21.13
  STEP: Saw pod success @ 07/31/25 00:29:25.164
  I0731 00:29:25.169336 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-configmaps-637adc50-0483-4e14-bd54-dd5c0b71a8cc container env-test: <nil>
  STEP: delete the pod @ 07/31/25 00:29:25.176
  I0731 00:29:25.200356 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2422" for this suite. @ 07/31/25 00:29:25.205
• [4.110 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/31/25 00:29:25.213
  I0731 00:29:25.213825 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename endpointslice @ 07/31/25 00:29:25.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:29:25.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:29:25.233
  I0731 00:29:25.241115      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 00:29:25.245600 24 endpointslice.go:1045] Endpoints addresses: [172.20.30.188 172.20.30.198 172.20.30.96] , ports: [6443]
  I0731 00:29:25.245645 24 endpointslice.go:1075] EndpointSlices addresses: [172.20.30.188 172.20.30.198 172.20.30.96] , ports: [6443]
  I0731 00:29:25.245865 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8247" for this suite. @ 07/31/25 00:29:25.306
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 07/31/25 00:29:25.321
  I0731 00:29:25.321380 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/31/25 00:29:25.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:29:25.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:29:25.345
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/31/25 00:29:25.348
  I0731 00:29:25.348716 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/31/25 00:29:38.433
  I0731 00:29:38.434102 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  I0731 00:29:45.731953 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  I0731 00:29:58.957699 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5244" for this suite. @ 07/31/25 00:29:58.966
• [33.662 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 07/31/25 00:29:58.984
  I0731 00:29:58.984193 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename namespaces @ 07/31/25 00:29:58.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:29:59.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:29:59.041
  STEP: creating a Namespace @ 07/31/25 00:29:59.043
  STEP: patching the Namespace @ 07/31/25 00:29:59.072
  STEP: get the Namespace and ensuring it has the label @ 07/31/25 00:29:59.097
  I0731 00:29:59.101614 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6948" for this suite. @ 07/31/25 00:29:59.155
  STEP: Destroying namespace "nspatchtest-fc0ce491-7961-4c6c-9dfd-c4d3653a9c5b-3515" for this suite. @ 07/31/25 00:29:59.175
• [0.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/31/25 00:29:59.204
  I0731 00:29:59.204827 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/31/25 00:29:59.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:29:59.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:29:59.277
  STEP: Creating two CSIDrivers @ 07/31/25 00:29:59.28
  STEP: Getting "inline-driver-ec1857ef-3670-471c-b697-4c7c15029f64" & "inline-driver-9aeecaf8-4b13-4917-bf88-96883d368dfd" @ 07/31/25 00:29:59.335
  STEP: Patching the CSIDriver "inline-driver-9aeecaf8-4b13-4917-bf88-96883d368dfd" @ 07/31/25 00:29:59.345
  STEP: Updating the CSIDriver "inline-driver-9aeecaf8-4b13-4917-bf88-96883d368dfd" @ 07/31/25 00:29:59.359
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-5017" @ 07/31/25 00:29:59.377
  STEP: Deleting CSIDriver "inline-driver-ec1857ef-3670-471c-b697-4c7c15029f64" @ 07/31/25 00:29:59.388
  STEP: Confirm deletion of CSIDriver "inline-driver-ec1857ef-3670-471c-b697-4c7c15029f64" @ 07/31/25 00:29:59.411
  STEP: Deleting CSIDriver "inline-driver-9aeecaf8-4b13-4917-bf88-96883d368dfd" via DeleteCollection @ 07/31/25 00:29:59.415
  STEP: Confirm deletion of CSIDriver "inline-driver-9aeecaf8-4b13-4917-bf88-96883d368dfd" @ 07/31/25 00:29:59.441
  I0731 00:29:59.444322 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5017" for this suite. @ 07/31/25 00:29:59.448
• [0.265 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 07/31/25 00:29:59.47
  I0731 00:29:59.470892 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 00:29:59.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:29:59.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:29:59.512
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9805 @ 07/31/25 00:29:59.54
  STEP: changing the ExternalName service to type=ClusterIP @ 07/31/25 00:29:59.552
  I0731 00:29:59.680435 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0731 00:30:01.685373 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 29, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 29, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 29, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 29, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-68b456648f\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:30:03.685178 24 resource.go:361] Creating new exec pod
  I0731 00:30:05.746156 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9805 exec execpodtmj7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0731 00:30:05.875233 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.41.208) 80 port [tcp/http] succeeded!\n"
  I0731 00:30:05.875282 24 builder.go:147] stdout: ""
  I0731 00:30:06.746250 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9805 exec execpodtmj7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0731 00:30:06.872492 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.41.208) 80 port [tcp/http] succeeded!\n"
  I0731 00:30:06.872557 24 builder.go:147] stdout: "externalname-service-68b456648f-25xrd"
  I0731 00:30:06.872663 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9805 exec execpodtmj7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.41.208 80'
  I0731 00:30:06.982999 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.41.208 80\nConnection to 10.233.41.208 80 port [tcp/http] succeeded!\n"
  I0731 00:30:06.983059 24 builder.go:147] stdout: ""
  I0731 00:30:07.873611 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9805 exec execpodtmj7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.41.208 80'
  I0731 00:30:07.995157 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.41.208 80\nConnection to 10.233.41.208 80 port [tcp/http] succeeded!\n"
  I0731 00:30:07.995209 24 builder.go:147] stdout: "externalname-service-68b456648f-z6d6b"
  I0731 00:30:07.995295 24 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0731 00:30:08.048791 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9805" for this suite. @ 07/31/25 00:30:08.056
• [8.602 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 07/31/25 00:30:08.072
  I0731 00:30:08.072455 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 00:30:08.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:30:08.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:30:08.127
  STEP: Creating Indexed job @ 07/31/25 00:30:08.178
  STEP: Ensuring job reaches completions @ 07/31/25 00:30:08.196
  STEP: Ensuring pods with index for job exist @ 07/31/25 00:30:18.23
  I0731 00:30:18.234705 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1888" for this suite. @ 07/31/25 00:30:18.239
• [10.178 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/31/25 00:30:18.25
  I0731 00:30:18.250244 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/31/25 00:30:18.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:30:18.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:30:18.312
  STEP: creating @ 07/31/25 00:30:18.315
  STEP: getting @ 07/31/25 00:30:18.362
  STEP: listing in namespace @ 07/31/25 00:30:18.376
  STEP: patching @ 07/31/25 00:30:18.38
  STEP: deleting @ 07/31/25 00:30:18.41
  I0731 00:30:18.444860 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7941" for this suite. @ 07/31/25 00:30:18.451
• [0.250 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 07/31/25 00:30:18.5
  I0731 00:30:18.500146 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 00:30:18.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:30:18.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:30:18.54
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/31/25 00:30:18.543
  STEP: Saw pod success @ 07/31/25 00:30:22.593
  I0731 00:30:22.596351 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-e7330fc4-ee48-4ccf-a049-267fa87a0291 container test-container: <nil>
  STEP: delete the pod @ 07/31/25 00:30:22.602
  I0731 00:30:22.652326 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6640" for this suite. @ 07/31/25 00:30:22.656
• [4.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 07/31/25 00:30:22.68
  I0731 00:30:22.680784 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename runtimeclass @ 07/31/25 00:30:22.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:30:22.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:30:22.742
  I0731 00:30:24.828355 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1252" for this suite. @ 07/31/25 00:30:24.833
• [2.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 07/31/25 00:30:24.854
  I0731 00:30:24.855015 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename aggregator @ 07/31/25 00:30:24.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:30:24.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:30:24.883
  I0731 00:30:24.891200 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Registering the sample API server. @ 07/31/25 00:30:24.893
  I0731 00:30:25.188112 24 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0731 00:30:25.347469 24 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0731 00:30:27.463061 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:30:29.468954 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:30:31.467966 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:30:33.466674 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:30:35.466856 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:30:37.468404 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:30:39.469260 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:30:41.468471 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:30:43.467592 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:30:45.467385 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:30:47.467593 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:30:49.627362 24 aggregator.go:756] Waited 115.867757ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/31/25 00:30:49.679
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/31/25 00:30:49.682
  STEP: List APIServices @ 07/31/25 00:30:49.715
  I0731 00:30:49.719945 24 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/31/25 00:30:49.72
  I0731 00:30:49.743701 24 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/31/25 00:30:49.744
  I0731 00:30:49.777989 24 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.July, 31, 0, 30, 49, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/31/25 00:30:49.778
  I0731 00:30:49.784976 24 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-07-31 00:30:49 +0000 UTC Passed all checks passed}
  I0731 00:30:49.785179 24 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0731 00:30:49.785255 24 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/31/25 00:30:49.785
  I0731 00:30:49.808758 24 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-182935113" @ 07/31/25 00:30:49.808
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/31/25 00:30:49.823
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/31/25 00:30:49.832
  STEP: Patch APIService Status @ 07/31/25 00:30:49.837
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/31/25 00:30:49.875
  I0731 00:30:49.886643 24 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-07-31 00:30:49 +0000 UTC Passed all checks passed}
  I0731 00:30:49.886710 24 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0731 00:30:49.886725 24 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0731 00:30:49.886735 24 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/31/25 00:30:49.886
  STEP: Confirm that the generated APIService has been deleted @ 07/31/25 00:30:49.9
  I0731 00:30:49.900409 24 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0731 00:30:49.903966 24 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0731 00:30:49.904013 24 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0731 00:30:50.336525 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2974" for this suite. @ 07/31/25 00:30:50.341
• [25.499 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/31/25 00:30:50.355
  I0731 00:30:50.355496 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename server-version @ 07/31/25 00:30:50.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:30:50.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:30:50.4
  STEP: Request ServerVersion @ 07/31/25 00:30:50.404
  STEP: Confirm major version @ 07/31/25 00:30:50.405
  I0731 00:30:50.405883 24 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 07/31/25 00:30:50.406
  I0731 00:30:50.406592 24 server_version.go:58] cleanMinorVersion: 33
  I0731 00:30:50.410159 24 server_version.go:62] Minor version: 33
  I0731 00:30:50.410631 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-9422" for this suite. @ 07/31/25 00:30:50.443
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 07/31/25 00:30:50.467
  I0731 00:30:50.467316 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 00:30:50.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:30:50.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:30:50.533
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/31/25 00:30:50.536
  STEP: Saw pod success @ 07/31/25 00:30:54.608
  I0731 00:30:54.612107 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-57b53561-aff8-4880-9edb-d3c06a6aa1df container test-container: <nil>
  STEP: delete the pod @ 07/31/25 00:30:54.617
  I0731 00:30:54.660693 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7316" for this suite. @ 07/31/25 00:30:54.665
• [4.215 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 07/31/25 00:30:54.682
  I0731 00:30:54.682755 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 00:30:54.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:30:54.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:30:54.709
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/31/25 00:30:54.713
  STEP: Saw pod success @ 07/31/25 00:30:58.852
  I0731 00:30:58.857626 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-9cb204b7-d89c-4e46-b6fc-f36bdcc8a53b container test-container: <nil>
  STEP: delete the pod @ 07/31/25 00:30:58.888
  I0731 00:30:58.968918 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4633" for this suite. @ 07/31/25 00:30:58.976
• [4.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 07/31/25 00:30:58.994
  I0731 00:30:58.994306 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 00:30:58.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:30:59.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:30:59.026
  STEP: Creating configMap with name configmap-test-volume-map-c48ce664-0b0c-4c20-ab3f-fcfb867ad29c @ 07/31/25 00:30:59.031
  STEP: Creating a pod to test consume configMaps @ 07/31/25 00:30:59.041
  STEP: Saw pod success @ 07/31/25 00:31:03.152
  I0731 00:31:03.155445 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-configmaps-ed38b788-7029-44fa-a9f3-2b021374264b container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 00:31:03.162
  I0731 00:31:03.227321 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5524" for this suite. @ 07/31/25 00:31:03.232
• [4.250 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 07/31/25 00:31:03.245
  I0731 00:31:03.245650 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 00:31:03.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:31:03.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:31:03.299
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/31/25 00:31:03.302
  STEP: Saw pod success @ 07/31/25 00:31:07.354
  I0731 00:31:07.358467 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-77c96f42-e1d8-4e21-8166-4194586a4d43 container test-container: <nil>
  STEP: delete the pod @ 07/31/25 00:31:07.372
  I0731 00:31:07.448000 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4265" for this suite. @ 07/31/25 00:31:07.455
• [4.247 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 07/31/25 00:31:07.494
  I0731 00:31:07.494073 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 00:31:07.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:31:07.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:31:07.532
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8636 @ 07/31/25 00:31:07.535
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/31/25 00:31:07.607
  STEP: creating service externalsvc in namespace services-8636 @ 07/31/25 00:31:07.608
  I0731 00:31:07.726493 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0731 00:31:09.731622 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 31, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 31, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 31, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 31, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalsvc-7576cd9b5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: changing the ClusterIP service to type=ExternalName @ 07/31/25 00:31:11.746
  I0731 00:31:11.817771 24 resource.go:361] Creating new exec pod
  I0731 00:31:15.857048 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-8636 exec execpod5jbjt -- /bin/sh -x -c nslookup clusterip-service.services-8636.svc.cluster.local'
  I0731 00:31:16.022724 24 builder.go:146] stderr: "+ nslookup clusterip-service.services-8636.svc.cluster.local\n"
  I0731 00:31:16.022786 24 builder.go:147] stdout: "Server:\t\t10.233.0.3\nAddress:\t10.233.0.3#53\n\nclusterip-service.services-8636.svc.cluster.local\tcanonical name = externalsvc.services-8636.svc.cluster.local.\nName:\texternalsvc.services-8636.svc.cluster.local\nAddress: 10.233.10.0\n\n"
  I0731 00:31:16.119797 24 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0731 00:31:16.235168 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8636" for this suite. @ 07/31/25 00:31:16.244
• [8.786 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/31/25 00:31:16.281
  I0731 00:31:16.281364 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-runtime @ 07/31/25 00:31:16.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:31:16.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:31:16.375
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/31/25 00:31:16.411
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/31/25 00:31:33.513
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/31/25 00:31:33.518
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/31/25 00:31:33.531
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/31/25 00:31:33.531
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/31/25 00:31:33.591
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/31/25 00:31:36.61
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/31/25 00:31:37.619
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/31/25 00:31:37.625
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/31/25 00:31:37.625
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/31/25 00:31:37.678
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/31/25 00:31:38.689
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/31/25 00:31:40.703
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/31/25 00:31:40.71
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/31/25 00:31:40.71
  I0731 00:31:40.762316 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7277" for this suite. @ 07/31/25 00:31:40.767
• [24.503 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 07/31/25 00:31:40.784
  I0731 00:31:40.784396 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 00:31:40.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:31:40.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:31:40.875
  I0731 00:31:40.882615 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8766" for this suite. @ 07/31/25 00:31:40.888
• [0.119 seconds]
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 07/31/25 00:31:40.903
  I0731 00:31:40.903772 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 00:31:40.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:31:40.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:31:40.95
  STEP: creating service multi-endpoint-test in namespace services-3243 @ 07/31/25 00:31:40.953
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3243 to expose endpoints map[] @ 07/31/25 00:31:41.004
  I0731 00:31:41.008742      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 00:31:41.008944 24 service.go:4613] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0731 00:31:42.014134      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 00:31:42.019663 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-3243 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3243 @ 07/31/25 00:31:42.019
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3243 to expose endpoints map[pod1:[100]] @ 07/31/25 00:31:46.104
  I0731 00:31:46.111010      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 00:31:46.115743 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-3243 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-3243 @ 07/31/25 00:31:46.115
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3243 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/31/25 00:31:48.165
  I0731 00:31:48.172751      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 00:31:48.176832 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-3243 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/31/25 00:31:48.176
  I0731 00:31:48.176915 24 resource.go:361] Creating new exec pod
  I0731 00:31:50.224110 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-3243 exec execpod64nth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0731 00:31:50.351764 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.233.54.74) 80 port [tcp/http] succeeded!\n"
  I0731 00:31:50.351821 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 00:31:50.351918 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-3243 exec execpod64nth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.74 80'
  I0731 00:31:50.457807 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.54.74 80\nConnection to 10.233.54.74 80 port [tcp/http] succeeded!\n"
  I0731 00:31:50.457858 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 00:31:50.457969 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-3243 exec execpod64nth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0731 00:31:50.582492 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.233.54.74) 81 port [tcp/*] succeeded!\n"
  I0731 00:31:50.582547 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 00:31:50.582635 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-3243 exec execpod64nth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.74 81'
  I0731 00:31:50.705650 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.54.74 81\nConnection to 10.233.54.74 81 port [tcp/*] succeeded!\n"
  I0731 00:31:50.705718 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3243 @ 07/31/25 00:31:50.705
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3243 to expose endpoints map[pod2:[101]] @ 07/31/25 00:31:50.763
  I0731 00:31:50.786567      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 00:31:50.796226 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-3243 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-3243 @ 07/31/25 00:31:50.796
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3243 to expose endpoints map[] @ 07/31/25 00:31:50.865
  I0731 00:31:50.883991      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 00:31:50.889474 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-3243 exposes endpoints map[]
  I0731 00:31:50.958500 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3243" for this suite. @ 07/31/25 00:31:50.966
• [10.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/31/25 00:31:51.009
  I0731 00:31:51.009045 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename replicaset @ 07/31/25 00:31:51.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:31:51.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:31:51.114
  STEP: Create a Replicaset @ 07/31/25 00:31:51.12
  STEP: Verify that the required pods have come up. @ 07/31/25 00:31:51.131
  I0731 00:31:51.136582 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0731 00:31:56.143408 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/31/25 00:31:56.143
  STEP: Getting /status @ 07/31/25 00:31:56.143
  I0731 00:31:56.149214 24 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/31/25 00:31:56.149
  I0731 00:31:56.165558 24 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/31/25 00:31:56.165
  I0731 00:31:56.167838 24 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0731 00:31:56.167947 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0731 00:31:56.168002 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0731 00:31:56.168152 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0731 00:31:56.168174 24 replica_set.go:688] Found replicaset test-rs in namespace replicaset-1480 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0731 00:31:56.168184 24 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/31/25 00:31:56.168
  I0731 00:31:56.168215 24 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0731 00:31:56.194630 24 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/31/25 00:31:56.194
  I0731 00:31:56.196807 24 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0731 00:31:56.196950 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0731 00:31:56.197120 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0731 00:31:56.197333 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0731 00:31:56.197464 24 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-1480 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0731 00:31:56.197581 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0731 00:31:56.197631 24 replica_set.go:724] Found replicaset test-rs in namespace replicaset-1480 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0731 00:31:56.197658 24 replica_set.go:735] Replicaset test-rs has a patched status
  I0731 00:31:56.197902 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1480" for this suite. @ 07/31/25 00:31:56.214
• [5.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 07/31/25 00:31:56.244
  I0731 00:31:56.244184 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/31/25 00:31:56.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:31:56.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:31:56.285
  STEP: creating a policy with variables @ 07/31/25 00:31:56.321
  STEP: waiting until the marker is denied @ 07/31/25 00:31:56.358
  STEP: testing a replicated Deployment to be allowed @ 07/31/25 00:31:56.491
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/31/25 00:31:56.55
  I0731 00:31:56.827486 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-981" for this suite. @ 07/31/25 00:31:56.837
• [0.625 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 07/31/25 00:31:56.87
  I0731 00:31:56.870178 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 00:31:56.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:31:56.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:31:56.932
  STEP: Creating a pod to test downward api env vars @ 07/31/25 00:31:56.935
  STEP: Saw pod success @ 07/31/25 00:32:00.964
  I0731 00:32:01.026809 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downward-api-55e89d9e-d649-4dbf-a25d-1f5a4676a36e container dapi-container: <nil>
  STEP: delete the pod @ 07/31/25 00:32:01.034
  I0731 00:32:01.075129 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-219" for this suite. @ 07/31/25 00:32:01.079
• [4.224 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 07/31/25 00:32:01.095
  I0731 00:32:01.095070 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename statefulset @ 07/31/25 00:32:01.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:32:01.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:32:01.192
  STEP: Creating service test in namespace statefulset-3106 @ 07/31/25 00:32:01.194
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/31/25 00:32:01.205
  STEP: Creating stateful set ss in namespace statefulset-3106 @ 07/31/25 00:32:01.251
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3106 @ 07/31/25 00:32:01.263
  I0731 00:32:01.352382 24 wait.go:44] Found 0 stateful pods, waiting for 1
  I0731 00:32:11.269552 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/31/25 00:32:11.269
  I0731 00:32:11.272387 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-3106 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0731 00:32:11.395960 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0731 00:32:11.396014 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0731 00:32:11.396025 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0731 00:32:11.400599 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0731 00:32:21.412160 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0731 00:32:21.412220 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0731 00:32:21.503387 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999999466s
  I0731 00:32:22.508695 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.943009931s
  I0731 00:32:23.515109 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.936788176s
  I0731 00:32:24.521328 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.931350122s
  I0731 00:32:25.527855 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.924241852s
  I0731 00:32:26.533730 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.91850495s
  I0731 00:32:27.540230 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.912618851s
  I0731 00:32:28.545304 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.906116329s
  I0731 00:32:29.551211 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.900987552s
  I0731 00:32:30.557652 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 894.366699ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3106 @ 07/31/25 00:32:31.558
  I0731 00:32:31.564811 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-3106 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0731 00:32:31.688879 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0731 00:32:31.688936 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0731 00:32:31.688950 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0731 00:32:31.694004 24 wait.go:44] Found 1 stateful pods, waiting for 3
  I0731 00:32:41.696133 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0731 00:32:41.696181 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0731 00:32:41.696188 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/31/25 00:32:41.696
  STEP: Scale down will halt with unhealthy stateful pod @ 07/31/25 00:32:41.696
  I0731 00:32:41.702201 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-3106 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0731 00:32:41.816863 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0731 00:32:41.816931 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0731 00:32:41.816948 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0731 00:32:41.817015 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-3106 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0731 00:32:41.953355 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0731 00:32:41.953419 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0731 00:32:41.953434 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0731 00:32:41.953501 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-3106 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0731 00:32:42.116202 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0731 00:32:42.116257 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0731 00:32:42.116267 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0731 00:32:42.116291 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0731 00:32:42.120729 24 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0731 00:32:52.125056 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0731 00:32:52.125116 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0731 00:32:52.125126 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0731 00:32:52.226661 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999537s
  I0731 00:32:53.234086 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.938721359s
  I0731 00:32:54.239888 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.931334315s
  I0731 00:32:55.245604 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.924646773s
  I0731 00:32:56.250615 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.919476963s
  I0731 00:32:57.255660 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.914855542s
  I0731 00:32:58.263214 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.909132006s
  I0731 00:32:59.269027 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.902247411s
  I0731 00:33:00.274131 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.896286686s
  I0731 00:33:01.279495 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 891.364749ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3106 @ 07/31/25 00:33:02.279
  I0731 00:33:02.285932 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-3106 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0731 00:33:02.400298 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0731 00:33:02.400347 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0731 00:33:02.400357 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0731 00:33:02.400420 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-3106 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0731 00:33:02.524303 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0731 00:33:02.524369 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0731 00:33:02.524380 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0731 00:33:02.524540 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-3106 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0731 00:33:02.644290 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0731 00:33:02.644356 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0731 00:33:02.644374 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0731 00:33:02.644401 24 rest.go:153] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/31/25 00:33:12.656
  I0731 00:33:12.656393 24 statefulset.go:138] Deleting all statefulset in ns statefulset-3106
  I0731 00:33:12.662100 24 rest.go:153] Scaling statefulset ss to 0
  I0731 00:33:12.669707 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0731 00:33:12.674484 24 rest.go:91] Deleting statefulset ss
  I0731 00:33:12.695792 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3106" for this suite. @ 07/31/25 00:33:12.701
• [71.618 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 07/31/25 00:33:12.713
  I0731 00:33:12.713472 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 00:33:12.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:33:12.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:33:12.741
  STEP: Setting up server cert @ 07/31/25 00:33:12.768
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 00:33:13.044
  STEP: Deploying the webhook pod @ 07/31/25 00:33:13.054
  STEP: Wait for the deployment to be ready @ 07/31/25 00:33:13.076
  I0731 00:33:13.087925 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/31/25 00:33:15.102
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 00:33:15.125
  I0731 00:33:16.125256 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/31/25 00:33:16.235
  STEP: Creating a configMap that should be mutated @ 07/31/25 00:33:16.256
  STEP: Deleting the collection of validation webhooks @ 07/31/25 00:33:16.287
  STEP: Creating a configMap that should not be mutated @ 07/31/25 00:33:16.355
  I0731 00:33:16.439344 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-641" for this suite. @ 07/31/25 00:33:16.455
  STEP: Destroying namespace "webhook-markers-4633" for this suite. @ 07/31/25 00:33:16.466
• [3.769 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/31/25 00:33:16.483
  I0731 00:33:16.483053 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename secrets @ 07/31/25 00:33:16.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:33:16.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:33:16.512
  I0731 00:33:16.580689 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2977" for this suite. @ 07/31/25 00:33:16.592
• [0.120 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 07/31/25 00:33:16.603
  I0731 00:33:16.603526 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename replication-controller @ 07/31/25 00:33:16.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:33:16.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:33:16.63
  I0731 00:33:16.633100 24 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/31/25 00:33:17.657
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/31/25 00:33:17.668
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/31/25 00:33:18.677
  I0731 00:33:18.691865 24 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/31/25 00:33:18.691
  I0731 00:33:19.701697 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6012" for this suite. @ 07/31/25 00:33:19.708
• [3.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 07/31/25 00:33:19.722
  I0731 00:33:19.722720 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/31/25 00:33:19.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:33:19.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:33:19.746
  I0731 00:33:19.749050 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  I0731 00:33:27.799375 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5439" for this suite. @ 07/31/25 00:33:27.805
• [8.092 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 07/31/25 00:33:27.814
  I0731 00:33:27.814946 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename resourcequota @ 07/31/25 00:33:27.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:33:27.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:33:27.837
  STEP: Counting existing ResourceQuota @ 07/31/25 00:33:27.84
  STEP: Creating a ResourceQuota @ 07/31/25 00:33:32.845
  STEP: Ensuring resource quota status is calculated @ 07/31/25 00:33:32.853
  STEP: Creating a ReplicationController @ 07/31/25 00:33:34.859
  STEP: Ensuring resource quota status captures replication controller creation @ 07/31/25 00:33:34.879
  STEP: Deleting a ReplicationController @ 07/31/25 00:33:36.884
  STEP: Ensuring resource quota status released usage @ 07/31/25 00:33:36.892
  I0731 00:33:38.898626 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9583" for this suite. @ 07/31/25 00:33:38.905
• [11.100 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 07/31/25 00:33:38.915
  I0731 00:33:38.915191 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 00:33:38.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:33:38.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:33:38.937
  STEP: Setting up server cert @ 07/31/25 00:33:38.966
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 00:33:39.173
  STEP: Deploying the webhook pod @ 07/31/25 00:33:39.183
  STEP: Wait for the deployment to be ready @ 07/31/25 00:33:39.205
  I0731 00:33:39.216422 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/31/25 00:33:41.23
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 00:33:41.253
  I0731 00:33:42.254305 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/31/25 00:33:42.26
  STEP: create the configmap with a random name @ 07/31/25 00:33:42.286
  STEP: verify the configmap is mutated @ 07/31/25 00:33:42.301
  STEP: create the configmap with 'skip-me' name @ 07/31/25 00:33:42.301
  I0731 00:33:42.394636 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3569" for this suite. @ 07/31/25 00:33:42.406
  STEP: Destroying namespace "webhook-markers-2587" for this suite. @ 07/31/25 00:33:42.417
• [3.511 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 07/31/25 00:33:42.426
  I0731 00:33:42.426914 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 00:33:42.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:33:42.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:33:42.456
  STEP: validating api versions @ 07/31/25 00:33:42.461
  I0731 00:33:42.462192 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2540 api-versions'
  I0731 00:33:42.557263 24 builder.go:146] stderr: ""
  I0731 00:33:42.557348 24 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncilium.io/v2\ncilium.io/v2alpha1\ncoordination.k8s.io/v1\ncore.strimzi.io/v1beta2\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nextensions.istio.io/v1alpha1\nflowcontrol.apiserver.k8s.io/v1\nkafka.strimzi.io/v1alpha1\nkafka.strimzi.io/v1beta1\nkafka.strimzi.io/v1beta2\nnetworking.istio.io/v1\nnetworking.istio.io/v1alpha3\nnetworking.istio.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsecurity.istio.io/v1\nsecurity.istio.io/v1beta1\nstorage.k8s.io/v1\ntelemetry.istio.io/v1\ntelemetry.istio.io/v1alpha1\nv1\n"
  I0731 00:33:42.557512 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2540" for this suite. @ 07/31/25 00:33:42.564
• [0.149 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/31/25 00:33:42.575
  I0731 00:33:42.575448 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename cronjob @ 07/31/25 00:33:42.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:33:42.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:33:42.598
  STEP: Creating a ForbidConcurrent cronjob @ 07/31/25 00:33:42.602
  STEP: Ensuring a job is scheduled @ 07/31/25 00:33:42.611
  STEP: Ensuring exactly one is scheduled @ 07/31/25 00:34:00.617
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/31/25 00:34:00.619
  STEP: Ensuring no more jobs are scheduled @ 07/31/25 00:34:00.622
  STEP: Removing cronjob @ 07/31/25 00:34:00.625
  I0731 00:34:00.634041 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1982" for this suite. @ 07/31/25 00:34:00.642
• [18.080 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 07/31/25 00:34:00.655
  I0731 00:34:00.655215 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 00:34:00.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:34:00.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:34:00.681
  STEP: Creating configMap with name configmap-test-volume-map-6a933d5f-9416-49e0-a4b1-015b5c706e7a @ 07/31/25 00:34:00.683
  STEP: Creating a pod to test consume configMaps @ 07/31/25 00:34:00.69
  STEP: Saw pod success @ 07/31/25 00:34:04.721
  I0731 00:34:04.724030 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-configmaps-36c623f0-b137-4bcd-95b3-70537135ec7b container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 00:34:04.734
  I0731 00:34:04.756579 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3503" for this suite. @ 07/31/25 00:34:04.762
• [4.120 seconds]
------------------------------
S
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 07/31/25 00:34:04.775
  I0731 00:34:04.776111 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/31/25 00:34:04.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:34:04.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:34:04.806
  STEP: creating a target pod @ 07/31/25 00:34:04.809
  STEP: adding an ephemeral container @ 07/31/25 00:34:06.832
  STEP: verifying the pod's generation is 2 @ 07/31/25 00:34:08.854
  STEP: checking pod container endpoints @ 07/31/25 00:34:08.858
  I0731 00:34:08.858618 24 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5238 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 00:34:08.858648 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 00:34:08.858729 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-5238/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0731 00:34:08.914750 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 00:34:08.914822 24 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/31/25 00:34:08.927
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/31/25 00:34:08.933
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/31/25 00:34:08.95
  I0731 00:34:08.954255 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5238" for this suite. @ 07/31/25 00:34:08.965
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/31/25 00:34:08.973
  I0731 00:34:08.973824 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename watch @ 07/31/25 00:34:08.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:34:08.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:34:09.001
  STEP: creating a watch on configmaps @ 07/31/25 00:34:09.005
  STEP: creating a new configmap @ 07/31/25 00:34:09.007
  STEP: modifying the configmap once @ 07/31/25 00:34:09.012
  STEP: closing the watch once it receives two notifications @ 07/31/25 00:34:09.024
  I0731 00:34:09.024625 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2094  0dcbae5c-065f-4d6d-abed-e91845b33f81 835187 0 2025-07-31 00:34:09 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-31 00:34:09 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 00:34:09.024937 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2094  0dcbae5c-065f-4d6d-abed-e91845b33f81 835188 0 2025-07-31 00:34:09 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-31 00:34:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/31/25 00:34:09.025
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/31/25 00:34:09.036
  STEP: deleting the configmap @ 07/31/25 00:34:09.037
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/31/25 00:34:09.044
  I0731 00:34:09.044920 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2094  0dcbae5c-065f-4d6d-abed-e91845b33f81 835189 0 2025-07-31 00:34:09 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-31 00:34:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 00:34:09.045126 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2094  0dcbae5c-065f-4d6d-abed-e91845b33f81 835190 0 2025-07-31 00:34:09 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-31 00:34:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 00:34:09.045382 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2094" for this suite. @ 07/31/25 00:34:09.065
• [0.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 07/31/25 00:34:09.074
  I0731 00:34:09.074073 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 00:34:09.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:34:09.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:34:09.098
  STEP: Setting up server cert @ 07/31/25 00:34:09.167
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 00:34:09.546
  STEP: Deploying the webhook pod @ 07/31/25 00:34:09.556
  STEP: Wait for the deployment to be ready @ 07/31/25 00:34:09.576
  I0731 00:34:09.591749 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/31/25 00:34:11.604
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 00:34:11.64
  I0731 00:34:12.640975 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/31/25 00:34:12.645
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/31/25 00:34:12.664
  STEP: Creating a dummy validating-webhook-configuration object @ 07/31/25 00:34:12.685
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/31/25 00:34:12.701
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/31/25 00:34:12.711
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/31/25 00:34:12.725
  I0731 00:34:12.848794 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1656" for this suite. @ 07/31/25 00:34:12.856
  STEP: Destroying namespace "webhook-markers-7941" for this suite. @ 07/31/25 00:34:12.866
• [3.803 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/31/25 00:34:12.877
  I0731 00:34:12.877213 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pods @ 07/31/25 00:34:12.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:34:12.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:34:12.904
  STEP: creating the pod @ 07/31/25 00:34:12.908
  STEP: setting up watch @ 07/31/25 00:34:12.908
  STEP: submitting the pod to kubernetes @ 07/31/25 00:34:13.012
  STEP: verifying the pod is in kubernetes @ 07/31/25 00:34:13.027
  STEP: verifying pod creation was observed @ 07/31/25 00:34:13.03
  STEP: deleting the pod gracefully @ 07/31/25 00:34:15.044
  STEP: verifying pod deletion was observed @ 07/31/25 00:34:15.055
  I0731 00:34:16.715570 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-699" for this suite. @ 07/31/25 00:34:16.724
• [3.855 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 07/31/25 00:34:16.732
  I0731 00:34:16.732865 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 00:34:16.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:34:16.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:34:16.753
  STEP: creating service nodeport-test with type=NodePort in namespace services-4510 @ 07/31/25 00:34:16.756
  I0731 00:34:16.803522 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0731 00:34:18.807941 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 34, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 34, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 34, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 34, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"nodeport-test-64944b47d4\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:34:20.806589 24 resource.go:361] Creating new exec pod
  I0731 00:34:22.834478 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-4510 exec execpod4whrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0731 00:34:22.965565 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.233.54.63) 80 port [tcp/http] succeeded!\n"
  I0731 00:34:22.965630 24 builder.go:147] stdout: "nodeport-test-64944b47d4-gjq64"
  I0731 00:34:22.965737 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-4510 exec execpod4whrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.63 80'
  I0731 00:34:23.085820 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.54.63 80\nConnection to 10.233.54.63 80 port [tcp/http] succeeded!\n"
  I0731 00:34:23.085870 24 builder.go:147] stdout: ""
  I0731 00:34:23.965997 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-4510 exec execpod4whrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.63 80'
  I0731 00:34:24.090337 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.54.63 80\nConnection to 10.233.54.63 80 port [tcp/http] succeeded!\n"
  I0731 00:34:24.090400 24 builder.go:147] stdout: "nodeport-test-64944b47d4-gjq64"
  I0731 00:34:24.090492 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-4510 exec execpod4whrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.30.203 32412'
  I0731 00:34:24.205888 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.30.203 32412\nConnection to 172.20.30.203 32412 port [tcp/*] succeeded!\n"
  I0731 00:34:24.205943 24 builder.go:147] stdout: "nodeport-test-64944b47d4-gjq64"
  I0731 00:34:24.206060 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-4510 exec execpod4whrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.30.154 32412'
  I0731 00:34:24.326799 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.30.154 32412\nConnection to 172.20.30.154 32412 port [tcp/*] succeeded!\n"
  I0731 00:34:24.326931 24 builder.go:147] stdout: ""
  I0731 00:34:25.206515 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-4510 exec execpod4whrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.30.154 32412'
  I0731 00:34:25.318901 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.30.154 32412\nConnection to 172.20.30.154 32412 port [tcp/*] succeeded!\n"
  I0731 00:34:25.318980 24 builder.go:147] stdout: ""
  I0731 00:34:26.206706 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-4510 exec execpod4whrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.30.154 32412'
  I0731 00:34:26.323338 24 builder.go:146] stderr: "+ nc -v -t -w 2 172.20.30.154 32412\n+ echo hostName\nConnection to 172.20.30.154 32412 port [tcp/*] succeeded!\n"
  I0731 00:34:26.323390 24 builder.go:147] stdout: "nodeport-test-64944b47d4-gjq64"
  I0731 00:34:26.323584 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4510" for this suite. @ 07/31/25 00:34:26.329
• [9.605 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 07/31/25 00:34:26.338
  I0731 00:34:26.338454 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename var-expansion @ 07/31/25 00:34:26.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:34:26.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:34:26.364
  STEP: creating the pod with failed condition @ 07/31/25 00:34:26.367
  STEP: updating the pod @ 07/31/25 00:36:26.38
  I0731 00:36:26.896703 24 pod_client.go:173] Successfully updated pod "var-expansion-dceb052d-1ee1-4d33-bf5a-10de814e3ad9"
  STEP: waiting for pod running @ 07/31/25 00:36:26.896
  STEP: deleting the pod gracefully @ 07/31/25 00:36:28.905
  I0731 00:36:28.905196 24 delete.go:62] Deleting pod "var-expansion-dceb052d-1ee1-4d33-bf5a-10de814e3ad9" in namespace "var-expansion-7262"
  I0731 00:36:28.915644 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-dceb052d-1ee1-4d33-bf5a-10de814e3ad9" to be fully deleted
  I0731 00:37:01.006979 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7262" for this suite. @ 07/31/25 00:37:01.013
• [154.686 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 07/31/25 00:37:01.024
  I0731 00:37:01.024827 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename var-expansion @ 07/31/25 00:37:01.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:37:01.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:37:01.048
  STEP: Creating a pod to test substitution in volume subpath @ 07/31/25 00:37:01.051
  STEP: Saw pod success @ 07/31/25 00:37:05.079
  I0731 00:37:05.082316 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod var-expansion-a0d8b069-575f-4efc-af47-0ef22ab869c1 container dapi-container: <nil>
  STEP: delete the pod @ 07/31/25 00:37:05.09
  I0731 00:37:05.114927 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5447" for this suite. @ 07/31/25 00:37:05.119
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 07/31/25 00:37:05.129
  I0731 00:37:05.129342 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename proxy @ 07/31/25 00:37:05.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:37:05.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:37:05.155
  I0731 00:37:05.158316 24 proxy.go:430] Creating pod...
  I0731 00:37:07.198142 24 proxy.go:454] Creating service...
  I0731 00:37:07.224175 24 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/pods/agnhost/proxy?method=DELETE
  I0731 00:37:07.239308 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0731 00:37:07.239384 24 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/pods/agnhost/proxy?method=OPTIONS
  I0731 00:37:07.243439 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0731 00:37:07.243483 24 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/pods/agnhost/proxy?method=PATCH
  I0731 00:37:07.247603 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0731 00:37:07.247676 24 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/pods/agnhost/proxy?method=POST
  I0731 00:37:07.251478 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0731 00:37:07.251541 24 proxy.go:491] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/pods/agnhost/proxy?method=PUT
  I0731 00:37:07.255949 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0731 00:37:07.255999 24 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/services/e2e-proxy-test-service/proxy?method=DELETE
  I0731 00:37:07.269525 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0731 00:37:07.269620 24 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0731 00:37:07.276010 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0731 00:37:07.276071 24 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/services/e2e-proxy-test-service/proxy?method=PATCH
  I0731 00:37:07.283270 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0731 00:37:07.283334 24 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/services/e2e-proxy-test-service/proxy?method=POST
  I0731 00:37:07.293549 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0731 00:37:07.293611 24 proxy.go:502] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/services/e2e-proxy-test-service/proxy?method=PUT
  I0731 00:37:07.298879 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0731 00:37:07.298933 24 proxy.go:522] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/pods/agnhost/proxy?method=GET
  I0731 00:37:07.302860 24 proxy.go:530] http.Client request:GET StatusCode:301
  I0731 00:37:07.303175 24 proxy.go:522] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/services/e2e-proxy-test-service/proxy?method=GET
  I0731 00:37:07.307452 24 proxy.go:530] http.Client request:GET StatusCode:301
  I0731 00:37:07.307484 24 proxy.go:522] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/pods/agnhost/proxy?method=HEAD
  I0731 00:37:07.309889 24 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0731 00:37:07.309919 24 proxy.go:522] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3599/services/e2e-proxy-test-service/proxy?method=HEAD
  I0731 00:37:07.312979 24 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0731 00:37:07.313974 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3599" for this suite. @ 07/31/25 00:37:07.318
• [2.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 07/31/25 00:37:07.331
  I0731 00:37:07.331634 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 00:37:07.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:37:07.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:37:07.356
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 00:37:07.36
  STEP: Saw pod success @ 07/31/25 00:37:11.394
  I0731 00:37:11.398368 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-ca36034f-aff0-43a1-9888-ba11975b632c container client-container: <nil>
  STEP: delete the pod @ 07/31/25 00:37:11.406
  I0731 00:37:11.432312 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5951" for this suite. @ 07/31/25 00:37:11.436
• [4.115 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/31/25 00:37:11.446
  I0731 00:37:11.446615 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename secrets @ 07/31/25 00:37:11.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:37:11.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:37:11.484
  STEP: Creating secret with name secret-test-8e93e49f-047f-4959-83ef-c4dfe113c679 @ 07/31/25 00:37:11.487
  STEP: Creating a pod to test consume secrets @ 07/31/25 00:37:11.493
  STEP: Saw pod success @ 07/31/25 00:37:15.516
  I0731 00:37:15.520623 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-secrets-bf43e951-73c7-4206-8807-38a2d7397694 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 00:37:15.527
  I0731 00:37:15.548449 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9221" for this suite. @ 07/31/25 00:37:15.554
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 07/31/25 00:37:15.563
  I0731 00:37:15.563110 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 00:37:15.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:37:15.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:37:15.583
  STEP: validating cluster-info @ 07/31/25 00:37:15.586
  I0731 00:37:15.587072 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-7256 cluster-info'
  I0731 00:37:15.649333 24 builder.go:146] stderr: ""
  I0731 00:37:15.649386 24 builder.go:147] stdout: "Kubernetes control plane is running at https://10.233.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0731 00:37:15.649527 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7256" for this suite. @ 07/31/25 00:37:15.654
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 07/31/25 00:37:15.663
  I0731 00:37:15.663880 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-probe @ 07/31/25 00:37:15.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:37:15.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:37:15.683
  STEP: Creating pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945 @ 07/31/25 00:37:15.685
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/31/25 00:37:17.711
  I0731 00:37:17.714245 24 container_probe.go:1748] Initial restart count of pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 is 0
  I0731 00:37:17.718311 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:19.723290 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:21.729972 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:23.736029 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:25.740935 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:27.747658 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:29.752835 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:31.759540 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:33.764985 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:35.770522 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:37.777693 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:39.783128 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:41.788845 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:43.794141 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:45.800503 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:47.805935 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:49.810756 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:51.816049 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:53.822098 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:55.826945 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:57.833687 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:37:59.838934 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:01.843340 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:03.849687 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:05.856132 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:07.862121 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:09.868371 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:11.874528 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:13.879178 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:15.884604 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:17.891848 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:19.896182 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:21.901489 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:23.907024 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:25.912500 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:27.917993 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:29.924311 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:31.929421 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:33.933289 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:35.939668 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:37.945569 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:39.951447 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:41.956944 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:43.963241 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:45.968393 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:47.975091 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:49.979717 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:51.984794 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:53.990790 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:55.995496 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:38:58.001632 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:00.007258 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:02.013147 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:04.019525 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:06.024389 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:08.030225 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:10.036125 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:12.041005 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:14.046805 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:16.051962 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:18.058123 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:20.064122 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:22.069666 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:24.074235 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:26.080866 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:28.087509 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:30.092693 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:32.100116 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:34.106037 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:36.112099 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:38.117770 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:40.123361 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:42.129130 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:44.135770 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:46.139789 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:48.145160 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:50.150764 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:52.156538 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:54.163607 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:56.168739 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:39:58.173992 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:00.185722 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:02.192422 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:04.199309 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:06.204779 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:08.210378 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:10.216142 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:12.220747 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:14.226399 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:16.231665 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:18.238315 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:20.244556 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:22.250330 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:24.255977 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:26.262332 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:28.267618 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:30.272041 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:32.278223 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:34.283724 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:36.289503 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:38.295157 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:40.299439 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:42.305103 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:44.311903 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:46.316645 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:48.322429 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:50.327219 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:52.332987 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:54.338202 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:56.343538 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:40:58.348673 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:41:00.355186 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:41:02.360291 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:41:04.366837 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:41:06.374137 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:41:08.379406 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:41:10.383419 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:41:12.389176 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:41:14.395274 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  I0731 00:41:16.400864 24 container_probe.go:1758] Get pod test-grpc-8e1b5832-0f03-4c2c-b4c7-a7201e236f75 in namespace container-probe-5945
  STEP: deleting the pod @ 07/31/25 00:41:18.402
  I0731 00:41:18.426623 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5945" for this suite. @ 07/31/25 00:41:18.432
• [242.780 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/31/25 00:41:18.443
  I0731 00:41:18.443878 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename deployment @ 07/31/25 00:41:18.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:41:18.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:41:18.469
  I0731 00:41:18.472439 24 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0731 00:41:18.479666 24 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0731 00:41:18.486515 24 deployment.go:223] new replicaset for deployment "test-recreate-deployment" is yet to be created
  I0731 00:41:20.497234 24 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0731 00:41:20.500405 24 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0731 00:41:20.513693 24 deployment.go:314] Updating deployment test-recreate-deployment
  I0731 00:41:20.513755 24 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0731 00:41:20.652297 24 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1700",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52e0dc61-335c-4b90-8fe2-38ce496a9aa4",
      ResourceVersion: (string) (len=6) "837986",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889519278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0731 00:41:20.662496 24 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1700",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58a07f85-9e4a-426e-bf40-d12e30f00285",
      ResourceVersion: (string) (len=6) "837985",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889519280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "52e0dc61-335c-4b90-8fe2-38ce496a9aa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 32 65 30 64 63  36 31 2d 33 33 35 63 2d  |\"52e0dc61-335c-|
              00000120  34 62 39 30 2d 38 66 65  32 2d 33 38 63 65 34 39  |4b90-8fe2-38ce49|
              00000130  36 61 39 61 61 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6a9aa4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0731 00:41:20.663228 24 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0731 00:41:20.663606 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1700",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f58703d-82f2-4529-b0a6-6568b4f9b889",
      ResourceVersion: (string) (len=6) "837973",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889519278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "52e0dc61-335c-4b90-8fe2-38ce496a9aa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 32 65 30 64 63  36 31 2d 33 33 35 63 2d  |\"52e0dc61-335c-|
              00000120  34 62 39 30 2d 38 66 65  32 2d 33 38 63 65 34 39  |4b90-8fe2-38ce49|
              00000130  36 61 39 61 61 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6a9aa4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0731 00:41:20.671159 24 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-z64cp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-z64cp",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-1700",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d536b9e0-0c9e-49c6-a89f-07b7d800038e",
      ResourceVersion: (string) (len=6) "837984",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889519280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "58a07f85-9e4a-426e-bf40-d12e30f00285",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  61 30 37 66 38 35 2d 39  |d\":\"58a07f85-9|
              00000090  65 34 61 2d 34 32 36 65  2d 62 66 34 30 2d 64 31  |e4a-426e-bf40-d1|
              000000a0  32 65 33 30 66 30 30 32  38 35 5c 22 7d 22 3a 7b  |2e30f00285\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j4l7l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j4l7l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889519280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j4l7l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 00:41:20.673249 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1700" for this suite. @ 07/31/25 00:41:20.679
• [2.247 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 07/31/25 00:41:20.691
  I0731 00:41:20.691355 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename resourcequota @ 07/31/25 00:41:20.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:41:20.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:41:20.715
  STEP: Discovering how many secrets are in namespace by default @ 07/31/25 00:41:20.718
  STEP: Counting existing ResourceQuota @ 07/31/25 00:41:25.723
  STEP: Creating a ResourceQuota @ 07/31/25 00:41:30.728
  STEP: Ensuring resource quota status is calculated @ 07/31/25 00:41:30.736
  STEP: Creating a Secret @ 07/31/25 00:41:32.741
  STEP: Ensuring resource quota status captures secret creation @ 07/31/25 00:41:32.762
  STEP: Deleting a secret @ 07/31/25 00:41:34.768
  STEP: Ensuring resource quota status released usage @ 07/31/25 00:41:34.776
  I0731 00:41:36.783171 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2438" for this suite. @ 07/31/25 00:41:36.787
• [16.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 07/31/25 00:41:36.795
  I0731 00:41:36.795287 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/31/25 00:41:36.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:41:36.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:41:36.814
  I0731 00:41:36.817019 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/31/25 00:41:44.364
  I0731 00:41:44.365049 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 --namespace=crd-publish-openapi-8376 create -f -'
  I0731 00:41:44.458536 24 builder.go:146] stderr: ""
  I0731 00:41:44.458837 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5934-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0731 00:41:44.459473 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 --namespace=crd-publish-openapi-8376 delete e2e-test-crd-publish-openapi-5934-crds test-foo'
  I0731 00:41:44.543606 24 builder.go:146] stderr: ""
  I0731 00:41:44.543656 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5934-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0731 00:41:44.543707 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 --namespace=crd-publish-openapi-8376 apply -f -'
  I0731 00:41:44.619093 24 builder.go:146] stderr: ""
  I0731 00:41:44.619152 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5934-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0731 00:41:44.619198 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 --namespace=crd-publish-openapi-8376 delete e2e-test-crd-publish-openapi-5934-crds test-foo'
  I0731 00:41:44.679605 24 builder.go:146] stderr: ""
  I0731 00:41:44.679662 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5934-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/31/25 00:41:44.679
  I0731 00:41:44.679763 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 --namespace=crd-publish-openapi-8376 create -f -'
  I0731 00:41:44.734091 24 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/31/25 00:41:44.734
  I0731 00:41:44.734239 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 --namespace=crd-publish-openapi-8376 create -f -'
  I0731 00:41:44.790192 24 builder.go:135] rc: 1
  I0731 00:41:44.790296 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 --namespace=crd-publish-openapi-8376 apply -f -'
  I0731 00:41:44.856808 24 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/31/25 00:41:44.856
  I0731 00:41:44.857004 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 --namespace=crd-publish-openapi-8376 create -f -'
  I0731 00:41:44.915357 24 builder.go:135] rc: 1
  I0731 00:41:44.915454 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 --namespace=crd-publish-openapi-8376 apply -f -'
  I0731 00:41:44.982109 24 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/31/25 00:41:44.982
  I0731 00:41:44.982598 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 explain e2e-test-crd-publish-openapi-5934-crds'
  I0731 00:41:45.038508 24 builder.go:146] stderr: ""
  I0731 00:41:45.038565 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5934-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/31/25 00:41:45.039
  I0731 00:41:45.039081 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 explain e2e-test-crd-publish-openapi-5934-crds.metadata'
  I0731 00:41:45.097563 24 builder.go:146] stderr: ""
  I0731 00:41:45.097775 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5934-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0731 00:41:45.098096 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 explain e2e-test-crd-publish-openapi-5934-crds.spec'
  I0731 00:41:45.153485 24 builder.go:146] stderr: ""
  I0731 00:41:45.153544 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5934-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0731 00:41:45.153682 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 explain e2e-test-crd-publish-openapi-5934-crds.spec.bars'
  I0731 00:41:45.207793 24 builder.go:146] stderr: ""
  I0731 00:41:45.207852 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5934-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/31/25 00:41:45.208
  I0731 00:41:45.208764 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-8376 explain e2e-test-crd-publish-openapi-5934-crds.spec.bars2'
  I0731 00:41:45.260198 24 builder.go:135] rc: 1
  I0731 00:41:47.409810 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8376" for this suite. @ 07/31/25 00:41:47.418
• [10.633 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 07/31/25 00:41:47.431
  I0731 00:41:47.431644 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename dns @ 07/31/25 00:41:47.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:41:47.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:41:47.452
  STEP: Creating a test headless service @ 07/31/25 00:41:47.454
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-8798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-8798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-8798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-8798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-8798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-8798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 83.39.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.39.83_udp@PTR;check="$$(dig +tcp +noall +answer +search 83.39.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.39.83_tcp@PTR;sleep 1; done
   @ 07/31/25 00:41:47.487
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 83.39.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.39.83_udp@PTR;check="$$(dig +tcp +noall +answer +search 83.39.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.39.83_tcp@PTR;sleep 1; done
   @ 07/31/25 00:41:47.487
  STEP: creating a pod to probe DNS @ 07/31/25 00:41:47.487
  STEP: submitting the pod to kubernetes @ 07/31/25 00:41:47.487
  STEP: retrieving the pod @ 07/31/25 00:41:51.524
  STEP: looking for the results for each expected name from probers @ 07/31/25 00:41:51.528
  I0731 00:41:51.532419 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8798.svc.cluster.local from pod dns-8798/dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106: the server could not find the requested resource (get pods dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106)
  I0731 00:41:51.536086 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8798.svc.cluster.local from pod dns-8798/dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106: the server could not find the requested resource (get pods dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106)
  I0731 00:41:51.539619 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-8798.svc.cluster.local from pod dns-8798/dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106: the server could not find the requested resource (get pods dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106)
  I0731 00:41:51.542899 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-8798.svc.cluster.local from pod dns-8798/dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106: the server could not find the requested resource (get pods dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106)
  I0731 00:41:51.558233 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8798.svc.cluster.local from pod dns-8798/dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106: the server could not find the requested resource (get pods dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106)
  I0731 00:41:51.561137 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8798.svc.cluster.local from pod dns-8798/dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106: the server could not find the requested resource (get pods dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106)
  I0731 00:41:51.564400 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8798.svc.cluster.local from pod dns-8798/dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106: the server could not find the requested resource (get pods dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106)
  I0731 00:41:51.569134 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8798.svc.cluster.local from pod dns-8798/dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106: the server could not find the requested resource (get pods dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106)
  I0731 00:41:51.582148 24 dns_common.go:506] Lookups using dns-8798/dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106 failed for: [agnhost_udp@dns-test-service.dns-8798.svc.cluster.local agnhost_tcp@dns-test-service.dns-8798.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-8798.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-8798.svc.cluster.local jessie_udp@dns-test-service.dns-8798.svc.cluster.local jessie_tcp@dns-test-service.dns-8798.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8798.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8798.svc.cluster.local]

  I0731 00:41:51.590394 24 dns_common.go:514] Pod client logs for webserver: 
  I0731 00:41:51.595577 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0731 00:41:51.600565 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0731 00:41:56.595451 24 dns_common.go:546] DNS probes using dns-8798/dns-test-9b625191-ddb0-4cc1-9f1e-c9d61eeda106 succeeded

  STEP: deleting the pod @ 07/31/25 00:41:56.595
  STEP: deleting the test service @ 07/31/25 00:41:56.633
  STEP: deleting the test headless service @ 07/31/25 00:41:56.689
  I0731 00:41:56.709760 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8798" for this suite. @ 07/31/25 00:41:56.716
• [9.295 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 07/31/25 00:41:56.726
  I0731 00:41:56.726054 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/31/25 00:41:56.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:41:56.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:41:56.752
  I0731 00:41:56.754876 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/31/25 00:42:04.01
  I0731 00:42:04.010439 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-3191 --namespace=crd-publish-openapi-3191 create -f -'
  I0731 00:42:04.095283 24 builder.go:146] stderr: ""
  I0731 00:42:04.095452 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8508-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0731 00:42:04.095501 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-3191 --namespace=crd-publish-openapi-3191 delete e2e-test-crd-publish-openapi-8508-crds test-cr'
  I0731 00:42:04.160149 24 builder.go:146] stderr: ""
  I0731 00:42:04.160207 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8508-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0731 00:42:04.160349 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-3191 --namespace=crd-publish-openapi-3191 apply -f -'
  I0731 00:42:04.243166 24 builder.go:146] stderr: ""
  I0731 00:42:04.243227 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8508-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0731 00:42:04.243278 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-3191 --namespace=crd-publish-openapi-3191 delete e2e-test-crd-publish-openapi-8508-crds test-cr'
  I0731 00:42:04.308832 24 builder.go:146] stderr: ""
  I0731 00:42:04.308893 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8508-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/31/25 00:42:04.308
  I0731 00:42:04.309010 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-3191 explain e2e-test-crd-publish-openapi-8508-crds'
  I0731 00:42:04.361705 24 builder.go:146] stderr: ""
  I0731 00:42:04.361791 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8508-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0731 00:42:06.637063 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3191" for this suite. @ 07/31/25 00:42:06.65
• [9.935 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/31/25 00:42:06.661
  I0731 00:42:06.661286 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/31/25 00:42:06.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:42:06.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:42:06.685
  I0731 00:42:06.688097 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  I0731 00:42:14.781176 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5812" for this suite. @ 07/31/25 00:42:14.787
• [8.135 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 07/31/25 00:42:14.796
  I0731 00:42:14.796662 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-probe @ 07/31/25 00:42:14.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:42:14.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:42:14.82
  STEP: Creating pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940 @ 07/31/25 00:42:14.823
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/31/25 00:42:16.85
  I0731 00:42:16.858577 24 container_probe.go:1748] Initial restart count of pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 is 0
  I0731 00:42:16.861941 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:18.866222 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:20.872192 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:22.878301 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:24.882815 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:26.888180 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:28.895058 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:30.900799 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:32.907045 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:34.912690 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:36.918050 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:38.924960 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:40.930873 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:42.937194 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:44.942824 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:46.948670 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:48.954971 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:50.960315 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:52.965160 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:54.971502 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:56.979083 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:42:58.985877 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:00.992080 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:02.996935 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:05.003738 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:07.010417 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:09.014558 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:11.021433 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:13.026036 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:15.031429 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:17.038192 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:19.043655 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:21.049079 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:23.054600 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:25.060919 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:27.066271 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:29.071551 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:31.077603 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:33.082310 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:35.088571 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:37.095188 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:39.100818 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:41.107074 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:43.112887 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:45.118511 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:47.124928 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:49.129393 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:51.134245 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:53.139831 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:55.145994 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:57.151426 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:43:59.157479 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:01.162910 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:03.168035 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:05.173996 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:07.182408 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:09.188617 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:11.194662 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:13.201205 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:15.207300 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:17.213171 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:19.219860 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:21.224969 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:23.230049 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:25.236688 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:27.243360 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:29.249822 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:31.256833 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:33.266001 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:35.271234 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:37.276804 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:39.281837 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:41.286318 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:43.291425 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:45.298090 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:47.303914 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:49.309636 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:51.315635 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:53.321107 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:55.328155 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:57.333041 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:44:59.338670 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:01.345236 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:03.360078 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:05.366983 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:07.372613 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:09.378909 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:11.385140 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:13.389084 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:15.396453 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:17.402064 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:19.406605 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:21.412800 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:23.418143 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:25.423845 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:27.429070 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:29.435964 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:31.441926 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:33.447128 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:35.453022 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:37.458801 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:39.463304 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:41.469344 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:43.475040 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:45.480859 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:47.487335 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:49.493428 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:51.499671 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:53.506623 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:55.515458 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:57.521473 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:45:59.527645 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:46:01.534230 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:46:03.540099 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:46:05.545802 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:46:07.553118 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:46:09.559948 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:46:11.565767 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:46:13.572050 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  I0731 00:46:15.583234 24 container_probe.go:1758] Get pod liveness-95b896b0-7a91-429d-8829-7d90a98aab96 in namespace container-probe-8940
  STEP: deleting the pod @ 07/31/25 00:46:17.583
  I0731 00:46:17.630137 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8940" for this suite. @ 07/31/25 00:46:17.639
• [242.854 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 07/31/25 00:46:17.651
  I0731 00:46:17.651806 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 00:46:17.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:46:17.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:46:17.68
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 00:46:17.682
  STEP: Saw pod success @ 07/31/25 00:46:21.721
  I0731 00:46:21.726663 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-ec2116ab-50b3-45af-a0eb-1c3ca92d0342 container client-container: <nil>
  STEP: delete the pod @ 07/31/25 00:46:21.744
  I0731 00:46:21.770675 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5102" for this suite. @ 07/31/25 00:46:21.775
• [4.132 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/31/25 00:46:21.783
  I0731 00:46:21.783674 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename secrets @ 07/31/25 00:46:21.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:46:21.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:46:21.803
  STEP: Creating secret with name s-test-opt-del-09fa68a8-e8b6-4f7d-aa6c-1bbfb5f626d9 @ 07/31/25 00:46:21.876
  STEP: Creating secret with name s-test-opt-upd-a964d116-d60c-4012-8547-0bb2f7ae6ad7 @ 07/31/25 00:46:21.884
  STEP: Creating the pod @ 07/31/25 00:46:21.891
  STEP: Deleting secret s-test-opt-del-09fa68a8-e8b6-4f7d-aa6c-1bbfb5f626d9 @ 07/31/25 00:46:23.938
  STEP: Updating secret s-test-opt-upd-a964d116-d60c-4012-8547-0bb2f7ae6ad7 @ 07/31/25 00:46:23.946
  STEP: Creating secret with name s-test-opt-create-24df43d3-983e-4517-bb03-68fc8d403522 @ 07/31/25 00:46:23.957
  STEP: waiting to observe update in volume @ 07/31/25 00:46:23.965
  I0731 00:47:34.446642 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7675" for this suite. @ 07/31/25 00:47:34.452
• [72.680 seconds]
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 07/31/25 00:47:34.463
  I0731 00:47:34.463325 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 00:47:34.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:47:34.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:47:34.486
  STEP: creating service in namespace services-2315 @ 07/31/25 00:47:34.489
  STEP: creating service affinity-clusterip in namespace services-2315 @ 07/31/25 00:47:34.489
  I0731 00:47:34.540851 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0731 00:47:36.570537 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 47, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 47, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 47, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 47, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-6dd57cf8dc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0731 00:47:38.563801 24 resource.go:361] Creating new exec pod
  I0731 00:47:40.590420 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-2315 exec execpod-affinity7wmbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0731 00:47:40.726410 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.233.37.202) 80 port [tcp/http] succeeded!\n"
  I0731 00:47:40.726470 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 00:47:40.726567 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-2315 exec execpod-affinity7wmbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.37.202 80'
  I0731 00:47:40.833128 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.37.202 80\nConnection to 10.233.37.202 80 port [tcp/http] succeeded!\n"
  I0731 00:47:40.833187 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 00:47:40.833271 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-2315 exec execpod-affinity7wmbn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/ ; done'
  I0731 00:47:41.029375 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.37.202:80/\n"
  I0731 00:47:41.029441 24 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb\naffinity-clusterip-6dd57cf8dc-srszb"
  I0731 00:47:41.029463 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029473 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029482 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029490 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029506 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029514 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029522 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029530 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029538 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029545 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029552 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029559 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029566 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029573 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029581 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.029588 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-srszb
  I0731 00:47:41.030103 24 service.go:4352] Cleaning up the exec pod
  I0731 00:47:41.166906 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2315" for this suite. @ 07/31/25 00:47:41.181
• [6.730 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 07/31/25 00:47:41.193
  I0731 00:47:41.193755 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename svcaccounts @ 07/31/25 00:47:41.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:47:41.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:47:41.231
  I0731 00:47:41.237357 24 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-6774"
  I0731 00:47:41.247002 24 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-6774"
  STEP: waiting for a new root ca configmap created @ 07/31/25 00:47:41.747
  I0731 00:47:41.752064 24 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-6774"
  I0731 00:47:41.761306 24 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-6774"
  STEP: waiting for the root ca configmap reconciled @ 07/31/25 00:47:42.262
  I0731 00:47:42.266860 24 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-6774"
  I0731 00:47:42.266990 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6774" for this suite. @ 07/31/25 00:47:42.272
• [1.089 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/31/25 00:47:42.283
  I0731 00:47:42.283376 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 00:47:42.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:47:42.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:47:42.315
  STEP: Creating projection with secret that has name projected-secret-test-a8e9ea1c-d39b-4c91-ab1c-eb9cce45f7c4 @ 07/31/25 00:47:42.322
  STEP: Creating a pod to test consume secrets @ 07/31/25 00:47:42.333
  STEP: Saw pod success @ 07/31/25 00:47:46.363
  I0731 00:47:46.367396 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-projected-secrets-0614589b-f332-4770-971f-1b14cbcddeb9 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 00:47:46.381
  I0731 00:47:46.406089 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3447" for this suite. @ 07/31/25 00:47:46.411
• [4.137 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/31/25 00:47:46.422
  I0731 00:47:46.422618 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename discovery @ 07/31/25 00:47:46.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:47:46.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:47:46.446
  STEP: Setting up server cert @ 07/31/25 00:47:46.45
  STEP: Requesting APIResourceList from "/api/v1" @ 07/31/25 00:47:46.554
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/31/25 00:47:46.558
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/31/25 00:47:46.559
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/31/25 00:47:46.561
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/31/25 00:47:46.562
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/31/25 00:47:46.563
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/31/25 00:47:46.564
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/31/25 00:47:46.565
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/31/25 00:47:46.566
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/31/25 00:47:46.567
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/31/25 00:47:46.568
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/31/25 00:47:46.568
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/31/25 00:47:46.57
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/31/25 00:47:46.571
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/31/25 00:47:46.572
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/31/25 00:47:46.573
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/31/25 00:47:46.574
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/31/25 00:47:46.575
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/31/25 00:47:46.575
  I0731 00:47:46.576991 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2610" for this suite. @ 07/31/25 00:47:46.582
• [0.179 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/31/25 00:47:46.601
  I0731 00:47:46.601513 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename lease-test @ 07/31/25 00:47:46.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:47:46.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:47:46.623
  I0731 00:47:46.909880 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8624" for this suite. @ 07/31/25 00:47:46.914
• [0.322 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/31/25 00:47:46.924
  I0731 00:47:46.924357 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/31/25 00:47:46.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:47:46.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:47:46.946
  STEP: mirroring a new custom Endpoint @ 07/31/25 00:47:46.981
  I0731 00:47:46.990848      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 00:47:46.994888 24 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 07/31/25 00:47:49.002
  I0731 00:47:49.016675      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 07/31/25 00:47:49.028
  I0731 00:47:49.050457      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 00:47:49.061829 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-4480" for this suite. @ 07/31/25 00:47:49.068
• [2.157 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/31/25 00:47:49.082
  I0731 00:47:49.082173 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pods @ 07/31/25 00:47:49.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:47:49.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:47:49.112
  STEP: creating the pod @ 07/31/25 00:47:49.119
  STEP: submitting the pod to kubernetes @ 07/31/25 00:47:49.119
  STEP: verifying the pod is in kubernetes @ 07/31/25 00:47:51.146
  STEP: updating the pod @ 07/31/25 00:47:51.15
  I0731 00:47:51.666648 24 pod_client.go:173] Successfully updated pod "pod-update-726d9f80-601c-4f1d-9b43-1db5a716111f"
  STEP: verifying the updated pod is in kubernetes @ 07/31/25 00:47:51.68
  I0731 00:47:51.683666 24 pods.go:391] Pod update OK
  I0731 00:47:51.684059 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1920" for this suite. @ 07/31/25 00:47:51.688
• [2.617 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 07/31/25 00:47:51.699
  I0731 00:47:51.699061 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 00:47:51.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:47:51.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:47:51.727
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/31/25 00:47:51.73
  STEP: Saw pod success @ 07/31/25 00:47:55.759
  I0731 00:47:55.763123 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-8efdf964-6ecd-4590-bd45-7cecb86664c4 container test-container: <nil>
  STEP: delete the pod @ 07/31/25 00:47:55.77
  I0731 00:47:55.792953 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7548" for this suite. @ 07/31/25 00:47:55.798
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 07/31/25 00:47:55.809
  I0731 00:47:55.809645 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 00:47:55.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:47:55.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:47:55.845
  STEP: Setting up server cert @ 07/31/25 00:47:55.899
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 00:47:56.111
  STEP: Deploying the webhook pod @ 07/31/25 00:47:56.122
  STEP: Wait for the deployment to be ready @ 07/31/25 00:47:56.165
  I0731 00:47:56.255027 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/31/25 00:47:58.274
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 00:47:58.293
  I0731 00:47:59.293986 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/31/25 00:47:59.342
  STEP: create a pod that should be updated by the webhook @ 07/31/25 00:47:59.385
  I0731 00:47:59.717565 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1948" for this suite. @ 07/31/25 00:47:59.73
  STEP: Destroying namespace "webhook-markers-2371" for this suite. @ 07/31/25 00:47:59.766
• [4.009 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 07/31/25 00:47:59.82
  I0731 00:47:59.820828 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename containers @ 07/31/25 00:47:59.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:47:59.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:47:59.898
  I0731 00:48:01.956252 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4034" for this suite. @ 07/31/25 00:48:01.964
• [2.162 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 07/31/25 00:48:01.982
  I0731 00:48:01.982391 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename dns @ 07/31/25 00:48:01.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:48:02.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:48:02.008
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/31/25 00:48:02.012
  I0731 00:48:02.027537 24 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9428  788d4fb3-994c-4621-a54c-986936fe4838 840762 1 2025-07-31 00:48:02 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-07-31 00:48:02 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-54cnk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-54cnk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/31/25 00:48:04.05
  I0731 00:48:04.050513 24 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9428 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 00:48:04.050610 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 00:48:04.050725 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/dns-9428/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0731 00:48:04.131969 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 07/31/25 00:48:04.132
  I0731 00:48:04.132319 24 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9428 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 00:48:04.132388 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 00:48:04.132533 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/dns-9428/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0731 00:48:04.198821 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 00:48:04.199141 24 dns.go:451] Deleting pod test-dns-nameservers...
  I0731 00:48:04.215983 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9428" for this suite. @ 07/31/25 00:48:04.221
• [2.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 07/31/25 00:48:04.229
  I0731 00:48:04.229961 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename replication-controller @ 07/31/25 00:48:04.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:48:04.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:48:04.262
  STEP: creating a ReplicationController @ 07/31/25 00:48:04.269
  STEP: waiting for RC to be added @ 07/31/25 00:48:04.275
  STEP: waiting for available Replicas @ 07/31/25 00:48:04.276
  STEP: patching ReplicationController @ 07/31/25 00:48:05.885
  STEP: waiting for RC to be modified @ 07/31/25 00:48:05.909
  STEP: patching ReplicationController status @ 07/31/25 00:48:05.909
  STEP: waiting for RC to be modified @ 07/31/25 00:48:05.956
  STEP: waiting for available Replicas @ 07/31/25 00:48:05.985
  STEP: fetching ReplicationController status @ 07/31/25 00:48:05.985
  STEP: patching ReplicationController scale @ 07/31/25 00:48:06.021
  STEP: waiting for RC to be modified @ 07/31/25 00:48:06.06
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/31/25 00:48:06.06
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/31/25 00:48:08.049
  STEP: updating ReplicationController status @ 07/31/25 00:48:08.053
  STEP: waiting for RC to be modified @ 07/31/25 00:48:08.059
  STEP: listing all ReplicationControllers @ 07/31/25 00:48:08.061
  STEP: checking that ReplicationController has expected values @ 07/31/25 00:48:08.068
  STEP: deleting ReplicationControllers by collection @ 07/31/25 00:48:08.068
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/31/25 00:48:08.079
  I0731 00:48:08.137231 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0731 00:48:08.137840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-1537" for this suite. @ 07/31/25 00:48:08.142
• [3.931 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 07/31/25 00:48:08.161
  I0731 00:48:08.161391 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename secrets @ 07/31/25 00:48:08.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:48:08.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:48:08.18
  STEP: Creating secret with name secret-test-c40e9a11-291b-4a4f-a6f7-1d5c58883fa5 @ 07/31/25 00:48:08.184
  STEP: Creating a pod to test consume secrets @ 07/31/25 00:48:08.19
  E0731 00:48:09.138460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:10.138751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:11.138780      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:12.139387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 00:48:12.219
  I0731 00:48:12.223647 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-secrets-915ad189-a8b8-413d-9f6e-f9a3d42798ca container secret-env-test: <nil>
  STEP: delete the pod @ 07/31/25 00:48:12.23
  I0731 00:48:12.252050 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8536" for this suite. @ 07/31/25 00:48:12.257
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 07/31/25 00:48:12.267
  I0731 00:48:12.267155 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename field-validation @ 07/31/25 00:48:12.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:48:12.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:48:12.292
  STEP: apply creating a deployment @ 07/31/25 00:48:12.295
  I0731 00:48:12.315169 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1034" for this suite. @ 07/31/25 00:48:12.357
• [0.099 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 07/31/25 00:48:12.367
  I0731 00:48:12.367967 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 00:48:12.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:48:12.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:48:12.402
  STEP: creating service in namespace services-9149 @ 07/31/25 00:48:12.405
  STEP: creating service affinity-nodeport in namespace services-9149 @ 07/31/25 00:48:12.405
  I0731 00:48:12.458074 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0731 00:48:13.140179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:14.143093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:48:14.466145 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 0, 48, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 48, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 0, 48, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 0, 48, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-85dffb5fc7\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0731 00:48:15.143851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:16.144158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:48:16.482656 24 resource.go:361] Creating new exec pod
  E0731 00:48:17.144321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:18.144643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:48:18.510444 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9149 exec execpod-affinitym44xr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0731 00:48:18.638551 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.233.63.25) 80 port [tcp/http] succeeded!\n"
  I0731 00:48:18.638618 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 00:48:18.638729 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9149 exec execpod-affinitym44xr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.63.25 80'
  I0731 00:48:18.749303 24 builder.go:146] stderr: "+ nc -v -t -w 2 10.233.63.25 80\n+ echo hostName\nConnection to 10.233.63.25 80 port [tcp/http] succeeded!\n"
  I0731 00:48:18.749357 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 00:48:18.749442 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9149 exec execpod-affinitym44xr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.30.200 32087'
  I0731 00:48:18.865331 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.30.200 32087\nConnection to 172.20.30.200 32087 port [tcp/*] succeeded!\n"
  I0731 00:48:18.865387 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 00:48:18.865483 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9149 exec execpod-affinitym44xr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.30.154 32087'
  I0731 00:48:18.965979 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.30.154 32087\nConnection to 172.20.30.154 32087 port [tcp/*] succeeded!\n"
  I0731 00:48:18.966047 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 00:48:18.966122 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9149 exec execpod-affinitym44xr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/ ; done'
  I0731 00:48:19.142615 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:32087/\n"
  I0731 00:48:19.142694 24 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h\naffinity-nodeport-85dffb5fc7-twq5h"
  I0731 00:48:19.142714 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142726 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142733 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142746 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142752 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142757 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142763 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142770 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142775 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142780 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142785 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142789 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142794 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142803 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142812 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142817 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-twq5h
  I0731 00:48:19.142997 24 service.go:4352] Cleaning up the exec pod
  E0731 00:48:19.145510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:48:19.243354 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9149" for this suite. @ 07/31/25 00:48:19.258
• [6.904 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/31/25 00:48:19.272
  I0731 00:48:19.272416 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename replicaset @ 07/31/25 00:48:19.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:48:19.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:48:19.298
  I0731 00:48:19.304965 24 replica_set.go:192] Creating ReplicaSet my-hostname-basic-15dcfb30-2124-4840-9b5f-8e0652f0f5d0
  I0731 00:48:19.320434 24 resource.go:81] Pod name my-hostname-basic-15dcfb30-2124-4840-9b5f-8e0652f0f5d0: Found 0 pods out of 1
  E0731 00:48:20.146328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:21.147114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:22.147446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:23.147895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:24.148279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:48:24.327164 24 resource.go:81] Pod name my-hostname-basic-15dcfb30-2124-4840-9b5f-8e0652f0f5d0: Found 1 pods out of 1
  I0731 00:48:24.327493 24 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-15dcfb30-2124-4840-9b5f-8e0652f0f5d0" is running
  I0731 00:48:24.331142 24 replica_set.go:221] Pod "my-hostname-basic-15dcfb30-2124-4840-9b5f-8e0652f0f5d0-pkd49" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-31 00:48:21 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-31 00:48:19 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-31 00:48:21 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-31 00:48:21 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-31 00:48:19 +0000 UTC Reason: Message:}])
  I0731 00:48:24.331185 24 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/31/25 00:48:24.331
  I0731 00:48:24.342003 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-305" for this suite. @ 07/31/25 00:48:24.346
• [5.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 07/31/25 00:48:24.356
  I0731 00:48:24.356658 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename svcaccounts @ 07/31/25 00:48:24.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:48:24.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:48:24.383
  I0731 00:48:24.418517 24 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0731 00:48:24.418593 24 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0731 00:48:24.433741 24 service_accounts.go:281] created pod pod-service-account-mountsa
  I0731 00:48:24.433797 24 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0731 00:48:24.442143 24 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0731 00:48:24.442372 24 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0731 00:48:24.457381 24 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0731 00:48:24.457583 24 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0731 00:48:24.468766 24 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0731 00:48:24.468960 24 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0731 00:48:24.482059 24 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0731 00:48:24.482108 24 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0731 00:48:24.494562 24 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0731 00:48:24.494616 24 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0731 00:48:24.507902 24 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0731 00:48:24.507943 24 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0731 00:48:24.520512 24 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0731 00:48:24.520554 24 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0731 00:48:24.520659 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1346" for this suite. @ 07/31/25 00:48:24.531
• [0.186 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/31/25 00:48:24.543
  I0731 00:48:24.543098 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename init-container @ 07/31/25 00:48:24.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:48:24.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:48:24.57
  STEP: creating the pod @ 07/31/25 00:48:24.572
  I0731 00:48:24.572863 24 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0731 00:48:25.148811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:26.149693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:27.150240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:48:27.908545 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5649" for this suite. @ 07/31/25 00:48:27.914
• [3.380 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/31/25 00:48:27.923
  I0731 00:48:27.923838 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename deployment @ 07/31/25 00:48:27.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:48:27.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:48:27.947
  I0731 00:48:27.950324 24 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0731 00:48:27.960327 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0731 00:48:28.150786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:29.151101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:30.151910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:31.152157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:32.152733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:48:32.965739 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/31/25 00:48:32.965
  I0731 00:48:32.965882 24 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0731 00:48:32.974383 24 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0731 00:48:32.987357 24 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0731 00:48:33.152648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:34.152913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:48:34.998933 24 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0731 00:48:35.003589 24 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0731 00:48:35.104086 24 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51e5b412-f69c-4521-a85a-8d1c98205d6c",
      ResourceVersion: (string) (len=6) "841425",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889519712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0731 00:48:35.112867 24 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb142d30-f878-4a78-a361-baa1aa420721",
      ResourceVersion: (string) (len=6) "841411",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889519712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "51e5b412-f69c-4521-a85a-8d1c98205d6c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 31 65 35 62 34  31 32 2d 66 36 39 63 2d  |\"51e5b412-f69c-|
              00000120  34 35 32 31 2d 61 38 35  61 2d 38 64 31 63 39 38  |4521-a85a-8d1c98|
              00000130  32 30 35 64 36 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |205d6c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0731 00:48:35.114197 24 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0731 00:48:35.114740 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "39cf91e7-3c35-41b9-8df5-23ce79ef8b4e",
      ResourceVersion: (string) (len=6) "841423",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889519707,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "51e5b412-f69c-4521-a85a-8d1c98205d6c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 31 65 35 62 34 31  |"uid\":\"51e5b41|
              000000b0  32 2d 66 36 39 63 2d 34  35 32 31 2d 61 38 35 61  |2-f69c-4521-a85a|
              000000c0  2d 38 64 31 63 39 38 32  30 35 64 36 63 5c 22 7d  |-8d1c98205d6c\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0731 00:48:35.121576 24 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-8cfsd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-8cfsd",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-8568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8960a261-953d-4248-8692-f8fdbd429ee4",
      ResourceVersion: (string) (len=6) "841410",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889519712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "cb142d30-f878-4a78-a361-baa1aa420721",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  31 34 32 64 33 30 2d 66  |d\":\"cb142d30-f|
              00000090  38 37 38 2d 34 61 37 38  2d 61 33 36 31 2d 62 61  |878-4a78-a361-ba|
              000000a0  61 31 61 61 34 32 30 37  32 31 5c 22 7d 22 3a 7b  |a1aa420721\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 34 33 5c 22 7d 22 3a  |.233.65.243\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dd6k5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dd6k5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889519713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) (len=13) "10.233.65.243",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.243"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889519713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889519713,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://b40a703d392f9ffe36d776d4f718e1134cd3c4ea30e11560e1b88a11d646aec2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dd6k5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 00:48:35.122754 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8568" for this suite. @ 07/31/25 00:48:35.129
• [7.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 07/31/25 00:48:35.147
  I0731 00:48:35.147503 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubelet-test @ 07/31/25 00:48:35.148
  E0731 00:48:35.153214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:48:35.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:48:35.174
  E0731 00:48:36.153356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:37.153782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:48:37.211235 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8988" for this suite. @ 07/31/25 00:48:37.217
• [2.079 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/31/25 00:48:37.226
  I0731 00:48:37.226800 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename cronjob @ 07/31/25 00:48:37.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:48:37.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:48:37.248
  STEP: Creating a cronjob @ 07/31/25 00:48:37.25
  STEP: Ensuring more than one job is running at a time @ 07/31/25 00:48:37.26
  E0731 00:48:38.154156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:39.154300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:40.155244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:41.156181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:42.156356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:43.156867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:44.157032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:45.157109      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:46.157270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:47.157323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:48.158094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:49.158537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:50.159202      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:51.159502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:52.159652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:53.160059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:54.160283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:55.160414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:56.160706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:57.160844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:58.161468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:48:59.161751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:00.162427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:01.162868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:02.163443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:03.163806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:04.164497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:05.164960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:06.165445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:07.165618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:08.166269      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:09.166398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:10.166539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:11.166636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:12.166853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:13.167254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:14.168206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:15.168394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:16.168812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:17.169279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:18.169820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:19.170172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:20.171082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:21.171472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:22.171630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:23.171778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:24.171849      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:25.172063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:26.172526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:27.172650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:28.173026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:29.173315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:30.173966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:31.174348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:32.174853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:33.175693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:34.175789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:35.175985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:36.176088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:37.176477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:38.177013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:39.177431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:40.178319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:41.178766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:42.178944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:43.179320      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:44.179391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:45.179526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:46.179658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:47.180083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:48.180176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:49.180678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:50.180826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:51.181470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:52.182122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:53.182505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:54.182598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:55.182646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:56.183717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:57.183951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:58.184087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:49:59.184398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:00.185686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:01.185752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/31/25 00:50:01.265
  STEP: Removing cronjob @ 07/31/25 00:50:01.27
  I0731 00:50:01.279468 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8600" for this suite. @ 07/31/25 00:50:01.288
• [84.075 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 07/31/25 00:50:01.302
  I0731 00:50:01.302113 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename field-validation @ 07/31/25 00:50:01.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:01.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:50:01.344
  STEP: apply creating a deployment @ 07/31/25 00:50:01.347
  I0731 00:50:01.360742 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-768" for this suite. @ 07/31/25 00:50:01.388
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 07/31/25 00:50:01.401
  I0731 00:50:01.401918 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename fake-node @ 07/31/25 00:50:01.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:01.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:50:01.423
  STEP: Create "e2e-fake-node-hgppl" @ 07/31/25 00:50:01.427
  STEP: Getting "e2e-fake-node-hgppl" @ 07/31/25 00:50:01.435
  STEP: Patching "e2e-fake-node-hgppl" @ 07/31/25 00:50:01.438
  STEP: Listing nodes with LabelSelector "e2e-fake-node-hgppl=patched" @ 07/31/25 00:50:01.444
  STEP: Updating "e2e-fake-node-hgppl" @ 07/31/25 00:50:01.446
  STEP: Delete "e2e-fake-node-hgppl" @ 07/31/25 00:50:01.487
  STEP: Confirm deletion of "e2e-fake-node-hgppl" @ 07/31/25 00:50:01.494
  I0731 00:50:01.498771 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-2695" for this suite. @ 07/31/25 00:50:01.503
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 07/31/25 00:50:01.519
  I0731 00:50:01.519677 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 00:50:01.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:01.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:50:01.549
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/31/25 00:50:01.553
  E0731 00:50:02.186826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:03.187150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:04.188019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:05.188214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 00:50:05.58
  I0731 00:50:05.585587 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-00002a2d-5634-4142-afbe-69968c9b0764 container test-container: <nil>
  STEP: delete the pod @ 07/31/25 00:50:05.594
  I0731 00:50:05.617175 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7721" for this suite. @ 07/31/25 00:50:05.621
• [4.110 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 07/31/25 00:50:05.631
  I0731 00:50:05.631678 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 00:50:05.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:05.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:50:05.657
  STEP: Setting up server cert @ 07/31/25 00:50:05.689
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 00:50:06.157
  STEP: Deploying the webhook pod @ 07/31/25 00:50:06.166
  STEP: Wait for the deployment to be ready @ 07/31/25 00:50:06.186
  E0731 00:50:06.188411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:50:06.197367 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 00:50:07.189125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:08.189270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 00:50:08.21
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 00:50:08.275
  E0731 00:50:09.189412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:50:09.275736 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/31/25 00:50:09.282
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/31/25 00:50:09.304
  I0731 00:50:09.304556 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  I0731 00:50:09.402520 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-357" for this suite. @ 07/31/25 00:50:09.411
  STEP: Destroying namespace "webhook-markers-3980" for this suite. @ 07/31/25 00:50:09.425
• [3.806 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 07/31/25 00:50:09.441
  I0731 00:50:09.441070 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/31/25 00:50:09.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:09.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:50:09.518
  STEP: set up a multi version CRD @ 07/31/25 00:50:09.525
  I0731 00:50:09.525962 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 00:50:10.190370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:11.191343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:12.191831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:13.192737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:14.193099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:15.194173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:16.194106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:17.194762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:18.195604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:19.195867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 07/31/25 00:50:19.369
  STEP: check the unserved version gets removed @ 07/31/25 00:50:19.411
  E0731 00:50:20.196635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:21.197159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 07/31/25 00:50:21.215
  E0731 00:50:22.198244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:23.199150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:24.199871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:50:24.876043 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5910" for this suite. @ 07/31/25 00:50:24.887
• [15.455 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 07/31/25 00:50:24.896
  I0731 00:50:24.896302 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename svcaccounts @ 07/31/25 00:50:24.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:24.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:50:24.918
  E0731 00:50:25.200403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:26.200530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 07/31/25 00:50:26.95
  I0731 00:50:26.950743 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7944 pod-service-account-d1e9c581-41ca-4591-8ddc-b65a14ace112 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/31/25 00:50:27.114
  I0731 00:50:27.114226 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7944 pod-service-account-d1e9c581-41ca-4591-8ddc-b65a14ace112 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  E0731 00:50:27.201381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 07/31/25 00:50:27.233
  I0731 00:50:27.233376 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7944 pod-service-account-d1e9c581-41ca-4591-8ddc-b65a14ace112 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0731 00:50:27.361344 24 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-7944"
  I0731 00:50:27.364107 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7944" for this suite. @ 07/31/25 00:50:27.369
• [2.483 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 07/31/25 00:50:27.379
  I0731 00:50:27.379743 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename var-expansion @ 07/31/25 00:50:27.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:27.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:50:27.402
  STEP: Creating a pod to test substitution in container's command @ 07/31/25 00:50:27.404
  E0731 00:50:28.201352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:29.201702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:30.201829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:31.202121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 00:50:31.431
  I0731 00:50:31.435159 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod var-expansion-efd92c43-6b0f-476d-8d85-8df0d33a7320 container dapi-container: <nil>
  STEP: delete the pod @ 07/31/25 00:50:31.441
  I0731 00:50:31.470074 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7911" for this suite. @ 07/31/25 00:50:31.475
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 07/31/25 00:50:31.488
  I0731 00:50:31.488092 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 00:50:31.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:31.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:50:31.508
  STEP: Creating a job @ 07/31/25 00:50:31.51
  STEP: Ensuring active pods == parallelism @ 07/31/25 00:50:31.518
  E0731 00:50:32.202850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:33.202931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 07/31/25 00:50:33.528
  I0731 00:50:34.048531 24 pod_client.go:173] Successfully updated pod "adopt-release-cmjvb"
  STEP: Checking that the Job readopts the Pod @ 07/31/25 00:50:34.048
  E0731 00:50:34.203799      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:35.203853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 07/31/25 00:50:36.057
  E0731 00:50:36.204604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:50:36.572832 24 pod_client.go:173] Successfully updated pod "adopt-release-cmjvb"
  STEP: Checking that the Job releases the Pod @ 07/31/25 00:50:36.572
  E0731 00:50:37.204993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:38.205443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:50:38.593952 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9743" for this suite. @ 07/31/25 00:50:38.6
• [7.122 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 07/31/25 00:50:38.61
  I0731 00:50:38.610331 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename namespaces @ 07/31/25 00:50:38.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:38.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:50:38.63
  STEP: Creating a test namespace @ 07/31/25 00:50:38.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:38.65
  STEP: Creating a service in the namespace @ 07/31/25 00:50:38.653
  STEP: Deleting the namespace @ 07/31/25 00:50:38.676
  STEP: Waiting for the namespace to be removed. @ 07/31/25 00:50:38.698
  E0731 00:50:39.206262      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:40.207243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:41.207321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:42.207666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:43.208681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:44.208940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:45.209456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/31/25 00:50:45.704
  STEP: Verifying there is no service in the namespace @ 07/31/25 00:50:45.739
  I0731 00:50:45.743064 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2990" for this suite. @ 07/31/25 00:50:45.748
  STEP: Destroying namespace "nsdeletetest-258" for this suite. @ 07/31/25 00:50:45.758
  I0731 00:50:45.762308 24 framework.go:370] Namespace nsdeletetest-258 was already deleted
  STEP: Destroying namespace "nsdeletetest-2425" for this suite. @ 07/31/25 00:50:45.762
• [7.161 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/31/25 00:50:45.774
  I0731 00:50:45.774520 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename ingressclass @ 07/31/25 00:50:45.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:45.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:50:45.8
  STEP: getting /apis @ 07/31/25 00:50:45.802
  STEP: getting /apis/networking.k8s.io @ 07/31/25 00:50:45.809
  STEP: getting /apis/networking.k8s.iov1 @ 07/31/25 00:50:45.81
  STEP: creating @ 07/31/25 00:50:45.811
  STEP: getting @ 07/31/25 00:50:45.834
  STEP: listing @ 07/31/25 00:50:45.842
  STEP: watching @ 07/31/25 00:50:45.846
  I0731 00:50:45.846637 24 ingressclass.go:348] starting watch
  STEP: patching @ 07/31/25 00:50:45.848
  STEP: updating @ 07/31/25 00:50:45.858
  I0731 00:50:45.866137 24 ingressclass.go:364] waiting for watch events with expected annotations
  I0731 00:50:45.866280 24 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 07/31/25 00:50:45.866
  STEP: deleting a collection @ 07/31/25 00:50:45.879
  I0731 00:50:45.895858 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-1655" for this suite. @ 07/31/25 00:50:45.908
• [0.148 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 07/31/25 00:50:45.923
  I0731 00:50:45.923588 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename cronjob @ 07/31/25 00:50:45.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:45.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:50:45.961
  STEP: Creating a cronjob @ 07/31/25 00:50:45.965
  STEP: creating @ 07/31/25 00:50:45.965
  STEP: getting @ 07/31/25 00:50:45.975
  STEP: listing @ 07/31/25 00:50:45.979
  STEP: watching @ 07/31/25 00:50:45.984
  I0731 00:50:45.984592 24 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 07/31/25 00:50:45.985
  STEP: cluster-wide watching @ 07/31/25 00:50:45.989
  I0731 00:50:45.989692 24 cronjob.go:407] starting watch
  STEP: patching @ 07/31/25 00:50:45.991
  STEP: updating @ 07/31/25 00:50:46.035
  I0731 00:50:46.048783 24 cronjob.go:431] waiting for watch events with expected annotations
  I0731 00:50:46.049244 24 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 07/31/25 00:50:46.05
  STEP: updating /status @ 07/31/25 00:50:46.06
  STEP: get /status @ 07/31/25 00:50:46.068
  STEP: deleting @ 07/31/25 00:50:46.072
  STEP: deleting a collection @ 07/31/25 00:50:46.099
  I0731 00:50:46.119343 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5119" for this suite. @ 07/31/25 00:50:46.124
• [0.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 07/31/25 00:50:46.139
  I0731 00:50:46.139784 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/31/25 00:50:46.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:46.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:50:46.165
  I0731 00:50:46.168517 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 00:50:46.209939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:47.210809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:48.211083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:49.211945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:50.212490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:51.212808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:52.213948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:53.214246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/31/25 00:50:53.473
  I0731 00:50:53.474193 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-9479 --namespace=crd-publish-openapi-9479 create -f -'
  I0731 00:50:53.576640 24 builder.go:146] stderr: ""
  I0731 00:50:53.576699 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7017-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0731 00:50:53.576746 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-9479 --namespace=crd-publish-openapi-9479 delete e2e-test-crd-publish-openapi-7017-crds test-cr'
  I0731 00:50:53.656152 24 builder.go:146] stderr: ""
  I0731 00:50:53.656214 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7017-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0731 00:50:53.656357 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-9479 --namespace=crd-publish-openapi-9479 apply -f -'
  I0731 00:50:53.729745 24 builder.go:146] stderr: ""
  I0731 00:50:53.729932 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7017-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0731 00:50:53.730002 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-9479 --namespace=crd-publish-openapi-9479 delete e2e-test-crd-publish-openapi-7017-crds test-cr'
  I0731 00:50:53.811707 24 builder.go:146] stderr: ""
  I0731 00:50:53.811763 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7017-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/31/25 00:50:53.811
  I0731 00:50:53.812046 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-9479 explain e2e-test-crd-publish-openapi-7017-crds'
  I0731 00:50:53.866660 24 builder.go:146] stderr: ""
  I0731 00:50:53.866754 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7017-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0731 00:50:54.214638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:55.214756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:50:56.085635 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9479" for this suite. @ 07/31/25 00:50:56.093
• [9.966 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 07/31/25 00:50:56.104
  I0731 00:50:56.104996 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 00:50:56.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:50:56.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:50:56.129
  STEP: Creating configMap with name projected-configmap-test-volume-map-8a79c231-09d4-48ef-909c-b903c8d23db0 @ 07/31/25 00:50:56.132
  STEP: Creating a pod to test consume configMaps @ 07/31/25 00:50:56.139
  E0731 00:50:56.215240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:57.216253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:58.217312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:50:59.217659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 00:51:00.171
  I0731 00:51:00.174943 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-projected-configmaps-e8b93cc3-a6bf-4d17-92d5-219035c74dc6 container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 00:51:00.183
  I0731 00:51:00.211448 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3081" for this suite. @ 07/31/25 00:51:00.215
  E0731 00:51:00.218182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/31/25 00:51:00.226
  I0731 00:51:00.226216 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename replicaset @ 07/31/25 00:51:00.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:51:00.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:51:00.246
  STEP: Create a ReplicaSet @ 07/31/25 00:51:00.249
  STEP: Verify that the required pods have come up @ 07/31/25 00:51:00.257
  I0731 00:51:00.263163 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  E0731 00:51:01.219315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:02.219533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:03.219842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:04.220165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:05.220234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:05.267528 24 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/31/25 00:51:05.267
  I0731 00:51:05.270793 24 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/31/25 00:51:05.27
  STEP: DeleteCollection of the ReplicaSets @ 07/31/25 00:51:05.278
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/31/25 00:51:05.287
  I0731 00:51:05.291106 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8615" for this suite. @ 07/31/25 00:51:05.295
• [5.086 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/31/25 00:51:05.312
  I0731 00:51:05.312291 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pods @ 07/31/25 00:51:05.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:51:05.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:51:05.345
  I0731 00:51:05.353998 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: creating the pod @ 07/31/25 00:51:05.355
  STEP: submitting the pod to kubernetes @ 07/31/25 00:51:05.357
  E0731 00:51:06.221205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:07.220839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the container to be running @ 07/31/25 00:51:07.382
  I0731 00:51:07.401456 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3607" for this suite. @ 07/31/25 00:51:07.405
• [2.144 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 07/31/25 00:51:07.456
  I0731 00:51:07.456830 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-probe @ 07/31/25 00:51:07.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:51:07.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:51:07.501
  STEP: Creating pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479 @ 07/31/25 00:51:07.503
  E0731 00:51:08.221012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:09.221351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/31/25 00:51:09.526
  I0731 00:51:09.529826 24 container_probe.go:1748] Initial restart count of pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad is 0
  I0731 00:51:09.533938 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:10.221378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:11.222254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:11.538897 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:12.222540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:13.222820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:13.545925 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:14.223821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:15.224841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:15.551283 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:16.224853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:17.225156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:17.557487 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:18.225648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:19.225978      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:19.563762 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:20.226377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:21.226715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:21.568470 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:22.227106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:23.227956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:23.574578 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:24.228294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:25.228480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:25.579557 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:26.228575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:27.228769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:27.585713 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:28.228905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:29.229244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:29.591886 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:30.229538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:31.229673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:31.596650 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:32.230364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:33.230485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:33.602020 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:34.230643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:35.230890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:35.607479 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:36.231058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:37.231173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:37.613707 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:38.231465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:39.231592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:39.618860 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:40.232553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:41.232713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:41.623824 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:42.233506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:43.233803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:43.628183 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:44.233901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:45.234069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:45.633028 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:46.234352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:47.234608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:47.640116 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:48.234722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:49.234851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:49.644966 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:50.235722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:51.235859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:51.649619 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:52.236239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:53.236359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:53.655343 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:54.236485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:55.236708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:55.660550 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:56.236794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:57.237065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:57.666751 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:51:58.237184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:51:59.237453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:51:59.672045 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:00.237584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:01.238293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:01.677339 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:02.238842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:03.239441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:03.681873 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:04.239490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:05.239676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:05.686077 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:06.239707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:07.239815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:07.690967 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:08.240620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:09.240751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:09.697091 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:10.241806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:11.242077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:11.701968 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:12.242270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:13.242558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:13.745598 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:14.243144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:15.243209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:15.751044 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:16.243612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:17.243863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:17.756986 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:18.244568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:19.244844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:19.761793 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:20.245443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:21.245609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:21.766676 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:22.246703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:23.246920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:23.772325 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:24.246902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:25.247076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:25.777435 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:26.248044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:27.248346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:27.783120 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:28.248541      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:29.248856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:29.787691 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:30.249044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:31.249172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:31.791708 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:32.249298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:33.249506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:33.797262 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:34.249665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:35.249869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:35.803593 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:36.250084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:37.250240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:37.808446 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:38.251088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:39.251416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:39.814529 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:40.252108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:41.252412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:41.819468 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:42.252958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:43.253306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:43.825128 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:44.253757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:45.254073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:45.830826 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:46.254242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:47.254647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:47.835966 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:48.255479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:49.255773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:49.880952 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:50.256238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:51.256584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:51.886000 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:52.257501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:53.257631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:53.891334 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:54.257731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:55.258552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:55.899496 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:56.259136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:57.259215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:57.908698 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:52:58.260010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:52:59.260349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:52:59.918803 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:00.261214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:01.261471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:01.928104 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:02.261539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:03.261836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:03.932894 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:04.262333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:05.262585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:05.937904 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:06.263010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:07.263931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:07.946136 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:08.264651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:09.264987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:10.170950 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:10.265968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:11.266412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:12.177031 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:12.267173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:13.268130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:14.182868 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:14.269177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:15.269277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:16.189961 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:16.270217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:17.270506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:18.195478 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:18.270565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:19.270924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:20.200249 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:20.271670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:21.271982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:22.205141 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:22.272428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:23.272783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:24.209932 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:24.273129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:25.273366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:26.214947 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:26.274262      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:27.274549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:28.220318 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:28.275605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:29.275850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:30.225652 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:30.276864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:31.277177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:32.230776 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:32.278100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:33.278458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:34.236266 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:34.279375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:35.279981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:36.240669 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:36.280885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:37.281203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:38.247111 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:38.282213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:39.282429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:40.252122 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:40.283370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:41.284003      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:42.257458 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:42.284709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:43.285015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:44.262907 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:44.286076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:45.286319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:46.268134 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:46.287231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:47.288027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:48.272872 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:48.289059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:49.289381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:50.278119 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:50.290181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:51.290971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:52.291250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:52.395077 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:53.291913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:54.292275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:54.400393 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:55.292496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:56.292824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:56.406040 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:57.293674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:53:58.294056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:53:58.412272 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:53:59.294454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:00.294492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:00.416849 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:01.294855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:02.295222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:02.423004 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:03.295952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:04.296291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:04.429263 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:05.296361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:06.296731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:06.434150 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:07.297026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:08.297341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:08.441050 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:09.298047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:10.298224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:10.446432 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:11.298702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:12.299075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:12.459264 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:13.299117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:14.299448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:14.464097 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:15.300254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:16.300553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:16.469486 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:17.301377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:18.301674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:18.474852 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:19.301738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:20.302110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:20.479732 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:21.302507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:22.302727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:22.484343 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:23.303139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:24.303476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:24.489928 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:25.303542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:26.303881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:26.496108 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:27.304005      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:28.304509      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:28.503851 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:29.304759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:30.304801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:30.508408 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:31.305235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:32.305314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:32.513903 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:33.305434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:34.305864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:34.519987 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:35.305820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:36.307061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:36.525659 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:37.307047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:38.307199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:38.531310 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:39.308277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:40.308488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:40.536536 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:41.308729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:42.309110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:42.543167 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:43.309202      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:44.309538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:44.548681 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:45.309681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:46.310001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:46.553423 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:47.311064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:48.311232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:48.560014 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:49.311838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:50.312043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:50.770387 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:51.313071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:52.313394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:52.775198 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:53.313604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:54.314013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:54.780742 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:55.314144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:56.315391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:56.785943 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:57.314928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:54:58.315116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:54:58.791156 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:54:59.315357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:00.316256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:55:00.795279 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:55:01.316352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:02.316702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:55:02.801509 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:55:03.317149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:04.317504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:55:04.807023 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:55:05.317512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:06.317847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:55:06.812027 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:55:07.318719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:08.318905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:55:08.817888 24 container_probe.go:1758] Get pod test-webserver-e1e0c1ed-1d32-484b-9d4a-39b04f9919ad in namespace container-probe-6479
  E0731 00:55:09.319709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:10.319867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/31/25 00:55:10.818
  I0731 00:55:11.175225 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0731 00:55:11.320294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-probe-6479" for this suite. @ 07/31/25 00:55:11.332
• [243.891 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/31/25 00:55:11.349
  I0731 00:55:11.349797 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename replicaset @ 07/31/25 00:55:11.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:55:11.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:55:11.514
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/31/25 00:55:11.517
  I0731 00:55:11.945448 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/31/25 00:55:11.945
  E0731 00:55:12.322127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:13.322427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 07/31/25 00:55:13.956
  STEP: updating a scale subresource @ 07/31/25 00:55:13.96
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/31/25 00:55:13.97
  STEP: Patch a scale subresource @ 07/31/25 00:55:13.973
  I0731 00:55:14.000739 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2225" for this suite. @ 07/31/25 00:55:14.006
• [2.670 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 07/31/25 00:55:14.021
  I0731 00:55:14.021332 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 00:55:14.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:55:14.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:55:14.052
  STEP: Creating a pod to test downward api env vars @ 07/31/25 00:55:14.057
  E0731 00:55:14.323553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:15.323852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:16.324900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:17.325533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 00:55:18.09
  I0731 00:55:18.094493 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downward-api-c4117003-1155-48d9-a817-dee3085e28ba container dapi-container: <nil>
  STEP: delete the pod @ 07/31/25 00:55:18.112
  I0731 00:55:18.138712 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8324" for this suite. @ 07/31/25 00:55:18.144
• [4.133 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 07/31/25 00:55:18.153
  I0731 00:55:18.153256 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 00:55:18.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:55:18.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:55:18.18
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 07/31/25 00:55:18.183
  STEP: Awaiting for the job to fail as all indexes are failed @ 07/31/25 00:55:18.19
  E0731 00:55:18.325531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:19.325817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:20.326062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:21.326723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:22.326976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:23.327390      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 07/31/25 00:55:24.213
  I0731 00:55:24.217087 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9647" for this suite. @ 07/31/25 00:55:24.225
• [6.083 seconds]
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 07/31/25 00:55:24.236
  I0731 00:55:24.236415 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 00:55:24.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:55:24.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:55:24.32
  STEP: Creating the pod @ 07/31/25 00:55:24.324
  E0731 00:55:24.327657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:25.328337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:26.328745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:55:26.872057 24 pod_client.go:173] Successfully updated pod "annotationupdate06817548-735a-49a8-a6c4-5188355361fb"
  E0731 00:55:27.329451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:28.329756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:29.330155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:30.330462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:55:30.897552 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6035" for this suite. @ 07/31/25 00:55:30.904
• [6.691 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/31/25 00:55:30.927
  I0731 00:55:30.927390 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/31/25 00:55:30.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:55:31.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:55:31.092
  STEP: getting /apis @ 07/31/25 00:55:31.096
  STEP: getting /apis/storage.k8s.io @ 07/31/25 00:55:31.102
  STEP: getting /apis/storage.k8s.io/v1 @ 07/31/25 00:55:31.103
  STEP: creating @ 07/31/25 00:55:31.104
  STEP: watching @ 07/31/25 00:55:31.147
  I0731 00:55:31.147817 24 csistoragecapacity.go:143] starting watch
  STEP: getting @ 07/31/25 00:55:31.284
  STEP: listing in namespace @ 07/31/25 00:55:31.318
  STEP: listing across namespaces @ 07/31/25 00:55:31.323
  STEP: patching @ 07/31/25 00:55:31.326
  E0731 00:55:31.330963      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating @ 07/31/25 00:55:31.342
  I0731 00:55:31.360678 24 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0731 00:55:31.361033 24 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/31/25 00:55:31.361
  STEP: deleting a collection @ 07/31/25 00:55:31.613
  I0731 00:55:31.649825 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-6928" for this suite. @ 07/31/25 00:55:31.655
• [0.744 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 07/31/25 00:55:31.672
  I0731 00:55:31.672125 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 00:55:31.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:55:31.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:55:31.803
  STEP: Setting up server cert @ 07/31/25 00:55:31.949
  E0731 00:55:32.331983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 00:55:32.382
  STEP: Deploying the webhook pod @ 07/31/25 00:55:32.392
  STEP: Wait for the deployment to be ready @ 07/31/25 00:55:32.409
  I0731 00:55:32.422536 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 00:55:33.333187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:34.333636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 00:55:34.442
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 00:55:34.474
  E0731 00:55:35.334961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:55:35.475056 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/31/25 00:55:35.583
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/31/25 00:55:35.617
  STEP: Deleting the collection of validation webhooks @ 07/31/25 00:55:35.643
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/31/25 00:55:35.713
  I0731 00:55:35.801084 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5658" for this suite. @ 07/31/25 00:55:35.807
  STEP: Destroying namespace "webhook-markers-9180" for this suite. @ 07/31/25 00:55:35.818
• [4.168 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/31/25 00:55:35.84
  I0731 00:55:35.840294 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename subpath @ 07/31/25 00:55:35.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:55:35.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:55:35.872
  STEP: Setting up data @ 07/31/25 00:55:35.876
  STEP: Creating pod pod-subpath-test-downwardapi-75c2 @ 07/31/25 00:55:35.893
  STEP: Creating a pod to test atomic-volume-subpath @ 07/31/25 00:55:35.893
  E0731 00:55:36.338891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:37.340010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:38.341102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:39.341261      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:40.342302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:41.343019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:42.342944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:43.343096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:44.343937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:45.344595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:46.344950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:47.345024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:48.345817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:49.346197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:50.347271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:51.347659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:52.348433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:53.348839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:54.349085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:55.349219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:56.350043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:57.350573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:58.351141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:55:59.351507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 00:55:59.988
  I0731 00:55:59.992385 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-subpath-test-downwardapi-75c2 container test-container-subpath-downwardapi-75c2: <nil>
  STEP: delete the pod @ 07/31/25 00:55:59.999
  STEP: Deleting pod pod-subpath-test-downwardapi-75c2 @ 07/31/25 00:56:00.026
  I0731 00:56:00.026226 24 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-75c2" in namespace "subpath-5259"
  I0731 00:56:00.029714 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5259" for this suite. @ 07/31/25 00:56:00.034
• [24.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 07/31/25 00:56:00.047
  I0731 00:56:00.047641 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 00:56:00.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:56:00.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:56:00.079
  I0731 00:56:00.083318 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-3291 create -f -'
  I0731 00:56:00.213308 24 builder.go:146] stderr: ""
  I0731 00:56:00.213361 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0731 00:56:00.213407 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-3291 create -f -'
  I0731 00:56:00.344598 24 builder.go:146] stderr: ""
  I0731 00:56:00.344665 24 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/31/25 00:56:00.344
  E0731 00:56:00.351837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:01.354551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:56:01.354774 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0731 00:56:01.354835 24 framework.go:733] Found 1 / 1
  I0731 00:56:01.354860 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0731 00:56:01.454483 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0731 00:56:01.454539 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0731 00:56:01.454607 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-3291 describe pod agnhost-primary-728kg'
  I0731 00:56:01.519891 24 builder.go:146] stderr: ""
  I0731 00:56:01.519991 24 builder.go:147] stdout: "Name:             agnhost-primary-728kg\nNamespace:        kubectl-3291\nPriority:         0\nService Account:  default\nNode:             viola-gs-worker-1/172.20.30.203\nStart Time:       Thu, 31 Jul 2025 00:56:00 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.65.91\nIPs:\n  IP:           10.233.65.91\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://eda7a58837a49918e5dcc5bf23006149f5f29f3666343e61953371e44c953f0d\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 31 Jul 2025 00:56:01 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-6sfg7 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-6sfg7:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-3291/agnhost-primary-728kg to viola-gs-worker-1\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I0731 00:56:01.520078 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-3291 describe rc agnhost-primary'
  I0731 00:56:01.587460 24 builder.go:146] stderr: ""
  I0731 00:56:01.587594 24 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3291\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-728kg\n"
  I0731 00:56:01.587723 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-3291 describe service agnhost-primary'
  I0731 00:56:01.657384 24 builder.go:146] stderr: ""
  I0731 00:56:01.657453 24 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-3291\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.233.4.193\nIPs:                      10.233.4.193\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.233.65.91:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0731 00:56:01.664756 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-3291 describe node viola-gs-master-1'
  I0731 00:56:01.773761 24 builder.go:146] stderr: ""
  I0731 00:56:01.773880 24 builder.go:147] stdout: "Name:               viola-gs-master-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=viola-gs-master-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        csi.volume.kubernetes.io/nodeid: {\"nfs.csi.k8s.io\":\"viola-gs-master-1\"}\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 29 Jul 2025 11:06:19 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  viola-gs-master-1\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 31 Jul 2025 00:55:54 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 29 Jul 2025 11:08:18 +0000   Tue, 29 Jul 2025 11:08:18 +0000   CiliumIsUp                   Cilium is running on this node\n  MemoryPressure       False   Thu, 31 Jul 2025 00:55:57 +0000   Tue, 29 Jul 2025 11:06:18 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 31 Jul 2025 00:55:57 +0000   Tue, 29 Jul 2025 11:06:18 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 31 Jul 2025 00:55:57 +0000   Tue, 29 Jul 2025 11:06:18 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 31 Jul 2025 00:55:57 +0000   Tue, 29 Jul 2025 11:08:10 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.20.30.96\n  Hostname:    viola-gs-master-1\nCapacity:\n  cpu:                4\n  ephemeral-storage:  101430960Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8127024Ki\n  pods:               110\nAllocatable:\n  cpu:                3400m\n  ephemeral-storage:  92430196582\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7238192Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 205338bf1fa046df830afe6860fd8fbf\n  System UUID:                205338bf-1fa0-46df-830a-fe6860fd8fbf\n  Boot ID:                    acd29f13-9223-4501-9fa4-f666451c8ea2\n  Kernel Version:             5.15.0-79-generic\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.1.3\n  Kubelet Version:            v1.33.3\n  Kube-Proxy Version:         \nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 cilium-envoy-6qzk7                                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         37h\n  kube-system                 cilium-mxc5p                                               100m (2%)     0 (0%)      10Mi (0%)        0 (0%)         15h\n  kube-system                 csi-nfs-node-gr7kf                                         30m (0%)      0 (0%)      60Mi (0%)        500Mi (7%)     37h\n  kube-system                 kube-apiserver-viola-gs-master-1                           250m (7%)     0 (0%)      0 (0%)           0 (0%)         37h\n  kube-system                 kube-controller-manager-viola-gs-master-1                  200m (5%)     0 (0%)      0 (0%)           0 (0%)         37h\n  kube-system                 kube-proxy-sjsmt                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         18h\n  kube-system                 kube-scheduler-viola-gs-master-1                           100m (2%)     0 (0%)      0 (0%)           0 (0%)         37h\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-6dz6s    0 (0%)        0 (0%)      0 (0%)           0 (0%)         28m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                680m (20%)  0 (0%)\n  memory             70Mi (0%)   500Mi (7%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0731 00:56:01.773950 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-3291 describe namespace kubectl-3291'
  I0731 00:56:01.863618 24 builder.go:146] stderr: ""
  I0731 00:56:01.863725 24 builder.go:147] stdout: "Name:         kubectl-3291\nLabels:       e2e-framework=kubectl\n              e2e-run=4b066364-17ae-41c5-a60a-5a4b242efaf1\n              kubernetes.io/metadata.name=kubectl-3291\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0731 00:56:01.863890 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3291" for this suite. @ 07/31/25 00:56:01.869
• [1.832 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 07/31/25 00:56:01.879
  I0731 00:56:01.879343 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename disruption @ 07/31/25 00:56:01.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:56:01.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:56:01.905
  STEP: Waiting for the pdb to be processed @ 07/31/25 00:56:01.915
  E0731 00:56:02.354830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:03.354910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/31/25 00:56:03.952
  I0731 00:56:03.964505 24 disruption.go:691] running pods: 0 < 3
  E0731 00:56:04.355295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:05.356249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:56:05.962713 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8176" for this suite. @ 07/31/25 00:56:05.968
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 07/31/25 00:56:05.979
  I0731 00:56:05.979337 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/31/25 00:56:05.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:56:06.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:56:06.147
  I0731 00:56:06.150465 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0731 00:56:06.356555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:07.356885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:08.357101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:09.357945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:10.358595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:11.358919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:12.359996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:13.361081      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:14.361808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:15.361943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:16.362215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:17.362440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:18.363515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:19.363904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:20.364481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:21.364860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:22.365039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:23.365437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:24.365818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:25.365982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:26.366493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:27.366912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:28.367823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:29.368262      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:30.368636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:31.369016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:32.369212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:33.369753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:34.370275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:35.370384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:36.371171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:37.371274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:38.371853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:39.372129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:40.372306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:41.372833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:42.372894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:43.373326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:44.373575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:45.373847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:46.374623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:47.375045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:48.375348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:49.375385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:50.376406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:51.376569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:52.377364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:53.377515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:54.378021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:55.378236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:56.378416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:57.378901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:58.379456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:56:59.379547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:00.380226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:01.380394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:02.381150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:03.381553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:04.381794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:05.382051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:57:06.150948 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0731 00:57:06.156124 24 taints.go:144] Starting informer...
  STEP: Starting pods... @ 07/31/25 00:57:06.156
  I0731 00:57:06.377030 24 taints.go:463] Pod1 is running on viola-gs-worker-1. Tainting Node
  E0731 00:57:06.382019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:07.382640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:08.383365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:57:08.605773 24 taints.go:471] Pod2 is running on viola-gs-worker-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/31/25 00:57:08.605
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/31/25 00:57:08.625
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/31/25 00:57:08.631
  E0731 00:57:09.383755      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:10.383953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:11.384991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:12.385513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:13.386391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:14.387208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:57:14.507305 24 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0731 00:57:15.388064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:16.388248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:17.388395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:18.388498      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:19.388631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:20.388713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:21.388906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:22.389050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:23.389192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:24.389317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:25.389475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:26.389968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:27.390100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:28.390279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:29.390480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:30.390790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:31.390884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:32.391194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:33.391369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:34.392193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:57:34.569715 24 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/31/25 00:57:34.589
  I0731 00:57:34.597308 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-6778" for this suite. @ 07/31/25 00:57:34.601
• [88.631 seconds]
------------------------------
SS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/31/25 00:57:34.61
  I0731 00:57:34.610638 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename certificates @ 07/31/25 00:57:34.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:57:34.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:57:34.636
  STEP: getting /apis @ 07/31/25 00:57:35.041
  STEP: getting /apis/certificates.k8s.io @ 07/31/25 00:57:35.047
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/31/25 00:57:35.049
  STEP: creating @ 07/31/25 00:57:35.051
  STEP: getting @ 07/31/25 00:57:35.078
  STEP: listing @ 07/31/25 00:57:35.089
  STEP: watching @ 07/31/25 00:57:35.098
  I0731 00:57:35.098672 24 certificates.go:316] starting watch
  STEP: patching @ 07/31/25 00:57:35.1
  STEP: updating @ 07/31/25 00:57:35.115
  I0731 00:57:35.125723 24 certificates.go:332] waiting for watch events with expected annotations
  I0731 00:57:35.125798 24 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 07/31/25 00:57:35.125
  STEP: patching /approval @ 07/31/25 00:57:35.13
  STEP: updating /approval @ 07/31/25 00:57:35.141
  STEP: getting /status @ 07/31/25 00:57:35.168
  STEP: patching /status @ 07/31/25 00:57:35.177
  STEP: updating /status @ 07/31/25 00:57:35.225
  STEP: deleting @ 07/31/25 00:57:35.237
  STEP: deleting a collection @ 07/31/25 00:57:35.253
  I0731 00:57:35.297700 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2983" for this suite. @ 07/31/25 00:57:35.305
• [0.707 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/31/25 00:57:35.317
  I0731 00:57:35.318019 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename subpath @ 07/31/25 00:57:35.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:57:35.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:57:35.345
  STEP: Setting up data @ 07/31/25 00:57:35.349
  STEP: Creating pod pod-subpath-test-projected-kcjp @ 07/31/25 00:57:35.366
  STEP: Creating a pod to test atomic-volume-subpath @ 07/31/25 00:57:35.366
  E0731 00:57:35.392111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:36.392345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:37.392533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:38.392762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:39.393157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:40.393969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:41.394211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:42.394851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:43.395040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:44.395322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:45.396069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:46.396220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:47.396855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:48.397159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:49.397397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:50.398395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:51.398656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:52.398920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:53.399403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:54.399680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:55.399991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:56.400320      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:57.400614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:58.400951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:57:59.401229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 00:57:59.46
  I0731 00:57:59.463938 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-subpath-test-projected-kcjp container test-container-subpath-projected-kcjp: <nil>
  STEP: delete the pod @ 07/31/25 00:57:59.476
  STEP: Deleting pod pod-subpath-test-projected-kcjp @ 07/31/25 00:57:59.52
  I0731 00:57:59.521018 24 delete.go:62] Deleting pod "pod-subpath-test-projected-kcjp" in namespace "subpath-9123"
  I0731 00:57:59.523931 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9123" for this suite. @ 07/31/25 00:57:59.528
• [24.219 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 07/31/25 00:57:59.537
  I0731 00:57:59.537063 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/31/25 00:57:59.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:57:59.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:57:59.562
  STEP: create the container to handle the HTTPGet hook request. @ 07/31/25 00:57:59.733
  E0731 00:58:00.401709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:01.401985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:02.402723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:03.403472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/31/25 00:58:03.833
  E0731 00:58:04.403908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:05.404128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/31/25 00:58:05.858
  E0731 00:58:06.404484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:07.404810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/31/25 00:58:07.874
  I0731 00:58:07.890552 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8002" for this suite. @ 07/31/25 00:58:07.896
• [8.371 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 07/31/25 00:58:07.908
  I0731 00:58:07.908606 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 00:58:07.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:58:07.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:58:07.93
  STEP: Setting up server cert @ 07/31/25 00:58:07.975
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 00:58:08.184
  STEP: Deploying the webhook pod @ 07/31/25 00:58:08.194
  STEP: Wait for the deployment to be ready @ 07/31/25 00:58:08.212
  I0731 00:58:08.226782 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 00:58:08.405763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:09.405824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 00:58:10.239
  E0731 00:58:10.406464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 00:58:10.493
  E0731 00:58:11.406695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:11.494006 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0731 00:58:11.499487 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 00:58:12.407206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:13.408014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:14.408982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:15.409508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:16.410188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2718-crds.webhook.example.com via the AdmissionRegistration API @ 07/31/25 00:58:17.013
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/31/25 00:58:17.034
  E0731 00:58:17.410996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:18.411601      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:19.412354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:19.693996 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6705" for this suite. @ 07/31/25 00:58:19.7
  STEP: Destroying namespace "webhook-markers-1669" for this suite. @ 07/31/25 00:58:19.712
• [11.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 07/31/25 00:58:19.724
  I0731 00:58:19.724206 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 00:58:19.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:58:19.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:58:19.749
  STEP: creating service multiprotocol-test in namespace services-7952 @ 07/31/25 00:58:19.751
  STEP: creating pod pod1 in namespace services-7952 @ 07/31/25 00:58:19.774
  STEP: Creating pod pod1 in namespace services-7952 @ 07/31/25 00:58:19.775
  E0731 00:58:20.412655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:21.412680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-7952 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/31/25 00:58:21.807
  I0731 00:58:21.814730      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 00:58:21.824655 24 service.go:4729] successfully validated that service multiprotocol-test in namespace services-7952 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/31/25 00:58:21.824
  I0731 00:58:21.824763 24 resource.go:361] Creating new exec pod
  E0731 00:58:22.413623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:23.413929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:23.847196 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.11 80'
  I0731 00:58:23.982577 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.11.11 80\nConnection to 10.233.11.11 80 port [tcp/http] succeeded!\n"
  I0731 00:58:23.982632 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 00:58:23.982715 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.11.11 80'
  E0731 00:58:24.413920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:25.414274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:26.096479 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.11.11 80\n"
  I0731 00:58:26.096532 24 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/31/25 00:58:26.096
  I0731 00:58:26.113215 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.11 80'
  I0731 00:58:26.231968 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.11.11 80\nConnection to 10.233.11.11 80 port [tcp/http] succeeded!\n"
  I0731 00:58:26.232028 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 00:58:26.232181 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.11.11 80'
  I0731 00:58:26.354246 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.11.11 80\n"
  I0731 00:58:26.354320 24 builder.go:147] stdout: ""
  E0731 00:58:26.414643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:27.415719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:28.232587 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.11.11 80'
  I0731 00:58:28.362231 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.11.11 80\n"
  I0731 00:58:28.362301 24 builder.go:147] stdout: ""
  E0731 00:58:28.416532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:29.417107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:30.233212 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.11.11 80'
  I0731 00:58:30.359180 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.11.11 80\n"
  I0731 00:58:30.359239 24 builder.go:147] stdout: ""
  E0731 00:58:30.417418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:31.417573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:32.232446 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.11.11 80'
  I0731 00:58:32.340222 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.11.11 80\n"
  I0731 00:58:32.340293 24 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/31/25 00:58:32.34
  I0731 00:58:32.352744 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.11.11 80'
  E0731 00:58:32.418185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:33.418762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:34.419066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:34.477143 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.11.11 80\n"
  I0731 00:58:34.477259 24 builder.go:147] stdout: "pod1"
  I0731 00:58:34.477401 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.11 80'
  I0731 00:58:34.614076 24 builder.go:135] rc: 1
  I0731 00:58:34.614222 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.11 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.11.11 80
  nc: connect to 10.233.11.11 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0731 00:58:35.420032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:36.420930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:36.478100 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.11 80'
  I0731 00:58:36.599698 24 builder.go:135] rc: 1
  I0731 00:58:36.599797 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.11 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.11.11 80
  nc: connect to 10.233.11.11 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0731 00:58:37.421793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:38.422148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:38.478288 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.11 80'
  I0731 00:58:38.646526 24 builder.go:135] rc: 1
  I0731 00:58:38.646615 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7952 exec execpodv28wr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.11 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.11.11 80
  nc: connect to 10.233.11.11 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0731 00:58:39.422435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:40.422654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:40.478131 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7952" for this suite. @ 07/31/25 00:58:40.486
• [20.781 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/31/25 00:58:40.505
  I0731 00:58:40.505724 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 00:58:40.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:58:40.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:58:40.527
  STEP: Creating projection with secret that has name projected-secret-test-map-5cbd8a3d-e6e1-44fa-9c9e-b58ae00b6a9e @ 07/31/25 00:58:40.529
  STEP: Creating a pod to test consume secrets @ 07/31/25 00:58:40.536
  E0731 00:58:41.422859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:42.423148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:43.423348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:44.424419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 00:58:44.563
  I0731 00:58:44.566929 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-projected-secrets-f99d8613-829b-418f-970b-b48d3e212cf6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 00:58:44.573
  I0731 00:58:44.626506 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5347" for this suite. @ 07/31/25 00:58:44.631
• [4.136 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 07/31/25 00:58:44.641
  I0731 00:58:44.641600 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 00:58:44.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:58:44.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:58:44.661
  STEP: Setting up server cert @ 07/31/25 00:58:44.687
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 00:58:44.929
  STEP: Deploying the webhook pod @ 07/31/25 00:58:44.936
  STEP: Wait for the deployment to be ready @ 07/31/25 00:58:44.957
  I0731 00:58:44.967737 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 00:58:45.425062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:46.425580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 00:58:46.983
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 00:58:47.009
  E0731 00:58:47.425999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:48.009611 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0731 00:58:48.015479 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 00:58:48.426651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:49.427436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:50.427967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:51.428094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:52.428192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:53.428331      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7657-crds.webhook.example.com via the AdmissionRegistration API @ 07/31/25 00:58:53.528
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/31/25 00:58:53.611
  E0731 00:58:54.428483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:55.428647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:56.242382 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3919" for this suite. @ 07/31/25 00:58:56.248
  STEP: Destroying namespace "webhook-markers-9242" for this suite. @ 07/31/25 00:58:56.257
• [11.626 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 07/31/25 00:58:56.277
  I0731 00:58:56.277670 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename var-expansion @ 07/31/25 00:58:56.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:58:56.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:58:56.307
  E0731 00:58:56.429721      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:57.430474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:58:58.335061 24 delete.go:62] Deleting pod "var-expansion-456d9a61-5781-4515-8ae6-6bcfbb626e7e" in namespace "var-expansion-9514"
  I0731 00:58:58.346349 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-456d9a61-5781-4515-8ae6-6bcfbb626e7e" to be fully deleted
  E0731 00:58:58.431164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:58:59.431709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:59:00.355085 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9514" for this suite. @ 07/31/25 00:59:00.361
• [4.101 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 07/31/25 00:59:00.369
  I0731 00:59:00.369607 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename field-validation @ 07/31/25 00:59:00.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:59:00.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:59:00.391
  I0731 00:59:00.394853 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 00:59:00.432198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:01.432786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:02.433034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:03.433256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:04.433988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:05.435008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:06.435737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:07.435985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:59:07.940022      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0731 00:59:07.940057      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0731 00:59:07.940066      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0731 00:59:07.940075      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0731 00:59:07.940084      24 warnings.go:110] "Warning: unknown field \"gamma\""
  E0731 00:59:08.436912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:59:08.493682 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3451" for this suite. @ 07/31/25 00:59:08.498
• [8.137 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/31/25 00:59:08.506
  I0731 00:59:08.506638 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename chunking @ 07/31/25 00:59:08.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:59:08.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:59:08.529
  STEP: creating a large number of resources @ 07/31/25 00:59:08.531
  E0731 00:59:09.438063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:10.438484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:11.439000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:12.439344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:13.440414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:14.440902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:15.441010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:16.441899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:17.442760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:18.443760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:19.444449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:20.445380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:21.445879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:22.446359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:23.446543      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:24.447462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:25.447660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 07/31/25 00:59:26.218
  I0731 00:59:26.264074 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0731 00:59:26.313957 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0731 00:59:26.364969 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0731 00:59:26.414305 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  E0731 00:59:26.448265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:59:26.463137 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0731 00:59:26.514964 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0731 00:59:26.564988 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0731 00:59:26.613937 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0731 00:59:26.664628 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0731 00:59:26.713745 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0731 00:59:26.763655 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0731 00:59:26.813720 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0731 00:59:26.864325 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0731 00:59:26.912659 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0731 00:59:26.965362 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0731 00:59:27.013377 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0731 00:59:27.063180 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0731 00:59:27.114938 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0731 00:59:27.164696 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0731 00:59:27.213788 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0731 00:59:27.265458 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0731 00:59:27.312890 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0731 00:59:27.363175 24 chunking.go:98] Retrieved 17/17 results with rv 846898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2ODk4LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0731 00:59:27.413631 24 chunking.go:98] Retrieved 9/17 results with rv 846898 and continue 
  E0731 00:59:27.448831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:59:27.463337 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0731 00:59:27.512864 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0731 00:59:27.564432 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0731 00:59:27.614185 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0731 00:59:27.663348 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0731 00:59:27.713268 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0731 00:59:27.773801 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0731 00:59:27.812387 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0731 00:59:27.862371 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0731 00:59:27.914164 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0731 00:59:27.962833 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0731 00:59:28.013917 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0731 00:59:28.064242 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0731 00:59:28.113325 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0731 00:59:28.168748 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0731 00:59:28.213742 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0731 00:59:28.263157 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0731 00:59:28.314952 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0731 00:59:28.363361 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0731 00:59:28.412935 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  E0731 00:59:28.449189      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:59:28.463125 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0731 00:59:28.513657 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0731 00:59:28.564297 24 chunking.go:98] Retrieved 17/17 results with rv 846903 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTAzLCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0731 00:59:28.615086 24 chunking.go:98] Retrieved 9/17 results with rv 846903 and continue 
  I0731 00:59:28.664803 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0731 00:59:28.714471 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0731 00:59:28.763943 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0731 00:59:28.814201 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0731 00:59:28.863643 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0731 00:59:28.914373 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0731 00:59:28.963024 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0731 00:59:29.013288 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0731 00:59:29.064514 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0731 00:59:29.112235 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0731 00:59:29.164867 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0731 00:59:29.213949 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0731 00:59:29.262968 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0731 00:59:29.313101 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0731 00:59:29.366322 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0731 00:59:29.412817 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  E0731 00:59:29.450024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:59:29.463833 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0731 00:59:29.518084 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0731 00:59:29.564364 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0731 00:59:29.613751 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0731 00:59:29.664010 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0731 00:59:29.712988 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0731 00:59:29.764160 24 chunking.go:98] Retrieved 17/17 results with rv 846913 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ2OTEzLCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0731 00:59:29.814057 24 chunking.go:98] Retrieved 9/17 results with rv 846913 and continue 
  STEP: retrieving those results all at once @ 07/31/25 00:59:29.814
  I0731 00:59:29.875500 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7650" for this suite. @ 07/31/25 00:59:29.915
• [21.460 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 07/31/25 00:59:29.967
  I0731 00:59:29.967111 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename sched-pred @ 07/31/25 00:59:29.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:59:29.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:59:29.986
  I0731 00:59:29.989159 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0731 00:59:30.022615 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0731 00:59:30.026269 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-1 before test
  I0731 00:59:30.032835 24 predicates.go:958] cilium-envoy-bqgqv from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.032886 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 00:59:30.032894 24 predicates.go:958] cilium-operator-f46ccdf88-57gr7 from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.032902 24 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0731 00:59:30.032908 24 predicates.go:958] cilium-r2g4v from kube-system started at 2025-07-30 09:17:21 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.032912 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 00:59:30.032995 24 predicates.go:958] csi-nfs-node-2ngqc from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 00:59:30.033024 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 00:59:30.033028 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 00:59:30.033045 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 00:59:30.033053 24 predicates.go:958] kube-proxy-h8fkv from kube-system started at 2025-07-30 06:28:11 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.033057 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 00:59:30.033061 24 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-31 00:27:45 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.033065 24 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0731 00:59:30.033069 24 predicates.go:958] sonobuoy-e2e-job-bb61e2b056fa4f2e from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.033075 24 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0731 00:59:30.033080 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 00:59:30.033249 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-tnd7k from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.033253 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 00:59:30.033258 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 00:59:30.033262 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-2 before test
  I0731 00:59:30.042974 24 predicates.go:958] keycloak-77654bfb97-9l8hz from auth started at 2025-07-29 11:59:00 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.043214 24 predicates.go:960] 	Container keycloak ready: true, restart count 0
  I0731 00:59:30.043336 24 predicates.go:958] mariadb-keycloak-0 from auth started at 2025-07-29 11:56:27 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.043369 24 predicates.go:960] 	Container mariadb-keycloak ready: true, restart count 0
  I0731 00:59:30.043406 24 predicates.go:958] oauth2-redis-admin-2 from auth started at 2025-07-30 01:44:45 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.043431 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 00:59:30.043484 24 predicates.go:958] oauth2-redis-admin-3 from auth started at 2025-07-29 11:56:36 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.043692 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 00:59:30.043847 24 predicates.go:958] cloud-service-api-6fcb7858d4-5m8ds from cmp started at 2025-07-29 13:04:58 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.044073 24 predicates.go:960] 	Container cloud-service-api ready: true, restart count 0
  I0731 00:59:30.044210 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 00:59:30.044360 24 predicates.go:958] cloud-service-collector-68bdddc6d8-rbqtz from cmp started at 2025-07-29 13:04:58 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.044541 24 predicates.go:960] 	Container cloud-service-collector ready: true, restart count 0
  I0731 00:59:30.044621 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 00:59:30.044726 24 predicates.go:958] maestro-remote-app-7f5bc68986-fzkx6 from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.044783 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 00:59:30.044904 24 predicates.go:960] 	Container maestro-remote-app ready: true, restart count 0
  I0731 00:59:30.044989 24 predicates.go:958] notification-adapter-api-794bc8bbcd-j6jlj from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.045088 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 00:59:30.045127 24 predicates.go:960] 	Container noti-api ready: true, restart count 0
  I0731 00:59:30.045176 24 predicates.go:958] kafka-cluster-kafka-0 from dataplatform started at 2025-07-30 01:44:46 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.045208 24 predicates.go:960] 	Container kafka ready: true, restart count 0
  I0731 00:59:30.045242 24 predicates.go:958] kafka-cluster-zookeeper-1 from dataplatform started at 2025-07-30 01:44:45 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.045267 24 predicates.go:960] 	Container zookeeper ready: true, restart count 0
  I0731 00:59:30.045291 24 predicates.go:958] mariadb-sts-0 from dataplatform started at 2025-07-30 01:44:56 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.045315 24 predicates.go:960] 	Container mariadb ready: true, restart count 0
  I0731 00:59:30.045357 24 predicates.go:958] vault-0 from dataplatform started at 2025-07-29 11:56:28 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.045502 24 predicates.go:960] 	Container vault ready: true, restart count 0
  I0731 00:59:30.045561 24 predicates.go:958] ingress-nginx-controller-847999c88f-64rw2 from ingress-nginx started at 2025-07-29 11:54:19 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.045606 24 predicates.go:960] 	Container controller ready: true, restart count 0
  I0731 00:59:30.045698 24 predicates.go:958] istiod-5c89cf5f74-b54ls from istio-system started at 2025-07-29 11:56:33 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.045722 24 predicates.go:960] 	Container discovery ready: true, restart count 0
  I0731 00:59:30.045750 24 predicates.go:958] cilium-envoy-72jp8 from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.045802 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 00:59:30.045972 24 predicates.go:958] cilium-m7flm from kube-system started at 2025-07-30 09:17:11 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.046129 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 00:59:30.046356 24 predicates.go:958] cilium-operator-f46ccdf88-47vls from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.046397 24 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0731 00:59:30.046438 24 predicates.go:958] csi-nfs-controller-5845c574bf-6thgf from kube-system started at 2025-07-29 11:15:04 +0000 UTC (4 container statuses recorded)
  I0731 00:59:30.046506 24 predicates.go:960] 	Container csi-provisioner ready: true, restart count 0
  I0731 00:59:30.046539 24 predicates.go:960] 	Container csi-snapshotter ready: true, restart count 0
  I0731 00:59:30.046593 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 00:59:30.046776 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 00:59:30.046921 24 predicates.go:958] csi-nfs-node-vddcx from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 00:59:30.047011 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 00:59:30.047172 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 00:59:30.047208 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 00:59:30.047243 24 predicates.go:958] kube-proxy-hsl8d from kube-system started at 2025-07-30 06:28:05 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.047278 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 00:59:30.047458 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-2rw8x from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.047734 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 00:59:30.047785 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 00:59:30.047909 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-3 before test
  I0731 00:59:30.065594 24 predicates.go:958] oauth2-proxy-admin-7bcc4db499-v626k from auth started at 2025-07-31 00:45:03 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.065626 24 predicates.go:960] 	Container oauth2-proxy-admin ready: true, restart count 0
  I0731 00:59:30.065633 24 predicates.go:958] oauth2-redis-admin-1 from auth started at 2025-07-29 11:56:31 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.065638 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 00:59:30.065642 24 predicates.go:958] oauth2-redis-admin-4 from auth started at 2025-07-29 11:56:40 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.065675 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 00:59:30.065680 24 predicates.go:958] maestro-auth-gateway-7b9b4c47d5-pcg4m from cmp started at 2025-07-30 01:44:44 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.065684 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 00:59:30.065689 24 predicates.go:960] 	Container maestro-auth-gateway ready: true, restart count 0
  I0731 00:59:30.065695 24 predicates.go:958] maestro-event-pusher-8db95cc5-6nppj from cmp started at 2025-07-29 13:44:48 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.065699 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 00:59:30.065703 24 predicates.go:960] 	Container maestro-event-pusher ready: true, restart count 0
  I0731 00:59:30.065707 24 predicates.go:958] maestro-host-app-86656c9c7d-wcpv2 from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.065712 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 00:59:30.065716 24 predicates.go:960] 	Container maestro-host-app ready: true, restart count 0
  I0731 00:59:30.065728 24 predicates.go:958] kafka-cluster-entity-operator-c8b5f4df9-x5q5s from dataplatform started at 2025-07-30 01:44:44 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.065732 24 predicates.go:960] 	Container topic-operator ready: true, restart count 0
  I0731 00:59:30.065751 24 predicates.go:960] 	Container user-operator ready: true, restart count 0
  I0731 00:59:30.065783 24 predicates.go:958] kafka-cluster-kafka-1 from dataplatform started at 2025-07-29 13:00:24 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.065787 24 predicates.go:960] 	Container kafka ready: true, restart count 0
  I0731 00:59:30.065792 24 predicates.go:958] kafka-cluster-zookeeper-0 from dataplatform started at 2025-07-29 12:59:50 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.065796 24 predicates.go:960] 	Container zookeeper ready: true, restart count 0
  I0731 00:59:30.065801 24 predicates.go:958] mariadb-maxscale-65f585776b-vwjt4 from dataplatform started at 2025-07-30 01:44:44 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.065806 24 predicates.go:960] 	Container maxscale ready: true, restart count 0
  I0731 00:59:30.065811 24 predicates.go:958] strimzi-cluster-operator-584d5f5789-fdmrh from dataplatform started at 2025-07-29 12:59:42 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.065816 24 predicates.go:960] 	Container strimzi-cluster-operator ready: true, restart count 0
  I0731 00:59:30.065820 24 predicates.go:958] vault-2 from dataplatform started at 2025-07-30 01:44:50 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.065824 24 predicates.go:960] 	Container vault ready: true, restart count 0
  I0731 00:59:30.065827 24 predicates.go:958] cilium-envoy-cxcfx from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.065843 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 00:59:30.065863 24 predicates.go:958] cilium-kwph5 from kube-system started at 2025-07-30 09:17:00 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.065870 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 00:59:30.065877 24 predicates.go:958] coredns-74697c986-cxqqs from kube-system started at 2025-07-29 11:08:48 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.065881 24 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0731 00:59:30.065886 24 predicates.go:958] csi-nfs-node-p4ddz from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 00:59:30.065892 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 00:59:30.065897 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 00:59:30.065901 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 00:59:30.065905 24 predicates.go:958] kube-proxy-ztnk8 from kube-system started at 2025-07-30 06:28:12 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.065952 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 00:59:30.065964 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-bj545 from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.065970 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 00:59:30.065975 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 00:59:30.065985 24 predicates.go:958] viola-api-698955c4b8-n5j5l from viola started at 2025-07-29 13:28:51 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.065989 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 00:59:30.066013 24 predicates.go:960] 	Container viola-api ready: true, restart count 0
  I0731 00:59:30.066019 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-4 before test
  I0731 00:59:30.076622 24 predicates.go:958] keycloak-77654bfb97-gtpj2 from auth started at 2025-07-29 11:58:53 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.076772 24 predicates.go:960] 	Container keycloak ready: true, restart count 0
  I0731 00:59:30.076843 24 predicates.go:958] oauth2-proxy-admin-7bcc4db499-5jwbv from auth started at 2025-07-31 00:57:08 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.076893 24 predicates.go:960] 	Container oauth2-proxy-admin ready: true, restart count 0
  I0731 00:59:30.076955 24 predicates.go:958] oauth2-redis-admin-0 from auth started at 2025-07-29 11:56:28 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.077016 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 00:59:30.077079 24 predicates.go:958] oauth2-redis-admin-5 from auth started at 2025-07-29 11:56:42 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.077139 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 00:59:30.077204 24 predicates.go:958] maestro-common-api-6d9dffc99-k6r7h from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.077263 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 00:59:30.077352 24 predicates.go:960] 	Container maestro-common-api ready: true, restart count 0
  I0731 00:59:30.077448 24 predicates.go:958] maestro-iam-adapter-api-9c76bb77-kgxg9 from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.077524 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 00:59:30.077593 24 predicates.go:960] 	Container maestro-iam-adapter-api ready: true, restart count 0
  I0731 00:59:30.077668 24 predicates.go:958] kafka-cluster-kafka-2 from dataplatform started at 2025-07-29 13:00:24 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.077731 24 predicates.go:960] 	Container kafka ready: true, restart count 0
  I0731 00:59:30.077803 24 predicates.go:958] kafka-cluster-zookeeper-2 from dataplatform started at 2025-07-29 12:59:50 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.077872 24 predicates.go:960] 	Container zookeeper ready: true, restart count 0
  I0731 00:59:30.077954 24 predicates.go:958] mariadb-maxscale-65f585776b-8b454 from dataplatform started at 2025-07-29 11:56:26 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.078037 24 predicates.go:960] 	Container maxscale ready: true, restart count 0
  I0731 00:59:30.078110 24 predicates.go:958] mariadb-sts-1 from dataplatform started at 2025-07-29 11:56:32 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.078185 24 predicates.go:960] 	Container mariadb ready: true, restart count 0
  I0731 00:59:30.078260 24 predicates.go:958] redis-0 from dataplatform started at 2025-07-29 11:56:27 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.078328 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 00:59:30.078384 24 predicates.go:958] vault-1 from dataplatform started at 2025-07-29 11:56:29 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.078458 24 predicates.go:960] 	Container vault ready: true, restart count 0
  I0731 00:59:30.078537 24 predicates.go:958] ingress-nginx-admission-create-gzb57 from ingress-nginx started at 2025-07-29 11:54:19 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.078609 24 predicates.go:960] 	Container create ready: false, restart count 0
  I0731 00:59:30.078673 24 predicates.go:958] istio-gateway-6966544c9c-54w69 from istio-system started at 2025-07-30 01:44:44 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.078810 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 00:59:30.078886 24 predicates.go:958] cilium-envoy-85rht from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.078961 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 00:59:30.079041 24 predicates.go:958] cilium-hw2q8 from kube-system started at 2025-07-30 09:16:49 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.079114 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 00:59:30.079193 24 predicates.go:958] coredns-74697c986-vrt9w from kube-system started at 2025-07-29 11:08:55 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.079265 24 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0731 00:59:30.079341 24 predicates.go:958] csi-nfs-node-rp6pv from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 00:59:30.079409 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 00:59:30.079465 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 00:59:30.079541 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 00:59:30.079625 24 predicates.go:958] dns-autoscaler-56cb45595c-wgcr2 from kube-system started at 2025-07-29 11:08:50 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.079668 24 predicates.go:960] 	Container autoscaler ready: true, restart count 0
  I0731 00:59:30.079735 24 predicates.go:958] kube-proxy-dhsft from kube-system started at 2025-07-30 06:28:14 +0000 UTC (1 container statuses recorded)
  I0731 00:59:30.079773 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 00:59:30.079869 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-2bzrg from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.079954 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 00:59:30.079995 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 00:59:30.080045 24 predicates.go:958] viola-remote-app-59b954dd94-kkvc5 from viola started at 2025-07-30 01:44:44 +0000 UTC (2 container statuses recorded)
  I0731 00:59:30.080085 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 00:59:30.080136 24 predicates.go:960] 	Container viola-remote-app ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/31/25 00:59:30.08
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18573031c0957c4f], Reason = [FailedScheduling], Message = [0/7 nodes are available: 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/7 nodes are available: 7 Preemption is not helpful for scheduling.] @ 07/31/25 00:59:30.131
  E0731 00:59:30.450940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 00:59:31.124664 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7206" for this suite. @ 07/31/25 00:59:31.129
• [1.172 seconds]
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 07/31/25 00:59:31.139
  I0731 00:59:31.139302 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename servicecidr @ 07/31/25 00:59:31.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:59:31.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:59:31.163
  STEP: creating @ 07/31/25 00:59:31.165
  STEP: patching @ 07/31/25 00:59:31.176
  STEP: updating @ 07/31/25 00:59:31.185
  STEP: getting @ 07/31/25 00:59:31.194
  STEP: listing @ 07/31/25 00:59:31.196
  STEP: watching @ 07/31/25 00:59:31.199
  STEP: deleting @ 07/31/25 00:59:31.201
  STEP: deleting a collection @ 07/31/25 00:59:31.209
  I0731 00:59:31.223421 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-9131" for this suite. @ 07/31/25 00:59:31.23
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 07/31/25 00:59:31.241
  I0731 00:59:31.241199 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/31/25 00:59:31.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:59:31.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:59:31.262
  STEP: create the container to handle the HTTPGet hook request. @ 07/31/25 00:59:31.332
  E0731 00:59:31.451636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:32.451931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/31/25 00:59:33.37
  E0731 00:59:33.452546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:34.452742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/31/25 00:59:35.391
  E0731 00:59:35.453589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:36.453882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/31/25 00:59:37.416
  I0731 00:59:37.433217 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6705" for this suite. @ 07/31/25 00:59:37.438
• [6.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 07/31/25 00:59:37.45
  I0731 00:59:37.450478 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-probe @ 07/31/25 00:59:37.451
  E0731 00:59:37.456790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 00:59:37.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 00:59:37.474
  E0731 00:59:38.457516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:39.457924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:40.458059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:41.458357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:42.458650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:43.459019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:44.459648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:45.459978      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:46.460322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:47.460762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:48.461240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:49.461595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:50.462450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:51.462890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:52.463573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:53.463974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:54.464094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:55.464278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:56.464740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:57.464994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:58.465306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 00:59:59.466161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:00.466921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:01.467255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:01.675622 24 container_probe.go:91] Container started at 2025-07-31 00:59:38 +0000 UTC, pod became ready at 2025-07-31 00:59:59 +0000 UTC
  I0731 01:00:01.675839 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4947" for this suite. @ 07/31/25 01:00:01.681
• [24.241 seconds]
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 07/31/25 01:00:01.691
  I0731 01:00:01.691309 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename security-context @ 07/31/25 01:00:01.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:00:01.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:00:01.726
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/31/25 01:00:01.729
  E0731 01:00:02.468026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:03.468347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:04.468629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:05.468748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:00:05.757
  I0731 01:00:05.760648 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod security-context-b796d068-0807-4be0-a1cb-ce32280d8791 container test-container: <nil>
  STEP: delete the pod @ 07/31/25 01:00:05.767
  I0731 01:00:05.792835 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5466" for this suite. @ 07/31/25 01:00:05.799
• [4.118 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/31/25 01:00:05.81
  I0731 01:00:05.810087 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-runtime @ 07/31/25 01:00:05.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:00:05.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:00:05.832
  STEP: create the container @ 07/31/25 01:00:05.835
  I0731 01:00:05.845760      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/31/25 01:00:05.846
  E0731 01:00:06.468941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:07.469570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:08.469783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/31/25 01:00:08.864
  STEP: the container should be terminated @ 07/31/25 01:00:08.868
  STEP: the termination message should be set @ 07/31/25 01:00:08.868
  I0731 01:00:08.868362 24 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/31/25 01:00:08.868
  I0731 01:00:08.886677 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2127" for this suite. @ 07/31/25 01:00:08.897
• [3.095 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/31/25 01:00:08.905
  I0731 01:00:08.905275 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 01:00:08.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:00:08.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:00:08.924
  STEP: Creating projection with secret that has name projected-secret-test-e58654be-d4f0-4192-a797-fe10db3ffbc7 @ 07/31/25 01:00:08.926
  STEP: Creating a pod to test consume secrets @ 07/31/25 01:00:08.932
  E0731 01:00:09.470076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:10.470261      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:11.470725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:12.471491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:00:12.962
  I0731 01:00:12.965394 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-projected-secrets-8d8fb01a-9ce6-4906-ad27-4c309b1f9252 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 01:00:12.971
  I0731 01:00:12.995702 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2131" for this suite. @ 07/31/25 01:00:13
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 07/31/25 01:00:13.01
  I0731 01:00:13.010289 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename namespaces @ 07/31/25 01:00:13.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:00:13.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:00:13.04
  STEP: Creating a test namespace @ 07/31/25 01:00:13.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:00:13.06
  STEP: Creating a pod in the namespace @ 07/31/25 01:00:13.063
  STEP: Waiting for the pod to have running status @ 07/31/25 01:00:13.074
  E0731 01:00:13.472456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:14.472662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 07/31/25 01:00:15.084
  STEP: Waiting for the namespace to be removed. @ 07/31/25 01:00:15.092
  E0731 01:00:15.473463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:16.474198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:17.474913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:18.475020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:19.475200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:20.476055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:21.476214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:22.476743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:23.477759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:24.477909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:25.478059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/31/25 01:00:26.097
  STEP: Verifying there are no pods in the namespace @ 07/31/25 01:00:26.116
  I0731 01:00:26.119187 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-823" for this suite. @ 07/31/25 01:00:26.123
  STEP: Destroying namespace "nsdeletetest-709" for this suite. @ 07/31/25 01:00:26.132
  I0731 01:00:26.135337 24 framework.go:370] Namespace nsdeletetest-709 was already deleted
  STEP: Destroying namespace "nsdeletetest-5004" for this suite. @ 07/31/25 01:00:26.135
• [13.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 07/31/25 01:00:26.145
  I0731 01:00:26.146632 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename daemonsets @ 07/31/25 01:00:26.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:00:26.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:00:26.171
  STEP: Creating simple DaemonSet "daemon-set" @ 07/31/25 01:00:26.237
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/31/25 01:00:26.244
  I0731 01:00:26.329595 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:00:26.329654 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:00:26.329667 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:00:26.344869 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:00:26.344943 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 01:00:26.478431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:27.254486 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:00:27.254559 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:00:27.254572 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:00:27.259262 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:00:27.259304 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 01:00:27.479693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:28.251556 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:00:28.251614 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:00:28.251629 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:00:28.255644 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0731 01:00:28.255680 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/31/25 01:00:28.259
  STEP: DeleteCollection of the DaemonSets @ 07/31/25 01:00:28.263
  STEP: Verify that ReplicaSets have been deleted @ 07/31/25 01:00:28.273
  I0731 01:00:28.281335 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"848092"},"items":null}

  I0731 01:00:28.294750 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"848096"},"items":[{"metadata":{"name":"daemon-set-5hnwb","generateName":"daemon-set-","namespace":"daemonsets-2502","uid":"878e35e1-0fb8-4fdd-b198-147fdf0c7305","resourceVersion":"848094","generation":2,"creationTimestamp":"2025-07-31T01:00:26Z","deletionTimestamp":"2025-07-31T01:00:58Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4b53e6f3-5914-44ae-a727-3b518e691f64","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-31T01:00:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4b53e6f3-5914-44ae-a727-3b518e691f64\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-31T01:00:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.78\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-c9zbj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-c9zbj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"viola-gs-worker-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["viola-gs-worker-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:27Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:26Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:27Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:27Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:26Z"}],"hostIP":"172.20.30.236","hostIPs":[{"ip":"172.20.30.236"}],"podIP":"10.233.66.78","podIPs":[{"ip":"10.233.66.78"}],"startTime":"2025-07-31T01:00:26Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-31T01:00:27Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3ed819551d4811b47181c1aeef6e49357adc942934a949eae98c705a9d881e2c","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-c9zbj","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-kblm4","generateName":"daemon-set-","namespace":"daemonsets-2502","uid":"80f8e3d6-495c-4f76-a746-81fa06d52214","resourceVersion":"848095","generation":2,"creationTimestamp":"2025-07-31T01:00:26Z","deletionTimestamp":"2025-07-31T01:00:58Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4b53e6f3-5914-44ae-a727-3b518e691f64","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-31T01:00:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4b53e6f3-5914-44ae-a727-3b518e691f64\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-31T01:00:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.68.113\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-h8mxj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-h8mxj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"viola-gs-worker-4","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["viola-gs-worker-4"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:27Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:26Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:27Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:27Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:26Z"}],"hostIP":"172.20.30.200","hostIPs":[{"ip":"172.20.30.200"}],"podIP":"10.233.68.113","podIPs":[{"ip":"10.233.68.113"}],"startTime":"2025-07-31T01:00:26Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-31T01:00:27Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://ee5aac8d7f94249c7ab420c7dccba7e1182169d97c6f4fb6e0e0837f916feb6e","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-h8mxj","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-ncdxp","generateName":"daemon-set-","namespace":"daemonsets-2502","uid":"c3e7c923-8fda-451c-b75f-0143b4895453","resourceVersion":"848080","generation":1,"creationTimestamp":"2025-07-31T01:00:26Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4b53e6f3-5914-44ae-a727-3b518e691f64","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-31T01:00:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4b53e6f3-5914-44ae-a727-3b518e691f64\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-31T01:00:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.67.226\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-524jv","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-524jv","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"viola-gs-worker-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["viola-gs-worker-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:27Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:26Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:27Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:27Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:26Z"}],"hostIP":"172.20.30.154","hostIPs":[{"ip":"172.20.30.154"}],"podIP":"10.233.67.226","podIPs":[{"ip":"10.233.67.226"}],"startTime":"2025-07-31T01:00:26Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-31T01:00:27Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://29e1034e148a4abce71bafed78defa14501c704ddad6c9437785313650fe61ac","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-524jv","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-nszjr","generateName":"daemon-set-","namespace":"daemonsets-2502","uid":"e84de241-23a8-435d-add8-6c420f42fae8","resourceVersion":"848096","generation":2,"creationTimestamp":"2025-07-31T01:00:26Z","deletionTimestamp":"2025-07-31T01:00:58Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4b53e6f3-5914-44ae-a727-3b518e691f64","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-31T01:00:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4b53e6f3-5914-44ae-a727-3b518e691f64\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-31T01:00:28Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.227\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-x7s9c","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-x7s9c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"viola-gs-worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["viola-gs-worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:28Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:26Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:28Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:28Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-31T01:00:26Z"}],"hostIP":"172.20.30.203","hostIPs":[{"ip":"172.20.30.203"}],"podIP":"10.233.65.227","podIPs":[{"ip":"10.233.65.227"}],"startTime":"2025-07-31T01:00:26Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-31T01:00:27Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://6d732f282590b1ca58c682b58a69e9d1ec19222ae48601b01505f841ea6b84db","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-x7s9c","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}}]}

  I0731 01:00:28.320469 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2502" for this suite. @ 07/31/25 01:00:28.324
• [2.189 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 07/31/25 01:00:28.334
  I0731 01:00:28.334855 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 01:00:28.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:00:28.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:00:28.359
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/31/25 01:00:28.363
  E0731 01:00:28.479859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:29.480140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:30.480456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:31.480665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:00:32.389
  I0731 01:00:32.393043 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-80f569f2-63b1-4011-a0e0-00922f9928dd container test-container: <nil>
  STEP: delete the pod @ 07/31/25 01:00:32.401
  I0731 01:00:32.424087 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5279" for this suite. @ 07/31/25 01:00:32.428
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/31/25 01:00:32.446
  I0731 01:00:32.447072 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename daemonsets @ 07/31/25 01:00:32.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:00:32.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:00:32.471
  E0731 01:00:32.480988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:32.543946 24 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/31/25 01:00:32.549
  I0731 01:00:32.553387 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:00:32.553417 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/31/25 01:00:32.553
  I0731 01:00:32.655229 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:00:32.655270 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 01:00:33.481805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:33.649903 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:00:33.650049 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 01:00:34.482876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:34.650991 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0731 01:00:34.651130 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/31/25 01:00:34.654
  I0731 01:00:34.689513 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:00:34.689546 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/31/25 01:00:34.689
  I0731 01:00:34.759171 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:00:34.759214 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 01:00:35.483946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:35.716645 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:00:35.716700 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 01:00:36.484523      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:36.717421 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:00:36.717840 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 01:00:37.484695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:37.716579 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0731 01:00:37.716636 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/31/25 01:00:37.726
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3664, will wait for the garbage collector to delete the pods @ 07/31/25 01:00:37.727
  I0731 01:00:37.790140 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.942729ms
  I0731 01:00:37.891313 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.170493ms
  E0731 01:00:38.485141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:39.485823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:40.196952 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:00:40.197140 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0731 01:00:40.201015 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"848300"},"items":null}

  I0731 01:00:40.205024 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"848300"},"items":null}

  I0731 01:00:40.239779 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3664" for this suite. @ 07/31/25 01:00:40.314
• [7.884 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/31/25 01:00:40.331
  I0731 01:00:40.331537 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pods @ 07/31/25 01:00:40.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:00:40.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:00:40.352
  E0731 01:00:40.486932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:41.487214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:42.487613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:43.487876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:44.494789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:45.494904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:00:46.446
  I0731 01:00:46.449454 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod client-envvars-3d08d0c3-7194-46b3-93fe-b837b170d2b0 container env3cont: <nil>
  STEP: delete the pod @ 07/31/25 01:00:46.456
  I0731 01:00:46.480383 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8248" for this suite. @ 07/31/25 01:00:46.485
• [6.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  E0731 01:00:46.495170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a kubernetes client @ 07/31/25 01:00:46.495
  I0731 01:00:46.495358 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 01:00:46.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:00:46.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:00:46.519
  STEP: creating service in namespace services-2946 @ 07/31/25 01:00:46.521
  STEP: creating service affinity-nodeport-transition in namespace services-2946 @ 07/31/25 01:00:46.522
  I0731 01:00:46.570105 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0731 01:00:47.495471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:48.496345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:48.575230 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 1, 0, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 0, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 0, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 0, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-transition-7d57658b6c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0731 01:00:49.496754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:50.497048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:50.594350 24 resource.go:361] Creating new exec pod
  E0731 01:00:51.497676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:52.497962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:52.625887 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-2946 exec execpod-affinitynwcm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0731 01:00:52.756294 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.233.39.27) 80 port [tcp/http] succeeded!\n"
  I0731 01:00:52.756357 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 01:00:52.756457 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-2946 exec execpod-affinitynwcm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.39.27 80'
  I0731 01:00:52.866023 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.39.27 80\nConnection to 10.233.39.27 80 port [tcp/http] succeeded!\n"
  I0731 01:00:52.866083 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 01:00:52.866178 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-2946 exec execpod-affinitynwcm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.30.203 31347'
  I0731 01:00:52.979312 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.30.203 31347\nConnection to 172.20.30.203 31347 port [tcp/*] succeeded!\n"
  I0731 01:00:52.979366 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 01:00:52.979452 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-2946 exec execpod-affinitynwcm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.30.154 31347'
  I0731 01:00:53.088267 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.30.154 31347\nConnection to 172.20.30.154 31347 port [tcp/*] succeeded!\n"
  I0731 01:00:53.088319 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 01:00:53.100191 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-2946 exec execpod-affinitynwcm8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/ ; done'
  I0731 01:00:53.309600 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n"
  I0731 01:00:53.309672 24 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-64qzp\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-64qzp\naffinity-nodeport-transition-7d57658b6c-64qzp\naffinity-nodeport-transition-7d57658b6c-kjmns\naffinity-nodeport-transition-7d57658b6c-64qzp\naffinity-nodeport-transition-7d57658b6c-kjmns\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-kjmns\naffinity-nodeport-transition-7d57658b6c-kjmns\naffinity-nodeport-transition-7d57658b6c-kjmns\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-64qzp\naffinity-nodeport-transition-7d57658b6c-kjmns"
  I0731 01:00:53.309691 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.309701 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-64qzp
  I0731 01:00:53.309709 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.309718 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-64qzp
  I0731 01:00:53.309725 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-64qzp
  I0731 01:00:53.309732 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kjmns
  I0731 01:00:53.309739 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-64qzp
  I0731 01:00:53.309748 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kjmns
  I0731 01:00:53.309760 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.309768 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.309776 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kjmns
  I0731 01:00:53.309783 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kjmns
  I0731 01:00:53.309791 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kjmns
  I0731 01:00:53.309800 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.309807 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-64qzp
  I0731 01:00:53.309815 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kjmns
  I0731 01:00:53.319376 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-2946 exec execpod-affinitynwcm8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/ ; done'
  E0731 01:00:53.498990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:53.525220 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.20.30.203:31347/\n"
  I0731 01:00:53.525288 24 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7\naffinity-nodeport-transition-7d57658b6c-f8qj7"
  I0731 01:00:53.525301 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525309 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525318 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525323 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525330 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525335 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525340 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525349 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525354 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525360 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525365 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525370 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525375 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525380 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525384 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525389 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-f8qj7
  I0731 01:00:53.525464 24 service.go:4352] Cleaning up the exec pod
  I0731 01:00:53.622042 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2946" for this suite. @ 07/31/25 01:00:53.634
• [7.155 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/31/25 01:00:53.65
  I0731 01:00:53.650725 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename proxy @ 07/31/25 01:00:53.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:00:53.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:00:53.674
  STEP: starting an echo server on multiple ports @ 07/31/25 01:00:53.696
  I0731 01:00:53.713108 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0731 01:00:54.499172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:55.499487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:55.719580 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 1, 0, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 0, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 0, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 0, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"proxy-service-6pntn-548879cc7\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0731 01:00:56.499502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:57.499638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:00:57.730581      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 01:00:57.730748 24 proxy.go:273] setup took 4.05352462s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/31/25 01:00:57.73
  I0731 01:00:57.740117 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 8.670409ms)
  I0731 01:00:57.740367 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 9.325722ms)
  I0731 01:00:57.740772 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 9.641571ms)
  I0731 01:00:57.741178 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 9.904488ms)
  I0731 01:00:57.741348 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 10.008943ms)
  I0731 01:00:57.744520 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 13.319471ms)
  I0731 01:00:57.748460 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 16.428894ms)
  I0731 01:00:57.748736 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 16.77758ms)
  I0731 01:00:57.748766 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 17.057547ms)
  I0731 01:00:57.748857 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 17.069796ms)
  I0731 01:00:57.748879 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 18.012681ms)
  I0731 01:00:57.748599 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 16.751982ms)
  I0731 01:00:57.752864 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 21.269389ms)
  I0731 01:00:57.752913 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 21.398244ms)
  I0731 01:00:57.752943 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 21.302596ms)
  I0731 01:00:57.752960 24 proxy.go:601] (0) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 21.050376ms)
  I0731 01:00:57.760369 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 6.648825ms)
  I0731 01:00:57.760421 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 6.401512ms)
  I0731 01:00:57.762521 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 8.854816ms)
  I0731 01:00:57.762553 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 8.57736ms)
  I0731 01:00:57.762568 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 8.96094ms)
  I0731 01:00:57.764869 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 11.454812ms)
  I0731 01:00:57.764919 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 10.997589ms)
  I0731 01:00:57.764945 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 11.901688ms)
  I0731 01:00:57.764975 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 11.101429ms)
  I0731 01:00:57.764987 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 11.445866ms)
  I0731 01:00:57.765006 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 11.241197ms)
  I0731 01:00:57.765020 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 10.951869ms)
  I0731 01:00:57.765036 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 11.558125ms)
  I0731 01:00:57.765100 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 10.981184ms)
  I0731 01:00:57.767106 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 12.93031ms)
  I0731 01:00:57.767406 24 proxy.go:601] (1) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 13.589536ms)
  I0731 01:00:57.774600 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 6.563367ms)
  I0731 01:00:57.774888 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 6.873276ms)
  I0731 01:00:57.775151 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 7.048386ms)
  I0731 01:00:57.777152 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 9.157259ms)
  I0731 01:00:57.777287 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 9.13046ms)
  I0731 01:00:57.777394 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 9.142116ms)
  I0731 01:00:57.777414 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 9.857717ms)
  I0731 01:00:57.777426 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 9.198299ms)
  I0731 01:00:57.777419 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 9.370147ms)
  I0731 01:00:57.777443 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 9.301732ms)
  I0731 01:00:57.777459 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 9.498508ms)
  I0731 01:00:57.777493 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 9.365734ms)
  I0731 01:00:57.777514 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 9.248475ms)
  I0731 01:00:57.777680 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 9.48202ms)
  I0731 01:00:57.777923 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 10.091619ms)
  I0731 01:00:57.777935 24 proxy.go:601] (2) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 9.865069ms)
  I0731 01:00:57.784729 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 4.611403ms)
  I0731 01:00:57.785652 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 5.054902ms)
  I0731 01:00:57.786466 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 5.725557ms)
  I0731 01:00:57.786500 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 5.784225ms)
  I0731 01:00:57.786700 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 5.965103ms)
  I0731 01:00:57.786719 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 6.141803ms)
  I0731 01:00:57.786875 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 6.539059ms)
  I0731 01:00:57.786963 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 6.51819ms)
  I0731 01:00:57.786975 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 6.451155ms)
  I0731 01:00:57.787248 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 6.497438ms)
  I0731 01:00:57.787264 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 6.60027ms)
  I0731 01:00:57.787527 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 6.726748ms)
  I0731 01:00:57.787588 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 6.941942ms)
  I0731 01:00:57.789596 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 8.96148ms)
  I0731 01:00:57.789638 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 9.242799ms)
  I0731 01:00:57.789651 24 proxy.go:601] (3) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 9.226419ms)
  I0731 01:00:57.795886 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 5.450235ms)
  I0731 01:00:57.797310 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 6.781159ms)
  I0731 01:00:57.797435 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 6.272994ms)
  I0731 01:00:57.797785 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 6.822123ms)
  I0731 01:00:57.798028 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 7.780133ms)
  I0731 01:00:57.798050 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 7.664306ms)
  I0731 01:00:57.798092 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 7.888388ms)
  I0731 01:00:57.798077 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 8.084683ms)
  I0731 01:00:57.798123 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 7.840448ms)
  I0731 01:00:57.797997 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 6.989928ms)
  I0731 01:00:57.798149 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 7.573536ms)
  I0731 01:00:57.799883 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 8.956362ms)
  I0731 01:00:57.799935 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 9.456547ms)
  I0731 01:00:57.799987 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 9.203191ms)
  I0731 01:00:57.800013 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 9.07019ms)
  I0731 01:00:57.800053 24 proxy.go:601] (4) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 10.380202ms)
  I0731 01:00:57.805522 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 5.430959ms)
  I0731 01:00:57.805584 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 5.297593ms)
  I0731 01:00:57.805790 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 4.748346ms)
  I0731 01:00:57.807084 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 6.28257ms)
  I0731 01:00:57.807132 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 6.391139ms)
  I0731 01:00:57.807150 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 6.706174ms)
  I0731 01:00:57.809108 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 8.421111ms)
  I0731 01:00:57.809167 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 8.00889ms)
  I0731 01:00:57.809185 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 7.97577ms)
  I0731 01:00:57.809209 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 8.615094ms)
  I0731 01:00:57.809240 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 8.715444ms)
  I0731 01:00:57.809253 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 8.271648ms)
  I0731 01:00:57.809266 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 8.171214ms)
  I0731 01:00:57.809289 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 8.022323ms)
  I0731 01:00:57.810533 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 9.670437ms)
  I0731 01:00:57.810868 24 proxy.go:601] (5) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 9.949508ms)
  I0731 01:00:57.815234 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 4.284004ms)
  I0731 01:00:57.816122 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 4.599418ms)
  I0731 01:00:57.816427 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 5.141827ms)
  I0731 01:00:57.817299 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 5.62933ms)
  I0731 01:00:57.819591 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 8.176007ms)
  I0731 01:00:57.820651 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 8.917704ms)
  I0731 01:00:57.820775 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 9.170763ms)
  I0731 01:00:57.821453 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 9.138848ms)
  I0731 01:00:57.822586 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 10.365907ms)
  I0731 01:00:57.822608 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 10.679903ms)
  I0731 01:00:57.822666 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 10.570812ms)
  I0731 01:00:57.823106 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 10.653084ms)
  I0731 01:00:57.823133 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 10.446715ms)
  I0731 01:00:57.822902 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 10.51977ms)
  I0731 01:00:57.823666 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 11.867524ms)
  I0731 01:00:57.823749 24 proxy.go:601] (6) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 11.61036ms)
  I0731 01:00:57.829759 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 5.040883ms)
  I0731 01:00:57.830082 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 5.502355ms)
  I0731 01:00:57.830510 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 5.718287ms)
  I0731 01:00:57.831019 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 5.186885ms)
  I0731 01:00:57.832348 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 6.361574ms)
  I0731 01:00:57.833015 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 7.467292ms)
  I0731 01:00:57.834052 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 9.453307ms)
  I0731 01:00:57.834063 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 8.179586ms)
  I0731 01:00:57.834318 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 9.48968ms)
  I0731 01:00:57.834372 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 8.388813ms)
  I0731 01:00:57.834393 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 8.628227ms)
  I0731 01:00:57.834434 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 8.489517ms)
  I0731 01:00:57.834247 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 8.33945ms)
  I0731 01:00:57.834597 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 8.547258ms)
  I0731 01:00:57.834550 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 9.804773ms)
  I0731 01:00:57.834634 24 proxy.go:601] (7) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 8.857284ms)
  I0731 01:00:57.839600 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 4.040439ms)
  I0731 01:00:57.840285 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 4.05183ms)
  I0731 01:00:57.840507 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 4.860439ms)
  I0731 01:00:57.840820 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 4.329081ms)
  I0731 01:00:57.840896 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 4.439275ms)
  I0731 01:00:57.841920 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 6.06407ms)
  I0731 01:00:57.842243 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 6.282706ms)
  I0731 01:00:57.842305 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 5.865702ms)
  I0731 01:00:57.842343 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 6.256289ms)
  I0731 01:00:57.843421 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 7.004463ms)
  I0731 01:00:57.843686 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 7.484995ms)
  I0731 01:00:57.843852 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 7.561422ms)
  I0731 01:00:57.844087 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 7.72799ms)
  I0731 01:00:57.844290 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 8.275172ms)
  I0731 01:00:57.845361 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 8.985024ms)
  I0731 01:00:57.845546 24 proxy.go:601] (8) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 9.155686ms)
  I0731 01:00:57.849566 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 3.888068ms)
  I0731 01:00:57.850595 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 3.831895ms)
  I0731 01:00:57.851676 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 4.942121ms)
  I0731 01:00:57.851788 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 5.150163ms)
  I0731 01:00:57.852298 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 5.524118ms)
  I0731 01:00:57.852388 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 6.349075ms)
  I0731 01:00:57.852426 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 5.841301ms)
  I0731 01:00:57.852853 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 6.705806ms)
  I0731 01:00:57.855363 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 9.653627ms)
  I0731 01:00:57.855579 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 9.35103ms)
  I0731 01:00:57.856474 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 10.062143ms)
  I0731 01:00:57.856538 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 9.798158ms)
  I0731 01:00:57.856561 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 10.046115ms)
  I0731 01:00:57.856778 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 10.426644ms)
  I0731 01:00:57.856819 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 10.274692ms)
  I0731 01:00:57.856842 24 proxy.go:601] (9) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 10.335609ms)
  I0731 01:00:57.861427 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 4.536421ms)
  I0731 01:00:57.862100 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 4.347678ms)
  I0731 01:00:57.864033 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 6.347101ms)
  I0731 01:00:57.864071 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 6.993386ms)
  I0731 01:00:57.864097 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 5.6496ms)
  I0731 01:00:57.864563 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 6.016254ms)
  I0731 01:00:57.864806 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 6.703119ms)
  I0731 01:00:57.865039 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 7.219767ms)
  I0731 01:00:57.865358 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 7.727437ms)
  I0731 01:00:57.866280 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 8.051832ms)
  I0731 01:00:57.866454 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 9.025632ms)
  I0731 01:00:57.866568 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 8.214327ms)
  I0731 01:00:57.866718 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 9.18588ms)
  I0731 01:00:57.866758 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 8.462723ms)
  I0731 01:00:57.868182 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 10.266934ms)
  I0731 01:00:57.868235 24 proxy.go:601] (10) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 10.226826ms)
  I0731 01:00:57.875903 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 7.397019ms)
  I0731 01:00:57.876109 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 7.164148ms)
  I0731 01:00:57.876141 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 7.384755ms)
  I0731 01:00:57.876144 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 7.31041ms)
  I0731 01:00:57.876413 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 7.53879ms)
  I0731 01:00:57.879787 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 10.659788ms)
  I0731 01:00:57.880168 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 11.086068ms)
  I0731 01:00:57.879887 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 10.966246ms)
  I0731 01:00:57.880037 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 11.317397ms)
  I0731 01:00:57.880108 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 11.064884ms)
  I0731 01:00:57.880136 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 11.515796ms)
  I0731 01:00:57.880150 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 11.16439ms)
  I0731 01:00:57.880333 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 11.184052ms)
  I0731 01:00:57.880493 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 12.181007ms)
  I0731 01:00:57.880902 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 11.889055ms)
  I0731 01:00:57.880911 24 proxy.go:601] (11) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 12.10959ms)
  I0731 01:00:57.885548 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 4.209716ms)
  I0731 01:00:57.888215 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 6.60238ms)
  I0731 01:00:57.888226 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 6.813672ms)
  I0731 01:00:57.888457 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 6.735562ms)
  I0731 01:00:57.888793 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 7.258249ms)
  I0731 01:00:57.889358 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 7.512919ms)
  I0731 01:00:57.889513 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 7.764442ms)
  I0731 01:00:57.890572 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 9.405213ms)
  I0731 01:00:57.890709 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 9.021009ms)
  I0731 01:00:57.890774 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 9.114043ms)
  I0731 01:00:57.890798 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 9.220515ms)
  I0731 01:00:57.890926 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 9.717712ms)
  I0731 01:00:57.890950 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 9.513071ms)
  I0731 01:00:57.890970 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 9.463679ms)
  I0731 01:00:57.891005 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 9.13157ms)
  I0731 01:00:57.891032 24 proxy.go:601] (12) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 9.220615ms)
  I0731 01:00:57.896125 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 4.544963ms)
  I0731 01:00:57.896181 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 5.055964ms)
  I0731 01:00:57.896227 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 4.706906ms)
  I0731 01:00:57.896470 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 5.041679ms)
  I0731 01:00:57.897368 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 5.764365ms)
  I0731 01:00:57.898071 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 6.200364ms)
  I0731 01:00:57.899489 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 7.70025ms)
  I0731 01:00:57.899950 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 8.24794ms)
  I0731 01:00:57.900070 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 8.873006ms)
  I0731 01:00:57.900139 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 8.084864ms)
  I0731 01:00:57.900312 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 8.273044ms)
  I0731 01:00:57.900829 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 8.827896ms)
  I0731 01:00:57.900890 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 9.107707ms)
  I0731 01:00:57.900914 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 9.53157ms)
  I0731 01:00:57.901494 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 9.628691ms)
  I0731 01:00:57.902374 24 proxy.go:601] (13) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 10.409619ms)
  I0731 01:00:57.909684 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 6.403149ms)
  I0731 01:00:57.909750 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 6.142532ms)
  I0731 01:00:57.909766 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 6.139219ms)
  I0731 01:00:57.909920 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 7.212734ms)
  I0731 01:00:57.910143 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 7.521481ms)
  I0731 01:00:57.910249 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 6.81141ms)
  I0731 01:00:57.910485 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 7.618041ms)
  I0731 01:00:57.910909 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 7.387484ms)
  I0731 01:00:57.911167 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 7.968552ms)
  I0731 01:00:57.911714 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 8.323839ms)
  I0731 01:00:57.911806 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 8.882793ms)
  I0731 01:00:57.911925 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 8.846766ms)
  I0731 01:00:57.912003 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 8.641464ms)
  I0731 01:00:57.912195 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 9.431916ms)
  I0731 01:00:57.912371 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 8.775108ms)
  I0731 01:00:57.913155 24 proxy.go:601] (14) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 9.593046ms)
  I0731 01:00:57.919615 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 5.97479ms)
  I0731 01:00:57.919626 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 5.735939ms)
  I0731 01:00:57.919634 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 6.277878ms)
  I0731 01:00:57.919664 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 6.106895ms)
  I0731 01:00:57.920477 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 6.615495ms)
  I0731 01:00:57.920585 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 6.609273ms)
  I0731 01:00:57.920533 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 7.071854ms)
  I0731 01:00:57.920645 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 7.122963ms)
  I0731 01:00:57.920656 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 6.748462ms)
  I0731 01:00:57.920703 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 6.719594ms)
  I0731 01:00:57.920929 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 7.250399ms)
  I0731 01:00:57.921604 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 7.856296ms)
  I0731 01:00:57.922969 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 9.138166ms)
  I0731 01:00:57.923092 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 9.723797ms)
  I0731 01:00:57.924959 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 11.179291ms)
  I0731 01:00:57.924985 24 proxy.go:601] (15) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 11.371982ms)
  I0731 01:00:57.928594 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 3.517382ms)
  I0731 01:00:57.929968 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 4.367594ms)
  I0731 01:00:57.931101 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 5.591805ms)
  I0731 01:00:57.931393 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 6.18095ms)
  I0731 01:00:57.932162 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 6.585617ms)
  I0731 01:00:57.932506 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 7.238903ms)
  I0731 01:00:57.933013 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 7.463969ms)
  I0731 01:00:57.932502 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 7.034144ms)
  I0731 01:00:57.933074 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 7.997527ms)
  I0731 01:00:57.933010 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 7.969195ms)
  I0731 01:00:57.933727 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 8.048198ms)
  I0731 01:00:57.936437 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 11.136705ms)
  I0731 01:00:57.936609 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 11.221959ms)
  I0731 01:00:57.936829 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 11.189677ms)
  I0731 01:00:57.936856 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 11.131978ms)
  I0731 01:00:57.936782 24 proxy.go:601] (16) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 11.371776ms)
  I0731 01:00:57.943085 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 4.02192ms)
  I0731 01:00:57.943126 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 5.150119ms)
  I0731 01:00:57.945011 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 7.161554ms)
  I0731 01:00:57.946151 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 6.945497ms)
  I0731 01:00:57.946258 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 8.103481ms)
  I0731 01:00:57.946182 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 8.233881ms)
  I0731 01:00:57.948433 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 9.271164ms)
  I0731 01:00:57.948453 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 9.251148ms)
  I0731 01:00:57.948748 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 10.832815ms)
  I0731 01:00:57.948799 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 10.403463ms)
  I0731 01:00:57.948884 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 9.66642ms)
  I0731 01:00:57.948980 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 11.244933ms)
  I0731 01:00:57.949042 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 11.088908ms)
  I0731 01:00:57.949137 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 9.993528ms)
  I0731 01:00:57.950876 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 11.638922ms)
  I0731 01:00:57.953662 24 proxy.go:601] (17) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 14.399533ms)
  I0731 01:00:57.959983 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 6.221555ms)
  I0731 01:00:57.959988 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 5.625574ms)
  I0731 01:00:57.961525 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 7.240446ms)
  I0731 01:00:57.961657 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 7.519918ms)
  I0731 01:00:57.961797 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 7.303424ms)
  I0731 01:00:57.961820 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 7.934916ms)
  I0731 01:00:57.962477 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 8.198017ms)
  I0731 01:00:57.962527 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 8.527725ms)
  I0731 01:00:57.962550 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 8.473427ms)
  I0731 01:00:57.962594 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 8.196011ms)
  I0731 01:00:57.962619 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 8.162307ms)
  I0731 01:00:57.962633 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 8.457416ms)
  I0731 01:00:57.964151 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 9.716796ms)
  I0731 01:00:57.964209 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 9.890794ms)
  I0731 01:00:57.964783 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 10.999002ms)
  I0731 01:00:57.964823 24 proxy.go:601] (18) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 10.77387ms)
  I0731 01:00:57.969987 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 4.720965ms)
  I0731 01:00:57.970069 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:443/proxy/t... (200; 4.960252ms)
  I0731 01:00:57.971526 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6/proxy/rewriteme">... (200; 6.425572ms)
  I0731 01:00:57.971964 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:1080/proxy/r... (200; 6.616493ms)
  I0731 01:00:57.972045 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:460/proxy/: tls baz (200; 6.627816ms)
  I0731 01:00:57.972512 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/pods/http:proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 7.199323ms)
  I0731 01:00:57.972545 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:162/proxy/: bar (200; 7.212948ms)
  I0731 01:00:57.974212 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:160/proxy/: foo (200; 9.023513ms)
  I0731 01:00:57.974363 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname2/proxy/: bar (200; 9.359075ms)
  I0731 01:00:57.974418 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname1/proxy/: tls baz (200; 8.994093ms)
  I0731 01:00:57.974450 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/pods/https:proxy-service-6pntn-548879cc7-cpml6:462/proxy/: tls qux (200; 9.073642ms)
  I0731 01:00:57.975021 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname2/proxy/: bar (200; 9.735455ms)
  I0731 01:00:57.978368 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/services/proxy-service-6pntn:portname1/proxy/: foo (200; 13.148957ms)
  I0731 01:00:57.978461 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/: <a href="/api/v1/namespaces/proxy-8703/pods/proxy-service-6pntn-548879cc7-cpml6:1080/proxy/rewrit... (200; 13.588298ms)
  I0731 01:00:57.978544 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/services/https:proxy-service-6pntn:tlsportname2/proxy/: tls qux (200; 13.11079ms)
  I0731 01:00:57.979382 24 proxy.go:601] (19) /api/v1/namespaces/proxy-8703/services/http:proxy-service-6pntn:portname1/proxy/: foo (200; 14.019369ms)
  I0731 01:00:57.987885 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8703" for this suite. @ 07/31/25 01:00:57.993
• [4.360 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/31/25 01:00:58.011
  I0731 01:00:58.012074 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 01:00:58.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:00:58.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:00:58.041
  STEP: Creating configMap with name configmap-projected-all-test-volume-470e2bdb-84e5-4217-9749-1b085310025a @ 07/31/25 01:00:58.044
  STEP: Creating secret with name secret-projected-all-test-volume-389751f6-ba07-48c5-87a5-1504d00146f8 @ 07/31/25 01:00:58.052
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/31/25 01:00:58.06
  I0731 01:00:58.082940      24 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  E0731 01:00:58.499933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:00:59.500299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:00.500506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:01.500837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:01:02.11
  I0731 01:01:02.118116 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod projected-volume-f2d90f74-e439-46d0-a56a-ab64a31a73fd container projected-all-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 01:01:02.125
  I0731 01:01:02.143949 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1658" for this suite. @ 07/31/25 01:01:02.148
• [4.147 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 07/31/25 01:01:02.158
  I0731 01:01:02.158518 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 01:01:02.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:01:02.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:01:02.183
  STEP: Setting up server cert @ 07/31/25 01:01:02.212
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 01:01:02.382
  STEP: Deploying the webhook pod @ 07/31/25 01:01:02.39
  STEP: Wait for the deployment to be ready @ 07/31/25 01:01:02.41
  I0731 01:01:02.420987 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 01:01:02.501122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:03.501805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 01:01:04.434
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 01:01:04.469
  E0731 01:01:04.502771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:01:05.469623 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0731 01:01:05.475405 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 01:01:05.503503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:06.504343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:07.504758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:08.505155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:09.505805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:10.506445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/31/25 01:01:10.987
  STEP: Creating a custom resource that should be denied by the webhook @ 07/31/25 01:01:11.007
  E0731 01:01:11.507308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:12.507496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/31/25 01:01:13.027
  STEP: Updating the custom resource with disallowed data should be denied @ 07/31/25 01:01:13.04
  STEP: Deleting the custom resource should be denied @ 07/31/25 01:01:13.049
  STEP: Remove the offending key and value from the custom resource data @ 07/31/25 01:01:13.056
  STEP: Deleting the updated custom resource should be successful @ 07/31/25 01:01:13.068
  E0731 01:01:13.508072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:01:13.684170 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2715" for this suite. @ 07/31/25 01:01:13.69
  STEP: Destroying namespace "webhook-markers-9686" for this suite. @ 07/31/25 01:01:13.699
• [11.551 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 07/31/25 01:01:13.713
  I0731 01:01:13.713564 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/31/25 01:01:13.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:01:13.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:01:13.743
  STEP: Creating 50 configmaps @ 07/31/25 01:01:13.746
  STEP: Creating RC which spawns configmap-volume pods @ 07/31/25 01:01:14.128
  I0731 01:01:14.149242 24 resource.go:81] Pod name wrapped-volume-race-cdfd2ea3-58ae-43ed-92ae-81d8ec1a9a7e: Found 0 pods out of 5
  E0731 01:01:14.508261      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:15.508480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:16.508574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:17.508676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:18.509068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:01:19.158857 24 resource.go:81] Pod name wrapped-volume-race-cdfd2ea3-58ae-43ed-92ae-81d8ec1a9a7e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/31/25 01:01:19.158
  STEP: Creating RC which spawns configmap-volume pods @ 07/31/25 01:01:19.184
  I0731 01:01:19.212684 24 resource.go:81] Pod name wrapped-volume-race-be8bfe80-c7ae-4aea-93c5-24e44ad517cb: Found 1 pods out of 5
  E0731 01:01:19.509928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:20.510226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:21.511024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:22.511361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:23.511665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:01:24.221570 24 resource.go:81] Pod name wrapped-volume-race-be8bfe80-c7ae-4aea-93c5-24e44ad517cb: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/31/25 01:01:24.221
  STEP: Creating RC which spawns configmap-volume pods @ 07/31/25 01:01:24.245
  I0731 01:01:24.271099 24 resource.go:81] Pod name wrapped-volume-race-ca3d7dcc-6cce-4850-a88d-1b920f489a09: Found 1 pods out of 5
  E0731 01:01:24.512386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:25.512607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:26.513208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:27.513509      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:28.513943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:01:29.278978 24 resource.go:81] Pod name wrapped-volume-race-ca3d7dcc-6cce-4850-a88d-1b920f489a09: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/31/25 01:01:29.279
  STEP: deleting ReplicationController wrapped-volume-race-ca3d7dcc-6cce-4850-a88d-1b920f489a09 in namespace emptydir-wrapper-9688, will wait for the garbage collector to delete the pods @ 07/31/25 01:01:29.298
  I0731 01:01:29.363715 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-ca3d7dcc-6cce-4850-a88d-1b920f489a09 took: 11.028365ms
  I0731 01:01:29.464706 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-ca3d7dcc-6cce-4850-a88d-1b920f489a09 pods took: 100.985981ms
  E0731 01:01:29.514030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:30.514385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-be8bfe80-c7ae-4aea-93c5-24e44ad517cb in namespace emptydir-wrapper-9688, will wait for the garbage collector to delete the pods @ 07/31/25 01:01:30.966
  I0731 01:01:31.034746 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-be8bfe80-c7ae-4aea-93c5-24e44ad517cb took: 14.194809ms
  I0731 01:01:31.135418 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-be8bfe80-c7ae-4aea-93c5-24e44ad517cb pods took: 100.671917ms
  E0731 01:01:31.515054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:32.515120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-cdfd2ea3-58ae-43ed-92ae-81d8ec1a9a7e in namespace emptydir-wrapper-9688, will wait for the garbage collector to delete the pods @ 07/31/25 01:01:32.536
  I0731 01:01:32.601029 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-cdfd2ea3-58ae-43ed-92ae-81d8ec1a9a7e took: 9.681245ms
  I0731 01:01:32.701603 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-cdfd2ea3-58ae-43ed-92ae-81d8ec1a9a7e pods took: 100.573095ms
  E0731 01:01:33.515930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 07/31/25 01:01:33.902
  I0731 01:01:34.268859 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9688" for this suite. @ 07/31/25 01:01:34.273
• [20.568 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/31/25 01:01:34.281
  I0731 01:01:34.281791 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename chunking @ 07/31/25 01:01:34.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:01:34.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:01:34.305
  STEP: creating a large number of resources @ 07/31/25 01:01:34.308
  E0731 01:01:34.516600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:35.517366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:36.517922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:37.517894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:38.518344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:39.518836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:40.519388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:41.520152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:42.520815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:43.521874      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:44.522090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:45.522442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:46.523155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:47.523740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:48.524163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:49.524869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:50.525855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:51.526580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 07/31/25 01:01:51.992
  I0731 01:01:52.039882 24 chunking.go:163] Retrieved 40/40 results with rv 849927 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0
  STEP: retrieving the second page until the token expires @ 07/31/25 01:01:52.039
  E0731 01:01:52.527271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:53.527611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:54.527803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:55.528015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:56.528324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:57.528651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:58.528850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:01:59.529164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:00.529311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:01.529555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:02.529806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:03.530101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:04.530300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:05.530502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:06.530645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:07.531036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:08.531164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:09.531464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:10.531573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:11.531859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:02:12.048480 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:02:12.532366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:13.532512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:14.532784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:15.532895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:16.533225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:17.533313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:18.533590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:19.533749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:20.533967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:21.534484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:22.534522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:23.534845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:24.534763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:25.534930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:26.535232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:27.535411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:28.535715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:29.535825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:30.536075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:31.536210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:02:32.048858 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:02:32.536936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:33.537212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:34.537373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:35.537561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:36.537780      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:37.538050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:38.538170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:39.538444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:40.538641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:41.539050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:42.539170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:43.539531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:44.539675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:45.540002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:46.540098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:47.540452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:48.540600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:49.540962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:50.541126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:51.541510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:02:52.048976 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:02:52.542252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:53.542380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:54.542813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:55.542867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:56.543264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:57.543777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:58.544217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:02:59.544728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:00.545051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:01.545527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:02.545805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:03.546260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:04.546670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:05.546919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:06.547266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:07.547718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:08.548124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:09.548530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:10.548752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:11.549201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:03:12.047678 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:03:12.550013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:13.550464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:14.550833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:15.551161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:16.551537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:17.552102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:18.552482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:19.552872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:20.553172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:21.553658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:22.554086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:23.554836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:24.555111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:25.555329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:26.555675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:27.555956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:28.556267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:29.556645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:30.556916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:31.557323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:03:32.047703 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:03:32.557806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:33.559164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:34.558584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:35.559161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:36.559519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:37.559803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:38.560162      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:39.560448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:40.560736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:41.560993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:42.561178      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:43.561700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:44.562121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:45.562416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:46.562787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:47.563245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:48.563605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:49.564006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:50.564327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:51.564884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:03:52.048186 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:03:52.565417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:53.565764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:54.566180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:55.566403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:56.566824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:57.567151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:58.567515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:03:59.567873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:00.568129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:01.568446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:02.568893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:03.569345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:04.569907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:05.570181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:06.570708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:07.571092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:08.571632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:09.572023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:10.572342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:11.572732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:04:12.047467 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:04:12.573677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:13.574076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:14.574447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:15.574803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:16.575005      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:17.575293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:18.575616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:19.576025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:20.576308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:21.577422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:22.577595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:23.577971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:24.578330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:25.578705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:26.579083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:27.579758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:28.580104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:29.580550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:30.580772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:31.581694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:04:32.047702 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:04:32.581949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:33.582262      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:34.582621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:35.582953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:36.583360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:37.583757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:38.584129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:39.584482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:40.585503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:41.585835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:42.586314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:43.586634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:44.587055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:45.587343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:46.587712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:47.588119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:48.588489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:49.588863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:50.589159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:51.589514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:04:52.048696 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:04:52.589948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:53.590294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:54.590733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:55.590986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:56.591264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:57.591533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:58.591816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:04:59.592417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:00.592784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:01.593161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:02.593380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:03.593723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:04.593974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:05.594890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:06.595084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:07.595265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:08.596180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:09.596440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:10.596750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:11.596988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:05:12.047546 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:05:12.597885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:13.598153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:14.598805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:15.599777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:16.600022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:17.600150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:18.600447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:19.600657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:20.600916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:21.601057      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:22.601314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:23.601424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:24.601790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:25.601960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:26.602218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:27.602437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:28.602779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:29.603641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:30.603900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:31.604155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:05:32.047647 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:05:32.604969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:33.605157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:34.605993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:35.606091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:36.606430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:37.606551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:38.606976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:39.607686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:40.607987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:41.608131      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:42.608349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:43.608495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:44.608789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:45.608952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:46.609920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:47.610047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:48.610371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:49.610662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:50.611029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:51.611193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:05:52.047420 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:05:52.611316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:53.611708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:54.612195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:55.612346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:56.612489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:57.612667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:58.612799      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:05:59.613681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:00.614258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:01.614602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:02.614726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:03.615179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:04.615488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:05.615832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:06.616148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:07.616477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:08.616702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:09.617526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:10.617816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:11.618127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:06:12.047811 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:06:12.619096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:13.619371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:14.619690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:15.619973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:16.620234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:17.620578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:18.620862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:19.621154      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:20.621432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:21.622264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:22.622509      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:23.622800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:24.623263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:25.623573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:26.623975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:27.624379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:28.624693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:29.624992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:30.625913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:31.626153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:06:32.048113 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:06:32.627155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:33.627425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:34.627718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:35.628014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:36.628294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:37.628619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:38.628927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:39.629746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:40.630057      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:41.630531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:42.630910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:43.631188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:44.631559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:45.631918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:46.632260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:47.632612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:48.633187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:49.633482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:50.633817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:51.634106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:06:52.047807 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:06:52.634948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:53.635241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:54.635649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:55.635926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:56.636041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:57.636346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:58.636487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:06:59.636790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:00.636922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:01.637211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:02.637315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:03.637609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:04.637630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:05.637916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:06.637931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:07.638165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:08.638543      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:09.638720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:10.639066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:11.639495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:07:12.048261 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:07:12.640246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:13.640544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:14.640970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:15.641268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:16.641572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:17.642051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:18.642384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:19.642708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:20.642999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:21.643737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:22.643832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:23.643944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:24.644296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:25.644466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:26.645551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:27.645862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:28.646280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:29.646876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:30.647321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:31.647499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:07:32.049013 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:07:32.647510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:33.647674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:34.648233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:35.648765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:36.649417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:37.649769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:38.650198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:39.650457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:40.650976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:41.651379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:42.651631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:43.652098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:44.652492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:45.653096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:46.653548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:47.653837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:48.654157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:49.654448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:50.655530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:51.655794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:07:52.049917 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:07:52.656251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:53.656509      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:54.657401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:55.657843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:56.658382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:57.658647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:58.658945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:07:59.659481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:00.659738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:01.660002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:02.660317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:03.660581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:04.660846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:05.661153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:06.661413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:07.661686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:08.661976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:09.662393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:10.662722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:11.663020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:08:12.047648 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:08:12.663849      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:13.664161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:14.664918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:15.665235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:16.665574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:17.665853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:18.666032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:19.666249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:20.666598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:21.666868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:22.667027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:23.667303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:24.667595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:25.667838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:26.668499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:27.668871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:28.669136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:29.669401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:30.669711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:31.669835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:08:32.047826 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:08:32.669979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:33.670091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:34.670354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:35.670510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:36.670841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:37.670955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:38.671231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:39.671768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:40.672075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:41.672228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:42.672524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:43.672629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:44.672880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:45.673027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:46.673307      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:47.673443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:48.673729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:49.674814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:50.674953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:51.675141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:08:52.047463 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:08:52.675270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:53.675572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:54.675776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:55.676332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:56.676549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:57.676807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:58.677127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:08:59.677557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:00.677755      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:01.678072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:02.679123      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:03.679367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:04.679691      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:05.680753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:06.680891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:07.681163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:08.681285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:09.681605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:10.681746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:11.681988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:09:12.048454 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:09:12.682565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:13.682699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:14.683634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:15.683831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:16.684381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:17.684511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:18.684891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:19.685708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:20.686212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:21.686188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:22.686272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:23.686423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:24.686700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:25.686828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:26.687296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:27.687425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:28.687909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:29.688697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:30.689039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:31.689218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:09:32.047245 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODQ5OTI3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0731 01:09:32.689597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:33.689745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:34.689976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:35.690588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:36.690841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:37.691092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:38.691351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:39.691890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:40.692150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:41.693276      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:42.693804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:43.694183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:44.694460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:45.694800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:46.695116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:47.695504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:48.695784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:49.695995      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:50.696258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:51.696530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:09:52.044924 24 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0731 01:09:52.044977 24 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/31/25 01:09:52.045
  STEP: retrieving all remaining pages @ 07/31/25 01:09:52.049
  I0731 01:09:52.053996 24 chunking.go:221] Retrieved 40/40 results with rv 852389 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODUyMzg5LCJzdGFydCI6InRlbXBsYXRlLTAxMTlcdTAwMDAifQ
  I0731 01:09:52.058514 24 chunking.go:221] Retrieved 40/40 results with rv 852389 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODUyMzg5LCJzdGFydCI6InRlbXBsYXRlLTAxNTlcdTAwMDAifQ
  I0731 01:09:52.062843 24 chunking.go:221] Retrieved 40/40 results with rv 852389 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODUyMzg5LCJzdGFydCI6InRlbXBsYXRlLTAxOTlcdTAwMDAifQ
  I0731 01:09:52.066879 24 chunking.go:221] Retrieved 40/40 results with rv 852389 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODUyMzg5LCJzdGFydCI6InRlbXBsYXRlLTAyMzlcdTAwMDAifQ
  I0731 01:09:52.070716 24 chunking.go:221] Retrieved 40/40 results with rv 852389 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODUyMzg5LCJzdGFydCI6InRlbXBsYXRlLTAyNzlcdTAwMDAifQ
  I0731 01:09:52.074555 24 chunking.go:221] Retrieved 40/40 results with rv 852389 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODUyMzg5LCJzdGFydCI6InRlbXBsYXRlLTAzMTlcdTAwMDAifQ
  I0731 01:09:52.078596 24 chunking.go:221] Retrieved 40/40 results with rv 852389 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODUyMzg5LCJzdGFydCI6InRlbXBsYXRlLTAzNTlcdTAwMDAifQ
  I0731 01:09:52.082946 24 chunking.go:221] Retrieved 40/40 results with rv 852389 and continue 
  I0731 01:09:52.083462 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1571" for this suite. @ 07/31/25 01:09:52.088
• [497.818 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 07/31/25 01:09:52.1
  I0731 01:09:52.100470 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 01:09:52.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:09:52.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:09:52.123
  STEP: Setting up server cert @ 07/31/25 01:09:52.149
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 01:09:52.373
  STEP: Deploying the webhook pod @ 07/31/25 01:09:52.411
  STEP: Wait for the deployment to be ready @ 07/31/25 01:09:52.432
  I0731 01:09:52.439530 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0731 01:09:52.697016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:53.698128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 01:09:54.454
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 01:09:54.481
  E0731 01:09:54.699169      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:09:55.481893 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/31/25 01:09:55.487
  STEP: verifying the mutating webhook match conditions @ 07/31/25 01:09:55.499
  STEP: updating the mutating webhook match conditions @ 07/31/25 01:09:55.502
  STEP: verifying the mutating webhook match conditions @ 07/31/25 01:09:55.516
  I0731 01:09:55.607108 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6019" for this suite. @ 07/31/25 01:09:55.627
  STEP: Destroying namespace "webhook-markers-5919" for this suite. @ 07/31/25 01:09:55.638
• [3.549 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 07/31/25 01:09:55.65
  I0731 01:09:55.650240 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename runtimeclass @ 07/31/25 01:09:55.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:09:55.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:09:55.678
  E0731 01:09:55.700221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:56.700533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:57.700909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:09:57.724264 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4543" for this suite. @ 07/31/25 01:09:57.729
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 07/31/25 01:09:57.743
  I0731 01:09:57.744141 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename security-context-test @ 07/31/25 01:09:57.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:09:57.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:09:57.772
  E0731 01:09:58.703101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:09:59.703234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:00.703885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:01.704086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:10:01.822548 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2280" for this suite. @ 07/31/25 01:10:01.827
• [4.091 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 07/31/25 01:10:01.834
  I0731 01:10:01.834526 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 01:10:01.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:10:01.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:10:01.853
  STEP: fetching services @ 07/31/25 01:10:01.856
  I0731 01:10:01.860858 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-148" for this suite. @ 07/31/25 01:10:01.865
• [0.038 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/31/25 01:10:01.872
  I0731 01:10:01.872916 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename secrets @ 07/31/25 01:10:01.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:10:01.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:10:01.894
  STEP: Creating secret with name secret-test-ff6acd11-a905-482f-8200-af5e321b305c @ 07/31/25 01:10:01.897
  STEP: Creating a pod to test consume secrets @ 07/31/25 01:10:01.904
  E0731 01:10:02.704463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:03.704710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:04.705664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:05.706517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:10:05.931
  I0731 01:10:05.934891 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-secrets-2ba1c3d3-3cca-49ef-a91d-7faf2bb51714 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 01:10:05.94
  I0731 01:10:05.962036 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2498" for this suite. @ 07/31/25 01:10:05.969
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 07/31/25 01:10:05.978
  I0731 01:10:05.978319 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename runtimeclass @ 07/31/25 01:10:05.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:10:06.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:10:06.005
  STEP: getting /apis @ 07/31/25 01:10:06.008
  STEP: getting /apis/node.k8s.io @ 07/31/25 01:10:06.014
  STEP: getting /apis/node.k8s.io/v1 @ 07/31/25 01:10:06.015
  STEP: creating @ 07/31/25 01:10:06.016
  STEP: watching @ 07/31/25 01:10:06.092
  I0731 01:10:06.092181 24 runtimeclass.go:278] starting watch
  STEP: getting @ 07/31/25 01:10:06.099
  STEP: listing @ 07/31/25 01:10:06.102
  STEP: patching @ 07/31/25 01:10:06.106
  STEP: updating @ 07/31/25 01:10:06.116
  I0731 01:10:06.122175 24 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 07/31/25 01:10:06.122
  STEP: deleting a collection @ 07/31/25 01:10:06.134
  I0731 01:10:06.154164 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6988" for this suite. @ 07/31/25 01:10:06.16
• [0.192 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 07/31/25 01:10:06.17
  I0731 01:10:06.171216 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 01:10:06.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:10:06.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:10:06.2
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/31/25 01:10:06.203
  I0731 01:10:06.203501 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2396 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0731 01:10:06.286734 24 builder.go:146] stderr: ""
  I0731 01:10:06.286782 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/31/25 01:10:06.286
  E0731 01:10:06.707442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:07.707737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:08.708078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:09.708745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:10.709031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/31/25 01:10:11.338
  I0731 01:10:11.338768 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2396 get pod e2e-test-httpd-pod -o json'
  I0731 01:10:11.407020 24 builder.go:146] stderr: ""
  I0731 01:10:11.407319 24 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-07-31T01:10:06Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2396\",\n        \"resourceVersion\": \"853129\",\n        \"uid\": \"cc5bb1d8-e28e-4d7e-9698-950bbb83d514\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-58tvh\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"viola-gs-worker-1\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-58tvh\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-31T01:10:07Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-31T01:10:06Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-31T01:10:07Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-31T01:10:07Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-31T01:10:06Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://a9dfed4c0aff6c4dfa9ef8951e7db084213f70b52f5ec548c429ea66f07b47dd\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-07-31T01:10:07Z\"\n                    }\n                },\n                \"user\": {\n                    \"linux\": {\n                        \"gid\": 0,\n                        \"supplementalGroups\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            6,\n                            10,\n                            11,\n                            20,\n                            26,\n                            27\n                        ],\n                        \"uid\": 0\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-58tvh\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.20.30.203\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.20.30.203\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.65.69\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.65.69\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-07-31T01:10:06Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/31/25 01:10:11.407
  I0731 01:10:11.407591 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2396 replace -f -'
  I0731 01:10:11.520977 24 builder.go:146] stderr: ""
  I0731 01:10:11.521033 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/31/25 01:10:11.521
  I0731 01:10:11.524802 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2396 delete pods e2e-test-httpd-pod'
  E0731 01:10:11.709689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:12.709931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:10:13.640862 24 builder.go:146] stderr: ""
  I0731 01:10:13.640911 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0731 01:10:13.641055 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2396" for this suite. @ 07/31/25 01:10:13.646
• [7.483 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 07/31/25 01:10:13.654
  I0731 01:10:13.654378 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 01:10:13.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:10:13.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:10:13.681
  STEP: creating Agnhost RC @ 07/31/25 01:10:13.684
  I0731 01:10:13.684377 24 kubectl.go:1540] namespace kubectl-2184
  I0731 01:10:13.684464 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2184 create -f -'
  E0731 01:10:13.710224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:10:13.795566 24 builder.go:146] stderr: ""
  I0731 01:10:13.795624 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/31/25 01:10:13.795
  E0731 01:10:14.711220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:10:14.802146 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0731 01:10:14.802195 24 framework.go:733] Found 1 / 1
  I0731 01:10:14.802218 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0731 01:10:14.805324 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0731 01:10:14.805375 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0731 01:10:14.805394 24 kubectl.go:1547] wait on agnhost-primary startup in kubectl-2184 
  I0731 01:10:14.805457 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2184 logs agnhost-primary-lplk5 agnhost-primary'
  I0731 01:10:14.870910 24 builder.go:146] stderr: ""
  I0731 01:10:14.870965 24 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 07/31/25 01:10:14.87
  I0731 01:10:14.871075 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2184 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0731 01:10:14.969598 24 builder.go:146] stderr: ""
  I0731 01:10:14.969658 24 builder.go:147] stdout: "service/rm2 exposed\n"
  I0731 01:10:14.978131 24 utils.go:1115] Service rm2 in namespace kubectl-2184 found.
  E0731 01:10:15.711967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:16.712272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: exposing service @ 07/31/25 01:10:16.991
  I0731 01:10:16.991422 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2184 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0731 01:10:17.089107 24 builder.go:146] stderr: ""
  I0731 01:10:17.089153 24 builder.go:147] stdout: "service/rm3 exposed\n"
  I0731 01:10:17.099767 24 utils.go:1115] Service rm3 in namespace kubectl-2184 found.
  E0731 01:10:17.712339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:18.712527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:10:19.111385 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2184" for this suite. @ 07/31/25 01:10:19.117
• [5.474 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/31/25 01:10:19.128
  I0731 01:10:19.129008 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename init-container @ 07/31/25 01:10:19.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:10:19.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:10:19.155
  STEP: creating the pod @ 07/31/25 01:10:19.157
  I0731 01:10:19.158291 24 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0731 01:10:19.713253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:20.714892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:21.715025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:22.715935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:10:22.843148 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4350" for this suite. @ 07/31/25 01:10:22.847
• [3.726 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 07/31/25 01:10:22.855
  I0731 01:10:22.855522 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename gc @ 07/31/25 01:10:22.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:10:22.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:10:22.876
  STEP: create the rc @ 07/31/25 01:10:22.949
  I0731 01:10:22.958530      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0731 01:10:23.716272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:24.720417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:25.721222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:26.721516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:27.722173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:28.722295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/31/25 01:10:28.964
  STEP: wait for the rc to be deleted @ 07/31/25 01:10:28.974
  E0731 01:10:29.722990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:30.723968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:31.724272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:32.724464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:33.724771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/31/25 01:10:33.983
  E0731 01:10:34.725803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:35.725986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:36.726128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:37.726867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:38.727204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:39.727303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:40.727336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:41.727681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:42.727950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:43.728470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:44.728633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:45.729006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:46.729128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:47.729625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:48.729679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:49.730084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:50.730186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:51.730541      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:52.730756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:53.731174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:54.731818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:55.732233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:56.732325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:57.732736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:58.732822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:10:59.733029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:00.733161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:01.733898      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:02.734141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:03.734594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/31/25 01:11:03.995
  I0731 01:11:04.088850 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0731 01:11:04.089018 24 delete.go:95] Deleting pod "simpletest.rc-26zmg" in namespace "gc-819"
  I0731 01:11:04.106748 24 delete.go:95] Deleting pod "simpletest.rc-2f7bv" in namespace "gc-819"
  I0731 01:11:04.126086 24 delete.go:95] Deleting pod "simpletest.rc-2gs4c" in namespace "gc-819"
  I0731 01:11:04.152741 24 delete.go:95] Deleting pod "simpletest.rc-2kzd2" in namespace "gc-819"
  I0731 01:11:04.186164 24 delete.go:95] Deleting pod "simpletest.rc-2lt2z" in namespace "gc-819"
  I0731 01:11:04.204935 24 delete.go:95] Deleting pod "simpletest.rc-2lz6q" in namespace "gc-819"
  I0731 01:11:04.227426 24 delete.go:95] Deleting pod "simpletest.rc-2qnch" in namespace "gc-819"
  I0731 01:11:04.252693 24 delete.go:95] Deleting pod "simpletest.rc-449bv" in namespace "gc-819"
  I0731 01:11:04.275282 24 delete.go:95] Deleting pod "simpletest.rc-5brwq" in namespace "gc-819"
  I0731 01:11:04.303533 24 delete.go:95] Deleting pod "simpletest.rc-5dfb5" in namespace "gc-819"
  I0731 01:11:04.332935 24 delete.go:95] Deleting pod "simpletest.rc-5nbdc" in namespace "gc-819"
  I0731 01:11:04.352313 24 delete.go:95] Deleting pod "simpletest.rc-5sxtr" in namespace "gc-819"
  I0731 01:11:04.384410 24 delete.go:95] Deleting pod "simpletest.rc-6tjqz" in namespace "gc-819"
  I0731 01:11:04.407684 24 delete.go:95] Deleting pod "simpletest.rc-7b85j" in namespace "gc-819"
  I0731 01:11:04.430964 24 delete.go:95] Deleting pod "simpletest.rc-7s8w8" in namespace "gc-819"
  I0731 01:11:04.458567 24 delete.go:95] Deleting pod "simpletest.rc-7twxf" in namespace "gc-819"
  I0731 01:11:04.473074 24 delete.go:95] Deleting pod "simpletest.rc-7whs5" in namespace "gc-819"
  I0731 01:11:04.507385 24 delete.go:95] Deleting pod "simpletest.rc-84k2l" in namespace "gc-819"
  I0731 01:11:04.536539 24 delete.go:95] Deleting pod "simpletest.rc-8vwnn" in namespace "gc-819"
  I0731 01:11:04.556814 24 delete.go:95] Deleting pod "simpletest.rc-8zvdd" in namespace "gc-819"
  I0731 01:11:04.595840 24 delete.go:95] Deleting pod "simpletest.rc-924nt" in namespace "gc-819"
  I0731 01:11:04.616357 24 delete.go:95] Deleting pod "simpletest.rc-9mf7l" in namespace "gc-819"
  I0731 01:11:04.637489 24 delete.go:95] Deleting pod "simpletest.rc-9mwdk" in namespace "gc-819"
  I0731 01:11:04.669645 24 delete.go:95] Deleting pod "simpletest.rc-9t9mk" in namespace "gc-819"
  I0731 01:11:04.682678 24 delete.go:95] Deleting pod "simpletest.rc-b47sv" in namespace "gc-819"
  I0731 01:11:04.709320 24 delete.go:95] Deleting pod "simpletest.rc-b6qxr" in namespace "gc-819"
  E0731 01:11:04.735233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:11:04.750160 24 delete.go:95] Deleting pod "simpletest.rc-b9vdm" in namespace "gc-819"
  I0731 01:11:04.776523 24 delete.go:95] Deleting pod "simpletest.rc-bnzxb" in namespace "gc-819"
  I0731 01:11:04.800293 24 delete.go:95] Deleting pod "simpletest.rc-c8mn5" in namespace "gc-819"
  I0731 01:11:04.839818 24 delete.go:95] Deleting pod "simpletest.rc-d5vl6" in namespace "gc-819"
  I0731 01:11:04.858611 24 delete.go:95] Deleting pod "simpletest.rc-d68gj" in namespace "gc-819"
  I0731 01:11:04.888727 24 delete.go:95] Deleting pod "simpletest.rc-db2rm" in namespace "gc-819"
  I0731 01:11:04.909189 24 delete.go:95] Deleting pod "simpletest.rc-dc42x" in namespace "gc-819"
  I0731 01:11:04.935251 24 delete.go:95] Deleting pod "simpletest.rc-dqrzl" in namespace "gc-819"
  I0731 01:11:05.017093 24 delete.go:95] Deleting pod "simpletest.rc-ds8sv" in namespace "gc-819"
  I0731 01:11:05.046336 24 delete.go:95] Deleting pod "simpletest.rc-fdd47" in namespace "gc-819"
  I0731 01:11:05.068593 24 delete.go:95] Deleting pod "simpletest.rc-fk2qs" in namespace "gc-819"
  I0731 01:11:05.099144 24 delete.go:95] Deleting pod "simpletest.rc-fqnxj" in namespace "gc-819"
  I0731 01:11:05.126538 24 delete.go:95] Deleting pod "simpletest.rc-g9tt7" in namespace "gc-819"
  I0731 01:11:05.163543 24 delete.go:95] Deleting pod "simpletest.rc-gsm2p" in namespace "gc-819"
  I0731 01:11:05.193560 24 delete.go:95] Deleting pod "simpletest.rc-h7z74" in namespace "gc-819"
  I0731 01:11:05.218622 24 delete.go:95] Deleting pod "simpletest.rc-h9qwp" in namespace "gc-819"
  I0731 01:11:05.247705 24 delete.go:95] Deleting pod "simpletest.rc-hc4r9" in namespace "gc-819"
  I0731 01:11:05.275488 24 delete.go:95] Deleting pod "simpletest.rc-hnmsq" in namespace "gc-819"
  I0731 01:11:05.311586 24 delete.go:95] Deleting pod "simpletest.rc-hns7h" in namespace "gc-819"
  I0731 01:11:05.336674 24 delete.go:95] Deleting pod "simpletest.rc-hpr96" in namespace "gc-819"
  I0731 01:11:05.366100 24 delete.go:95] Deleting pod "simpletest.rc-j4znz" in namespace "gc-819"
  I0731 01:11:05.392905 24 delete.go:95] Deleting pod "simpletest.rc-jb6b7" in namespace "gc-819"
  I0731 01:11:05.418295 24 delete.go:95] Deleting pod "simpletest.rc-jczth" in namespace "gc-819"
  I0731 01:11:05.453057 24 delete.go:95] Deleting pod "simpletest.rc-jpx8x" in namespace "gc-819"
  I0731 01:11:05.492244 24 delete.go:95] Deleting pod "simpletest.rc-k56hs" in namespace "gc-819"
  I0731 01:11:05.512620 24 delete.go:95] Deleting pod "simpletest.rc-kdsxn" in namespace "gc-819"
  I0731 01:11:05.532678 24 delete.go:95] Deleting pod "simpletest.rc-klsqk" in namespace "gc-819"
  I0731 01:11:05.557356 24 delete.go:95] Deleting pod "simpletest.rc-lfbzr" in namespace "gc-819"
  I0731 01:11:05.578766 24 delete.go:95] Deleting pod "simpletest.rc-lj4gb" in namespace "gc-819"
  I0731 01:11:05.601490 24 delete.go:95] Deleting pod "simpletest.rc-lrtth" in namespace "gc-819"
  I0731 01:11:05.627070 24 delete.go:95] Deleting pod "simpletest.rc-lvrwc" in namespace "gc-819"
  I0731 01:11:05.647111 24 delete.go:95] Deleting pod "simpletest.rc-m2xvb" in namespace "gc-819"
  I0731 01:11:05.673465 24 delete.go:95] Deleting pod "simpletest.rc-m4lhd" in namespace "gc-819"
  I0731 01:11:05.698123 24 delete.go:95] Deleting pod "simpletest.rc-mjbrf" in namespace "gc-819"
  I0731 01:11:05.728567 24 delete.go:95] Deleting pod "simpletest.rc-mrsdn" in namespace "gc-819"
  E0731 01:11:05.736216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:11:05.759902 24 delete.go:95] Deleting pod "simpletest.rc-mssxm" in namespace "gc-819"
  I0731 01:11:05.789740 24 delete.go:95] Deleting pod "simpletest.rc-mx9ds" in namespace "gc-819"
  I0731 01:11:05.811486 24 delete.go:95] Deleting pod "simpletest.rc-nd5lx" in namespace "gc-819"
  I0731 01:11:05.833229 24 delete.go:95] Deleting pod "simpletest.rc-p2p8j" in namespace "gc-819"
  I0731 01:11:05.861658 24 delete.go:95] Deleting pod "simpletest.rc-p2rx7" in namespace "gc-819"
  I0731 01:11:05.892972 24 delete.go:95] Deleting pod "simpletest.rc-p62jw" in namespace "gc-819"
  I0731 01:11:05.920948 24 delete.go:95] Deleting pod "simpletest.rc-p96dr" in namespace "gc-819"
  I0731 01:11:05.943067 24 delete.go:95] Deleting pod "simpletest.rc-phg28" in namespace "gc-819"
  I0731 01:11:05.975776 24 delete.go:95] Deleting pod "simpletest.rc-pnt9l" in namespace "gc-819"
  I0731 01:11:06.001531 24 delete.go:95] Deleting pod "simpletest.rc-pts5x" in namespace "gc-819"
  I0731 01:11:06.028008 24 delete.go:95] Deleting pod "simpletest.rc-qc2lk" in namespace "gc-819"
  I0731 01:11:06.065076 24 delete.go:95] Deleting pod "simpletest.rc-qczmh" in namespace "gc-819"
  I0731 01:11:06.091794 24 delete.go:95] Deleting pod "simpletest.rc-qqr6k" in namespace "gc-819"
  I0731 01:11:06.116650 24 delete.go:95] Deleting pod "simpletest.rc-qrlf6" in namespace "gc-819"
  I0731 01:11:06.153691 24 delete.go:95] Deleting pod "simpletest.rc-r2vfs" in namespace "gc-819"
  I0731 01:11:06.186745 24 delete.go:95] Deleting pod "simpletest.rc-r48hf" in namespace "gc-819"
  I0731 01:11:06.209028 24 delete.go:95] Deleting pod "simpletest.rc-r7gkz" in namespace "gc-819"
  I0731 01:11:06.240742 24 delete.go:95] Deleting pod "simpletest.rc-rgxw8" in namespace "gc-819"
  I0731 01:11:06.272836 24 delete.go:95] Deleting pod "simpletest.rc-rp8zb" in namespace "gc-819"
  I0731 01:11:06.296688 24 delete.go:95] Deleting pod "simpletest.rc-rvf5b" in namespace "gc-819"
  I0731 01:11:06.331134 24 delete.go:95] Deleting pod "simpletest.rc-rzgmz" in namespace "gc-819"
  I0731 01:11:06.357403 24 delete.go:95] Deleting pod "simpletest.rc-s6wlt" in namespace "gc-819"
  I0731 01:11:06.400285 24 delete.go:95] Deleting pod "simpletest.rc-sb2ph" in namespace "gc-819"
  I0731 01:11:06.433241 24 delete.go:95] Deleting pod "simpletest.rc-smrjc" in namespace "gc-819"
  I0731 01:11:06.461971 24 delete.go:95] Deleting pod "simpletest.rc-sp6sw" in namespace "gc-819"
  I0731 01:11:06.486259 24 delete.go:95] Deleting pod "simpletest.rc-th68x" in namespace "gc-819"
  I0731 01:11:06.517475 24 delete.go:95] Deleting pod "simpletest.rc-tlkbj" in namespace "gc-819"
  I0731 01:11:06.543635 24 delete.go:95] Deleting pod "simpletest.rc-vgc6n" in namespace "gc-819"
  I0731 01:11:06.573072 24 delete.go:95] Deleting pod "simpletest.rc-vj7tf" in namespace "gc-819"
  I0731 01:11:06.592552 24 delete.go:95] Deleting pod "simpletest.rc-vvx2w" in namespace "gc-819"
  I0731 01:11:06.633976 24 delete.go:95] Deleting pod "simpletest.rc-w2xp9" in namespace "gc-819"
  I0731 01:11:06.664158 24 delete.go:95] Deleting pod "simpletest.rc-wgcn9" in namespace "gc-819"
  I0731 01:11:06.690333 24 delete.go:95] Deleting pod "simpletest.rc-wlx5n" in namespace "gc-819"
  I0731 01:11:06.715907 24 delete.go:95] Deleting pod "simpletest.rc-wvlts" in namespace "gc-819"
  I0731 01:11:06.734810 24 delete.go:95] Deleting pod "simpletest.rc-x78kt" in namespace "gc-819"
  E0731 01:11:06.737108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:11:06.792776 24 delete.go:95] Deleting pod "simpletest.rc-xp4l5" in namespace "gc-819"
  I0731 01:11:06.808516 24 delete.go:95] Deleting pod "simpletest.rc-zpwp2" in namespace "gc-819"
  I0731 01:11:06.843236 24 delete.go:95] Deleting pod "simpletest.rc-zsls9" in namespace "gc-819"
  I0731 01:11:06.863207 24 delete.go:95] Deleting pod "simpletest.rc-zzdfc" in namespace "gc-819"
  I0731 01:11:06.897239 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-819" for this suite. @ 07/31/25 01:11:06.904
• [44.061 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/31/25 01:11:06.917
  I0731 01:11:06.917896 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename prestop @ 07/31/25 01:11:06.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:11:06.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:11:06.95
  STEP: Creating server pod server in namespace prestop-5873 @ 07/31/25 01:11:06.953
  STEP: Waiting for pods to come up. @ 07/31/25 01:11:06.973
  E0731 01:11:07.737229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:08.737538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-5873 @ 07/31/25 01:11:08.992
  E0731 01:11:09.738027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:10.739108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 07/31/25 01:11:11.011
  E0731 01:11:11.739428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:12.739713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:13.740009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:14.741291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:15.741070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:11:16.031992 24 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/31/25 01:11:16.032
  I0731 01:11:16.057924 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-5873" for this suite. @ 07/31/25 01:11:16.063
• [9.155 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 07/31/25 01:11:16.073
  I0731 01:11:16.073483 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 01:11:16.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:11:16.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:11:16.099
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/31/25 01:11:16.103
  E0731 01:11:16.741395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:17.741778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:18.741679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:19.741847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:11:20.128
  I0731 01:11:20.132791 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-a035cc9c-f8a7-422c-99a5-d764ec295007 container test-container: <nil>
  STEP: delete the pod @ 07/31/25 01:11:20.139
  I0731 01:11:20.161822 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2902" for this suite. @ 07/31/25 01:11:20.167
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 07/31/25 01:11:20.177
  I0731 01:11:20.178018 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 01:11:20.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:11:20.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:11:20.198
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 01:11:20.201
  E0731 01:11:20.742296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:21.742710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:22.742863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:23.743050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:11:24.227
  I0731 01:11:24.230350 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-72e6e040-939a-4302-b0ec-124ae97989dd container client-container: <nil>
  STEP: delete the pod @ 07/31/25 01:11:24.236
  I0731 01:11:24.259720 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7735" for this suite. @ 07/31/25 01:11:24.266
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 07/31/25 01:11:24.276
  I0731 01:11:24.276069 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename statefulset @ 07/31/25 01:11:24.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:11:24.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:11:24.297
  STEP: Creating service test in namespace statefulset-6728 @ 07/31/25 01:11:24.3
  STEP: Creating a new StatefulSet @ 07/31/25 01:11:24.306
  I0731 01:11:24.321653 24 wait.go:44] Found 0 stateful pods, waiting for 3
  E0731 01:11:24.743648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:25.743895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:26.744028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:27.744320      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:28.744612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:29.744729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:30.745016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:31.746089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:32.746474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:33.746799      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:11:34.324587 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0731 01:11:34.324645 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0731 01:11:34.324653 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/31/25 01:11:34.334
  I0731 01:11:34.344920 24 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 07/31/25 01:11:34.345
  E0731 01:11:34.748791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:35.748226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:36.748723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:37.748941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:38.749204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:39.749809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:40.750051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:41.750635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:42.751089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:43.751147      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/31/25 01:11:44.356
  STEP: Performing a canary update @ 07/31/25 01:11:44.356
  I0731 01:11:44.368349 24 statefulset.go:2542] Updating stateful set ss2
  I0731 01:11:44.382290 24 wait.go:74] Waiting for Pod statefulset-6728/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0731 01:11:44.751854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:45.752137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:46.752376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:47.752684      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:48.752917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:49.753065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:50.753162      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:51.753449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:52.753635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:53.753899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/31/25 01:11:54.381
  I0731 01:11:54.481925 24 wait.go:44] Found 2 stateful pods, waiting for 3
  E0731 01:11:54.754395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:55.754753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:56.755107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:57.755761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:58.756457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:11:59.757264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:00.757592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:01.757963      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:02.758308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:03.758716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:12:04.461968 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0731 01:12:04.462151 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0731 01:12:04.462216 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/31/25 01:12:04.468
  I0731 01:12:04.478421 24 statefulset.go:2542] Updating stateful set ss2
  I0731 01:12:04.489826 24 wait.go:74] Waiting for Pod statefulset-6728/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0731 01:12:04.759235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:05.760044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:06.760398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:07.760782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:08.761185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:09.761338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:10.761702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:11.762023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:12.762402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:13.763111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:12:14.502906 24 statefulset.go:2542] Updating stateful set ss2
  I0731 01:12:14.514762 24 wait.go:56] Waiting for StatefulSet statefulset-6728/ss2 to complete update
  I0731 01:12:14.514830 24 wait.go:63] Waiting for Pod statefulset-6728/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0731 01:12:14.763972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:15.764205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:16.764598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:17.764765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:18.765139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:19.765814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:20.765949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:21.766077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:22.766419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:23.766570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:12:24.513624 24 statefulset.go:138] Deleting all statefulset in ns statefulset-6728
  I0731 01:12:24.517876 24 rest.go:153] Scaling statefulset ss2 to 0
  E0731 01:12:24.767200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:25.767468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:26.767776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:27.768002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:28.768432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:29.768618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:30.768878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:31.769011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:32.769256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:33.769406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:12:34.536853 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0731 01:12:34.541150 24 rest.go:91] Deleting statefulset ss2
  I0731 01:12:34.567857 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6728" for this suite. @ 07/31/25 01:12:34.572
• [70.306 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 07/31/25 01:12:34.582
  I0731 01:12:34.582157 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename sched-pred @ 07/31/25 01:12:34.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:12:34.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:12:34.609
  I0731 01:12:34.612657 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0731 01:12:34.678837 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0731 01:12:34.683610 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-1 before test
  I0731 01:12:34.691977 24 predicates.go:958] oauth2-proxy-admin-796f84987c-hnrsd from auth started at 2025-07-31 01:00:02 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.692025 24 predicates.go:960] 	Container oauth2-proxy-admin ready: true, restart count 0
  I0731 01:12:34.692032 24 predicates.go:958] redis-cluster-maintenance-cronjob-29232060-29986 from auth started at 2025-07-31 01:00:00 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.692037 24 predicates.go:960] 	Container redis-cluster-check ready: false, restart count 0
  I0731 01:12:34.692044 24 predicates.go:958] mariadb-backup-cronjob-29232070-lmj54 from dataplatform started at 2025-07-31 01:10:00 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.692049 24 predicates.go:960] 	Container mariadb-backup-cronjob ready: false, restart count 0
  I0731 01:12:34.692053 24 predicates.go:958] vault-backup-cronjob-29232070-4r5m4 from dataplatform started at 2025-07-31 01:10:00 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.692058 24 predicates.go:960] 	Container clean-backup ready: false, restart count 0
  I0731 01:12:34.692062 24 predicates.go:958] vault-unsealer-29232070-5mvj5 from dataplatform started at 2025-07-31 01:10:00 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.692066 24 predicates.go:960] 	Container unsealer ready: false, restart count 0
  I0731 01:12:34.692070 24 predicates.go:958] cilium-envoy-bqgqv from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.692074 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 01:12:34.692078 24 predicates.go:958] cilium-operator-f46ccdf88-57gr7 from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.692087 24 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0731 01:12:34.692092 24 predicates.go:958] cilium-r2g4v from kube-system started at 2025-07-30 09:17:21 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.692096 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 01:12:34.692100 24 predicates.go:958] csi-nfs-node-2ngqc from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 01:12:34.692104 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 01:12:34.692108 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 01:12:34.692112 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 01:12:34.692116 24 predicates.go:958] kube-proxy-h8fkv from kube-system started at 2025-07-30 06:28:11 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.692120 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 01:12:34.692124 24 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-31 00:27:45 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.692132 24 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0731 01:12:34.692136 24 predicates.go:958] sonobuoy-e2e-job-bb61e2b056fa4f2e from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.692140 24 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0731 01:12:34.692143 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 01:12:34.692148 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-tnd7k from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.692152 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 01:12:34.692156 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 01:12:34.692162 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-2 before test
  I0731 01:12:34.707637 24 predicates.go:958] keycloak-77654bfb97-9l8hz from auth started at 2025-07-29 11:59:00 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.707706 24 predicates.go:960] 	Container keycloak ready: true, restart count 0
  I0731 01:12:34.707717 24 predicates.go:958] mariadb-keycloak-0 from auth started at 2025-07-29 11:56:27 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.707726 24 predicates.go:960] 	Container mariadb-keycloak ready: true, restart count 0
  I0731 01:12:34.707734 24 predicates.go:958] oauth2-proxy-admin-796f84987c-rlcwr from auth started at 2025-07-31 01:00:04 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.707743 24 predicates.go:960] 	Container oauth2-proxy-admin ready: true, restart count 0
  I0731 01:12:34.707754 24 predicates.go:958] oauth2-redis-admin-2 from auth started at 2025-07-30 01:44:45 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.707760 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:12:34.707876 24 predicates.go:958] oauth2-redis-admin-3 from auth started at 2025-07-29 11:56:36 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.707883 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:12:34.707890 24 predicates.go:958] cloud-service-api-6fcb7858d4-5m8ds from cmp started at 2025-07-29 13:04:58 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.707896 24 predicates.go:960] 	Container cloud-service-api ready: true, restart count 0
  I0731 01:12:34.707932 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:12:34.708005 24 predicates.go:958] cloud-service-collector-68bdddc6d8-rbqtz from cmp started at 2025-07-29 13:04:58 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.708012 24 predicates.go:960] 	Container cloud-service-collector ready: true, restart count 0
  I0731 01:12:34.708038 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:12:34.708046 24 predicates.go:958] maestro-remote-app-7f5bc68986-fzkx6 from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.708052 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:12:34.708058 24 predicates.go:960] 	Container maestro-remote-app ready: true, restart count 0
  I0731 01:12:34.708083 24 predicates.go:958] notification-adapter-api-794bc8bbcd-j6jlj from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.708089 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:12:34.708095 24 predicates.go:960] 	Container noti-api ready: true, restart count 0
  I0731 01:12:34.708101 24 predicates.go:958] kafka-cluster-kafka-0 from dataplatform started at 2025-07-30 01:44:46 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.708108 24 predicates.go:960] 	Container kafka ready: true, restart count 0
  I0731 01:12:34.708114 24 predicates.go:958] kafka-cluster-zookeeper-1 from dataplatform started at 2025-07-30 01:44:45 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.708120 24 predicates.go:960] 	Container zookeeper ready: true, restart count 0
  I0731 01:12:34.708126 24 predicates.go:958] mariadb-sts-0 from dataplatform started at 2025-07-30 01:44:56 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.708132 24 predicates.go:960] 	Container mariadb ready: true, restart count 0
  I0731 01:12:34.708255 24 predicates.go:958] vault-0 from dataplatform started at 2025-07-29 11:56:28 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.708261 24 predicates.go:960] 	Container vault ready: true, restart count 0
  I0731 01:12:34.708268 24 predicates.go:958] ingress-nginx-controller-847999c88f-64rw2 from ingress-nginx started at 2025-07-29 11:54:19 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.708275 24 predicates.go:960] 	Container controller ready: true, restart count 0
  I0731 01:12:34.708282 24 predicates.go:958] istiod-5c89cf5f74-b54ls from istio-system started at 2025-07-29 11:56:33 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.708290 24 predicates.go:960] 	Container discovery ready: true, restart count 0
  I0731 01:12:34.708297 24 predicates.go:958] cilium-envoy-72jp8 from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.708302 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 01:12:34.708309 24 predicates.go:958] cilium-m7flm from kube-system started at 2025-07-30 09:17:11 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.708315 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 01:12:34.708353 24 predicates.go:958] cilium-operator-f46ccdf88-47vls from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.708359 24 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0731 01:12:34.708391 24 predicates.go:958] csi-nfs-controller-5845c574bf-6thgf from kube-system started at 2025-07-29 11:15:04 +0000 UTC (4 container statuses recorded)
  I0731 01:12:34.708556 24 predicates.go:960] 	Container csi-provisioner ready: true, restart count 0
  I0731 01:12:34.708563 24 predicates.go:960] 	Container csi-snapshotter ready: true, restart count 0
  I0731 01:12:34.708569 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 01:12:34.708575 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 01:12:34.708583 24 predicates.go:958] csi-nfs-node-vddcx from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 01:12:34.708858 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 01:12:34.708866 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 01:12:34.708894 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 01:12:34.708903 24 predicates.go:958] kube-proxy-hsl8d from kube-system started at 2025-07-30 06:28:05 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.708910 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 01:12:34.708963 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-2rw8x from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.708969 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 01:12:34.708984 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 01:12:34.708993 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-3 before test
  I0731 01:12:34.724251 24 predicates.go:958] oauth2-redis-admin-1 from auth started at 2025-07-29 11:56:31 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.724310 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:12:34.724322 24 predicates.go:958] oauth2-redis-admin-4 from auth started at 2025-07-29 11:56:40 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.724346 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:12:34.724355 24 predicates.go:958] maestro-auth-gateway-7b9b4c47d5-pcg4m from cmp started at 2025-07-30 01:44:44 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.724457 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:12:34.724489 24 predicates.go:960] 	Container maestro-auth-gateway ready: true, restart count 0
  I0731 01:12:34.724498 24 predicates.go:958] maestro-event-pusher-8db95cc5-6nppj from cmp started at 2025-07-29 13:44:48 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.724506 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:12:34.724514 24 predicates.go:960] 	Container maestro-event-pusher ready: true, restart count 0
  I0731 01:12:34.724542 24 predicates.go:958] maestro-host-app-86656c9c7d-wcpv2 from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.724578 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:12:34.724598 24 predicates.go:960] 	Container maestro-host-app ready: true, restart count 0
  I0731 01:12:34.724607 24 predicates.go:958] kafka-cluster-entity-operator-c8b5f4df9-x5q5s from dataplatform started at 2025-07-30 01:44:44 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.724639 24 predicates.go:960] 	Container topic-operator ready: true, restart count 0
  I0731 01:12:34.724647 24 predicates.go:960] 	Container user-operator ready: true, restart count 0
  I0731 01:12:34.724670 24 predicates.go:958] kafka-cluster-kafka-1 from dataplatform started at 2025-07-29 13:00:24 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.724697 24 predicates.go:960] 	Container kafka ready: true, restart count 0
  I0731 01:12:34.724727 24 predicates.go:958] kafka-cluster-zookeeper-0 from dataplatform started at 2025-07-29 12:59:50 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.724738 24 predicates.go:960] 	Container zookeeper ready: true, restart count 0
  I0731 01:12:34.724785 24 predicates.go:958] mariadb-maxscale-65f585776b-vwjt4 from dataplatform started at 2025-07-30 01:44:44 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.724794 24 predicates.go:960] 	Container maxscale ready: true, restart count 0
  I0731 01:12:34.724854 24 predicates.go:958] strimzi-cluster-operator-584d5f5789-fdmrh from dataplatform started at 2025-07-29 12:59:42 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.724861 24 predicates.go:960] 	Container strimzi-cluster-operator ready: true, restart count 0
  I0731 01:12:34.724954 24 predicates.go:958] vault-2 from dataplatform started at 2025-07-30 01:44:50 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.724961 24 predicates.go:960] 	Container vault ready: true, restart count 0
  I0731 01:12:34.725013 24 predicates.go:958] cilium-envoy-cxcfx from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.725020 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 01:12:34.725027 24 predicates.go:958] cilium-kwph5 from kube-system started at 2025-07-30 09:17:00 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.725034 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 01:12:34.725041 24 predicates.go:958] coredns-74697c986-cxqqs from kube-system started at 2025-07-29 11:08:48 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.725047 24 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0731 01:12:34.725094 24 predicates.go:958] csi-nfs-node-p4ddz from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 01:12:34.725106 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 01:12:34.725113 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 01:12:34.725119 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 01:12:34.725145 24 predicates.go:958] kube-proxy-ztnk8 from kube-system started at 2025-07-30 06:28:12 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.725191 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 01:12:34.725207 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-bj545 from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.725371 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 01:12:34.725479 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 01:12:34.725603 24 predicates.go:958] viola-api-698955c4b8-n5j5l from viola started at 2025-07-29 13:28:51 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.725637 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:12:34.725644 24 predicates.go:960] 	Container viola-api ready: true, restart count 0
  I0731 01:12:34.725844 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-4 before test
  I0731 01:12:34.740328 24 predicates.go:958] keycloak-77654bfb97-gtpj2 from auth started at 2025-07-29 11:58:53 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.740378 24 predicates.go:960] 	Container keycloak ready: true, restart count 0
  I0731 01:12:34.740385 24 predicates.go:958] oauth2-redis-admin-0 from auth started at 2025-07-29 11:56:28 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.740394 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:12:34.740400 24 predicates.go:958] oauth2-redis-admin-5 from auth started at 2025-07-29 11:56:42 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.740405 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:12:34.740411 24 predicates.go:958] maestro-common-api-6d9dffc99-k6r7h from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.740415 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:12:34.740508 24 predicates.go:960] 	Container maestro-common-api ready: true, restart count 0
  I0731 01:12:34.740514 24 predicates.go:958] maestro-iam-adapter-api-9c76bb77-kgxg9 from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.740518 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:12:34.740523 24 predicates.go:960] 	Container maestro-iam-adapter-api ready: true, restart count 0
  I0731 01:12:34.740528 24 predicates.go:958] kafka-cluster-kafka-2 from dataplatform started at 2025-07-29 13:00:24 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.740533 24 predicates.go:960] 	Container kafka ready: true, restart count 0
  I0731 01:12:34.740684 24 predicates.go:958] kafka-cluster-zookeeper-2 from dataplatform started at 2025-07-29 12:59:50 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.740850 24 predicates.go:960] 	Container zookeeper ready: true, restart count 0
  I0731 01:12:34.740960 24 predicates.go:958] mariadb-maxscale-65f585776b-8b454 from dataplatform started at 2025-07-29 11:56:26 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.740965 24 predicates.go:960] 	Container maxscale ready: true, restart count 0
  I0731 01:12:34.740970 24 predicates.go:958] mariadb-sts-1 from dataplatform started at 2025-07-29 11:56:32 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.740978 24 predicates.go:960] 	Container mariadb ready: true, restart count 0
  I0731 01:12:34.741070 24 predicates.go:958] redis-0 from dataplatform started at 2025-07-29 11:56:27 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.741075 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:12:34.741082 24 predicates.go:958] vault-1 from dataplatform started at 2025-07-29 11:56:29 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.741171 24 predicates.go:960] 	Container vault ready: true, restart count 0
  I0731 01:12:34.741234 24 predicates.go:958] ingress-nginx-admission-create-gzb57 from ingress-nginx started at 2025-07-29 11:54:19 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.741241 24 predicates.go:960] 	Container create ready: false, restart count 0
  I0731 01:12:34.741340 24 predicates.go:958] istio-gateway-6966544c9c-54w69 from istio-system started at 2025-07-30 01:44:44 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.741349 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:12:34.741473 24 predicates.go:958] cilium-envoy-85rht from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.741481 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 01:12:34.741534 24 predicates.go:958] cilium-hw2q8 from kube-system started at 2025-07-30 09:16:49 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.741578 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 01:12:34.741588 24 predicates.go:958] coredns-74697c986-vrt9w from kube-system started at 2025-07-29 11:08:55 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.741633 24 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0731 01:12:34.741643 24 predicates.go:958] csi-nfs-node-rp6pv from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 01:12:34.741648 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 01:12:34.741690 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 01:12:34.741695 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 01:12:34.741700 24 predicates.go:958] dns-autoscaler-56cb45595c-wgcr2 from kube-system started at 2025-07-29 11:08:50 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.741753 24 predicates.go:960] 	Container autoscaler ready: true, restart count 0
  I0731 01:12:34.741758 24 predicates.go:958] kube-proxy-dhsft from kube-system started at 2025-07-30 06:28:14 +0000 UTC (1 container statuses recorded)
  I0731 01:12:34.741774 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 01:12:34.741815 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-2bzrg from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.741821 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 01:12:34.741861 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 01:12:34.741866 24 predicates.go:958] viola-remote-app-59b954dd94-kkvc5 from viola started at 2025-07-30 01:44:44 +0000 UTC (2 container statuses recorded)
  I0731 01:12:34.741870 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:12:34.741924 24 predicates.go:960] 	Container viola-remote-app ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/31/25 01:12:34.742
  E0731 01:12:34.769710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:35.770049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:36.770054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/31/25 01:12:36.771
  STEP: Trying to apply a random label on the found node. @ 07/31/25 01:12:36.794
  STEP: verifying the node has the label kubernetes.io/e2e-88bbaaa7-effa-4457-af4d-9b0180754a2a 95 @ 07/31/25 01:12:36.816
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/31/25 01:12:36.82
  E0731 01:12:37.770395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:38.770542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.20.30.203 on the node which pod4 resides and expect not scheduled @ 07/31/25 01:12:38.845
  E0731 01:12:39.771009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:40.771266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:41.771606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:42.771942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:43.772683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:44.772842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:45.773052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:46.773392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:47.773616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:48.773915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:49.774768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:50.774962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:51.775313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:52.775417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:53.776016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:54.776910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:55.777827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:56.778164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:57.778711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:58.778955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:12:59.779310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:00.779596      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:01.779697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:02.779951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:03.780084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:04.780697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:05.781128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:06.781374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:07.781625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:08.782002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:09.782860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:10.783239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:11.783423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:12.783718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:13.783908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:14.784052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:15.784548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:16.784826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:17.785132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:18.785440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:19.785691      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:20.786027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:21.786772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:22.787085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:23.787776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:24.787933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:25.788188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:26.788464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:27.788852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:28.789160      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:29.790194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:30.790388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:31.791093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:32.791256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:33.791903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:34.792893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:35.794064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:36.794076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:37.795121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:38.795318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:39.796339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:40.796483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:41.797116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:42.797273      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:43.797364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:44.797760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:45.798770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:46.799165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:47.800127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:48.801135      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:49.802183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:50.802429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:51.803417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:52.803679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:53.803870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:54.804081      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:55.804668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:56.805542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:57.806257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:58.807355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:13:59.807893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:00.807899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:01.808840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:02.809081      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:03.809143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:04.809374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:05.809516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:06.809840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:07.809913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:08.810255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:09.810979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:10.811288      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:11.811452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:12.811808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:13.811967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:14.812127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:15.813199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:16.813997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:17.814354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:18.814507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:19.814744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:20.815056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:21.815999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:22.817021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:23.817717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:24.817918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:25.818876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:26.819161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:27.820072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:28.820674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:29.820896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:30.821417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:31.822290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:32.822948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:33.823067      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:34.823294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:35.824046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:36.824414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:37.825277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:38.825632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:39.825761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:40.826308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:41.826950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:42.827950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:43.828633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:44.828783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:45.829027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:46.829434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:47.829855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:48.830264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:49.830915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:50.831495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:51.831966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:52.832352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:53.833306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:54.833626      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:55.833834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:56.834200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:57.835199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:58.835718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:14:59.836470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:00.836918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:01.837468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:02.837763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:03.837852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:04.838129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:05.838263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:06.838778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:07.839836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:08.840324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:09.840845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:10.840971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:11.841085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:12.841245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:13.841420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:14.842534      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:15.843189      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:16.843476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:17.843612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:18.843927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:19.844578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:20.845013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:21.846096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:22.846528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:23.846723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:24.846887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:25.847350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:26.847740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:27.848766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:28.849229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:29.849862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:30.850215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:31.851371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:32.851825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:33.852065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:34.852201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:35.853190      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:36.853790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:37.853908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:38.854817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:39.855591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:40.855693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:41.855881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:42.856292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:43.856962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:44.857188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:45.857469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:46.857603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:47.857712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:48.858016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:49.858565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:50.858875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:51.859072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:52.859127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:53.859317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:54.859944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:55.860897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:56.860966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:57.861208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:58.861375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:15:59.861887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:00.861998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:01.862251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:02.862387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:03.863223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:04.863864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:05.864632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:06.864900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:07.865284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:08.865424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:09.866178      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:10.866362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:11.866564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:12.866659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:13.867233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:14.867505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:15.867573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:16.867824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:17.868557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:18.868727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:19.868806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:20.868974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:21.869370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:22.869506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:23.869910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:24.870915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:25.871700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:26.871967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:27.871870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:28.872024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:29.872463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:30.872699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:31.873831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:32.873844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:33.874910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:34.875883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:35.876223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:36.876359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:37.876818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:38.876937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:39.877767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:40.877922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:41.878950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:42.879097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:43.880078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:44.880513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:45.881541      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:46.881851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:47.882527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:48.882850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:49.883802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:50.883922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:51.884698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:52.884836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:53.885350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:54.885572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:55.886454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:56.886751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:57.886909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:58.887243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:16:59.888257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:00.888528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:01.889377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:02.889644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:03.889783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:04.890004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:05.890077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:06.890940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:07.891218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:08.891641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:09.891777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:10.892213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:11.892405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:12.892858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:13.892888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:14.893063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:15.893907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:16.894262      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:17.894531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:18.894841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:19.894992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:20.895965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:21.896570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:22.896976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:23.898000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:24.898194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:25.898643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:26.899023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:27.899677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:28.900453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:29.901472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:30.901900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:31.901975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:32.902277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:33.903139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:34.903437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:35.903594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:36.904352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:37.905414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-88bbaaa7-effa-4457-af4d-9b0180754a2a off the node viola-gs-worker-1 @ 07/31/25 01:17:38.859
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-88bbaaa7-effa-4457-af4d-9b0180754a2a @ 07/31/25 01:17:38.883
  I0731 01:17:38.888340 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7391" for this suite. @ 07/31/25 01:17:38.899
  E0731 01:17:38.906166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
• [304.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 07/31/25 01:17:38.91
  I0731 01:17:38.910514 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename runtimeclass @ 07/31/25 01:17:38.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:17:38.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:17:38.941
  STEP: Deleting RuntimeClass runtimeclass-8210-delete-me @ 07/31/25 01:17:38.952
  STEP: Waiting for the RuntimeClass to disappear @ 07/31/25 01:17:38.959
  I0731 01:17:38.968811 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8210" for this suite. @ 07/31/25 01:17:38.998
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 07/31/25 01:17:39.007
  I0731 01:17:39.007651 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 01:17:39.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:17:39.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:17:39.024
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/31/25 01:17:39.027
  E0731 01:17:39.906407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:40.906739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:41.906915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:42.907346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:17:43.104
  I0731 01:17:43.114218 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-d997be6c-6570-4a82-845d-aa28c30ab733 container test-container: <nil>
  STEP: delete the pod @ 07/31/25 01:17:43.131
  I0731 01:17:43.153711 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2708" for this suite. @ 07/31/25 01:17:43.158
• [4.161 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 07/31/25 01:17:43.168
  I0731 01:17:43.168328 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 01:17:43.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:17:43.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:17:43.188
  STEP: Creating configMap with name projected-configmap-test-volume-d5980623-2323-4977-a173-64b8b93e4c2f @ 07/31/25 01:17:43.191
  STEP: Creating a pod to test consume configMaps @ 07/31/25 01:17:43.197
  E0731 01:17:43.907964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:44.908202      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:45.908871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:46.909274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:17:47.221
  I0731 01:17:47.229060 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-projected-configmaps-b40fcbe0-3477-4854-ae99-73fd75343ce8 container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 01:17:47.237
  I0731 01:17:47.259531 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6956" for this suite. @ 07/31/25 01:17:47.268
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/31/25 01:17:47.28
  I0731 01:17:47.280999 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename apf @ 07/31/25 01:17:47.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:17:47.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:17:47.312
  STEP: getting /apis @ 07/31/25 01:17:47.316
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/31/25 01:17:47.323
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/31/25 01:17:47.324
  STEP: creating @ 07/31/25 01:17:47.326
  STEP: getting @ 07/31/25 01:17:47.353
  STEP: listing @ 07/31/25 01:17:47.371
  STEP: watching @ 07/31/25 01:17:47.38
  I0731 01:17:47.381125 24 flowcontrol.go:394] starting watch
  STEP: patching @ 07/31/25 01:17:47.382
  STEP: updating @ 07/31/25 01:17:47.392
  I0731 01:17:47.402625 24 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 07/31/25 01:17:47.402
  STEP: patching /status @ 07/31/25 01:17:47.406
  STEP: updating /status @ 07/31/25 01:17:47.416
  STEP: deleting @ 07/31/25 01:17:47.446
  STEP: deleting a collection @ 07/31/25 01:17:47.462
  I0731 01:17:47.496963 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-8590" for this suite. @ 07/31/25 01:17:47.501
• [0.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 07/31/25 01:17:47.515
  I0731 01:17:47.515056 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename replication-controller @ 07/31/25 01:17:47.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:17:47.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:17:47.541
  STEP: Creating replication controller my-hostname-basic-3eca5d94-06a0-4170-836d-a87bb2a3eed0 @ 07/31/25 01:17:47.545
  I0731 01:17:47.659028 24 resource.go:81] Pod name my-hostname-basic-3eca5d94-06a0-4170-836d-a87bb2a3eed0: Found 0 pods out of 1
  E0731 01:17:47.909474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:48.909656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:49.909795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:50.909953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:51.910333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:17:52.664303 24 resource.go:81] Pod name my-hostname-basic-3eca5d94-06a0-4170-836d-a87bb2a3eed0: Found 1 pods out of 1
  I0731 01:17:52.664455 24 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-3eca5d94-06a0-4170-836d-a87bb2a3eed0" are running
  I0731 01:17:52.670571 24 rc.go:525] Pod "my-hostname-basic-3eca5d94-06a0-4170-836d-a87bb2a3eed0-lvt87" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-31 01:17:49 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-31 01:17:47 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-31 01:17:49 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-31 01:17:49 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-31 01:17:47 +0000 UTC Reason: Message:}])
  I0731 01:17:52.670631 24 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/31/25 01:17:52.67
  I0731 01:17:52.683402 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9467" for this suite. @ 07/31/25 01:17:52.688
• [5.180 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 07/31/25 01:17:52.695
  I0731 01:17:52.695457 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 01:17:52.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:17:52.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:17:52.717
  STEP: Creating configMap with name configmap-test-volume-a658a29b-109a-4605-b0a0-d5fe0ff43ba5 @ 07/31/25 01:17:52.72
  STEP: Creating a pod to test consume configMaps @ 07/31/25 01:17:52.728
  E0731 01:17:52.911048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:53.911430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:54.911555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:55.911940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:17:56.755
  I0731 01:17:56.757830 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-configmaps-fe1f1ad9-a10a-4c4d-82d8-55f8aa30e08c container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 01:17:56.764
  I0731 01:17:56.788353 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9101" for this suite. @ 07/31/25 01:17:56.797
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 07/31/25 01:17:56.806
  I0731 01:17:56.806524 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename field-validation @ 07/31/25 01:17:56.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:17:56.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:17:56.847
  I0731 01:17:56.849891 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 01:17:56.912934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:57.913137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:58.913940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:17:59.914434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:00.915360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:01.915926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:02.916862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:03.917235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:04.918232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:18:04.943335 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9874" for this suite. @ 07/31/25 01:18:04.948
• [8.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 07/31/25 01:18:04.958
  I0731 01:18:04.958620 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 01:18:04.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:18:04.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:18:04.981
  STEP: Creating configMap with name projected-configmap-test-volume-217ff154-4bf1-4eb0-8a6b-b97c76b5303d @ 07/31/25 01:18:04.987
  STEP: Creating a pod to test consume configMaps @ 07/31/25 01:18:04.993
  E0731 01:18:05.918952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:06.919781      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:07.919810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:08.920618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:18:09.017
  I0731 01:18:09.021546 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-projected-configmaps-14d6fe1f-4982-4710-bbbe-26fedc4c14e5 container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 01:18:09.029
  I0731 01:18:09.056511 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6589" for this suite. @ 07/31/25 01:18:09.061
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/31/25 01:18:09.072
  I0731 01:18:09.072779 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename limitrange @ 07/31/25 01:18:09.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:18:09.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:18:09.103
  STEP: Creating LimitRange "e2e-limitrange-ffpqg" in namespace "limitrange-4924" @ 07/31/25 01:18:09.106
  STEP: Creating another limitRange in another namespace @ 07/31/25 01:18:09.114
  I0731 01:18:09.138162 24 limit_range.go:299] Namespace "e2e-limitrange-ffpqg-160" created
  I0731 01:18:09.138211 24 limit_range.go:300] Creating LimitRange "e2e-limitrange-ffpqg" in namespace "e2e-limitrange-ffpqg-160"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-ffpqg" @ 07/31/25 01:18:09.145
  I0731 01:18:09.149284 24 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-ffpqg" in "limitrange-4924" namespace @ 07/31/25 01:18:09.149
  I0731 01:18:09.158460 24 limit_range.go:335] LimitRange "e2e-limitrange-ffpqg" has been patched
  STEP: Delete LimitRange "e2e-limitrange-ffpqg" by Collection with labelSelector: "e2e-limitrange-ffpqg=patched" @ 07/31/25 01:18:09.158
  STEP: Confirm that the limitRange "e2e-limitrange-ffpqg" has been deleted @ 07/31/25 01:18:09.167
  I0731 01:18:09.168222 24 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0731 01:18:09.170821 24 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-ffpqg=patched"
  I0731 01:18:09.170869 24 limit_range.go:344] LimitRange "e2e-limitrange-ffpqg" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-ffpqg" @ 07/31/25 01:18:09.17
  I0731 01:18:09.173679 24 limit_range.go:350] Found 1 limitRange
  I0731 01:18:09.173813 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4924" for this suite. @ 07/31/25 01:18:09.178
  STEP: Destroying namespace "e2e-limitrange-ffpqg-160" for this suite. @ 07/31/25 01:18:09.187
• [0.128 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 07/31/25 01:18:09.2
  I0731 01:18:09.200582 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename sched-preemption @ 07/31/25 01:18:09.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:18:09.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:18:09.229
  I0731 01:18:09.249033 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0731 01:18:09.921423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:10.921561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:11.921969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:12.922634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:13.922829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:14.922957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:15.923513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:16.924065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:17.924222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:18.924354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:19.925432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:20.925678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:21.925889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:22.926197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:23.926753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:24.926872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:25.927689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:26.927798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:27.928838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:28.929212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:29.930043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:30.930170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:31.930852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:32.931223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:33.931784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:34.931905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:35.932082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:36.932528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:37.933433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:38.933837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:39.934427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:40.934739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:41.934914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:42.936010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:43.936555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:44.936689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:45.937774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:46.938171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:47.938497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:48.938442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:49.939422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:50.939679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:51.939844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:52.939981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:53.940764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:54.940896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:55.941027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:56.941103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:57.942114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:58.942574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:18:59.942671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:00.943032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:01.943049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:02.943406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:03.943699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:04.943748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:05.944056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:06.944157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:07.944339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:08.944643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:09.256600 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/31/25 01:19:09.26
  STEP: Adding a custom resource @ 07/31/25 01:19:09.26
  I0731 01:19:09.285686 24 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0731 01:19:09.301430 24 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/31/25 01:19:09.301
  I0731 01:19:09.355089 24 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0731 01:19:09.380566 24 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/31/25 01:19:09.38
  I0731 01:19:09.409005 24 preemption.go:257] Created pod: pod2-0-sched-preemption-medium-priority
  I0731 01:19:09.421809 24 preemption.go:257] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/31/25 01:19:09.421
  I0731 01:19:09.457888 24 preemption.go:257] Created pod: pod3-0-sched-preemption-medium-priority
  I0731 01:19:09.470155 24 preemption.go:257] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/31/25 01:19:09.47
  E0731 01:19:09.945625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:10.945897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/31/25 01:19:11.505
  E0731 01:19:11.946881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:12.947207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/31/25 01:19:13.6
  STEP: Removing a custom resource @ 07/31/25 01:19:13.615
  STEP: Removing a custom resource @ 07/31/25 01:19:13.631
  STEP: Removing a custom resource @ 07/31/25 01:19:13.645
  I0731 01:19:13.660128 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3723" for this suite. @ 07/31/25 01:19:13.663
• [64.473 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/31/25 01:19:13.674
  I0731 01:19:13.674185 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename apf @ 07/31/25 01:19:13.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:19:13.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:19:13.763
  STEP: getting /apis @ 07/31/25 01:19:13.766
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/31/25 01:19:13.77
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/31/25 01:19:13.771
  STEP: creating @ 07/31/25 01:19:13.773
  STEP: getting @ 07/31/25 01:19:13.794
  STEP: listing @ 07/31/25 01:19:13.797
  STEP: watching @ 07/31/25 01:19:13.801
  I0731 01:19:13.801094 24 flowcontrol.go:620] starting watch
  STEP: patching @ 07/31/25 01:19:13.802
  STEP: updating @ 07/31/25 01:19:13.808
  I0731 01:19:13.816987 24 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 07/31/25 01:19:13.817
  STEP: patching /status @ 07/31/25 01:19:13.819
  STEP: updating /status @ 07/31/25 01:19:13.826
  STEP: deleting @ 07/31/25 01:19:13.837
  STEP: deleting a collection @ 07/31/25 01:19:13.854
  I0731 01:19:13.874797 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7404" for this suite. @ 07/31/25 01:19:13.879
• [0.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/31/25 01:19:13.887
  I0731 01:19:13.887250 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename events @ 07/31/25 01:19:13.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:19:13.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:19:13.907
  STEP: Create set of events @ 07/31/25 01:19:13.909
  I0731 01:19:13.916199 24 core_events.go:198] created test-event-1
  I0731 01:19:13.923105 24 core_events.go:198] created test-event-2
  I0731 01:19:13.927676 24 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/31/25 01:19:13.927
  STEP: delete collection of events @ 07/31/25 01:19:13.93
  I0731 01:19:13.930863 24 core_events.go:213] requesting DeleteCollection of events
  E0731 01:19:13.948044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check that the list of events matches the requested quantity @ 07/31/25 01:19:13.95
  I0731 01:19:13.951162 24 core_events.go:230] requesting list of events to confirm quantity
  I0731 01:19:13.953888 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5114" for this suite. @ 07/31/25 01:19:13.981
• [0.104 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/31/25 01:19:13.991
  I0731 01:19:13.992176 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename init-container @ 07/31/25 01:19:13.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:19:14.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:19:14.013
  STEP: creating the pod @ 07/31/25 01:19:14.016
  I0731 01:19:14.016111 24 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0731 01:19:14.948454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:15.949534      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:16.950361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:17.950989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:18.701243 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4631" for this suite. @ 07/31/25 01:19:18.705
• [4.739 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 07/31/25 01:19:18.73
  I0731 01:19:18.730183 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 01:19:18.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:19:18.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:19:18.756
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/31/25 01:19:18.758
  E0731 01:19:18.952101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:19.953039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:20.953614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:21.953787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:19:22.786
  I0731 01:19:22.790240 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-ccca3a6e-129e-41e4-a9fe-b719dec7cc6a container test-container: <nil>
  STEP: delete the pod @ 07/31/25 01:19:22.797
  I0731 01:19:22.819788 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6795" for this suite. @ 07/31/25 01:19:22.825
• [4.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/31/25 01:19:22.836
  I0731 01:19:22.836114 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename svc-latency @ 07/31/25 01:19:22.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:19:22.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:19:22.858
  I0731 01:19:22.862903 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  I0731 01:19:22.879004 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0731 01:19:22.954272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:23.954667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:24.887513      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 01:19:24.889280      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0731 01:19:24.955592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:25.010708 24 service_latency.go:351] Created: latency-svc-zzx9d
  I0731 01:19:25.038531 24 service_latency.go:358] Got endpoints: latency-svc-zzx9d [51.850396ms]
  I0731 01:19:25.064154 24 service_latency.go:351] Created: latency-svc-g2sxr
  I0731 01:19:25.084159 24 service_latency.go:351] Created: latency-svc-psn68
  I0731 01:19:25.084497 24 service_latency.go:358] Got endpoints: latency-svc-g2sxr [45.323991ms]
  I0731 01:19:25.097368 24 service_latency.go:358] Got endpoints: latency-svc-psn68 [58.654613ms]
  I0731 01:19:25.099692 24 service_latency.go:351] Created: latency-svc-ndcmw
  I0731 01:19:25.114954 24 service_latency.go:358] Got endpoints: latency-svc-ndcmw [75.816507ms]
  I0731 01:19:25.116363 24 service_latency.go:351] Created: latency-svc-kxqbd
  I0731 01:19:25.131296 24 service_latency.go:358] Got endpoints: latency-svc-kxqbd [91.947247ms]
  I0731 01:19:25.136142 24 service_latency.go:351] Created: latency-svc-md8mv
  I0731 01:19:25.150751 24 service_latency.go:351] Created: latency-svc-f42r2
  I0731 01:19:25.152971 24 service_latency.go:358] Got endpoints: latency-svc-md8mv [113.316959ms]
  I0731 01:19:25.158804 24 service_latency.go:351] Created: latency-svc-lzrpq
  I0731 01:19:25.158939 24 service_latency.go:358] Got endpoints: latency-svc-f42r2 [119.133741ms]
  I0731 01:19:25.169486 24 service_latency.go:358] Got endpoints: latency-svc-lzrpq [129.736398ms]
  I0731 01:19:25.187915 24 service_latency.go:351] Created: latency-svc-vxtzn
  I0731 01:19:25.204362 24 service_latency.go:358] Got endpoints: latency-svc-vxtzn [164.553984ms]
  I0731 01:19:25.206030 24 service_latency.go:351] Created: latency-svc-26stk
  I0731 01:19:25.218812 24 service_latency.go:358] Got endpoints: latency-svc-26stk [179.048519ms]
  I0731 01:19:25.221076 24 service_latency.go:351] Created: latency-svc-rcb49
  I0731 01:19:25.240240 24 service_latency.go:351] Created: latency-svc-zkpg7
  I0731 01:19:25.247209 24 service_latency.go:358] Got endpoints: latency-svc-rcb49 [207.62737ms]
  I0731 01:19:25.251560 24 service_latency.go:358] Got endpoints: latency-svc-zkpg7 [211.716784ms]
  I0731 01:19:25.267608 24 service_latency.go:351] Created: latency-svc-kvwp2
  I0731 01:19:25.270258 24 service_latency.go:351] Created: latency-svc-jt9p2
  I0731 01:19:25.276537 24 service_latency.go:358] Got endpoints: latency-svc-kvwp2 [237.599068ms]
  I0731 01:19:25.288134 24 service_latency.go:358] Got endpoints: latency-svc-jt9p2 [248.420047ms]
  I0731 01:19:25.293668 24 service_latency.go:351] Created: latency-svc-bd56f
  I0731 01:19:25.310871 24 service_latency.go:358] Got endpoints: latency-svc-bd56f [271.279903ms]
  I0731 01:19:25.316778 24 service_latency.go:351] Created: latency-svc-wm7g7
  I0731 01:19:25.326910 24 service_latency.go:358] Got endpoints: latency-svc-wm7g7 [287.400108ms]
  I0731 01:19:25.335807 24 service_latency.go:351] Created: latency-svc-p8msx
  I0731 01:19:25.353863 24 service_latency.go:351] Created: latency-svc-cvr2d
  I0731 01:19:25.390168 24 service_latency.go:358] Got endpoints: latency-svc-cvr2d [292.623307ms]
  I0731 01:19:25.390401 24 service_latency.go:358] Got endpoints: latency-svc-p8msx [305.513651ms]
  I0731 01:19:25.466073 24 service_latency.go:351] Created: latency-svc-ffftm
  I0731 01:19:25.473731 24 service_latency.go:351] Created: latency-svc-p79c5
  I0731 01:19:25.480879 24 service_latency.go:358] Got endpoints: latency-svc-ffftm [365.872016ms]
  I0731 01:19:25.491026 24 service_latency.go:358] Got endpoints: latency-svc-p79c5 [359.524528ms]
  I0731 01:19:25.491471 24 service_latency.go:351] Created: latency-svc-9mgjd
  I0731 01:19:25.503215 24 service_latency.go:358] Got endpoints: latency-svc-9mgjd [349.783982ms]
  I0731 01:19:25.510391 24 service_latency.go:351] Created: latency-svc-fdjh9
  I0731 01:19:25.520172 24 service_latency.go:358] Got endpoints: latency-svc-fdjh9 [361.212116ms]
  I0731 01:19:25.520213 24 service_latency.go:351] Created: latency-svc-wcs92
  I0731 01:19:25.540019 24 service_latency.go:358] Got endpoints: latency-svc-wcs92 [370.341336ms]
  I0731 01:19:25.542672 24 service_latency.go:351] Created: latency-svc-lm6sw
  I0731 01:19:25.553718 24 service_latency.go:358] Got endpoints: latency-svc-lm6sw [349.08689ms]
  I0731 01:19:25.563851 24 service_latency.go:351] Created: latency-svc-pv8zw
  I0731 01:19:25.571615 24 service_latency.go:351] Created: latency-svc-mwjb4
  I0731 01:19:25.572854 24 service_latency.go:358] Got endpoints: latency-svc-pv8zw [353.739648ms]
  I0731 01:19:25.580788 24 service_latency.go:351] Created: latency-svc-crvb9
  I0731 01:19:25.586727 24 service_latency.go:358] Got endpoints: latency-svc-mwjb4 [339.424667ms]
  I0731 01:19:25.600602 24 service_latency.go:358] Got endpoints: latency-svc-crvb9 [348.84017ms]
  I0731 01:19:25.618327 24 service_latency.go:351] Created: latency-svc-pq7w4
  I0731 01:19:25.629471 24 service_latency.go:358] Got endpoints: latency-svc-pq7w4 [352.877259ms]
  I0731 01:19:25.630100 24 service_latency.go:351] Created: latency-svc-7mztz
  I0731 01:19:25.638892 24 service_latency.go:351] Created: latency-svc-wrxxj
  I0731 01:19:25.644114 24 service_latency.go:358] Got endpoints: latency-svc-7mztz [355.921608ms]
  I0731 01:19:25.658849 24 service_latency.go:358] Got endpoints: latency-svc-wrxxj [347.913399ms]
  I0731 01:19:25.667477 24 service_latency.go:351] Created: latency-svc-8mb4p
  I0731 01:19:25.679370 24 service_latency.go:358] Got endpoints: latency-svc-8mb4p [352.401066ms]
  I0731 01:19:25.687038 24 service_latency.go:351] Created: latency-svc-4qzz5
  I0731 01:19:25.697419 24 service_latency.go:351] Created: latency-svc-5fftl
  I0731 01:19:25.707416 24 service_latency.go:358] Got endpoints: latency-svc-4qzz5 [316.964588ms]
  I0731 01:19:25.709103 24 service_latency.go:358] Got endpoints: latency-svc-5fftl [318.858563ms]
  I0731 01:19:25.714290 24 service_latency.go:351] Created: latency-svc-4jm4j
  I0731 01:19:25.729531 24 service_latency.go:358] Got endpoints: latency-svc-4jm4j [248.577493ms]
  I0731 01:19:25.733759 24 service_latency.go:351] Created: latency-svc-t7ltj
  I0731 01:19:25.743212 24 service_latency.go:351] Created: latency-svc-zpn6f
  I0731 01:19:25.745903 24 service_latency.go:358] Got endpoints: latency-svc-t7ltj [254.813346ms]
  I0731 01:19:25.762467 24 service_latency.go:358] Got endpoints: latency-svc-zpn6f [259.175291ms]
  I0731 01:19:25.766841 24 service_latency.go:351] Created: latency-svc-4h4c7
  I0731 01:19:25.778995 24 service_latency.go:358] Got endpoints: latency-svc-4h4c7 [258.744119ms]
  I0731 01:19:25.785807 24 service_latency.go:351] Created: latency-svc-zm6mj
  I0731 01:19:25.800119 24 service_latency.go:351] Created: latency-svc-hvbn7
  I0731 01:19:25.812315 24 service_latency.go:358] Got endpoints: latency-svc-zm6mj [272.209925ms]
  I0731 01:19:25.817984 24 service_latency.go:358] Got endpoints: latency-svc-hvbn7 [264.189159ms]
  I0731 01:19:25.826147 24 service_latency.go:351] Created: latency-svc-ptkt9
  I0731 01:19:25.835879 24 service_latency.go:358] Got endpoints: latency-svc-ptkt9 [262.685246ms]
  I0731 01:19:25.850924 24 service_latency.go:351] Created: latency-svc-ghpkb
  I0731 01:19:25.856635 24 service_latency.go:351] Created: latency-svc-fld9z
  I0731 01:19:25.865246 24 service_latency.go:358] Got endpoints: latency-svc-fld9z [278.460393ms]
  I0731 01:19:25.873567 24 service_latency.go:358] Got endpoints: latency-svc-ghpkb [272.748665ms]
  I0731 01:19:25.879840 24 service_latency.go:351] Created: latency-svc-4k9pb
  I0731 01:19:25.895175 24 service_latency.go:358] Got endpoints: latency-svc-4k9pb [265.627608ms]
  I0731 01:19:25.907438 24 service_latency.go:351] Created: latency-svc-cg7cs
  I0731 01:19:25.923930 24 service_latency.go:358] Got endpoints: latency-svc-cg7cs [279.282354ms]
  I0731 01:19:25.925202 24 service_latency.go:351] Created: latency-svc-kxvqd
  I0731 01:19:25.936311 24 service_latency.go:358] Got endpoints: latency-svc-kxvqd [277.387162ms]
  I0731 01:19:25.938378 24 service_latency.go:351] Created: latency-svc-fpm57
  I0731 01:19:25.950848 24 service_latency.go:358] Got endpoints: latency-svc-fpm57 [271.399419ms]
  E0731 01:19:25.957713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:25.960916 24 service_latency.go:351] Created: latency-svc-sjh97
  I0731 01:19:25.962101 24 service_latency.go:351] Created: latency-svc-sw58k
  I0731 01:19:25.972672 24 service_latency.go:358] Got endpoints: latency-svc-sjh97 [265.187508ms]
  I0731 01:19:25.982851 24 service_latency.go:358] Got endpoints: latency-svc-sw58k [273.686236ms]
  I0731 01:19:25.999018 24 service_latency.go:351] Created: latency-svc-q8gt9
  I0731 01:19:26.012462 24 service_latency.go:358] Got endpoints: latency-svc-q8gt9 [282.864372ms]
  I0731 01:19:26.015367 24 service_latency.go:351] Created: latency-svc-dr6dj
  I0731 01:19:26.015450 24 service_latency.go:351] Created: latency-svc-rh4sb
  I0731 01:19:26.030076 24 service_latency.go:358] Got endpoints: latency-svc-rh4sb [284.102186ms]
  I0731 01:19:26.038389 24 service_latency.go:351] Created: latency-svc-ttpb4
  I0731 01:19:26.047086 24 service_latency.go:351] Created: latency-svc-xwssz
  I0731 01:19:26.062437 24 service_latency.go:351] Created: latency-svc-dphnn
  I0731 01:19:26.090949 24 service_latency.go:358] Got endpoints: latency-svc-dr6dj [328.409957ms]
  I0731 01:19:26.100896 24 service_latency.go:351] Created: latency-svc-wb9np
  I0731 01:19:26.103851 24 service_latency.go:351] Created: latency-svc-cmbpm
  I0731 01:19:26.112260 24 service_latency.go:351] Created: latency-svc-smtgl
  I0731 01:19:26.134098 24 service_latency.go:358] Got endpoints: latency-svc-ttpb4 [355.033919ms]
  I0731 01:19:26.138218 24 service_latency.go:351] Created: latency-svc-xz2g7
  I0731 01:19:26.151787 24 service_latency.go:351] Created: latency-svc-lx9vt
  I0731 01:19:26.161148 24 service_latency.go:351] Created: latency-svc-8dmlc
  I0731 01:19:26.173292 24 service_latency.go:351] Created: latency-svc-2qwqq
  I0731 01:19:26.187631 24 service_latency.go:358] Got endpoints: latency-svc-xwssz [374.684704ms]
  I0731 01:19:26.195215 24 service_latency.go:351] Created: latency-svc-pr94z
  I0731 01:19:26.195956 24 service_latency.go:351] Created: latency-svc-sd87q
  I0731 01:19:26.209635 24 service_latency.go:351] Created: latency-svc-d5lwl
  I0731 01:19:26.226913 24 service_latency.go:351] Created: latency-svc-4s4pm
  I0731 01:19:26.236163 24 service_latency.go:351] Created: latency-svc-hdj7d
  I0731 01:19:26.238100 24 service_latency.go:358] Got endpoints: latency-svc-dphnn [420.067067ms]
  I0731 01:19:26.267193 24 service_latency.go:351] Created: latency-svc-fs2qn
  I0731 01:19:26.281004 24 service_latency.go:351] Created: latency-svc-zh8fp
  I0731 01:19:26.281005 24 service_latency.go:358] Got endpoints: latency-svc-wb9np [445.042783ms]
  I0731 01:19:26.281085 24 service_latency.go:351] Created: latency-svc-wsqmp
  I0731 01:19:26.311156 24 service_latency.go:351] Created: latency-svc-zjkhb
  I0731 01:19:26.327054 24 service_latency.go:358] Got endpoints: latency-svc-cmbpm [461.750221ms]
  I0731 01:19:26.351422 24 service_latency.go:351] Created: latency-svc-wsv6h
  I0731 01:19:26.387730 24 service_latency.go:358] Got endpoints: latency-svc-smtgl [513.734405ms]
  I0731 01:19:26.417575 24 service_latency.go:351] Created: latency-svc-2cglg
  I0731 01:19:26.426131 24 service_latency.go:358] Got endpoints: latency-svc-xz2g7 [530.897323ms]
  I0731 01:19:26.457899 24 service_latency.go:351] Created: latency-svc-tpq9d
  I0731 01:19:26.478944 24 service_latency.go:358] Got endpoints: latency-svc-lx9vt [554.92923ms]
  I0731 01:19:26.504844 24 service_latency.go:351] Created: latency-svc-w24nn
  I0731 01:19:26.528152 24 service_latency.go:358] Got endpoints: latency-svc-8dmlc [591.769032ms]
  I0731 01:19:26.553982 24 service_latency.go:351] Created: latency-svc-6lq4l
  I0731 01:19:26.578006 24 service_latency.go:358] Got endpoints: latency-svc-2qwqq [625.460207ms]
  I0731 01:19:26.609026 24 service_latency.go:351] Created: latency-svc-gjdjd
  I0731 01:19:26.627696 24 service_latency.go:358] Got endpoints: latency-svc-pr94z [654.931869ms]
  I0731 01:19:26.658581 24 service_latency.go:351] Created: latency-svc-s8pzr
  I0731 01:19:26.679070 24 service_latency.go:358] Got endpoints: latency-svc-sd87q [696.007901ms]
  I0731 01:19:26.708238 24 service_latency.go:351] Created: latency-svc-ks4tt
  I0731 01:19:26.728552 24 service_latency.go:358] Got endpoints: latency-svc-d5lwl [715.796312ms]
  I0731 01:19:26.768863 24 service_latency.go:351] Created: latency-svc-t6xjn
  I0731 01:19:26.780975 24 service_latency.go:358] Got endpoints: latency-svc-4s4pm [750.822177ms]
  I0731 01:19:26.814195 24 service_latency.go:351] Created: latency-svc-zff4t
  I0731 01:19:26.832028 24 service_latency.go:358] Got endpoints: latency-svc-hdj7d [741.000186ms]
  I0731 01:19:26.889706 24 service_latency.go:358] Got endpoints: latency-svc-fs2qn [755.529363ms]
  I0731 01:19:26.907932 24 service_latency.go:351] Created: latency-svc-4wgx8
  I0731 01:19:26.925642 24 service_latency.go:351] Created: latency-svc-l5lx2
  I0731 01:19:26.934156 24 service_latency.go:358] Got endpoints: latency-svc-zh8fp [746.455027ms]
  E0731 01:19:26.958545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:26.965242 24 service_latency.go:351] Created: latency-svc-s8j5p
  I0731 01:19:26.978979 24 service_latency.go:358] Got endpoints: latency-svc-wsqmp [740.770158ms]
  I0731 01:19:27.007840 24 service_latency.go:351] Created: latency-svc-jpf8s
  I0731 01:19:27.042101 24 service_latency.go:358] Got endpoints: latency-svc-zjkhb [761.024665ms]
  I0731 01:19:27.076934 24 service_latency.go:351] Created: latency-svc-49klp
  I0731 01:19:27.079036 24 service_latency.go:358] Got endpoints: latency-svc-wsv6h [751.915923ms]
  I0731 01:19:27.108137 24 service_latency.go:351] Created: latency-svc-ll7k4
  I0731 01:19:27.129217 24 service_latency.go:358] Got endpoints: latency-svc-2cglg [741.420769ms]
  I0731 01:19:27.156328 24 service_latency.go:351] Created: latency-svc-pwpwn
  I0731 01:19:27.177848 24 service_latency.go:358] Got endpoints: latency-svc-tpq9d [751.650494ms]
  I0731 01:19:27.209392 24 service_latency.go:351] Created: latency-svc-lg59n
  I0731 01:19:27.229543 24 service_latency.go:358] Got endpoints: latency-svc-w24nn [750.530151ms]
  I0731 01:19:27.256817 24 service_latency.go:351] Created: latency-svc-nvjx7
  I0731 01:19:27.278925 24 service_latency.go:358] Got endpoints: latency-svc-6lq4l [750.691504ms]
  I0731 01:19:27.303626 24 service_latency.go:351] Created: latency-svc-cv5xw
  I0731 01:19:27.326960 24 service_latency.go:358] Got endpoints: latency-svc-gjdjd [748.875276ms]
  I0731 01:19:27.355064 24 service_latency.go:351] Created: latency-svc-jwdpr
  I0731 01:19:27.379233 24 service_latency.go:358] Got endpoints: latency-svc-s8pzr [751.448842ms]
  I0731 01:19:27.411049 24 service_latency.go:351] Created: latency-svc-nz5p5
  I0731 01:19:27.429885 24 service_latency.go:358] Got endpoints: latency-svc-ks4tt [750.729978ms]
  I0731 01:19:27.462826 24 service_latency.go:351] Created: latency-svc-954wm
  I0731 01:19:27.478626 24 service_latency.go:358] Got endpoints: latency-svc-t6xjn [749.970472ms]
  I0731 01:19:27.506358 24 service_latency.go:351] Created: latency-svc-5fw4h
  I0731 01:19:27.527688 24 service_latency.go:358] Got endpoints: latency-svc-zff4t [746.625366ms]
  I0731 01:19:27.550476 24 service_latency.go:351] Created: latency-svc-hr7w9
  I0731 01:19:27.580348 24 service_latency.go:358] Got endpoints: latency-svc-4wgx8 [748.235336ms]
  I0731 01:19:27.609207 24 service_latency.go:351] Created: latency-svc-47zns
  I0731 01:19:27.629766 24 service_latency.go:358] Got endpoints: latency-svc-l5lx2 [739.976163ms]
  I0731 01:19:27.657422 24 service_latency.go:351] Created: latency-svc-xx9nf
  I0731 01:19:27.678707 24 service_latency.go:358] Got endpoints: latency-svc-s8j5p [744.466093ms]
  I0731 01:19:27.711816 24 service_latency.go:351] Created: latency-svc-wqx66
  I0731 01:19:27.727257 24 service_latency.go:358] Got endpoints: latency-svc-jpf8s [746.368247ms]
  I0731 01:19:27.754610 24 service_latency.go:351] Created: latency-svc-x4rh6
  I0731 01:19:27.779011 24 service_latency.go:358] Got endpoints: latency-svc-49klp [736.851185ms]
  I0731 01:19:27.802859 24 service_latency.go:351] Created: latency-svc-gskgz
  I0731 01:19:27.828079 24 service_latency.go:358] Got endpoints: latency-svc-ll7k4 [748.948817ms]
  I0731 01:19:27.857412 24 service_latency.go:351] Created: latency-svc-4vkbv
  I0731 01:19:27.879875 24 service_latency.go:358] Got endpoints: latency-svc-pwpwn [750.59734ms]
  I0731 01:19:27.905315 24 service_latency.go:351] Created: latency-svc-zr497
  I0731 01:19:27.924932 24 service_latency.go:358] Got endpoints: latency-svc-lg59n [747.011664ms]
  I0731 01:19:27.958399 24 service_latency.go:351] Created: latency-svc-fhzrd
  E0731 01:19:27.960066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:27.977556 24 service_latency.go:358] Got endpoints: latency-svc-nvjx7 [747.934804ms]
  I0731 01:19:28.000556 24 service_latency.go:351] Created: latency-svc-9nm8x
  I0731 01:19:28.027369 24 service_latency.go:358] Got endpoints: latency-svc-cv5xw [748.382527ms]
  I0731 01:19:28.055681 24 service_latency.go:351] Created: latency-svc-bgcjs
  I0731 01:19:28.076796 24 service_latency.go:358] Got endpoints: latency-svc-jwdpr [749.762502ms]
  I0731 01:19:28.103280 24 service_latency.go:351] Created: latency-svc-gqt8w
  I0731 01:19:28.127050 24 service_latency.go:358] Got endpoints: latency-svc-nz5p5 [747.745716ms]
  I0731 01:19:28.163019 24 service_latency.go:351] Created: latency-svc-pkmwd
  I0731 01:19:28.233387 24 service_latency.go:358] Got endpoints: latency-svc-5fw4h [754.454585ms]
  I0731 01:19:28.233400 24 service_latency.go:358] Got endpoints: latency-svc-954wm [803.460144ms]
  I0731 01:19:28.268137 24 service_latency.go:351] Created: latency-svc-c5cnf
  I0731 01:19:28.279231 24 service_latency.go:358] Got endpoints: latency-svc-hr7w9 [751.483103ms]
  I0731 01:19:28.285549 24 service_latency.go:351] Created: latency-svc-2vbv9
  I0731 01:19:28.303027 24 service_latency.go:351] Created: latency-svc-7vznd
  I0731 01:19:28.327947 24 service_latency.go:358] Got endpoints: latency-svc-47zns [747.544211ms]
  I0731 01:19:28.423092 24 service_latency.go:358] Got endpoints: latency-svc-xx9nf [793.261363ms]
  I0731 01:19:28.432438 24 service_latency.go:351] Created: latency-svc-sxt5z
  I0731 01:19:28.434212 24 service_latency.go:358] Got endpoints: latency-svc-wqx66 [755.441537ms]
  I0731 01:19:28.464813 24 service_latency.go:351] Created: latency-svc-c68ls
  I0731 01:19:28.464877 24 service_latency.go:351] Created: latency-svc-9x9bg
  I0731 01:19:28.478244 24 service_latency.go:358] Got endpoints: latency-svc-x4rh6 [750.913392ms]
  I0731 01:19:28.503483 24 service_latency.go:351] Created: latency-svc-l69tn
  I0731 01:19:28.527721 24 service_latency.go:358] Got endpoints: latency-svc-gskgz [748.657916ms]
  I0731 01:19:28.557031 24 service_latency.go:351] Created: latency-svc-p67rh
  I0731 01:19:28.578482 24 service_latency.go:358] Got endpoints: latency-svc-4vkbv [750.348717ms]
  I0731 01:19:28.606492 24 service_latency.go:351] Created: latency-svc-9dx2f
  I0731 01:19:28.631506 24 service_latency.go:358] Got endpoints: latency-svc-zr497 [751.568353ms]
  I0731 01:19:28.682265 24 service_latency.go:358] Got endpoints: latency-svc-fhzrd [757.269039ms]
  I0731 01:19:28.684505 24 service_latency.go:351] Created: latency-svc-k2kxn
  I0731 01:19:28.713788 24 service_latency.go:351] Created: latency-svc-h78zf
  I0731 01:19:28.725744 24 service_latency.go:358] Got endpoints: latency-svc-9nm8x [748.118862ms]
  I0731 01:19:28.764246 24 service_latency.go:351] Created: latency-svc-c9r7r
  I0731 01:19:28.778426 24 service_latency.go:358] Got endpoints: latency-svc-bgcjs [750.984094ms]
  I0731 01:19:28.805668 24 service_latency.go:351] Created: latency-svc-nscdr
  I0731 01:19:28.829228 24 service_latency.go:358] Got endpoints: latency-svc-gqt8w [752.370633ms]
  I0731 01:19:28.862900 24 service_latency.go:351] Created: latency-svc-mqwzg
  I0731 01:19:28.877164 24 service_latency.go:358] Got endpoints: latency-svc-pkmwd [750.032704ms]
  I0731 01:19:28.904208 24 service_latency.go:351] Created: latency-svc-j2g69
  I0731 01:19:28.947023 24 service_latency.go:358] Got endpoints: latency-svc-c5cnf [713.568159ms]
  E0731 01:19:28.987207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:28.987353 24 service_latency.go:351] Created: latency-svc-zq7ms
  I0731 01:19:28.987428 24 service_latency.go:358] Got endpoints: latency-svc-2vbv9 [753.958733ms]
  I0731 01:19:29.019097 24 service_latency.go:351] Created: latency-svc-knlvt
  I0731 01:19:29.028393 24 service_latency.go:358] Got endpoints: latency-svc-7vznd [749.097308ms]
  I0731 01:19:29.057697 24 service_latency.go:351] Created: latency-svc-qmncb
  I0731 01:19:29.079649 24 service_latency.go:358] Got endpoints: latency-svc-sxt5z [751.622455ms]
  I0731 01:19:29.111457 24 service_latency.go:351] Created: latency-svc-prjvr
  I0731 01:19:29.128290 24 service_latency.go:358] Got endpoints: latency-svc-9x9bg [705.118575ms]
  I0731 01:19:29.158868 24 service_latency.go:351] Created: latency-svc-q99sq
  I0731 01:19:29.176482 24 service_latency.go:358] Got endpoints: latency-svc-c68ls [742.228397ms]
  I0731 01:19:29.208119 24 service_latency.go:351] Created: latency-svc-6tgkh
  I0731 01:19:29.242993 24 service_latency.go:358] Got endpoints: latency-svc-l69tn [764.677412ms]
  I0731 01:19:29.272396 24 service_latency.go:351] Created: latency-svc-7r42n
  I0731 01:19:29.276553 24 service_latency.go:358] Got endpoints: latency-svc-p67rh [748.769336ms]
  I0731 01:19:29.305192 24 service_latency.go:351] Created: latency-svc-d7swq
  I0731 01:19:29.334919 24 service_latency.go:358] Got endpoints: latency-svc-9dx2f [756.383811ms]
  I0731 01:19:29.363291 24 service_latency.go:351] Created: latency-svc-2lvdf
  I0731 01:19:29.377790 24 service_latency.go:358] Got endpoints: latency-svc-k2kxn [746.115784ms]
  I0731 01:19:29.406499 24 service_latency.go:351] Created: latency-svc-vwtqr
  I0731 01:19:29.427716 24 service_latency.go:358] Got endpoints: latency-svc-h78zf [745.38024ms]
  I0731 01:19:29.453723 24 service_latency.go:351] Created: latency-svc-gn4hc
  I0731 01:19:29.479127 24 service_latency.go:358] Got endpoints: latency-svc-c9r7r [753.315027ms]
  I0731 01:19:29.555276 24 service_latency.go:358] Got endpoints: latency-svc-nscdr [776.783709ms]
  I0731 01:19:29.565765 24 service_latency.go:351] Created: latency-svc-9cjgx
  I0731 01:19:29.583183 24 service_latency.go:358] Got endpoints: latency-svc-mqwzg [753.894308ms]
  I0731 01:19:29.590898 24 service_latency.go:351] Created: latency-svc-tfjck
  I0731 01:19:29.620244 24 service_latency.go:351] Created: latency-svc-fww85
  I0731 01:19:29.627550 24 service_latency.go:358] Got endpoints: latency-svc-j2g69 [750.323863ms]
  I0731 01:19:29.654037 24 service_latency.go:351] Created: latency-svc-9dcwj
  I0731 01:19:29.679127 24 service_latency.go:358] Got endpoints: latency-svc-zq7ms [732.037814ms]
  I0731 01:19:29.711153 24 service_latency.go:351] Created: latency-svc-tpq69
  I0731 01:19:29.733568 24 service_latency.go:358] Got endpoints: latency-svc-knlvt [746.108544ms]
  I0731 01:19:29.771241 24 service_latency.go:351] Created: latency-svc-gpd9v
  I0731 01:19:29.793273 24 service_latency.go:358] Got endpoints: latency-svc-qmncb [764.824581ms]
  I0731 01:19:29.819222 24 service_latency.go:351] Created: latency-svc-ctbkq
  I0731 01:19:29.827821 24 service_latency.go:358] Got endpoints: latency-svc-prjvr [748.114992ms]
  I0731 01:19:29.860388 24 service_latency.go:351] Created: latency-svc-sgfqz
  I0731 01:19:29.879558 24 service_latency.go:358] Got endpoints: latency-svc-q99sq [751.213163ms]
  I0731 01:19:29.918523 24 service_latency.go:351] Created: latency-svc-c8drv
  I0731 01:19:29.932871 24 service_latency.go:358] Got endpoints: latency-svc-6tgkh [756.05926ms]
  I0731 01:19:29.963060 24 service_latency.go:351] Created: latency-svc-m4flb
  I0731 01:19:29.978836 24 service_latency.go:358] Got endpoints: latency-svc-7r42n [735.764945ms]
  E0731 01:19:29.988014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:30.009794 24 service_latency.go:351] Created: latency-svc-8cdt4
  I0731 01:19:30.027816 24 service_latency.go:358] Got endpoints: latency-svc-d7swq [751.202007ms]
  I0731 01:19:30.064177 24 service_latency.go:351] Created: latency-svc-vswb7
  I0731 01:19:30.082802 24 service_latency.go:358] Got endpoints: latency-svc-2lvdf [747.822941ms]
  I0731 01:19:30.143777 24 service_latency.go:358] Got endpoints: latency-svc-vwtqr [765.665478ms]
  I0731 01:19:30.171186 24 service_latency.go:351] Created: latency-svc-p88q6
  I0731 01:19:30.178769 24 service_latency.go:358] Got endpoints: latency-svc-gn4hc [750.428601ms]
  I0731 01:19:30.180835 24 service_latency.go:351] Created: latency-svc-4th6d
  I0731 01:19:30.213607 24 service_latency.go:351] Created: latency-svc-t795w
  I0731 01:19:30.232259 24 service_latency.go:358] Got endpoints: latency-svc-9cjgx [752.114899ms]
  I0731 01:19:30.257871 24 service_latency.go:351] Created: latency-svc-hn97q
  I0731 01:19:30.278957 24 service_latency.go:358] Got endpoints: latency-svc-tfjck [721.962177ms]
  I0731 01:19:30.309742 24 service_latency.go:351] Created: latency-svc-k2tgt
  I0731 01:19:30.329409 24 service_latency.go:358] Got endpoints: latency-svc-fww85 [742.434329ms]
  I0731 01:19:30.360429 24 service_latency.go:351] Created: latency-svc-9hmxd
  I0731 01:19:30.378181 24 service_latency.go:358] Got endpoints: latency-svc-9dcwj [750.556841ms]
  I0731 01:19:30.455131 24 service_latency.go:358] Got endpoints: latency-svc-tpq69 [775.946827ms]
  I0731 01:19:30.480291 24 service_latency.go:358] Got endpoints: latency-svc-gpd9v [746.648861ms]
  I0731 01:19:30.480984 24 service_latency.go:351] Created: latency-svc-z228g
  I0731 01:19:30.497180 24 service_latency.go:351] Created: latency-svc-c2j7b
  I0731 01:19:30.511482 24 service_latency.go:351] Created: latency-svc-lw4z6
  I0731 01:19:30.527240 24 service_latency.go:358] Got endpoints: latency-svc-ctbkq [733.912215ms]
  I0731 01:19:30.559163 24 service_latency.go:351] Created: latency-svc-95xvj
  I0731 01:19:30.577921 24 service_latency.go:358] Got endpoints: latency-svc-sgfqz [750.019373ms]
  I0731 01:19:30.607132 24 service_latency.go:351] Created: latency-svc-6qt7k
  I0731 01:19:30.627653 24 service_latency.go:358] Got endpoints: latency-svc-c8drv [745.6493ms]
  I0731 01:19:30.656532 24 service_latency.go:351] Created: latency-svc-7npb7
  I0731 01:19:30.685626 24 service_latency.go:358] Got endpoints: latency-svc-m4flb [752.671045ms]
  I0731 01:19:30.710922 24 service_latency.go:351] Created: latency-svc-8t7vr
  I0731 01:19:30.727231 24 service_latency.go:358] Got endpoints: latency-svc-8cdt4 [748.327814ms]
  I0731 01:19:30.756187 24 service_latency.go:351] Created: latency-svc-ltl9c
  I0731 01:19:30.777990 24 service_latency.go:358] Got endpoints: latency-svc-vswb7 [750.095913ms]
  I0731 01:19:30.806594 24 service_latency.go:351] Created: latency-svc-zhcv9
  I0731 01:19:30.825841 24 service_latency.go:358] Got endpoints: latency-svc-p88q6 [742.976941ms]
  I0731 01:19:30.853208 24 service_latency.go:351] Created: latency-svc-nqdjf
  I0731 01:19:30.881053 24 service_latency.go:358] Got endpoints: latency-svc-4th6d [737.211219ms]
  I0731 01:19:30.910225 24 service_latency.go:351] Created: latency-svc-x7xj2
  I0731 01:19:30.928334 24 service_latency.go:358] Got endpoints: latency-svc-t795w [749.499114ms]
  E0731 01:19:30.989685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:31.013070 24 service_latency.go:358] Got endpoints: latency-svc-hn97q [780.74896ms]
  I0731 01:19:31.013476 24 service_latency.go:351] Created: latency-svc-m5nvj
  I0731 01:19:31.031212 24 service_latency.go:358] Got endpoints: latency-svc-k2tgt [752.188269ms]
  I0731 01:19:31.043026 24 service_latency.go:351] Created: latency-svc-lw7gx
  I0731 01:19:31.064090 24 service_latency.go:351] Created: latency-svc-bl9gr
  I0731 01:19:31.077173 24 service_latency.go:358] Got endpoints: latency-svc-9hmxd [747.697238ms]
  I0731 01:19:31.119248 24 service_latency.go:351] Created: latency-svc-btvwr
  I0731 01:19:31.133995 24 service_latency.go:358] Got endpoints: latency-svc-z228g [755.617463ms]
  I0731 01:19:31.159947 24 service_latency.go:351] Created: latency-svc-lvjsb
  I0731 01:19:31.177803 24 service_latency.go:358] Got endpoints: latency-svc-c2j7b [722.613707ms]
  I0731 01:19:31.272971 24 service_latency.go:351] Created: latency-svc-w6swm
  I0731 01:19:31.277321 24 service_latency.go:358] Got endpoints: latency-svc-lw4z6 [795.932187ms]
  I0731 01:19:31.286858 24 service_latency.go:358] Got endpoints: latency-svc-95xvj [759.048347ms]
  I0731 01:19:31.318415 24 service_latency.go:351] Created: latency-svc-448c2
  I0731 01:19:31.318448 24 service_latency.go:351] Created: latency-svc-hskdw
  I0731 01:19:31.328854 24 service_latency.go:358] Got endpoints: latency-svc-6qt7k [750.870434ms]
  I0731 01:19:31.352219 24 service_latency.go:351] Created: latency-svc-rj6h5
  I0731 01:19:31.382322 24 service_latency.go:358] Got endpoints: latency-svc-7npb7 [754.105789ms]
  I0731 01:19:31.411180 24 service_latency.go:351] Created: latency-svc-wk7ql
  I0731 01:19:31.427426 24 service_latency.go:358] Got endpoints: latency-svc-8t7vr [741.717885ms]
  I0731 01:19:31.451882 24 service_latency.go:351] Created: latency-svc-5zz52
  I0731 01:19:31.479971 24 service_latency.go:358] Got endpoints: latency-svc-ltl9c [752.673159ms]
  I0731 01:19:31.508029 24 service_latency.go:351] Created: latency-svc-9r42f
  I0731 01:19:31.532563 24 service_latency.go:358] Got endpoints: latency-svc-zhcv9 [754.508184ms]
  I0731 01:19:31.562480 24 service_latency.go:351] Created: latency-svc-qhhwz
  I0731 01:19:31.578314 24 service_latency.go:358] Got endpoints: latency-svc-nqdjf [752.320822ms]
  I0731 01:19:31.686052 24 service_latency.go:351] Created: latency-svc-lqvzf
  I0731 01:19:31.686217 24 service_latency.go:358] Got endpoints: latency-svc-m5nvj [757.829328ms]
  I0731 01:19:31.686230 24 service_latency.go:358] Got endpoints: latency-svc-x7xj2 [805.118817ms]
  I0731 01:19:31.723482 24 service_latency.go:351] Created: latency-svc-tbbjf
  I0731 01:19:31.733216 24 service_latency.go:358] Got endpoints: latency-svc-lw7gx [720.081339ms]
  I0731 01:19:31.741598 24 service_latency.go:351] Created: latency-svc-dl8sb
  I0731 01:19:31.763623 24 service_latency.go:351] Created: latency-svc-jp46t
  I0731 01:19:31.778798 24 service_latency.go:358] Got endpoints: latency-svc-bl9gr [747.413695ms]
  I0731 01:19:31.812213 24 service_latency.go:351] Created: latency-svc-sqftc
  I0731 01:19:31.828105 24 service_latency.go:358] Got endpoints: latency-svc-btvwr [750.840177ms]
  I0731 01:19:31.857303 24 service_latency.go:351] Created: latency-svc-jrjwk
  I0731 01:19:31.877471 24 service_latency.go:358] Got endpoints: latency-svc-lvjsb [743.39848ms]
  I0731 01:19:31.911616 24 service_latency.go:351] Created: latency-svc-mvg52
  I0731 01:19:31.927513 24 service_latency.go:358] Got endpoints: latency-svc-w6swm [749.5991ms]
  E0731 01:19:31.991507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:32.019124 24 service_latency.go:358] Got endpoints: latency-svc-448c2 [741.734397ms]
  I0731 01:19:32.021828 24 service_latency.go:351] Created: latency-svc-cfs4w
  I0731 01:19:32.030649 24 service_latency.go:358] Got endpoints: latency-svc-hskdw [743.730482ms]
  I0731 01:19:32.069283 24 service_latency.go:351] Created: latency-svc-6ddmg
  I0731 01:19:32.078097 24 service_latency.go:351] Created: latency-svc-dg955
  I0731 01:19:32.081436 24 service_latency.go:358] Got endpoints: latency-svc-rj6h5 [752.335051ms]
  I0731 01:19:32.112273 24 service_latency.go:351] Created: latency-svc-7cfb4
  I0731 01:19:32.133875 24 service_latency.go:358] Got endpoints: latency-svc-wk7ql [751.495362ms]
  I0731 01:19:32.171292 24 service_latency.go:351] Created: latency-svc-5x8f2
  I0731 01:19:32.181048 24 service_latency.go:358] Got endpoints: latency-svc-5zz52 [753.554993ms]
  I0731 01:19:32.211873 24 service_latency.go:351] Created: latency-svc-dp275
  I0731 01:19:32.231990 24 service_latency.go:358] Got endpoints: latency-svc-9r42f [751.737923ms]
  I0731 01:19:32.263200 24 service_latency.go:351] Created: latency-svc-vsh8k
  I0731 01:19:32.279415 24 service_latency.go:358] Got endpoints: latency-svc-qhhwz [746.547873ms]
  I0731 01:19:32.304987 24 service_latency.go:351] Created: latency-svc-v47lk
  I0731 01:19:32.340846 24 service_latency.go:358] Got endpoints: latency-svc-lqvzf [762.168263ms]
  I0731 01:19:32.370300 24 service_latency.go:351] Created: latency-svc-ttc6p
  I0731 01:19:32.382223 24 service_latency.go:358] Got endpoints: latency-svc-tbbjf [694.874582ms]
  I0731 01:19:32.419388 24 service_latency.go:351] Created: latency-svc-8tlj5
  I0731 01:19:32.431296 24 service_latency.go:358] Got endpoints: latency-svc-dl8sb [740.794447ms]
  I0731 01:19:32.463527 24 service_latency.go:351] Created: latency-svc-5bpqg
  I0731 01:19:32.482877 24 service_latency.go:358] Got endpoints: latency-svc-jp46t [749.593766ms]
  I0731 01:19:32.510807 24 service_latency.go:351] Created: latency-svc-gz2rh
  I0731 01:19:32.528984 24 service_latency.go:358] Got endpoints: latency-svc-sqftc [750.000435ms]
  I0731 01:19:32.559900 24 service_latency.go:351] Created: latency-svc-n7wgq
  I0731 01:19:32.579023 24 service_latency.go:358] Got endpoints: latency-svc-jrjwk [750.70864ms]
  I0731 01:19:32.608685 24 service_latency.go:351] Created: latency-svc-b9zt7
  I0731 01:19:32.627143 24 service_latency.go:358] Got endpoints: latency-svc-mvg52 [749.601546ms]
  I0731 01:19:32.659512 24 service_latency.go:351] Created: latency-svc-tr7nf
  I0731 01:19:32.684582 24 service_latency.go:358] Got endpoints: latency-svc-cfs4w [756.863477ms]
  I0731 01:19:32.719639 24 service_latency.go:351] Created: latency-svc-pgg9d
  I0731 01:19:32.727743 24 service_latency.go:358] Got endpoints: latency-svc-6ddmg [705.845199ms]
  I0731 01:19:32.767283 24 service_latency.go:351] Created: latency-svc-fw7gx
  I0731 01:19:32.778093 24 service_latency.go:358] Got endpoints: latency-svc-dg955 [747.268856ms]
  I0731 01:19:32.803137 24 service_latency.go:351] Created: latency-svc-xbhcd
  I0731 01:19:32.827010 24 service_latency.go:358] Got endpoints: latency-svc-7cfb4 [745.380935ms]
  I0731 01:19:32.857339 24 service_latency.go:351] Created: latency-svc-6l866
  I0731 01:19:32.879024 24 service_latency.go:358] Got endpoints: latency-svc-5x8f2 [745.086697ms]
  I0731 01:19:32.928561 24 service_latency.go:358] Got endpoints: latency-svc-dp275 [747.314845ms]
  I0731 01:19:32.980882 24 service_latency.go:358] Got endpoints: latency-svc-vsh8k [748.687803ms]
  E0731 01:19:32.992050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:33.028888 24 service_latency.go:358] Got endpoints: latency-svc-v47lk [749.409806ms]
  I0731 01:19:33.077840 24 service_latency.go:358] Got endpoints: latency-svc-ttc6p [736.918541ms]
  I0731 01:19:33.127857 24 service_latency.go:358] Got endpoints: latency-svc-8tlj5 [745.555301ms]
  I0731 01:19:33.251067 24 service_latency.go:358] Got endpoints: latency-svc-5bpqg [819.667776ms]
  I0731 01:19:33.258498 24 service_latency.go:358] Got endpoints: latency-svc-gz2rh [775.569608ms]
  I0731 01:19:33.284345 24 service_latency.go:358] Got endpoints: latency-svc-n7wgq [755.295118ms]
  I0731 01:19:33.330986 24 service_latency.go:358] Got endpoints: latency-svc-b9zt7 [751.778287ms]
  I0731 01:19:33.383125 24 service_latency.go:358] Got endpoints: latency-svc-tr7nf [755.7767ms]
  I0731 01:19:33.430366 24 service_latency.go:358] Got endpoints: latency-svc-pgg9d [745.711223ms]
  I0731 01:19:33.479348 24 service_latency.go:358] Got endpoints: latency-svc-fw7gx [751.290125ms]
  I0731 01:19:33.527909 24 service_latency.go:358] Got endpoints: latency-svc-xbhcd [749.751999ms]
  I0731 01:19:33.577896 24 service_latency.go:358] Got endpoints: latency-svc-6l866 [750.783832ms]
  I0731 01:19:33.578066 24 service_latency.go:114] Latencies: [45.323991ms 58.654613ms 75.816507ms 91.947247ms 113.316959ms 119.133741ms 129.736398ms 164.553984ms 179.048519ms 207.62737ms 211.716784ms 237.599068ms 248.420047ms 248.577493ms 254.813346ms 258.744119ms 259.175291ms 262.685246ms 264.189159ms 265.187508ms 265.627608ms 271.279903ms 271.399419ms 272.209925ms 272.748665ms 273.686236ms 277.387162ms 278.460393ms 279.282354ms 282.864372ms 284.102186ms 287.400108ms 292.623307ms 305.513651ms 316.964588ms 318.858563ms 328.409957ms 339.424667ms 347.913399ms 348.84017ms 349.08689ms 349.783982ms 352.401066ms 352.877259ms 353.739648ms 355.033919ms 355.921608ms 359.524528ms 361.212116ms 365.872016ms 370.341336ms 374.684704ms 420.067067ms 445.042783ms 461.750221ms 513.734405ms 530.897323ms 554.92923ms 591.769032ms 625.460207ms 654.931869ms 694.874582ms 696.007901ms 705.118575ms 705.845199ms 713.568159ms 715.796312ms 720.081339ms 721.962177ms 722.613707ms 732.037814ms 733.912215ms 735.764945ms 736.851185ms 736.918541ms 737.211219ms 739.976163ms 740.770158ms 740.794447ms 741.000186ms 741.420769ms 741.717885ms 741.734397ms 742.228397ms 742.434329ms 742.976941ms 743.39848ms 743.730482ms 744.466093ms 745.086697ms 745.38024ms 745.380935ms 745.555301ms 745.6493ms 745.711223ms 746.108544ms 746.115784ms 746.368247ms 746.455027ms 746.547873ms 746.625366ms 746.648861ms 747.011664ms 747.268856ms 747.314845ms 747.413695ms 747.544211ms 747.697238ms 747.745716ms 747.822941ms 747.934804ms 748.114992ms 748.118862ms 748.235336ms 748.327814ms 748.382527ms 748.657916ms 748.687803ms 748.769336ms 748.875276ms 748.948817ms 749.097308ms 749.409806ms 749.499114ms 749.593766ms 749.5991ms 749.601546ms 749.751999ms 749.762502ms 749.970472ms 750.000435ms 750.019373ms 750.032704ms 750.095913ms 750.323863ms 750.348717ms 750.428601ms 750.530151ms 750.556841ms 750.59734ms 750.691504ms 750.70864ms 750.729978ms 750.783832ms 750.822177ms 750.840177ms 750.870434ms 750.913392ms 750.984094ms 751.202007ms 751.213163ms 751.290125ms 751.448842ms 751.483103ms 751.495362ms 751.568353ms 751.622455ms 751.650494ms 751.737923ms 751.778287ms 751.915923ms 752.114899ms 752.188269ms 752.320822ms 752.335051ms 752.370633ms 752.671045ms 752.673159ms 753.315027ms 753.554993ms 753.894308ms 753.958733ms 754.105789ms 754.454585ms 754.508184ms 755.295118ms 755.441537ms 755.529363ms 755.617463ms 755.7767ms 756.05926ms 756.383811ms 756.863477ms 757.269039ms 757.829328ms 759.048347ms 761.024665ms 762.168263ms 764.677412ms 764.824581ms 765.665478ms 775.569608ms 775.946827ms 776.783709ms 780.74896ms 793.261363ms 795.932187ms 803.460144ms 805.118817ms 819.667776ms]
  I0731 01:19:33.578093 24 service_latency.go:118] 50 %ile: 746.625366ms
  I0731 01:19:33.578104 24 service_latency.go:119] 90 %ile: 756.05926ms
  I0731 01:19:33.578112 24 service_latency.go:120] 99 %ile: 805.118817ms
  I0731 01:19:33.578120 24 service_latency.go:121] Total sample count: 200
  I0731 01:19:33.578235 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3961" for this suite. @ 07/31/25 01:19:33.586
• [10.762 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 07/31/25 01:19:33.598
  I0731 01:19:33.598985 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename resourcequota @ 07/31/25 01:19:33.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:19:33.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:19:33.626
  STEP: Counting existing ResourceQuota @ 07/31/25 01:19:33.629
  E0731 01:19:33.992857      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:34.993476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:35.994319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:36.994530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:37.995491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/31/25 01:19:38.641
  STEP: Ensuring resource quota status is calculated @ 07/31/25 01:19:38.731
  E0731 01:19:38.996159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:39.997325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:40.746754 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6044" for this suite. @ 07/31/25 01:19:40.753
• [7.173 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 07/31/25 01:19:40.772
  I0731 01:19:40.772956 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename replication-controller @ 07/31/25 01:19:40.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:19:40.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:19:40.803
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/31/25 01:19:40.807
  E0731 01:19:40.998218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:41.998451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 07/31/25 01:19:42.846
  STEP: Then the orphan pod is adopted @ 07/31/25 01:19:42.856
  E0731 01:19:42.999571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:43.891370 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0731 01:19:43.999731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-2221" for this suite. @ 07/31/25 01:19:44.119
• [3.966 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 07/31/25 01:19:44.739
  I0731 01:19:44.739035 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename resourcequota @ 07/31/25 01:19:44.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:19:44.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:19:44.772
  STEP: Creating a ResourceQuota @ 07/31/25 01:19:44.777
  STEP: Getting a ResourceQuota @ 07/31/25 01:19:44.928
  E0731 01:19:45.000444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/31/25 01:19:45.009
  STEP: Patching the ResourceQuota @ 07/31/25 01:19:45.244
  STEP: Deleting a Collection of ResourceQuotas @ 07/31/25 01:19:45.252
  STEP: Verifying the deleted ResourceQuota @ 07/31/25 01:19:45.435
  I0731 01:19:45.447225 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8478" for this suite. @ 07/31/25 01:19:45.454
• [0.736 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 07/31/25 01:19:45.478
  I0731 01:19:45.478160 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pv @ 07/31/25 01:19:45.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:19:45.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:19:45.507
  STEP: Creating initial PV and PVC @ 07/31/25 01:19:45.515
  I0731 01:19:45.515764 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-680" @ 07/31/25 01:19:45.563
  STEP: Listing PVCs in namespace "pv-680" @ 07/31/25 01:19:45.603
  STEP: Patching the PV "pv-680-4942c" @ 07/31/25 01:19:45.62
  STEP: Patching the PVC "pvc-jlvdm" @ 07/31/25 01:19:45.632
  STEP: Getting PV "pv-680-4942c" @ 07/31/25 01:19:45.643
  STEP: Getting PVC "pvc-jlvdm" @ 07/31/25 01:19:45.657
  STEP: Deleting PVC "pvc-jlvdm" @ 07/31/25 01:19:45.662
  STEP: Confirm deletion of PVC "pvc-jlvdm" @ 07/31/25 01:19:45.68
  E0731 01:19:46.001519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:47.001693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-680-4942c" @ 07/31/25 01:19:47.722
  STEP: Confirm deletion of PV "pv-680-4942c" @ 07/31/25 01:19:47.737
  E0731 01:19:48.002239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:49.002695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 07/31/25 01:19:49.814
  I0731 01:19:49.814355 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-680-sc5ts" @ 07/31/25 01:19:49.982
  E0731 01:19:50.003197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating the PVC "pvc-mxsk2" @ 07/31/25 01:19:50.319
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-mxsk2=updated" @ 07/31/25 01:19:50.387
  STEP: Deleting PVC "pvc-mxsk2" via DeleteCollection @ 07/31/25 01:19:50.397
  STEP: Confirm deletion of PVC "pvc-mxsk2" @ 07/31/25 01:19:50.415
  E0731 01:19:51.004024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:52.005087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-680-sc5ts" via DeleteCollection @ 07/31/25 01:19:52.526
  STEP: Confirm deletion of PV "pv-680-sc5ts" @ 07/31/25 01:19:52.682
  E0731 01:19:53.005182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:54.005735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:19:54.856340 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0731 01:19:54.857144 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-mxsk2"
  I0731 01:19:54.862913 24 pv.go:193] Deleting PersistentVolume "pv-680-sc5ts"
  I0731 01:19:54.867925 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-680" for this suite. @ 07/31/25 01:19:54.883
• [9.437 seconds]
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 07/31/25 01:19:54.913
  I0731 01:19:54.913754 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename svcaccounts @ 07/31/25 01:19:54.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:19:54.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:19:54.944
  I0731 01:19:54.979489 24 service_accounts.go:646] created pod
  E0731 01:19:55.006079      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:56.006572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:57.007637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:19:58.008319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:19:58.998
  E0731 01:19:59.008556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:00.008886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:01.009386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:02.009666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:03.010146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:04.010670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:05.011220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:06.011778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:07.011784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:08.012133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:09.012222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:10.012429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:11.012593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:12.012920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:13.013087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:14.013381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:15.013585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:16.014094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:17.014338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:18.014699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:19.014862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:20.014953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:21.015044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:22.015995      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:23.016359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:24.016816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:25.017362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:26.017290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:27.017361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:28.017557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:20:28.999358 24 service_accounts.go:652] polling logs
  I0731 01:20:29.009366 24 service_accounts.go:662] Pod logs: 
  I0731 01:19:55.922119       1 log.go:245] OK: Got token
  I0731 01:19:55.922237       1 log.go:245] validating with in-cluster discovery
  I0731 01:19:55.922663       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0731 01:19:55.922813       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5905:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0004852d0), NotBefore:(*jwt.NumericDate)(0xc0004853c0), IssuedAt:(*jwt.NumericDate)(0xc0004852e0), ID:"f5a8e107-d634-4abd-8086-171b6757cf96"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5905", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"47968213-bb6f-4be4-9d9e-e6568588547d"}}}
  I0731 01:19:55.934810       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0731 01:19:55.939514       1 log.go:245] OK: Validated signature on JWT
  I0731 01:19:55.939607       1 log.go:245] OK: Got valid claims from token!
  I0731 01:19:55.939642       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5905:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000593268), NotBefore:(*jwt.NumericDate)(0xc000593290), IssuedAt:(*jwt.NumericDate)(0xc000593270), ID:"f5a8e107-d634-4abd-8086-171b6757cf96"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5905", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"47968213-bb6f-4be4-9d9e-e6568588547d"}}}

  I0731 01:20:29.009440 24 service_accounts.go:666] completed pod
  E0731 01:20:29.018377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:20:29.018976 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5905" for this suite. @ 07/31/25 01:20:29.025
• [34.123 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 07/31/25 01:20:29.037
  I0731 01:20:29.037210 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename gc @ 07/31/25 01:20:29.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:20:29.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:20:29.066
  STEP: create the rc1 @ 07/31/25 01:20:29.126
  STEP: create the rc2 @ 07/31/25 01:20:29.136
  E0731 01:20:30.018900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:31.019136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:32.019488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:33.019575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:34.019752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:35.019934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/31/25 01:20:35.195
  E0731 01:20:36.020165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:37.020225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/31/25 01:20:37.576
  STEP: wait for the rc to be deleted @ 07/31/25 01:20:37.586
  E0731 01:20:38.021085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:39.021294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:40.021398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:41.021544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:42.021983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:20:42.605754 24 garbage_collector.go:770] 100 pods remaining
  I0731 01:20:42.605822 24 garbage_collector.go:777] 66 pods has nil DeletionTimestamp
  I0731 01:20:42.605832 24 garbage_collector.go:778] 
  E0731 01:20:43.022033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:44.022395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:45.022450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:46.022812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:47.022916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:20:47.607708 24 garbage_collector.go:770] 86 pods remaining
  I0731 01:20:47.607774 24 garbage_collector.go:777] 50 pods has nil DeletionTimestamp
  I0731 01:20:47.607783 24 garbage_collector.go:778] 
  E0731 01:20:48.023054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:49.023396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:50.023566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:51.023948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:52.024190      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/31/25 01:20:52.601
  I0731 01:20:52.695500 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0731 01:20:52.695572 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-255rk" in namespace "gc-4366"
  I0731 01:20:52.712940 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2lfrl" in namespace "gc-4366"
  I0731 01:20:52.734646 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2p277" in namespace "gc-4366"
  I0731 01:20:52.766330 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2snwv" in namespace "gc-4366"
  I0731 01:20:52.795767 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-54f7m" in namespace "gc-4366"
  I0731 01:20:52.820837 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-54tgm" in namespace "gc-4366"
  I0731 01:20:52.849493 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-58frz" in namespace "gc-4366"
  I0731 01:20:52.870553 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5f56j" in namespace "gc-4366"
  I0731 01:20:52.887154 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-66gtc" in namespace "gc-4366"
  I0731 01:20:52.931956 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6ts4d" in namespace "gc-4366"
  I0731 01:20:52.962502 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6zbsx" in namespace "gc-4366"
  I0731 01:20:52.984177 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6zrwh" in namespace "gc-4366"
  I0731 01:20:53.010970 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-79clr" in namespace "gc-4366"
  E0731 01:20:53.024258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:20:53.030151 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7lgk4" in namespace "gc-4366"
  I0731 01:20:53.055166 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7nfvk" in namespace "gc-4366"
  I0731 01:20:53.086129 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7q5w6" in namespace "gc-4366"
  I0731 01:20:53.112489 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7s8np" in namespace "gc-4366"
  I0731 01:20:53.143478 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7trtc" in namespace "gc-4366"
  I0731 01:20:53.162218 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7v2b7" in namespace "gc-4366"
  I0731 01:20:53.288951 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7v7ps" in namespace "gc-4366"
  I0731 01:20:53.314355 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7w8zh" in namespace "gc-4366"
  I0731 01:20:53.368472 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8gr7h" in namespace "gc-4366"
  I0731 01:20:53.402343 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8n6qk" in namespace "gc-4366"
  I0731 01:20:53.456425 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8p4m9" in namespace "gc-4366"
  I0731 01:20:53.597014 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8t59h" in namespace "gc-4366"
  I0731 01:20:53.616410 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9hf8w" in namespace "gc-4366"
  I0731 01:20:53.640350 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9hhnm" in namespace "gc-4366"
  I0731 01:20:53.694124 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9nwrl" in namespace "gc-4366"
  I0731 01:20:53.714329 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9qzxx" in namespace "gc-4366"
  I0731 01:20:53.730984 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9trdh" in namespace "gc-4366"
  I0731 01:20:53.758949 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9trtq" in namespace "gc-4366"
  I0731 01:20:53.784780 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9wlcs" in namespace "gc-4366"
  I0731 01:20:53.821617 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9xt6j" in namespace "gc-4366"
  I0731 01:20:53.922803 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b6bqx" in namespace "gc-4366"
  I0731 01:20:53.943525 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b6fhm" in namespace "gc-4366"
  E0731 01:20:54.024728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:20:54.031173 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bg5g9" in namespace "gc-4366"
  I0731 01:20:54.056955 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bw7qv" in namespace "gc-4366"
  I0731 01:20:54.077896 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d6ds7" in namespace "gc-4366"
  I0731 01:20:54.103866 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dfdl4" in namespace "gc-4366"
  I0731 01:20:54.188605 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dhdpn" in namespace "gc-4366"
  I0731 01:20:54.209539 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dts2v" in namespace "gc-4366"
  I0731 01:20:54.229684 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dw54d" in namespace "gc-4366"
  I0731 01:20:54.257152 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f4qlc" in namespace "gc-4366"
  I0731 01:20:54.272187 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-flr2h" in namespace "gc-4366"
  I0731 01:20:54.308797 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g4j9x" in namespace "gc-4366"
  I0731 01:20:54.378966 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g828k" in namespace "gc-4366"
  I0731 01:20:54.408607 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gbprj" in namespace "gc-4366"
  I0731 01:20:54.425562 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gdmk4" in namespace "gc-4366"
  I0731 01:20:54.590076 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gsqgt" in namespace "gc-4366"
  I0731 01:20:54.670525 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gvz89" in namespace "gc-4366"
  I0731 01:20:54.971982 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4366" for this suite. @ 07/31/25 01:20:54.98
  E0731 01:20:55.025348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
• [25.993 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 07/31/25 01:20:55.03
  I0731 01:20:55.030380 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 01:20:55.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:20:55.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:20:55.264
  STEP: creating service endpoint-test2 in namespace services-7829 @ 07/31/25 01:20:55.268
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7829 to expose endpoints map[] @ 07/31/25 01:20:55.3
  I0731 01:20:55.320684      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 01:20:55.431575 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-7829 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7829 @ 07/31/25 01:20:55.432
  E0731 01:20:56.026317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:57.026551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:58.027605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:20:59.028044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7829 to expose endpoints map[pod1:[80]] @ 07/31/25 01:20:59.489
  I0731 01:20:59.496170      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 01:20:59.501387 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-7829 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/31/25 01:20:59.501
  I0731 01:20:59.501460 24 resource.go:361] Creating new exec pod
  E0731 01:21:00.028627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:01.029076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:21:01.558576 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7829 exec execpodvctg7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0731 01:21:01.777817 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.25.202) 80 port [tcp/http] succeeded!\n"
  I0731 01:21:01.777876 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 01:21:01.777976 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7829 exec execpodvctg7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.25.202 80'
  I0731 01:21:01.893806 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.25.202 80\nConnection to 10.233.25.202 80 port [tcp/http] succeeded!\n"
  I0731 01:21:01.893896 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-7829 @ 07/31/25 01:21:01.893
  E0731 01:21:02.029587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:03.030595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7829 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/31/25 01:21:03.917
  I0731 01:21:03.925176      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 01:21:03.931318 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-7829 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/31/25 01:21:03.931
  E0731 01:21:04.031401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:21:04.032417 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7829 exec execpodvctg7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0731 01:21:04.156720 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.25.202) 80 port [tcp/http] succeeded!\n"
  I0731 01:21:04.156791 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 01:21:04.156877 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7829 exec execpodvctg7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.25.202 80'
  I0731 01:21:04.293754 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.25.202 80\nConnection to 10.233.25.202 80 port [tcp/http] succeeded!\n"
  I0731 01:21:04.293809 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7829 @ 07/31/25 01:21:04.293
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7829 to expose endpoints map[pod2:[80]] @ 07/31/25 01:21:04.323
  I0731 01:21:04.332897      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 01:21:04.346521 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-7829 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/31/25 01:21:04.346
  I0731 01:21:04.353078 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7829 exec execpodvctg7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0731 01:21:04.490274 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.25.202) 80 port [tcp/http] succeeded!\n"
  I0731 01:21:04.490332 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 01:21:04.490407 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-7829 exec execpodvctg7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.25.202 80'
  I0731 01:21:04.692824 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.25.202 80\nConnection to 10.233.25.202 80 port [tcp/http] succeeded!\n"
  I0731 01:21:04.692886 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-7829 @ 07/31/25 01:21:04.692
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7829 to expose endpoints map[] @ 07/31/25 01:21:04.713
  I0731 01:21:04.720038      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0731 01:21:05.031449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:21:05.732865      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 01:21:05.739667 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-7829 exposes endpoints map[]
  I0731 01:21:05.777007 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7829" for this suite. @ 07/31/25 01:21:05.783
• [10.764 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 07/31/25 01:21:05.794
  I0731 01:21:05.794431 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 01:21:05.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:21:05.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:21:05.828
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/31/25 01:21:05.831
  E0731 01:21:06.032348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:07.032681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:08.033308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:09.033628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:21:09.865
  I0731 01:21:09.868866 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-5831bf1c-1a2f-4b87-8e4a-695fcf5b2db4 container test-container: <nil>
  STEP: delete the pod @ 07/31/25 01:21:09.875
  I0731 01:21:09.899071 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8726" for this suite. @ 07/31/25 01:21:09.905
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 07/31/25 01:21:09.917
  I0731 01:21:09.917245 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename var-expansion @ 07/31/25 01:21:09.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:21:09.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:21:09.943
  E0731 01:21:10.033761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:11.034083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:21:11.966669 24 delete.go:62] Deleting pod "var-expansion-32ce47c1-94f6-47fb-8223-7021b46391ec" in namespace "var-expansion-7533"
  I0731 01:21:11.977119 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-32ce47c1-94f6-47fb-8223-7021b46391ec" to be fully deleted
  E0731 01:21:12.034743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:13.035655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:21:13.986840 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7533" for this suite. @ 07/31/25 01:21:13.991
• [4.083 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 07/31/25 01:21:14.004
  I0731 01:21:14.004353 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 01:21:14.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:21:14.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:21:14.024
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/31/25 01:21:14.027
  E0731 01:21:14.035618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:15.035877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:16.036261      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:17.036608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:18.037089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:21:18.056
  I0731 01:21:18.059707 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-c619aa74-265a-4fe5-9442-36c52abc33a6 container test-container: <nil>
  STEP: delete the pod @ 07/31/25 01:21:18.066
  I0731 01:21:18.085363 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5489" for this suite. @ 07/31/25 01:21:18.089
• [4.098 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 07/31/25 01:21:18.098
  I0731 01:21:18.098344 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/31/25 01:21:18.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:21:18.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:21:18.121
  STEP: create the container to handle the HTTPGet hook request. @ 07/31/25 01:21:18.192
  E0731 01:21:19.037843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:20.038198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/31/25 01:21:20.213
  E0731 01:21:21.038252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:22.038457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/31/25 01:21:22.235
  STEP: delete the pod with lifecycle hook @ 07/31/25 01:21:22.251
  E0731 01:21:23.039359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:24.039440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:21:24.275112 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-969" for this suite. @ 07/31/25 01:21:24.28
• [6.193 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/31/25 01:21:24.291
  I0731 01:21:24.291311 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/31/25 01:21:24.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:21:24.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:21:24.318
  I0731 01:21:24.321315 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 01:21:25.040056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:26.040504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:27.040719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:28.041570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:29.042814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:30.043145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:31.043212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:32.043343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:33.044370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:34.044833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:35.045357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:36.045973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:37.046799      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:38.046929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:39.047455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:40.047778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:41.047945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:42.048248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:43.049050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:44.049629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:45.050091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:46.050894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:47.051035      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:48.052205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:49.052213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:50.052320      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:51.053139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:52.053278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:53.053369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:54.053804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:55.054459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:56.054868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:57.055255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:58.056436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:21:59.057339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:00.057840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:01.058900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:02.058961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:03.059349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:04.059926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:05.060437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:06.061174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:07.061423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:08.062267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:09.062365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:10.062956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:11.063552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:12.064278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:13.065264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:14.065553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:15.066173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:16.066469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:17.066813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:18.067140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:19.067461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:20.067598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:21.068011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:22.068174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:23.069144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:24.070244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:25.070894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:22:25.400401 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1539" for this suite. @ 07/31/25 01:22:25.408
• [61.172 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 07/31/25 01:22:25.463
  I0731 01:22:25.463853 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename sched-preemption @ 07/31/25 01:22:25.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:22:25.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:22:25.623
  I0731 01:22:25.894224 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0731 01:22:26.070990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:27.071087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:28.071917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:29.072387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:30.073340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:31.073606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:32.074069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:33.074409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:34.074851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:35.075117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:36.075216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:37.075714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:38.076799      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:39.076899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:40.077704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:41.077961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:42.078110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:43.078426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:44.079297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:45.079471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:46.079664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:47.080155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:48.080180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:49.080562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:50.081584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:51.081883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:52.081958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:53.081987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:54.082953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:55.083121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:56.083705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:57.083938      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:58.084065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:22:59.084512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:00.085343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:01.085419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:02.085929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:03.086209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:04.086985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:05.087184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:06.088136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:07.088227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:08.088644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:09.089230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:10.089351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:11.089764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:12.090394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:13.090704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:14.091620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:15.091855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:16.092083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:17.092385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:18.093291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:19.093571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:20.093729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:21.094242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:22.094924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:23.095309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:24.095514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:25.095685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:23:25.902068 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/31/25 01:23:25.906
  I0731 01:23:25.906423 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/31/25 01:23:25.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:23:25.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:23:25.931
  STEP: Finding an available node @ 07/31/25 01:23:25.935
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/31/25 01:23:25.935
  E0731 01:23:26.096086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:27.097309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/31/25 01:23:27.958
  I0731 01:23:27.977396 24 preemption.go:717] found a healthy node: viola-gs-worker-1
  STEP: Adding a custom resource @ 07/31/25 01:23:27.981
  E0731 01:23:28.097249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:29.097485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:30.097883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:31.098174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:32.098739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:33.098871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:23:34.086953 24 preemption.go:836] pods created so far: [1 1 1]
  I0731 01:23:34.087107 24 preemption.go:837] length of pods created so far: 3
  E0731 01:23:34.099033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:35.099684      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:36.100172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:23:36.103005 24 preemption.go:854] pods created so far: [2 2 1]
  E0731 01:23:37.101018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:38.101393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:39.101776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:40.101991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:41.102299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:42.102620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:43.103038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/31/25 01:23:43.104
  STEP: Removing a custom resource @ 07/31/25 01:23:43.189
  STEP: Removing a custom resource @ 07/31/25 01:23:43.2
  STEP: Removing a custom resource @ 07/31/25 01:23:43.209
  STEP: Removing a custom resource @ 07/31/25 01:23:43.218
  I0731 01:23:43.228932 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4552" for this suite. @ 07/31/25 01:23:43.233
  I0731 01:23:43.251994 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5928" for this suite. @ 07/31/25 01:23:43.334
• [77.879 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 07/31/25 01:23:43.342
  I0731 01:23:43.342854 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename cronjob @ 07/31/25 01:23:43.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:23:43.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:23:43.374
  STEP: Creating a ReplaceConcurrent cronjob @ 07/31/25 01:23:43.376
  STEP: Ensuring a job is scheduled @ 07/31/25 01:23:43.391
  E0731 01:23:44.103989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:45.104182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:46.104565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:47.104717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:48.105659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:49.105835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:50.106084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:51.106385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:52.106544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:53.106887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:54.107007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:55.107150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:56.107267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:57.107465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:58.107771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:23:59.108045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:00.109117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:01.109418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/31/25 01:24:01.396
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/31/25 01:24:01.4
  STEP: Ensuring the job is replaced with a new one @ 07/31/25 01:24:01.405
  E0731 01:24:02.110159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:03.110428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:04.110658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:05.110913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:06.111523      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:07.111854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:08.112122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:09.112386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:10.112518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:11.112826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:12.113385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:13.113680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:14.114610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:15.114897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:16.115381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:17.115666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:18.116095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:19.116919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:20.117505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:21.117804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:22.118430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:23.118726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:24.119278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:25.119474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:26.120608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:27.120965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:28.121666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:29.121932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:30.122481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:31.122581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:32.122855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:33.123107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:34.123784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:35.124685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:36.125115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:37.125384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:38.126321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:39.126595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:40.127628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:41.127966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:42.127967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:43.128287      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:44.128355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:45.128514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:46.129187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:47.129481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:48.130160      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:49.130431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:50.131164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:51.131415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:52.131499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:53.131720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:54.131836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:55.132673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:56.132964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:57.133228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:58.134211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:24:59.134623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:00.134914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:01.135339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 07/31/25 01:25:01.411
  I0731 01:25:01.421068 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9933" for this suite. @ 07/31/25 01:25:01.427
• [78.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 07/31/25 01:25:01.437
  I0731 01:25:01.437257 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 01:25:01.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:25:01.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:25:01.464
  I0731 01:25:01.513914 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1640" for this suite. @ 07/31/25 01:25:01.528
• [0.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 07/31/25 01:25:01.541
  I0731 01:25:01.541458 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 01:25:01.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:25:01.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:25:01.563
  STEP: Setting up server cert @ 07/31/25 01:25:01.591
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 01:25:02.092
  STEP: Deploying the webhook pod @ 07/31/25 01:25:02.101
  STEP: Wait for the deployment to be ready @ 07/31/25 01:25:02.119
  E0731 01:25:02.135375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:25:02.136190 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 01:25:03.135659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:04.136185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 01:25:04.148
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 01:25:04.172
  E0731 01:25:05.137192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:25:05.173514 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/31/25 01:25:05.178
  STEP: create a pod @ 07/31/25 01:25:05.198
  E0731 01:25:06.137369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:07.137523      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/31/25 01:25:07.222
  I0731 01:25:07.222700 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=webhook-3800 attach --namespace=webhook-3800 to-be-attached-pod -i -c=container1'
  I0731 01:25:07.313206 24 builder.go:135] rc: 1
  I0731 01:25:07.382883 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3800" for this suite. @ 07/31/25 01:25:07.399
  STEP: Destroying namespace "webhook-markers-730" for this suite. @ 07/31/25 01:25:07.409
• [5.878 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/31/25 01:25:07.419
  I0731 01:25:07.419303 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename watch @ 07/31/25 01:25:07.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:25:07.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:25:07.446
  STEP: getting a starting resourceVersion @ 07/31/25 01:25:07.449
  STEP: starting a background goroutine to produce watch events @ 07/31/25 01:25:07.452
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/31/25 01:25:07.452
  E0731 01:25:08.137732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:09.138357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:10.139167      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:25:10.227924 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7146" for this suite. @ 07/31/25 01:25:10.276
• [2.917 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/31/25 01:25:10.336
  I0731 01:25:10.336774 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename watch @ 07/31/25 01:25:10.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:25:10.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:25:10.36
  STEP: creating a watch on configmaps with a certain label @ 07/31/25 01:25:10.363
  STEP: creating a new configmap @ 07/31/25 01:25:10.365
  STEP: modifying the configmap once @ 07/31/25 01:25:10.371
  STEP: changing the label value of the configmap @ 07/31/25 01:25:10.381
  STEP: Expecting to observe a delete notification for the watched object @ 07/31/25 01:25:10.389
  I0731 01:25:10.390078 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9799  80c8eddc-c1e7-45f3-8242-94324257e517 866456 0 2025-07-31 01:25:10 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-31 01:25:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 01:25:10.391099 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9799  80c8eddc-c1e7-45f3-8242-94324257e517 866457 0 2025-07-31 01:25:10 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-31 01:25:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 01:25:10.391379 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9799  80c8eddc-c1e7-45f3-8242-94324257e517 866458 0 2025-07-31 01:25:10 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-31 01:25:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/31/25 01:25:10.391
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/31/25 01:25:10.402
  E0731 01:25:11.139475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:12.139926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:13.140312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:14.140692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:15.140942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:16.141336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:17.141637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:18.142006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:19.142456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:20.142590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 07/31/25 01:25:20.402
  STEP: modifying the configmap a third time @ 07/31/25 01:25:20.417
  STEP: deleting the configmap @ 07/31/25 01:25:20.427
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/31/25 01:25:20.434
  I0731 01:25:20.435171 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9799  80c8eddc-c1e7-45f3-8242-94324257e517 866547 0 2025-07-31 01:25:10 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-31 01:25:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 01:25:20.435586 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9799  80c8eddc-c1e7-45f3-8242-94324257e517 866548 0 2025-07-31 01:25:10 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-31 01:25:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 01:25:20.439253 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9799  80c8eddc-c1e7-45f3-8242-94324257e517 866549 0 2025-07-31 01:25:10 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-31 01:25:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 01:25:20.439415 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9799" for this suite. @ 07/31/25 01:25:20.449
• [10.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 07/31/25 01:25:20.46
  I0731 01:25:20.460819 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 01:25:20.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:25:20.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:25:20.481
  STEP: creating a replication controller @ 07/31/25 01:25:20.485
  I0731 01:25:20.485351 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 create -f -'
  I0731 01:25:20.616387 24 builder.go:146] stderr: ""
  I0731 01:25:20.616457 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/31/25 01:25:20.616
  I0731 01:25:20.616673 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0731 01:25:20.688182 24 builder.go:146] stderr: ""
  I0731 01:25:20.688236 24 builder.go:147] stdout: "update-demo-nautilus-qvxvs update-demo-nautilus-zdwg7 "
  I0731 01:25:20.688280 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods update-demo-nautilus-qvxvs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0731 01:25:20.755964 24 builder.go:146] stderr: ""
  I0731 01:25:20.756011 24 builder.go:147] stdout: ""
  I0731 01:25:20.756032 24 kubectl.go:2505] update-demo-nautilus-qvxvs is created but not running
  E0731 01:25:21.143535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:22.143815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:23.144065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:24.144527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:25.145048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:25:25.756600 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0731 01:25:25.825188 24 builder.go:146] stderr: ""
  I0731 01:25:25.825239 24 builder.go:147] stdout: "update-demo-nautilus-qvxvs update-demo-nautilus-zdwg7 "
  I0731 01:25:25.825294 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods update-demo-nautilus-qvxvs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0731 01:25:25.888742 24 builder.go:146] stderr: ""
  I0731 01:25:25.888792 24 builder.go:147] stdout: "true"
  I0731 01:25:25.888842 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods update-demo-nautilus-qvxvs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0731 01:25:25.954827 24 builder.go:146] stderr: ""
  I0731 01:25:25.954893 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0731 01:25:25.954929 24 kubectl.go:2396] validating pod update-demo-nautilus-qvxvs
  I0731 01:25:25.961351 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0731 01:25:25.961549 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0731 01:25:25.961595 24 kubectl.go:2523] update-demo-nautilus-qvxvs is verified up and running
  I0731 01:25:25.961639 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods update-demo-nautilus-zdwg7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0731 01:25:26.022395 24 builder.go:146] stderr: ""
  I0731 01:25:26.022460 24 builder.go:147] stdout: "true"
  I0731 01:25:26.022523 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods update-demo-nautilus-zdwg7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0731 01:25:26.083495 24 builder.go:146] stderr: ""
  I0731 01:25:26.083552 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0731 01:25:26.083564 24 kubectl.go:2396] validating pod update-demo-nautilus-zdwg7
  I0731 01:25:26.090592 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0731 01:25:26.090650 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0731 01:25:26.090660 24 kubectl.go:2523] update-demo-nautilus-zdwg7 is verified up and running
  STEP: scaling down the replication controller @ 07/31/25 01:25:26.09
  I0731 01:25:26.091913 24 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0731 01:25:26.091948 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0731 01:25:26.145261      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:27.145546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:25:27.170327 24 builder.go:146] stderr: ""
  I0731 01:25:27.170381 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/31/25 01:25:27.17
  I0731 01:25:27.170581 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0731 01:25:27.238022 24 builder.go:146] stderr: ""
  I0731 01:25:27.238076 24 builder.go:147] stdout: "update-demo-nautilus-qvxvs "
  I0731 01:25:27.238123 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods update-demo-nautilus-qvxvs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0731 01:25:27.290294 24 builder.go:146] stderr: ""
  I0731 01:25:27.290340 24 builder.go:147] stdout: "true"
  I0731 01:25:27.290383 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods update-demo-nautilus-qvxvs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0731 01:25:27.349964 24 builder.go:146] stderr: ""
  I0731 01:25:27.350026 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0731 01:25:27.350042 24 kubectl.go:2396] validating pod update-demo-nautilus-qvxvs
  I0731 01:25:27.358380 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0731 01:25:27.358463 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0731 01:25:27.358475 24 kubectl.go:2523] update-demo-nautilus-qvxvs is verified up and running
  STEP: scaling up the replication controller @ 07/31/25 01:25:27.358
  I0731 01:25:27.359971 24 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0731 01:25:27.360021 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0731 01:25:28.145653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:25:28.438391 24 builder.go:146] stderr: ""
  I0731 01:25:28.438438 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/31/25 01:25:28.438
  I0731 01:25:28.438522 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0731 01:25:28.497003 24 builder.go:146] stderr: ""
  I0731 01:25:28.497049 24 builder.go:147] stdout: "update-demo-nautilus-jwd5x update-demo-nautilus-qvxvs "
  I0731 01:25:28.497096 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods update-demo-nautilus-jwd5x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0731 01:25:28.563520 24 builder.go:146] stderr: ""
  I0731 01:25:28.563582 24 builder.go:147] stdout: "true"
  I0731 01:25:28.563634 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods update-demo-nautilus-jwd5x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0731 01:25:28.619465 24 builder.go:146] stderr: ""
  I0731 01:25:28.619512 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0731 01:25:28.619526 24 kubectl.go:2396] validating pod update-demo-nautilus-jwd5x
  I0731 01:25:28.628438 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0731 01:25:28.628498 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0731 01:25:28.628509 24 kubectl.go:2523] update-demo-nautilus-jwd5x is verified up and running
  I0731 01:25:28.628620 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods update-demo-nautilus-qvxvs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0731 01:25:28.689894 24 builder.go:146] stderr: ""
  I0731 01:25:28.689943 24 builder.go:147] stdout: "true"
  I0731 01:25:28.689996 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods update-demo-nautilus-qvxvs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0731 01:25:28.745999 24 builder.go:146] stderr: ""
  I0731 01:25:28.746061 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0731 01:25:28.746080 24 kubectl.go:2396] validating pod update-demo-nautilus-qvxvs
  I0731 01:25:28.750610 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0731 01:25:28.750662 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0731 01:25:28.750673 24 kubectl.go:2523] update-demo-nautilus-qvxvs is verified up and running
  STEP: using delete to clean up resources @ 07/31/25 01:25:28.75
  I0731 01:25:28.750786 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 delete --grace-period=0 --force -f -'
  I0731 01:25:28.823821 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0731 01:25:28.823882 24 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0731 01:25:28.823932 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get rc,svc -l name=update-demo --no-headers'
  I0731 01:25:28.911059 24 builder.go:146] stderr: "No resources found in kubectl-8498 namespace.\n"
  I0731 01:25:28.911120 24 builder.go:147] stdout: ""
  I0731 01:25:28.911184 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8498 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0731 01:25:28.973094 24 builder.go:146] stderr: ""
  I0731 01:25:28.973163 24 builder.go:147] stdout: ""
  I0731 01:25:28.973289 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8498" for this suite. @ 07/31/25 01:25:28.982
• [8.531 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 07/31/25 01:25:28.992
  I0731 01:25:28.992348 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 01:25:28.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:25:29.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:25:29.016
  STEP: Creating configMap with name configmap-test-volume-map-3ee73bed-a4a4-4000-bbdb-41140fbdad93 @ 07/31/25 01:25:29.018
  STEP: Creating a pod to test consume configMaps @ 07/31/25 01:25:29.025
  E0731 01:25:29.146156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:30.146282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:31.147001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:32.147412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:25:33.062
  I0731 01:25:33.069505 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-configmaps-dda57435-1015-45d0-8ec7-c9a717388747 container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 01:25:33.09
  I0731 01:25:33.117489 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8122" for this suite. @ 07/31/25 01:25:33.121
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 07/31/25 01:25:33.135
  I0731 01:25:33.135781 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/31/25 01:25:33.136
  E0731 01:25:33.148075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:25:33.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:25:33.162
  STEP: getting /apis @ 07/31/25 01:25:33.173
  STEP: getting /apis/admissionregistration.k8s.io @ 07/31/25 01:25:33.178
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/31/25 01:25:33.179
  STEP: creating @ 07/31/25 01:25:33.181
  STEP: getting @ 07/31/25 01:25:33.2
  STEP: listing @ 07/31/25 01:25:33.204
  STEP: watching @ 07/31/25 01:25:33.208
  I0731 01:25:33.208363 24 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 07/31/25 01:25:33.209
  STEP: updating @ 07/31/25 01:25:33.219
  I0731 01:25:33.228446 24 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 07/31/25 01:25:33.228
  STEP: patching /status @ 07/31/25 01:25:33.231
  STEP: updating /status @ 07/31/25 01:25:33.237
  STEP: deleting @ 07/31/25 01:25:33.245
  STEP: deleting a collection @ 07/31/25 01:25:33.262
  I0731 01:25:33.283719 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3696" for this suite. @ 07/31/25 01:25:33.292
• [0.168 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 07/31/25 01:25:33.303
  I0731 01:25:33.303794 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 01:25:33.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:25:33.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:25:33.323
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 01:25:33.326
  E0731 01:25:34.148637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:35.149032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:36.149027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:37.149426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:25:37.35
  I0731 01:25:37.353952 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-35e507d1-e6c6-4bf9-a669-bf96992fd178 container client-container: <nil>
  STEP: delete the pod @ 07/31/25 01:25:37.359
  I0731 01:25:37.378511 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4889" for this suite. @ 07/31/25 01:25:37.383
• [4.088 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/31/25 01:25:37.391
  I0731 01:25:37.392067 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename subpath @ 07/31/25 01:25:37.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:25:37.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:25:37.414
  STEP: Setting up data @ 07/31/25 01:25:37.416
  STEP: Creating pod pod-subpath-test-configmap-7gnl @ 07/31/25 01:25:37.428
  STEP: Creating a pod to test atomic-volume-subpath @ 07/31/25 01:25:37.428
  E0731 01:25:38.150432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:39.150868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:40.151755      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:41.152122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:42.152626      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:43.152907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:44.153651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:45.153963      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:46.155050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:47.155352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:48.155955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:49.156714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:50.157199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:51.157468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:52.157637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:53.157904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:54.158405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:55.158518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:56.159494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:57.159716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:58.160775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:25:59.161091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:00.161602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:01.161775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:26:01.514
  I0731 01:26:01.517900 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-subpath-test-configmap-7gnl container test-container-subpath-configmap-7gnl: <nil>
  STEP: delete the pod @ 07/31/25 01:26:01.524
  STEP: Deleting pod pod-subpath-test-configmap-7gnl @ 07/31/25 01:26:01.548
  I0731 01:26:01.548872 24 delete.go:62] Deleting pod "pod-subpath-test-configmap-7gnl" in namespace "subpath-8634"
  I0731 01:26:01.552292 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8634" for this suite. @ 07/31/25 01:26:01.556
• [24.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 07/31/25 01:26:01.564
  I0731 01:26:01.564257 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename statefulset @ 07/31/25 01:26:01.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:26:01.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:26:01.587
  STEP: Creating service test in namespace statefulset-6477 @ 07/31/25 01:26:01.59
  STEP: Creating statefulset ss in namespace statefulset-6477 @ 07/31/25 01:26:01.6
  I0731 01:26:01.614731 24 wait.go:44] Found 0 stateful pods, waiting for 1
  E0731 01:26:02.162448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:03.162714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:04.163122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:05.164217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:06.164909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:07.165763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:08.166298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:09.166802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:10.167083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:11.168094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:26:11.617552 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/31/25 01:26:11.624
  STEP: Getting /status @ 07/31/25 01:26:11.632
  I0731 01:26:11.637537 24 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/31/25 01:26:11.637
  I0731 01:26:11.648605 24 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/31/25 01:26:11.648
  I0731 01:26:11.650410 24 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0731 01:26:11.650499 24 statefulset.go:1126] Found Statefulset ss in namespace statefulset-6477 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0731 01:26:11.650544 24 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/31/25 01:26:11.65
  I0731 01:26:11.650623 24 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0731 01:26:11.658217 24 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/31/25 01:26:11.658
  I0731 01:26:11.659869 24 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0731 01:26:11.660055 24 statefulset.go:138] Deleting all statefulset in ns statefulset-6477
  I0731 01:26:11.666795 24 rest.go:153] Scaling statefulset ss to 0
  E0731 01:26:12.168461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:13.168882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:14.169245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:15.169430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:16.169929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:17.170372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:18.170822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:19.171261      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:20.171584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:21.172013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:26:21.686615 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0731 01:26:21.690842 24 rest.go:91] Deleting statefulset ss
  I0731 01:26:21.705816 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6477" for this suite. @ 07/31/25 01:26:21.711
• [20.159 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 07/31/25 01:26:21.723
  I0731 01:26:21.723610 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 01:26:21.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:26:21.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:26:21.747
  STEP: Creating a job @ 07/31/25 01:26:21.75
  STEP: Ensuring active pods == parallelism @ 07/31/25 01:26:21.757
  E0731 01:26:22.172644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:23.172869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete a job @ 07/31/25 01:26:23.778
  STEP: deleting Job.batch foo in namespace job-9730, will wait for the garbage collector to delete the pods @ 07/31/25 01:26:23.778
  I0731 01:26:23.842254 24 resources.go:139] Deleting Job.batch foo took: 9.000473ms
  I0731 01:26:23.942827 24 resources.go:163] Terminating Job.batch foo pods took: 100.567432ms
  E0731 01:26:24.174014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 07/31/25 01:26:25.143
  I0731 01:26:25.149500 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9730" for this suite. @ 07/31/25 01:26:25.159
• [3.445 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 07/31/25 01:26:25.169
  I0731 01:26:25.169315 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 01:26:25.171
  E0731 01:26:25.174086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:26:25.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:26:25.194
  STEP: creating a Service @ 07/31/25 01:26:25.202
  STEP: watching for the Service to be added @ 07/31/25 01:26:25.24
  I0731 01:26:25.242085 24 service.go:3456] Found Service test-service-nc5km in namespace services-1016 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30411}]
  I0731 01:26:25.242123 24 service.go:3463] Service test-service-nc5km created
  STEP: Getting /status @ 07/31/25 01:26:25.242
  I0731 01:26:25.245775 24 service.go:3474] Service test-service-nc5km has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/31/25 01:26:25.245
  STEP: watching for the Service to be patched @ 07/31/25 01:26:25.254
  I0731 01:26:25.256346 24 service.go:3497] observed Service test-service-nc5km in namespace services-1016 with annotations: map[] & LoadBalancer: {[]}
  I0731 01:26:25.256393 24 service.go:3500] Found Service test-service-nc5km in namespace services-1016 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc004596ac0 []}]}
  I0731 01:26:25.256404 24 service.go:3507] Service test-service-nc5km has service status patched
  STEP: updating the ServiceStatus @ 07/31/25 01:26:25.256
  I0731 01:26:25.272211 24 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/31/25 01:26:25.272
  I0731 01:26:25.274823 24 service.go:3538] Observed Service test-service-nc5km in namespace services-1016 with annotations: map[] & Conditions: []
  I0731 01:26:25.274930 24 service.go:3549] Observed Service test-service-nc5km in namespace services-1016 with annotations: map[patchedstatus:true] & Conditions: []
  I0731 01:26:25.275057 24 service.go:3545] Found Service test-service-nc5km in namespace services-1016 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0731 01:26:25.275103 24 service.go:3556] Service test-service-nc5km has service status updated
  STEP: patching the service @ 07/31/25 01:26:25.275
  STEP: watching for the Service to be patched @ 07/31/25 01:26:25.295
  I0731 01:26:25.297837 24 service.go:3579] observed Service test-service-nc5km in namespace services-1016 with labels: map[test-service-static:true]
  I0731 01:26:25.297939 24 service.go:3579] observed Service test-service-nc5km in namespace services-1016 with labels: map[test-service-static:true]
  I0731 01:26:25.297979 24 service.go:3579] observed Service test-service-nc5km in namespace services-1016 with labels: map[test-service-static:true]
  I0731 01:26:25.298398 24 service.go:3582] Found Service test-service-nc5km in namespace services-1016 with labels: map[test-service:patched test-service-static:true]
  I0731 01:26:25.298642 24 service.go:3589] Service test-service-nc5km patched
  STEP: deleting the service @ 07/31/25 01:26:25.299
  STEP: watching for the Service to be deleted @ 07/31/25 01:26:25.339
  I0731 01:26:25.342539 24 service.go:3613] Observed event: ADDED
  I0731 01:26:25.342588 24 service.go:3613] Observed event: MODIFIED
  I0731 01:26:25.342596 24 service.go:3613] Observed event: MODIFIED
  I0731 01:26:25.342660 24 service.go:3613] Observed event: MODIFIED
  I0731 01:26:25.342724 24 service.go:3609] Found Service test-service-nc5km in namespace services-1016 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0731 01:26:25.342737 24 service.go:3618] Service test-service-nc5km deleted
  I0731 01:26:25.342871 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1016" for this suite. @ 07/31/25 01:26:25.355
• [0.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/31/25 01:26:25.371
  I0731 01:26:25.371477 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 01:26:25.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:26:25.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:26:25.4
  STEP: Creating a pod to test downward api env vars @ 07/31/25 01:26:25.404
  E0731 01:26:26.174629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:27.174877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:28.175360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:29.175885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:26:29.455
  I0731 01:26:29.458821 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downward-api-2666474e-195c-4dfd-95b7-a96479223d10 container dapi-container: <nil>
  STEP: delete the pod @ 07/31/25 01:26:29.465
  I0731 01:26:29.495697 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-536" for this suite. @ 07/31/25 01:26:29.502
• [4.140 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 07/31/25 01:26:29.511
  I0731 01:26:29.511394 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 01:26:29.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:26:29.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:26:29.539
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 07/31/25 01:26:29.544
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 07/31/25 01:26:29.556
  E0731 01:26:30.176820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:31.177264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:32.177685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:33.178319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/31/25 01:26:33.578
  STEP: Verifying that the only appropriately index succeeded @ 07/31/25 01:26:33.586
  I0731 01:26:33.589406 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5054" for this suite. @ 07/31/25 01:26:33.594
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/31/25 01:26:33.604
  I0731 01:26:33.604648 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename secrets @ 07/31/25 01:26:33.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:26:33.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:26:33.629
  STEP: Creating secret with name secret-test-1e6de527-98e0-4092-abc9-b8f5f2ba8b37 @ 07/31/25 01:26:33.632
  STEP: Creating a pod to test consume secrets @ 07/31/25 01:26:33.64
  E0731 01:26:34.178655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:35.179090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:36.179989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:37.180248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:26:37.668
  I0731 01:26:37.673636 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-secrets-6d66ce50-7445-4398-a9fb-1c14a33fada3 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 01:26:37.681
  I0731 01:26:37.707795 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9725" for this suite. @ 07/31/25 01:26:37.713
• [4.117 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 07/31/25 01:26:37.721
  I0731 01:26:37.721726 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename statefulset @ 07/31/25 01:26:37.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:26:37.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:26:37.748
  STEP: Creating service test in namespace statefulset-6491 @ 07/31/25 01:26:37.752
  STEP: Creating stateful set ss in namespace statefulset-6491 @ 07/31/25 01:26:37.762
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6491 @ 07/31/25 01:26:37.777
  I0731 01:26:37.787436 24 wait.go:44] Found 0 stateful pods, waiting for 1
  E0731 01:26:38.180947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:39.181242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:40.181303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:41.181512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:42.181903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:43.182331      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:44.182775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:45.182980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:46.183336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:47.183557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:26:47.784683 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/31/25 01:26:47.784
  I0731 01:26:47.788765 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-6491 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0731 01:26:47.925509 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0731 01:26:47.925575 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0731 01:26:47.925585 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0731 01:26:47.929823 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0731 01:26:48.184166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:49.184518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:50.184746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:51.185570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:52.186603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:53.186887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:54.187300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:55.187492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:56.187697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:26:57.187989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:26:57.932162 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0731 01:26:57.932234 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0731 01:26:57.987494 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999432s
  E0731 01:26:58.188650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:26:58.994552 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.967811665s
  E0731 01:26:59.189646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:00.000830 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.960754475s
  E0731 01:27:00.189752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:01.007317 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.954660379s
  E0731 01:27:01.190335      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:02.013328 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.948066945s
  E0731 01:27:02.191327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:03.019446 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.942265563s
  E0731 01:27:03.191641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:04.026296 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.935821357s
  E0731 01:27:04.192524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:05.047122 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.929704906s
  E0731 01:27:05.193121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:06.053653 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.908329014s
  E0731 01:27:06.193820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:07.061438 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 901.557404ms
  E0731 01:27:07.194403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6491 @ 07/31/25 01:27:08.062
  I0731 01:27:08.067548 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-6491 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0731 01:27:08.190048 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0731 01:27:08.190097 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0731 01:27:08.190116 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0731 01:27:08.190159 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-6491 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0731 01:27:08.195450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:08.318354 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0731 01:27:08.318427 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0731 01:27:08.318437 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0731 01:27:08.318488 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-6491 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0731 01:27:08.445307 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0731 01:27:08.445357 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0731 01:27:08.445368 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0731 01:27:08.450135 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0731 01:27:09.196372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:10.196996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:11.197366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:12.197725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:13.198504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:14.198876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:15.199117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:16.199510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:17.199871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:18.200186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:18.451262 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0731 01:27:18.451312 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0731 01:27:18.451322 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/31/25 01:27:18.451
  I0731 01:27:18.456854 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-6491 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0731 01:27:18.564884 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0731 01:27:18.564945 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0731 01:27:18.564960 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0731 01:27:18.565043 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-6491 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0731 01:27:18.684303 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0731 01:27:18.684370 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0731 01:27:18.684381 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0731 01:27:18.684486 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-6491 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0731 01:27:18.820255 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0731 01:27:18.820316 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0731 01:27:18.820330 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0731 01:27:18.820344 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0731 01:27:18.824643 24 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0731 01:27:19.201053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:20.201262      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:21.201415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:22.201828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:23.202791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:24.204551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:25.203047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:26.203209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:27.203438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:28.203711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:28.833763 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0731 01:27:28.833818 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0731 01:27:28.833825 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0731 01:27:28.857900 24 resource.go:168] POD   NODE               PHASE    GRACE  CONDITIONS
  I0731 01:27:28.858023 24 resource.go:175] ss-0  viola-gs-worker-1  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:26:39 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:26:37 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:27:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:27:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:26:37 +0000 UTC  }]
  I0731 01:27:28.858052 24 resource.go:175] ss-1  viola-gs-worker-3  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:26:59 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:26:58 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:27:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:27:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:26:58 +0000 UTC  }]
  I0731 01:27:28.858067 24 resource.go:175] ss-2  viola-gs-worker-4  Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:26:59 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:26:58 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:27:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:27:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:26:57 +0000 UTC  }]
  I0731 01:27:28.858072 24 resource.go:178] 
  I0731 01:27:28.858080 24 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  E0731 01:27:29.204365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:29.864562 24 resource.go:168] POD   NODE               PHASE      GRACE  CONDITIONS
  I0731 01:27:29.864647 24 resource.go:175] ss-2  viola-gs-worker-4  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:27:29 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:26:58 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:27:18 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:27:18 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:26:57 +0000 UTC  }]
  I0731 01:27:29.864657 24 resource.go:178] 
  I0731 01:27:29.864665 24 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 1
  E0731 01:27:30.205186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:30.870503 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.980447966s
  E0731 01:27:31.206159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:31.876795 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.975399377s
  E0731 01:27:32.206304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:32.882830 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.969299833s
  E0731 01:27:33.207398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:33.888710 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.963154846s
  E0731 01:27:34.208237      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:34.894746 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.957187437s
  E0731 01:27:35.209249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:35.900492 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.950341356s
  E0731 01:27:36.210110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:36.905927 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.945423661s
  E0731 01:27:37.210351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:37.913094 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 939.111047ms
  E0731 01:27:38.210550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6491 @ 07/31/25 01:27:38.913
  I0731 01:27:38.919741 24 rest.go:153] Scaling statefulset ss to 0
  I0731 01:27:38.925072 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0731 01:27:38.928378 24 statefulset.go:138] Deleting all statefulset in ns statefulset-6491
  I0731 01:27:38.931741 24 rest.go:153] Scaling statefulset ss to 0
  I0731 01:27:38.936829 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0731 01:27:38.939749 24 rest.go:91] Deleting statefulset ss
  I0731 01:27:38.962391 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6491" for this suite. @ 07/31/25 01:27:38.967
• [61.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 07/31/25 01:27:38.98
  I0731 01:27:38.980914 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 01:27:38.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:27:39.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:27:39.015
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 01:27:39.018
  E0731 01:27:39.211159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:40.211310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:41.211455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:42.211752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:27:43.046
  I0731 01:27:43.050349 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-60948ea8-0227-42be-9355-1b2fccba9b23 container client-container: <nil>
  STEP: delete the pod @ 07/31/25 01:27:43.056
  I0731 01:27:43.079286 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-543" for this suite. @ 07/31/25 01:27:43.084
• [4.111 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 07/31/25 01:27:43.091
  I0731 01:27:43.091943 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 01:27:43.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:27:43.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:27:43.112
  STEP: Looking for a node to schedule job pod @ 07/31/25 01:27:43.115
  STEP: Creating a job @ 07/31/25 01:27:43.186
  STEP: Ensuring job fails @ 07/31/25 01:27:43.196
  E0731 01:27:43.212445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:44.212902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:45.213475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:46.213562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:27:47.212068 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0731 01:27:47.213980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "job-5581" for this suite. @ 07/31/25 01:27:47.216
• [4.135 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 07/31/25 01:27:47.227
  I0731 01:27:47.227872 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename var-expansion @ 07/31/25 01:27:47.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:27:47.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:27:47.253
  STEP: Creating a pod to test env composition @ 07/31/25 01:27:47.255
  E0731 01:27:48.214267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:49.214813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:50.214884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:51.215269      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:27:51.284
  I0731 01:27:51.287926 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod var-expansion-c368d250-fc1c-4e7f-97f9-110027089940 container dapi-container: <nil>
  STEP: delete the pod @ 07/31/25 01:27:51.295
  I0731 01:27:51.317346 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2466" for this suite. @ 07/31/25 01:27:51.322
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 07/31/25 01:27:51.331
  I0731 01:27:51.331420 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-probe @ 07/31/25 01:27:51.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:27:51.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:27:51.36
  E0731 01:27:52.215454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:53.216445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:54.217263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:55.217437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:56.217556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:57.218005      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:58.218150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:27:59.218271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:00.218639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:01.218814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:02.219473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:03.220487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:04.221224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:05.221650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:06.222126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:07.223175      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:08.223249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:09.224265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:10.224609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:11.225304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:12.226288      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:13.227365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:14.228054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:15.228662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:16.229119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:17.229514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:18.229605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:19.229861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:20.229938      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:21.229976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:22.230869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:23.230917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:24.231873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:25.232255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:26.233098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:27.233179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:28.233382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:29.233644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:30.233977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:31.234200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:32.234435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:33.235463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:34.236420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:35.236908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:36.237728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:37.238408      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:38.238805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:39.239681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:40.240562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:41.241598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:42.241606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:43.241714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:44.242169      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:45.242602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:46.242801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:47.243497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:48.244197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:49.244313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:50.244430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:51.244813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:28:51.381513 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8058" for this suite. @ 07/31/25 01:28:51.387
• [60.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 07/31/25 01:28:51.397
  I0731 01:28:51.397382 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 01:28:51.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:28:51.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:28:51.424
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/31/25 01:28:51.427
  I0731 01:28:51.427403 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-7912 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0731 01:28:51.513255 24 builder.go:146] stderr: ""
  I0731 01:28:51.513303 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/31/25 01:28:51.513
  I0731 01:28:51.513391 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-7912 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0731 01:28:51.579489 24 builder.go:146] stderr: ""
  I0731 01:28:51.579548 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/31/25 01:28:51.579
  I0731 01:28:51.584384 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-7912 delete pods e2e-test-httpd-pod'
  E0731 01:28:52.245652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:53.245592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:28:53.530865 24 builder.go:146] stderr: ""
  I0731 01:28:53.530927 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0731 01:28:53.531226 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7912" for this suite. @ 07/31/25 01:28:53.536
• [2.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 07/31/25 01:28:53.551
  I0731 01:28:53.551031 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename sched-preemption @ 07/31/25 01:28:53.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:28:53.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:28:53.584
  I0731 01:28:53.612424 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0731 01:28:54.246049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:55.246228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:56.246380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:57.246470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:58.247085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:28:59.247218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:00.247376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:01.247654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:02.248087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:03.248583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:04.248878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:05.249049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:06.249409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:07.249537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:08.249841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:09.250148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:10.250949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:11.251302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:12.252239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:13.252753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:14.253133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:15.253325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:16.253605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:17.254418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:18.254668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:19.255726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:20.256217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:21.256486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:22.257379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:23.257668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:24.258090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:25.258143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:26.259153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:27.259427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:28.259639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:29.260024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:30.260824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:31.261139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:32.261455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:33.262339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:34.262757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:35.262892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:36.263198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:37.263322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:38.263961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:39.264066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:40.264274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:41.264698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:42.265174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:43.265422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:44.266494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:45.266623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:46.267582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:47.267705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:48.268673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:49.268754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:50.268907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:51.269561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:52.270614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:53.271830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:29:53.620859 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/31/25 01:29:53.625
  I0731 01:29:53.625220 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/31/25 01:29:53.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:29:53.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:29:53.649
  I0731 01:29:53.670003 24 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0731 01:29:53.673495 24 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 07/31/25 01:29:53.754
  STEP: Removing a custom resource @ 07/31/25 01:29:53.764
  STEP: Removing a custom resource @ 07/31/25 01:29:53.772
  STEP: Removing a custom resource @ 07/31/25 01:29:53.782
  I0731 01:29:53.791436 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8168" for this suite. @ 07/31/25 01:29:53.795
  I0731 01:29:53.804669 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-382" for this suite. @ 07/31/25 01:29:53.897
• [60.357 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/31/25 01:29:53.907
  I0731 01:29:53.907585 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename subpath @ 07/31/25 01:29:53.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:29:53.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:29:53.936
  STEP: Setting up data @ 07/31/25 01:29:53.938
  STEP: Creating pod pod-subpath-test-configmap-nnwg @ 07/31/25 01:29:53.951
  STEP: Creating a pod to test atomic-volume-subpath @ 07/31/25 01:29:53.951
  E0731 01:29:54.272069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:55.272208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:56.272367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:57.272844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:58.273014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:29:59.273433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:00.273731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:01.273902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:02.274091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:03.274535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:04.275015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:05.275193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:06.275758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:07.276198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:08.276790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:09.277368      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:10.278328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:11.278564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:12.279164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:13.279387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:14.280221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:15.280325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:16.280944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:17.281439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:30:18.045
  I0731 01:30:18.048219 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-subpath-test-configmap-nnwg container test-container-subpath-configmap-nnwg: <nil>
  STEP: delete the pod @ 07/31/25 01:30:18.061
  STEP: Deleting pod pod-subpath-test-configmap-nnwg @ 07/31/25 01:30:18.085
  I0731 01:30:18.085881 24 delete.go:62] Deleting pod "pod-subpath-test-configmap-nnwg" in namespace "subpath-8841"
  I0731 01:30:18.089420 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8841" for this suite. @ 07/31/25 01:30:18.094
• [24.197 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/31/25 01:30:18.105
  I0731 01:30:18.105208 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename watch @ 07/31/25 01:30:18.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:30:18.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:30:18.135
  STEP: creating a watch on configmaps with label A @ 07/31/25 01:30:18.136
  STEP: creating a watch on configmaps with label B @ 07/31/25 01:30:18.138
  STEP: creating a watch on configmaps with label A or B @ 07/31/25 01:30:18.139
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/31/25 01:30:18.14
  I0731 01:30:18.147803 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6076  72aa8611-4684-44e2-bfe8-9a393f7dae04 869172 0 2025-07-31 01:30:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-31 01:30:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 01:30:18.148149 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6076  72aa8611-4684-44e2-bfe8-9a393f7dae04 869172 0 2025-07-31 01:30:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-31 01:30:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/31/25 01:30:18.148
  I0731 01:30:18.158724 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6076  72aa8611-4684-44e2-bfe8-9a393f7dae04 869173 0 2025-07-31 01:30:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-31 01:30:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 01:30:18.158976 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6076  72aa8611-4684-44e2-bfe8-9a393f7dae04 869173 0 2025-07-31 01:30:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-31 01:30:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/31/25 01:30:18.159
  I0731 01:30:18.168283 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6076  72aa8611-4684-44e2-bfe8-9a393f7dae04 869174 0 2025-07-31 01:30:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-31 01:30:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 01:30:18.168409 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6076  72aa8611-4684-44e2-bfe8-9a393f7dae04 869174 0 2025-07-31 01:30:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-31 01:30:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/31/25 01:30:18.168
  I0731 01:30:18.176345 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6076  72aa8611-4684-44e2-bfe8-9a393f7dae04 869175 0 2025-07-31 01:30:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-31 01:30:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 01:30:18.176498 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6076  72aa8611-4684-44e2-bfe8-9a393f7dae04 869175 0 2025-07-31 01:30:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-31 01:30:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/31/25 01:30:18.176
  I0731 01:30:18.183481 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6076  f0e51b2c-74ff-49aa-bf9a-bfc8b5aa2984 869176 0 2025-07-31 01:30:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-31 01:30:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 01:30:18.183584 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6076  f0e51b2c-74ff-49aa-bf9a-bfc8b5aa2984 869176 0 2025-07-31 01:30:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-31 01:30:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0731 01:30:18.281763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:19.282199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:20.282297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:21.282678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:22.282978      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:23.283469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:24.283581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:25.283895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:26.283989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:27.284453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/31/25 01:30:28.183
  I0731 01:30:28.194519 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6076  f0e51b2c-74ff-49aa-bf9a-bfc8b5aa2984 869242 0 2025-07-31 01:30:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-31 01:30:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 01:30:28.194594 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6076  f0e51b2c-74ff-49aa-bf9a-bfc8b5aa2984 869242 0 2025-07-31 01:30:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-31 01:30:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0731 01:30:28.284769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:29.284975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:30.285152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:31.285476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:32.285901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:33.286000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:34.286354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:35.287103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:36.287483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:37.287825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:30:38.195901 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6076" for this suite. @ 07/31/25 01:30:38.202
• [20.107 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 07/31/25 01:30:38.213
  I0731 01:30:38.213058 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 01:30:38.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:30:38.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:30:38.246
  STEP: creating service in namespace services-6241 @ 07/31/25 01:30:38.248
  STEP: creating service affinity-clusterip-transition in namespace services-6241 @ 07/31/25 01:30:38.249
  E0731 01:30:38.287927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:30:38.293040 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0731 01:30:39.288416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:40.289560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:30:40.299277 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 1, 30, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 30, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 30, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 30, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0731 01:30:41.289741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:42.290152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:30:42.317777 24 resource.go:361] Creating new exec pod
  E0731 01:30:43.290226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:44.290329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:30:44.343874 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-6241 exec execpod-affinityswtfn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0731 01:30:44.470868 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.233.57.156) 80 port [tcp/http] succeeded!\n"
  I0731 01:30:44.470967 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 01:30:44.471092 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-6241 exec execpod-affinityswtfn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.57.156 80'
  I0731 01:30:44.578878 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.57.156 80\nConnection to 10.233.57.156 80 port [tcp/http] succeeded!\n"
  I0731 01:30:44.578934 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0731 01:30:44.593002 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-6241 exec execpod-affinityswtfn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/ ; done'
  I0731 01:30:44.820390 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n"
  I0731 01:30:44.820485 24 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-79zhn\naffinity-clusterip-transition-5cffb65545-kxbsp\naffinity-clusterip-transition-5cffb65545-79zhn\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-kxbsp\naffinity-clusterip-transition-5cffb65545-kxbsp\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-79zhn\naffinity-clusterip-transition-5cffb65545-79zhn\naffinity-clusterip-transition-5cffb65545-kxbsp\naffinity-clusterip-transition-5cffb65545-kxbsp\naffinity-clusterip-transition-5cffb65545-kxbsp\naffinity-clusterip-transition-5cffb65545-79zhn\naffinity-clusterip-transition-5cffb65545-kxbsp\naffinity-clusterip-transition-5cffb65545-kxbsp"
  I0731 01:30:44.820537 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:44.820564 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-79zhn
  I0731 01:30:44.820573 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-kxbsp
  I0731 01:30:44.820581 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-79zhn
  I0731 01:30:44.820592 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:44.820600 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-kxbsp
  I0731 01:30:44.820609 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-kxbsp
  I0731 01:30:44.820616 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:44.820640 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-79zhn
  I0731 01:30:44.820645 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-79zhn
  I0731 01:30:44.820652 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-kxbsp
  I0731 01:30:44.820658 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-kxbsp
  I0731 01:30:44.820664 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-kxbsp
  I0731 01:30:44.820675 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-79zhn
  I0731 01:30:44.820681 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-kxbsp
  I0731 01:30:44.820687 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-kxbsp
  I0731 01:30:44.832651 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-6241 exec execpod-affinityswtfn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/ ; done'
  I0731 01:30:45.019506 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.233.57.156:80/\n"
  I0731 01:30:45.019591 24 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt\naffinity-clusterip-transition-5cffb65545-2wczt"
  I0731 01:30:45.019614 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.019622 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.019629 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.019634 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.019786 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.019793 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.020587 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.020597 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.020686 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.021110 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.021194 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.021200 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.021206 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.021211 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.021216 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.021221 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2wczt
  I0731 01:30:45.021563 24 service.go:4352] Cleaning up the exec pod
  I0731 01:30:45.229911 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6241" for this suite. @ 07/31/25 01:30:45.242
• [7.038 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 07/31/25 01:30:45.251
  I0731 01:30:45.251388 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename dns @ 07/31/25 01:30:45.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:30:45.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:30:45.272
  STEP: Creating a test headless service @ 07/31/25 01:30:45.274
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6716.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-6716.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6716.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-6716.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6716.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-6716.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6716.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-6716.svc.cluster.local;sleep 1; done
   @ 07/31/25 01:30:45.285
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6716.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-6716.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6716.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-6716.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6716.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-6716.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6716.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-6716.svc.cluster.local;sleep 1; done
   @ 07/31/25 01:30:45.285
  STEP: creating a pod to probe DNS @ 07/31/25 01:30:45.285
  STEP: submitting the pod to kubernetes @ 07/31/25 01:30:45.285
  E0731 01:30:45.290607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:46.290945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:47.290903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:48.291924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:49.292014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/31/25 01:30:49.333
  STEP: looking for the results for each expected name from probers @ 07/31/25 01:30:49.336
  I0731 01:30:49.341408 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-6716.svc.cluster.local from pod dns-6716/dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a: the server could not find the requested resource (get pods dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a)
  I0731 01:30:49.344730 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-6716.svc.cluster.local from pod dns-6716/dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a: the server could not find the requested resource (get pods dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a)
  I0731 01:30:49.347743 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-6716.svc.cluster.local from pod dns-6716/dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a: the server could not find the requested resource (get pods dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a)
  I0731 01:30:49.351211 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-6716.svc.cluster.local from pod dns-6716/dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a: the server could not find the requested resource (get pods dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a)
  I0731 01:30:49.362200 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-6716.svc.cluster.local from pod dns-6716/dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a: the server could not find the requested resource (get pods dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a)
  I0731 01:30:49.365678 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-6716.svc.cluster.local from pod dns-6716/dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a: the server could not find the requested resource (get pods dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a)
  I0731 01:30:49.365720 24 dns_common.go:506] Lookups using dns-6716/dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-6716.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-6716.svc.cluster.local agnhost_udp@dns-test-service-2.dns-6716.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-6716.svc.cluster.local jessie_udp@dns-test-service-2.dns-6716.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6716.svc.cluster.local]

  I0731 01:30:49.374178 24 dns_common.go:514] Pod client logs for webserver: 
  I0731 01:30:49.381970 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0731 01:30:49.389905 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0731 01:30:50.292291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:51.292456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:52.292843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:53.293896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:54.294142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:30:54.372851 24 dns_common.go:546] DNS probes using dns-6716/dns-test-a226f341-d5f9-4dbb-b85e-e2e82d130c7a succeeded

  STEP: deleting the pod @ 07/31/25 01:30:54.374
  STEP: deleting the test headless service @ 07/31/25 01:30:54.396
  I0731 01:30:54.422575 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6716" for this suite. @ 07/31/25 01:30:54.429
• [9.193 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 07/31/25 01:30:54.444
  I0731 01:30:54.444817 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 01:30:54.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:30:54.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:30:54.472
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 01:30:54.475
  E0731 01:30:55.294993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:56.294960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:57.294933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:30:58.295287      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:30:58.514
  I0731 01:30:58.518473 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-1b639a0c-0baa-4b67-afa3-7bf11010a167 container client-container: <nil>
  STEP: delete the pod @ 07/31/25 01:30:58.524
  I0731 01:30:58.547010 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-527" for this suite. @ 07/31/25 01:30:58.551
• [4.115 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/31/25 01:30:58.559
  I0731 01:30:58.559804 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename secrets @ 07/31/25 01:30:58.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:30:58.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:30:58.586
  STEP: Creating secret with name secret-test-map-5385cb32-b7b8-4898-a2aa-1d46c47d8d00 @ 07/31/25 01:30:58.589
  STEP: Creating a pod to test consume secrets @ 07/31/25 01:30:58.601
  E0731 01:30:59.295953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:00.296256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:01.297228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:02.297598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:31:02.628
  I0731 01:31:02.632235 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-secrets-73d4706b-76fb-4831-8a4f-b43e3d571578 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 01:31:02.639
  I0731 01:31:02.658670 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1229" for this suite. @ 07/31/25 01:31:02.663
• [4.115 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 07/31/25 01:31:02.675
  I0731 01:31:02.675181 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 01:31:02.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:31:02.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:31:02.715
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9473 @ 07/31/25 01:31:02.718
  STEP: changing the ExternalName service to type=NodePort @ 07/31/25 01:31:02.726
  I0731 01:31:02.795892 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0731 01:31:03.298537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:04.298924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:31:04.802065 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 1, 31, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 31, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 31, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 31, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-75d789c4b6\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0731 01:31:05.300044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:06.300427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:31:06.801733 24 resource.go:361] Creating new exec pod
  E0731 01:31:07.300973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:08.301618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:31:08.834541 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9473 exec execpodrlpkg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0731 01:31:08.976319 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.56.130) 80 port [tcp/http] succeeded!\n"
  I0731 01:31:08.976377 24 builder.go:147] stdout: ""
  E0731 01:31:09.301795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:31:09.835617 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9473 exec execpodrlpkg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0731 01:31:09.950990 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.56.130) 80 port [tcp/http] succeeded!\n"
  I0731 01:31:09.951040 24 builder.go:147] stdout: ""
  E0731 01:31:10.302605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:31:10.835261 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9473 exec execpodrlpkg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0731 01:31:10.954360 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.56.130) 80 port [tcp/http] succeeded!\n"
  I0731 01:31:10.954422 24 builder.go:147] stdout: "externalname-service-75d789c4b6-mplf5"
  I0731 01:31:10.954502 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9473 exec execpodrlpkg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.56.130 80'
  I0731 01:31:11.067675 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.56.130 80\nConnection to 10.233.56.130 80 port [tcp/http] succeeded!\n"
  I0731 01:31:11.067742 24 builder.go:147] stdout: "externalname-service-75d789c4b6-mplf5"
  I0731 01:31:11.067851 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9473 exec execpodrlpkg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.30.154 32297'
  I0731 01:31:11.190707 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.30.154 32297\nConnection to 172.20.30.154 32297 port [tcp/*] succeeded!\n"
  I0731 01:31:11.190762 24 builder.go:147] stdout: "externalname-service-75d789c4b6-xx95t"
  I0731 01:31:11.190838 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9473 exec execpodrlpkg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.30.200 32297'
  E0731 01:31:11.302649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:31:11.309632 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.30.200 32297\nConnection to 172.20.30.200 32297 port [tcp/*] succeeded!\n"
  I0731 01:31:11.309678 24 builder.go:147] stdout: ""
  I0731 01:31:12.191715 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-9473 exec execpodrlpkg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.30.200 32297'
  E0731 01:31:12.303509      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:31:12.311339 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.30.200 32297\nConnection to 172.20.30.200 32297 port [tcp/*] succeeded!\n"
  I0731 01:31:12.311389 24 builder.go:147] stdout: "externalname-service-75d789c4b6-xx95t"
  I0731 01:31:12.311549 24 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0731 01:31:12.355318 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9473" for this suite. @ 07/31/25 01:31:12.362
• [9.699 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/31/25 01:31:12.374
  I0731 01:31:12.374128 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename sysctl @ 07/31/25 01:31:12.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:31:12.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:31:12.397
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/31/25 01:31:12.4
  STEP: Watching for error events or started pod @ 07/31/25 01:31:12.414
  E0731 01:31:13.303453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:14.303553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:15.303643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:16.304512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 07/31/25 01:31:16.421
  STEP: Checking that the pod succeeded @ 07/31/25 01:31:16.427
  STEP: Getting logs from the pod @ 07/31/25 01:31:16.427
  STEP: Checking that the sysctl is actually updated @ 07/31/25 01:31:16.433
  I0731 01:31:16.434076 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6246" for this suite. @ 07/31/25 01:31:16.439
• [4.075 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/31/25 01:31:16.449
  I0731 01:31:16.449148 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename deployment @ 07/31/25 01:31:16.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:31:16.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:31:16.487
  I0731 01:31:16.490277 24 deployment.go:1664] Creating simple deployment test-new-deployment
  I0731 01:31:16.507305 24 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  E0731 01:31:17.305347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:18.306260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 07/31/25 01:31:18.529
  STEP: updating a scale subresource @ 07/31/25 01:31:18.532
  STEP: verifying the deployment Spec.Replicas was modified @ 07/31/25 01:31:18.54
  STEP: Patch a scale subresource @ 07/31/25 01:31:18.544
  I0731 01:31:18.583534 24 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a21eee33-88c2-4baa-8236-facf4581c2d1",
      ResourceVersion: (string) (len=6) "869896",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889522276,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0731 01:31:18.620749 24 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f2334cc-84c5-4a88-b7ef-30d071fee8c8",
      ResourceVersion: (string) (len=6) "869904",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889522276,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "a21eee33-88c2-4baa-8236-facf4581c2d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 32 31 65 65 65  33 33 2d 38 38 63 32 2d  |\"a21eee33-88c2-|
              00000120  34 62 61 61 2d 38 32 33  36 2d 66 61 63 66 34 35  |4baa-8236-facf45|
              00000130  38 31 63 32 64 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |81c2d1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0731 01:31:18.626028 24 deployment.go:68] Pod "test-new-deployment-685b768f58-gc5pr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-gc5pr",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f84ed0ed-d9d6-4610-98e0-e7caac0c6b8c",
      ResourceVersion: (string) (len=6) "869909",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889522278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f2334cc-84c5-4a88-b7ef-30d071fee8c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  32 33 33 34 63 63 2d 38  |d\":\"2f2334cc-8|
              00000090  34 63 35 2d 34 61 38 38  2d 62 37 65 66 2d 33 30  |4c5-4a88-b7ef-30|
              000000a0  64 30 37 31 66 65 65 38  63 38 5c 22 7d 22 3a 7b  |d071fee8c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mjn2w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mjn2w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 01:31:18.628120 24 deployment.go:68] Pod "test-new-deployment-685b768f58-j4pqx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-j4pqx",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31666364-21f0-4be0-9141-5e8d5942c232",
      ResourceVersion: (string) (len=6) "869884",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889522276,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f2334cc-84c5-4a88-b7ef-30d071fee8c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  32 33 33 34 63 63 2d 38  |d\":\"2f2334cc-8|
              00000090  34 63 35 2d 34 61 38 38  2d 62 37 65 66 2d 33 30  |4c5-4a88-b7ef-30|
              000000a0  64 30 37 31 66 65 65 38  63 38 5c 22 7d 22 3a 7b  |d071fee8c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 36 38 5c 22 7d 22 3a  |.233.65.168\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dhmcx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dhmcx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) (len=13) "10.233.65.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889522276,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889522277,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c8b5fab7edd94dcc0341181a46d2748c1fc7f062461e39820a28135c23a8eee1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dhmcx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 01:31:18.631029 24 deployment.go:68] Pod "test-new-deployment-685b768f58-l6d47" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-l6d47",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "811b11da-6429-4c97-835f-e5b8b7d61cc0",
      ResourceVersion: (string) (len=6) "869906",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889522278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "2f2334cc-84c5-4a88-b7ef-30d071fee8c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  32 33 33 34 63 63 2d 38  |d\":\"2f2334cc-8|
              00000090  34 63 35 2d 34 61 38 38  2d 62 37 65 66 2d 33 30  |4c5-4a88-b7ef-30|
              000000a0  64 30 37 31 66 65 65 38  63 38 5c 22 7d 22 3a 7b  |d071fee8c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j2l7b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j2l7b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889522278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889522278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j2l7b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 01:31:18.633053 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7661" for this suite. @ 07/31/25 01:31:18.642
• [2.210 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 07/31/25 01:31:18.659
  I0731 01:31:18.659073 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pods @ 07/31/25 01:31:18.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:31:18.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:31:18.697
  STEP: creating a Pod with a static label @ 07/31/25 01:31:18.706
  STEP: watching for Pod to be ready @ 07/31/25 01:31:18.719
  I0731 01:31:18.724770 24 pods.go:947] observed Pod pod-test in namespace pods-3745 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0731 01:31:18.732987 24 pods.go:947] observed Pod pod-test in namespace pods-3745 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:31:18 +0000 UTC  }]
  I0731 01:31:18.759844 24 pods.go:947] observed Pod pod-test in namespace pods-3745 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:31:18 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:31:18 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:31:18 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:31:18 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:31:18 +0000 UTC  }]
  E0731 01:31:19.306385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:31:19.962227 24 pods.go:950] Found Pod pod-test in namespace pods-3745 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:31:19 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:31:18 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:31:19 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:31:19 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-31 01:31:18 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/31/25 01:31:19.965
  STEP: getting the Pod and ensuring that it's patched @ 07/31/25 01:31:19.986
  STEP: replacing the Pod's status Ready condition to False @ 07/31/25 01:31:19.995
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/31/25 01:31:20.015
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/31/25 01:31:20.015
  STEP: watching for the Pod to be deleted @ 07/31/25 01:31:20.027
  I0731 01:31:20.029370 24 pods.go:1060] observed event type MODIFIED
  E0731 01:31:20.306496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:21.306847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:31:21.974518 24 pods.go:1060] observed event type MODIFIED
  I0731 01:31:22.165656 24 pods.go:1060] observed event type MODIFIED
  E0731 01:31:22.307692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:31:22.983914 24 pods.go:1060] observed event type MODIFIED
  I0731 01:31:22.993233 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3745" for this suite. @ 07/31/25 01:31:22.998
• [4.349 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 07/31/25 01:31:23.008
  I0731 01:31:23.008165 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 01:31:23.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:31:23.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:31:23.028
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/31/25 01:31:23.031
  E0731 01:31:23.308593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:24.308759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:25.309038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:26.309610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:31:27.056
  I0731 01:31:27.060017 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-9c464707-b684-4a5e-94bb-429682538f05 container test-container: <nil>
  STEP: delete the pod @ 07/31/25 01:31:27.066
  I0731 01:31:27.088022 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8305" for this suite. @ 07/31/25 01:31:27.092
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 07/31/25 01:31:27.101
  I0731 01:31:27.101791 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 01:31:27.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:31:27.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:31:27.123
  STEP: Creating configMap with name configmap-test-volume-44326b4f-9e1a-4203-97bf-ef8deebefcf4 @ 07/31/25 01:31:27.125
  STEP: Creating a pod to test consume configMaps @ 07/31/25 01:31:27.133
  E0731 01:31:27.310289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:28.310616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:29.311125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:30.311839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:31:31.168
  I0731 01:31:31.171833 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-configmaps-95fbd80d-e777-493f-a1b1-449243985b0c container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 01:31:31.178
  I0731 01:31:31.204381 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1774" for this suite. @ 07/31/25 01:31:31.209
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 07/31/25 01:31:31.222
  I0731 01:31:31.222981 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename disruption @ 07/31/25 01:31:31.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:31:31.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:31:31.245
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/31/25 01:31:31.251
  STEP: Waiting for the pdb to be processed @ 07/31/25 01:31:31.258
  E0731 01:31:31.312875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:32.313576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/31/25 01:31:33.271
  STEP: Waiting for all pods to be running @ 07/31/25 01:31:33.271
  I0731 01:31:33.276153 24 disruption.go:680] pods: 0 < 3
  E0731 01:31:33.314447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:34.314647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/31/25 01:31:35.279
  STEP: Updating the pdb to allow a pod to be evicted @ 07/31/25 01:31:35.291
  STEP: Waiting for the pdb to be processed @ 07/31/25 01:31:35.306
  E0731 01:31:35.314677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:36.314893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/31/25 01:31:37.31
  STEP: Waiting for all pods to be running @ 07/31/25 01:31:37.31
  STEP: Waiting for the pdb to observed all healthy pods @ 07/31/25 01:31:37.314
  E0731 01:31:37.314944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/31/25 01:31:37.345
  STEP: Waiting for the pdb to be processed @ 07/31/25 01:31:37.381
  E0731 01:31:38.315102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:39.315537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/31/25 01:31:39.386
  STEP: locating a running pod @ 07/31/25 01:31:39.391
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/31/25 01:31:39.409
  STEP: Waiting for the pdb to be deleted @ 07/31/25 01:31:39.416
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/31/25 01:31:39.419
  STEP: Waiting for all pods to be running @ 07/31/25 01:31:39.419
  I0731 01:31:39.517275 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4635" for this suite. @ 07/31/25 01:31:39.523
• [8.322 seconds]
------------------------------
SS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 07/31/25 01:31:39.553
  I0731 01:31:39.553436 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename ingress @ 07/31/25 01:31:39.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:31:39.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:31:39.592
  STEP: getting /apis @ 07/31/25 01:31:39.596
  STEP: getting /apis/networking.k8s.io @ 07/31/25 01:31:39.603
  STEP: getting /apis/networking.k8s.iov1 @ 07/31/25 01:31:39.604
  STEP: creating @ 07/31/25 01:31:39.605
  STEP: getting @ 07/31/25 01:31:39.638
  STEP: listing @ 07/31/25 01:31:39.641
  STEP: watching @ 07/31/25 01:31:39.644
  I0731 01:31:39.644688 24 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 07/31/25 01:31:39.645
  STEP: cluster-wide watching @ 07/31/25 01:31:39.648
  I0731 01:31:39.648757 24 ingress.go:198] starting watch
  STEP: patching @ 07/31/25 01:31:39.649
  STEP: updating @ 07/31/25 01:31:39.659
  I0731 01:31:39.671595 24 ingress.go:221] waiting for watch events with expected annotations
  I0731 01:31:39.671689 24 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 07/31/25 01:31:39.671
  STEP: updating /status @ 07/31/25 01:31:39.68
  STEP: get /status @ 07/31/25 01:31:39.695
  STEP: deleting @ 07/31/25 01:31:39.699
  STEP: deleting a collection @ 07/31/25 01:31:39.712
  I0731 01:31:39.734055 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6135" for this suite. @ 07/31/25 01:31:39.738
• [0.192 seconds]
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/31/25 01:31:39.745
  I0731 01:31:39.745826 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename endpointslice @ 07/31/25 01:31:39.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:31:39.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:31:39.797
  STEP: getting /apis @ 07/31/25 01:31:39.8
  STEP: getting /apis/discovery.k8s.io @ 07/31/25 01:31:39.805
  STEP: getting /apis/discovery.k8s.iov1 @ 07/31/25 01:31:39.806
  STEP: creating @ 07/31/25 01:31:39.807
  STEP: getting @ 07/31/25 01:31:39.838
  STEP: listing @ 07/31/25 01:31:39.842
  STEP: watching @ 07/31/25 01:31:39.846
  I0731 01:31:39.846305 24 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 07/31/25 01:31:39.848
  STEP: cluster-wide watching @ 07/31/25 01:31:39.853
  I0731 01:31:39.853360 24 endpointslice.go:459] starting watch
  STEP: patching @ 07/31/25 01:31:39.854
  STEP: updating @ 07/31/25 01:31:39.862
  I0731 01:31:39.875236 24 endpointslice.go:482] waiting for watch events with expected annotations
  I0731 01:31:39.875296 24 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 07/31/25 01:31:39.875
  STEP: deleting a collection @ 07/31/25 01:31:39.893
  I0731 01:31:39.915784 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-885" for this suite. @ 07/31/25 01:31:39.92
• [0.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/31/25 01:31:39.932
  I0731 01:31:39.932337 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename podtemplate @ 07/31/25 01:31:39.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:31:39.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:31:39.954
  STEP: Create set of pod templates @ 07/31/25 01:31:39.956
  I0731 01:31:39.963269 24 podtemplates.go:143] created test-podtemplate-1
  I0731 01:31:39.972177 24 podtemplates.go:143] created test-podtemplate-2
  I0731 01:31:39.981815 24 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/31/25 01:31:39.981
  STEP: delete collection of pod templates @ 07/31/25 01:31:39.985
  I0731 01:31:39.985583 24 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/31/25 01:31:40.007
  I0731 01:31:40.007272 24 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0731 01:31:40.013120 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9148" for this suite. @ 07/31/25 01:31:40.021
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/31/25 01:31:40.031
  I0731 01:31:40.031078 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/31/25 01:31:40.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:31:40.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:31:40.059
  STEP: creating a target pod @ 07/31/25 01:31:40.062
  E0731 01:31:40.316440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:41.316586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/31/25 01:31:42.085
  E0731 01:31:42.316839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:43.316917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 07/31/25 01:31:44.107
  STEP: checking pod container endpoints @ 07/31/25 01:31:44.11
  I0731 01:31:44.111059 24 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1535 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:31:44.111084 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:31:44.111151 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-1535/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0731 01:31:44.167010 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:31:44.167076 24 exec_util.go:112] Exec stderr: ""
  I0731 01:31:44.175088 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1535" for this suite. @ 07/31/25 01:31:44.179
• [4.156 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 07/31/25 01:31:44.187
  I0731 01:31:44.187405 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename crd-selectable-fields @ 07/31/25 01:31:44.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:31:44.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:31:44.21
  STEP: Setting up server cert @ 07/31/25 01:31:44.213
  E0731 01:31:44.317831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/31/25 01:31:44.77
  STEP: Deploying the custom resource conversion webhook pod @ 07/31/25 01:31:44.783
  STEP: Wait for the deployment to be ready @ 07/31/25 01:31:44.825
  I0731 01:31:44.835346 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0731 01:31:45.318873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:46.319172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 01:31:46.846
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 01:31:46.867
  E0731 01:31:47.320056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:31:47.867777 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 07/31/25 01:31:47.872
  I0731 01:31:47.872927 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 01:31:48.320828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:49.321474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:50.322440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:51.323055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:52.324012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:53.324927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource conversion webhook @ 07/31/25 01:31:53.389
  E0731 01:31:54.325398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:55.325548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 07/31/25 01:31:55.441
  STEP: Registering informers with field selectors @ 07/31/25 01:31:55.446
  STEP: Creating custom resources @ 07/31/25 01:31:55.446
  STEP: Listing v2 custom resources with field selector host=host1 @ 07/31/25 01:31:55.476
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 07/31/25 01:31:55.479
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 07/31/25 01:31:55.482
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 07/31/25 01:31:55.486
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 07/31/25 01:31:55.488
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 07/31/25 01:31:55.494
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 07/31/25 01:31:55.494
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 07/31/25 01:31:55.494
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 07/31/25 01:31:55.494
  STEP: Deleting one custom resources to ensure that deletions are observed @ 07/31/25 01:31:55.494
  STEP: Updating one custom resources to ensure that deletions are observed @ 07/31/25 01:31:55.507
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 07/31/25 01:31:55.522
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 07/31/25 01:31:55.526
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 07/31/25 01:31:55.529
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 07/31/25 01:31:55.534
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 07/31/25 01:31:55.534
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 07/31/25 01:31:55.534
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 07/31/25 01:31:55.534
  I0731 01:31:56.120461 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-5499" for this suite. @ 07/31/25 01:31:56.127
• [11.955 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 07/31/25 01:31:56.143
  I0731 01:31:56.143151 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename svcaccounts @ 07/31/25 01:31:56.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:31:56.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:31:56.171
  STEP: Creating a pod to test service account token:  @ 07/31/25 01:31:56.175
  E0731 01:31:56.325742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:57.326872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:58.327103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:31:59.327404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:00.328283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:01.328587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:32:02.213
  I0731 01:32:02.217704 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod test-pod-7cae6e40-98aa-4e8c-a517-420ea42b0686 container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 01:32:02.225
  I0731 01:32:02.250120 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9404" for this suite. @ 07/31/25 01:32:02.255
• [6.123 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/31/25 01:32:02.266
  I0731 01:32:02.266807 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/31/25 01:32:02.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:02.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:02.288
  STEP: fetching the /apis discovery document @ 07/31/25 01:32:02.292
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/31/25 01:32:02.293
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/31/25 01:32:02.293
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/31/25 01:32:02.293
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/31/25 01:32:02.295
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/31/25 01:32:02.295
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/31/25 01:32:02.297
  I0731 01:32:02.297228 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0731 01:32:02.329377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "custom-resource-definition-1858" for this suite. @ 07/31/25 01:32:02.35
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 07/31/25 01:32:02.36
  I0731 01:32:02.360561 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename replication-controller @ 07/31/25 01:32:02.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:02.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:02.384
  STEP: Creating ReplicationController "e2e-rc-h4hsz" @ 07/31/25 01:32:02.386
  I0731 01:32:02.395092 24 rc.go:795] Get Replication Controller "e2e-rc-h4hsz" to confirm replicas
  E0731 01:32:03.330323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:32:03.395406 24 rc.go:795] Get Replication Controller "e2e-rc-h4hsz" to confirm replicas
  I0731 01:32:03.399685 24 rc.go:804] Found 1 replicas for "e2e-rc-h4hsz" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-h4hsz" @ 07/31/25 01:32:03.399
  STEP: Updating a scale subresource @ 07/31/25 01:32:03.403
  STEP: Verifying replicas where modified for replication controller "e2e-rc-h4hsz" @ 07/31/25 01:32:03.412
  I0731 01:32:03.413156 24 rc.go:795] Get Replication Controller "e2e-rc-h4hsz" to confirm replicas
  E0731 01:32:04.330607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:32:04.413706 24 rc.go:795] Get Replication Controller "e2e-rc-h4hsz" to confirm replicas
  I0731 01:32:04.418556 24 rc.go:804] Found 2 replicas for "e2e-rc-h4hsz" replication controller
  I0731 01:32:04.418755 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1364" for this suite. @ 07/31/25 01:32:04.424
• [2.075 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 07/31/25 01:32:04.436
  I0731 01:32:04.436070 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename dns @ 07/31/25 01:32:04.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:04.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:04.455
  STEP: Creating a test headless service @ 07/31/25 01:32:04.458
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5659.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-5659.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 07/31/25 01:32:04.464
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5659.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5659.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/31/25 01:32:04.464
  STEP: creating a pod to probe DNS @ 07/31/25 01:32:04.464
  STEP: submitting the pod to kubernetes @ 07/31/25 01:32:04.465
  E0731 01:32:05.330903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:06.331135      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/31/25 01:32:06.492
  STEP: looking for the results for each expected name from probers @ 07/31/25 01:32:06.496
  I0731 01:32:06.512158 24 dns_common.go:546] DNS probes using dns-5659/dns-test-77662fa3-5589-42bc-8667-8c11cf6c15db succeeded

  STEP: deleting the pod @ 07/31/25 01:32:06.512
  STEP: deleting the test headless service @ 07/31/25 01:32:06.536
  I0731 01:32:06.551734 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5659" for this suite. @ 07/31/25 01:32:06.558
• [2.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 07/31/25 01:32:06.572
  I0731 01:32:06.572119 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename volumeattachment @ 07/31/25 01:32:06.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:06.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:06.588
  STEP: Create VolumeAttachment "va-e2e-xrljw" on node "viola-gs-master-2" @ 07/31/25 01:32:06.659
  STEP: Patch VolumeAttachment "va-e2e-xrljw" on node "viola-gs-master-2" @ 07/31/25 01:32:06.669
  STEP: Reading "va-e2e-xrljw" Status @ 07/31/25 01:32:06.678
  STEP: Patching "va-e2e-xrljw" Status @ 07/31/25 01:32:06.683
  I0731 01:32:06.691429 24 volume_attachment.go:224] "va-e2e-xrljw" Status.Attached: true
  STEP: Updating "va-e2e-xrljw" Status @ 07/31/25 01:32:06.691
  I0731 01:32:06.705002 24 volume_attachment.go:240] "va-e2e-xrljw" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-xrljw" on node "viola-gs-master-2" @ 07/31/25 01:32:06.705
  STEP: Confirm deletion of VolumeAttachment "va-e2e-xrljw" on node "viola-gs-master-2" @ 07/31/25 01:32:06.713
  I0731 01:32:06.717706 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1851" for this suite. @ 07/31/25 01:32:06.761
• [0.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 07/31/25 01:32:06.77
  I0731 01:32:06.770882 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 01:32:06.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:06.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:06.789
  STEP: create deployment with httpd image @ 07/31/25 01:32:06.802
  I0731 01:32:06.802996 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-5665 create -f -'
  I0731 01:32:06.904376 24 builder.go:146] stderr: ""
  I0731 01:32:06.904436 24 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/31/25 01:32:06.904
  I0731 01:32:06.904523 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-5665 diff -f -'
  I0731 01:32:07.007855 24 builder.go:135] rc: 1
  I0731 01:32:07.007985 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-5665 delete -f -'
  I0731 01:32:07.074126 24 builder.go:146] stderr: ""
  I0731 01:32:07.074190 24 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0731 01:32:07.074540 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5665" for this suite. @ 07/31/25 01:32:07.08
• [0.322 seconds]
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/31/25 01:32:07.093
  I0731 01:32:07.093042 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename sysctl @ 07/31/25 01:32:07.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:07.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:07.133
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/31/25 01:32:07.136
  I0731 01:32:07.144631 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3451" for this suite. @ 07/31/25 01:32:07.181
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 07/31/25 01:32:07.204
  I0731 01:32:07.204738 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename svcaccounts @ 07/31/25 01:32:07.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:07.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:07.226
  STEP: creating a ServiceAccount @ 07/31/25 01:32:07.253
  STEP: watching for the ServiceAccount to be added @ 07/31/25 01:32:07.263
  STEP: patching the ServiceAccount @ 07/31/25 01:32:07.265
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/31/25 01:32:07.275
  STEP: deleting the ServiceAccount @ 07/31/25 01:32:07.278
  I0731 01:32:07.294610 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4659" for this suite. @ 07/31/25 01:32:07.3
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 07/31/25 01:32:07.31
  I0731 01:32:07.310161 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 01:32:07.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:07.329
  E0731 01:32:07.331022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:07.332
  STEP: Creating configMap configmap-3037/configmap-test-8db24dfe-88b1-4c92-b46d-5516bee2b0bf @ 07/31/25 01:32:07.335
  STEP: Creating a pod to test consume configMaps @ 07/31/25 01:32:07.342
  E0731 01:32:08.331362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:09.331501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:10.331640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:11.331898      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:32:11.366
  I0731 01:32:11.373455 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-configmaps-c93d1adb-26f9-4213-9cbe-6a33ce2bff4c container env-test: <nil>
  STEP: delete the pod @ 07/31/25 01:32:11.381
  I0731 01:32:11.407646 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3037" for this suite. @ 07/31/25 01:32:11.413
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 07/31/25 01:32:11.423
  I0731 01:32:11.423669 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename namespaces @ 07/31/25 01:32:11.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:11.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:11.449
  STEP: Read namespace status @ 07/31/25 01:32:11.452
  I0731 01:32:11.456128 24 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/31/25 01:32:11.456
  I0731 01:32:11.466281 24 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/31/25 01:32:11.466
  I0731 01:32:11.480282 24 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0731 01:32:11.480583 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8283" for this suite. @ 07/31/25 01:32:11.514
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 07/31/25 01:32:11.526
  I0731 01:32:11.526173 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename field-validation @ 07/31/25 01:32:11.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:11.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:11.554
  I0731 01:32:11.558449 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  W0731 01:32:11.559420      24 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0033f8090 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0731 01:32:12.333004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:13.333868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:14.334492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:15.334669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:16.334766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:17.334888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:18.335215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:32:19.099774      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0731 01:32:19.099802      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0731 01:32:19.099807      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0731 01:32:19.099813      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0731 01:32:19.099818      24 warnings.go:110] "Warning: unknown field \"gamma\""
  E0731 01:32:19.335573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:32:19.653378 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8316" for this suite. @ 07/31/25 01:32:19.659
• [8.143 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 07/31/25 01:32:19.668
  I0731 01:32:19.668980 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 01:32:19.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:19.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:19.69
  STEP: Creating a pod to test downward api env vars @ 07/31/25 01:32:19.692
  E0731 01:32:20.336424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:21.336927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:22.337830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:23.338092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:32:23.718
  I0731 01:32:23.721340 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downward-api-4999c205-2ca5-4bde-857e-75e7600d5981 container dapi-container: <nil>
  STEP: delete the pod @ 07/31/25 01:32:23.728
  I0731 01:32:23.753268 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6026" for this suite. @ 07/31/25 01:32:23.758
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 07/31/25 01:32:23.766
  I0731 01:32:23.766714 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 01:32:23.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:23.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:23.786
  STEP: creating a replication controller @ 07/31/25 01:32:23.796
  I0731 01:32:23.796854 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2568 create -f -'
  I0731 01:32:23.907093 24 builder.go:146] stderr: ""
  I0731 01:32:23.907140 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/31/25 01:32:23.907
  I0731 01:32:23.907271 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2568 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0731 01:32:24.013364 24 builder.go:146] stderr: ""
  I0731 01:32:24.013415 24 builder.go:147] stdout: "update-demo-nautilus-4zgn6 update-demo-nautilus-zzn79 "
  I0731 01:32:24.013472 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2568 get pods update-demo-nautilus-4zgn6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0731 01:32:24.077997 24 builder.go:146] stderr: ""
  I0731 01:32:24.078056 24 builder.go:147] stdout: ""
  I0731 01:32:24.078066 24 kubectl.go:2505] update-demo-nautilus-4zgn6 is created but not running
  E0731 01:32:24.338206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:25.339055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:26.340337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:27.340479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:28.340706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:32:29.078298 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2568 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0731 01:32:29.149991 24 builder.go:146] stderr: ""
  I0731 01:32:29.150044 24 builder.go:147] stdout: "update-demo-nautilus-4zgn6 update-demo-nautilus-zzn79 "
  I0731 01:32:29.150095 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2568 get pods update-demo-nautilus-4zgn6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0731 01:32:29.214756 24 builder.go:146] stderr: ""
  I0731 01:32:29.214992 24 builder.go:147] stdout: "true"
  I0731 01:32:29.215089 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2568 get pods update-demo-nautilus-4zgn6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0731 01:32:29.271572 24 builder.go:146] stderr: ""
  I0731 01:32:29.271621 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0731 01:32:29.271633 24 kubectl.go:2396] validating pod update-demo-nautilus-4zgn6
  I0731 01:32:29.278841 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0731 01:32:29.278916 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0731 01:32:29.278931 24 kubectl.go:2523] update-demo-nautilus-4zgn6 is verified up and running
  I0731 01:32:29.278983 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2568 get pods update-demo-nautilus-zzn79 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0731 01:32:29.341540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:32:29.346488 24 builder.go:146] stderr: ""
  I0731 01:32:29.346534 24 builder.go:147] stdout: "true"
  I0731 01:32:29.346590 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2568 get pods update-demo-nautilus-zzn79 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0731 01:32:29.415328 24 builder.go:146] stderr: ""
  I0731 01:32:29.415389 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0731 01:32:29.415403 24 kubectl.go:2396] validating pod update-demo-nautilus-zzn79
  I0731 01:32:29.422400 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0731 01:32:29.422460 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0731 01:32:29.422471 24 kubectl.go:2523] update-demo-nautilus-zzn79 is verified up and running
  STEP: using delete to clean up resources @ 07/31/25 01:32:29.422
  I0731 01:32:29.422648 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2568 delete --grace-period=0 --force -f -'
  I0731 01:32:29.484936 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0731 01:32:29.484984 24 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0731 01:32:29.485112 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2568 get rc,svc -l name=update-demo --no-headers'
  I0731 01:32:29.583910 24 builder.go:146] stderr: "No resources found in kubectl-2568 namespace.\n"
  I0731 01:32:29.583965 24 builder.go:147] stdout: ""
  I0731 01:32:29.584110 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-2568 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0731 01:32:29.689086 24 builder.go:146] stderr: ""
  I0731 01:32:29.689145 24 builder.go:147] stdout: ""
  I0731 01:32:29.689314 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2568" for this suite. @ 07/31/25 01:32:29.696
• [5.944 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 07/31/25 01:32:29.711
  I0731 01:32:29.711194 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 01:32:29.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:29.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:29.731
  STEP: creating a collection of services @ 07/31/25 01:32:29.734
  I0731 01:32:29.734145 24 service.go:3666] Creating e2e-svc-a-gjd4h
  I0731 01:32:29.758479 24 service.go:3666] Creating e2e-svc-b-k5cs5
  I0731 01:32:29.781417 24 service.go:3666] Creating e2e-svc-c-mz89j
  STEP: deleting service collection @ 07/31/25 01:32:29.815
  I0731 01:32:29.882485 24 service.go:3701] Collection of services has been deleted
  I0731 01:32:29.882713 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6613" for this suite. @ 07/31/25 01:32:29.888
• [0.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 07/31/25 01:32:29.899
  I0731 01:32:29.900017 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pods @ 07/31/25 01:32:29.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:29.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:29.926
  STEP: Create set of pods @ 07/31/25 01:32:29.933
  I0731 01:32:29.947603 24 pods.go:874] created test-pod-1
  I0731 01:32:29.959939 24 pods.go:874] created test-pod-2
  I0731 01:32:29.976635 24 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/31/25 01:32:29.976
  E0731 01:32:30.342975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:31.343311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:32.343946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:33.344409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 07/31/25 01:32:34.036
  I0731 01:32:34.040509 24 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0731 01:32:34.344807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:32:35.043734 24 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0731 01:32:35.345861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:32:36.042386 24 pods.go:1139] Pod quantity 1 is different from expected quantity 0
  E0731 01:32:36.346794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:32:37.042246 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4975" for this suite. @ 07/31/25 01:32:37.048
• [7.160 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 07/31/25 01:32:37.061
  I0731 01:32:37.061531 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename resourcequota @ 07/31/25 01:32:37.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:37.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:37.086
  STEP: Creating a ResourceQuota with best effort scope @ 07/31/25 01:32:37.09
  STEP: Ensuring ResourceQuota status is calculated @ 07/31/25 01:32:37.099
  E0731 01:32:37.347592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:38.347778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 07/31/25 01:32:39.104
  STEP: Ensuring ResourceQuota status is calculated @ 07/31/25 01:32:39.11
  E0731 01:32:39.348647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:40.348959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 07/31/25 01:32:41.115
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/31/25 01:32:41.131
  E0731 01:32:41.349425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:42.349743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/31/25 01:32:43.136
  E0731 01:32:43.350600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:44.350949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/31/25 01:32:45.144
  STEP: Ensuring resource quota status released the pod usage @ 07/31/25 01:32:45.16
  E0731 01:32:45.351787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:46.352138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 07/31/25 01:32:47.166
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/31/25 01:32:47.18
  E0731 01:32:47.352718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:48.353364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/31/25 01:32:49.186
  E0731 01:32:49.354007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:50.354218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/31/25 01:32:51.192
  STEP: Ensuring resource quota status released the pod usage @ 07/31/25 01:32:51.205
  E0731 01:32:51.354316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:52.354461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:32:53.210529 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-292" for this suite. @ 07/31/25 01:32:53.215
• [16.161 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 07/31/25 01:32:53.223
  I0731 01:32:53.223103 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pods @ 07/31/25 01:32:53.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:53.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:53.241
  STEP: Create a pod @ 07/31/25 01:32:53.244
  E0731 01:32:53.354984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:54.355369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/31/25 01:32:55.265
  I0731 01:32:55.275725 24 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0731 01:32:55.276173 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7070" for this suite. @ 07/31/25 01:32:55.282
• [2.068 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 07/31/25 01:32:55.291
  I0731 01:32:55.291629 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 01:32:55.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:55.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:55.313
  STEP: Creating Pod @ 07/31/25 01:32:55.316
  E0731 01:32:55.356004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:56.356198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 07/31/25 01:32:57.343
  I0731 01:32:57.343394 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1364 PodName:pod-sharedvolume-cdacf83d-800f-4d76-a543-573082ff017c ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:32:57.343471 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:32:57.343616 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/emptydir-1364/pods/pod-sharedvolume-cdacf83d-800f-4d76-a543-573082ff017c/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  E0731 01:32:57.356463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:32:57.399158 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:32:57.399225 24 exec_util.go:112] Exec stderr: ""
  I0731 01:32:57.399410 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1364" for this suite. @ 07/31/25 01:32:57.406
• [2.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 07/31/25 01:32:57.415
  I0731 01:32:57.415516 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 01:32:57.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:32:57.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:32:57.446
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 01:32:57.45
  E0731 01:32:58.356581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:32:59.357127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:00.357252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:01.357652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:33:01.482
  I0731 01:33:01.485697 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-2f7e6b84-9c6b-48f0-a27b-872f8474ddf7 container client-container: <nil>
  STEP: delete the pod @ 07/31/25 01:33:01.492
  I0731 01:33:01.514763 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1566" for this suite. @ 07/31/25 01:33:01.52
• [4.118 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/31/25 01:33:01.534
  I0731 01:33:01.534498 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename csi-storageclass @ 07/31/25 01:33:01.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:01.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:01.568
  STEP: Creating a StorageClass @ 07/31/25 01:33:01.572
  STEP: Get StorageClass "e2e-qjd6v" @ 07/31/25 01:33:01.583
  STEP: Patching the StorageClass "e2e-qjd6v" @ 07/31/25 01:33:01.594
  STEP: Delete StorageClass "e2e-qjd6v" @ 07/31/25 01:33:01.604
  STEP: Confirm deletion of StorageClass "e2e-qjd6v" @ 07/31/25 01:33:01.612
  STEP: Create a replacement StorageClass @ 07/31/25 01:33:01.616
  STEP: Updating StorageClass "e2e-v2-5p4kp" @ 07/31/25 01:33:01.623
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-5p4kp=updated" @ 07/31/25 01:33:01.648
  STEP: Deleting StorageClass "e2e-v2-5p4kp" via DeleteCollection @ 07/31/25 01:33:01.651
  STEP: Confirm deletion of StorageClass "e2e-v2-5p4kp" @ 07/31/25 01:33:01.662
  I0731 01:33:01.666613 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1341" for this suite. @ 07/31/25 01:33:01.672
• [0.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 07/31/25 01:33:01.682
  I0731 01:33:01.682546 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename svcaccounts @ 07/31/25 01:33:01.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:01.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:01.707
  STEP: Creating ServiceAccount "e2e-sa-zhwhj"  @ 07/31/25 01:33:01.709
  I0731 01:33:01.717150 24 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-zhwhj"  @ 07/31/25 01:33:01.717
  I0731 01:33:01.726953 24 service_accounts.go:867] AutomountServiceAccountToken: true
  I0731 01:33:01.727178 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-883" for this suite. @ 07/31/25 01:33:01.773
• [0.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/31/25 01:33:01.782
  I0731 01:33:01.782776 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename endpointslice @ 07/31/25 01:33:01.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:01.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:01.809
  E0731 01:33:02.358458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:03.358944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:04.359122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:05.360044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 07/31/25 01:33:05.944
  I0731 01:33:05.953324      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 07/31/25 01:33:05.953
  I0731 01:33:05.960693      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/31/25 01:33:05.96
  I0731 01:33:05.966839      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 07/31/25 01:33:05.967
  I0731 01:33:06.051280 24 endpointslice.go:938] EndpointSlice for Service endpointslice-6573/example-named-port not found
  E0731 01:33:06.360767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:07.360939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:33:08.005019      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 01:33:08.005429 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6573" for this suite. @ 07/31/25 01:33:08.011
• [6.242 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 07/31/25 01:33:08.024
  I0731 01:33:08.024656 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename namespaces @ 07/31/25 01:33:08.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:08.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:08.045
  STEP: Updating Namespace "namespaces-4958" @ 07/31/25 01:33:08.048
  I0731 01:33:08.061397 24 namespace.go:390] Namespace "namespaces-4958" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"4b066364-17ae-41c5-a60a-5a4b242efaf1", "kubernetes.io/metadata.name":"namespaces-4958", "namespaces-4958":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0731 01:33:08.061623 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4958" for this suite. @ 07/31/25 01:33:08.112
• [0.098 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 07/31/25 01:33:08.123
  I0731 01:33:08.123346 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename statefulset @ 07/31/25 01:33:08.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:08.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:08.14
  STEP: Creating service test in namespace statefulset-4874 @ 07/31/25 01:33:08.143
  STEP: Looking for a node to schedule stateful set and pod @ 07/31/25 01:33:08.149
  STEP: Creating pod with conflicting port in namespace statefulset-4874 @ 07/31/25 01:33:08.213
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4874 @ 07/31/25 01:33:08.228
  E0731 01:33:08.361511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:09.361829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-4874 @ 07/31/25 01:33:10.237
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4874 @ 07/31/25 01:33:10.247
  I0731 01:33:10.267749 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-4874, name: ss-0, uid: 256f533f-29ec-4b1f-878c-0f6b5f06006d, status phase: Pending. Waiting for statefulset controller to delete.
  I0731 01:33:10.289906 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-4874, name: ss-0, uid: 256f533f-29ec-4b1f-878c-0f6b5f06006d, status phase: Failed. Waiting for statefulset controller to delete.
  I0731 01:33:10.300349 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-4874, name: ss-0, uid: 256f533f-29ec-4b1f-878c-0f6b5f06006d, status phase: Failed. Waiting for statefulset controller to delete.
  I0731 01:33:10.308258 24 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-4874
  STEP: Removing pod with conflicting port in namespace statefulset-4874 @ 07/31/25 01:33:10.308
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4874 and will be in running state @ 07/31/25 01:33:10.349
  E0731 01:33:10.362507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:11.362889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:33:12.360225 24 statefulset.go:138] Deleting all statefulset in ns statefulset-4874
  E0731 01:33:12.363191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:33:12.364521 24 rest.go:153] Scaling statefulset ss to 0
  E0731 01:33:13.363418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:14.365010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:15.364843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:16.365194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:17.365230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:18.365658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:19.366093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:20.366853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:21.367100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:22.367168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:33:22.386843 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0731 01:33:22.391520 24 rest.go:91] Deleting statefulset ss
  I0731 01:33:22.413451 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4874" for this suite. @ 07/31/25 01:33:22.422
• [14.309 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 07/31/25 01:33:22.433
  I0731 01:33:22.433604 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename dns @ 07/31/25 01:33:22.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:22.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:22.459
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/31/25 01:33:22.461
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/31/25 01:33:22.461
  STEP: creating a pod to probe DNS @ 07/31/25 01:33:22.461
  STEP: submitting the pod to kubernetes @ 07/31/25 01:33:22.461
  E0731 01:33:23.368814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:24.369111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/31/25 01:33:24.497
  STEP: looking for the results for each expected name from probers @ 07/31/25 01:33:24.502
  I0731 01:33:24.524721 24 dns_common.go:546] DNS probes using dns-7321/dns-test-de7fea99-2c47-4078-a7e0-798596c122f4 succeeded

  STEP: deleting the pod @ 07/31/25 01:33:24.524
  I0731 01:33:24.546227 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7321" for this suite. @ 07/31/25 01:33:24.552
• [2.130 seconds]
------------------------------
S
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 07/31/25 01:33:24.563
  I0731 01:33:24.563956 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename servicecidr @ 07/31/25 01:33:24.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:24.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:24.589
  STEP: getting @ 07/31/25 01:33:24.592
  STEP: patching @ 07/31/25 01:33:24.596
  STEP: updating @ 07/31/25 01:33:24.601
  STEP: listing @ 07/31/25 01:33:24.61
  STEP: watching @ 07/31/25 01:33:24.613
  I0731 01:33:24.614726 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-8734" for this suite. @ 07/31/25 01:33:24.654
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 07/31/25 01:33:24.664
  I0731 01:33:24.664394 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 01:33:24.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:24.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:24.689
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 01:33:24.692
  E0731 01:33:25.369703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:26.369942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:27.370061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:28.370357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:33:28.72
  I0731 01:33:28.724911 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-9e806e39-8452-465d-a86c-1bebb497b6c5 container client-container: <nil>
  STEP: delete the pod @ 07/31/25 01:33:28.733
  I0731 01:33:28.756634 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3907" for this suite. @ 07/31/25 01:33:28.762
• [4.109 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 07/31/25 01:33:28.774
  I0731 01:33:28.774418 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/31/25 01:33:28.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:28.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:28.798
  STEP: Setting up the test @ 07/31/25 01:33:28.801
  STEP: Creating hostNetwork=false pod @ 07/31/25 01:33:28.801
  E0731 01:33:29.371286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:30.371457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 07/31/25 01:33:30.828
  E0731 01:33:31.371718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:32.372023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Running the test @ 07/31/25 01:33:32.85
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/31/25 01:33:32.85
  I0731 01:33:32.850602 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2785 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:33:32.850625 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:33:32.850671 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2785/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0731 01:33:32.916257 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:33:32.916322 24 exec_util.go:112] Exec stderr: ""
  I0731 01:33:32.916345 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2785 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:33:32.916352 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:33:32.916433 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2785/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0731 01:33:32.971520 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:33:32.971574 24 exec_util.go:112] Exec stderr: ""
  I0731 01:33:32.971606 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2785 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:33:32.971617 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:33:32.971687 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2785/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0731 01:33:33.024032 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:33:33.024227 24 exec_util.go:112] Exec stderr: ""
  I0731 01:33:33.024307 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2785 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:33:33.024359 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:33:33.024495 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2785/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0731 01:33:33.083704 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:33:33.083782 24 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/31/25 01:33:33.083
  I0731 01:33:33.083857 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2785 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:33:33.083867 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:33:33.083936 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2785/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0731 01:33:33.139656 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:33:33.139750 24 exec_util.go:112] Exec stderr: ""
  I0731 01:33:33.139777 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2785 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:33:33.139790 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:33:33.139867 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2785/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0731 01:33:33.178772 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:33:33.178845 24 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/31/25 01:33:33.178
  I0731 01:33:33.178925 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2785 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:33:33.178937 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:33:33.179038 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2785/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0731 01:33:33.241102 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:33:33.241274 24 exec_util.go:112] Exec stderr: ""
  I0731 01:33:33.241336 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2785 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:33:33.241371 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:33:33.241484 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2785/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0731 01:33:33.294626 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:33:33.294743 24 exec_util.go:112] Exec stderr: ""
  I0731 01:33:33.294775 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2785 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:33:33.294789 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:33:33.294858 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2785/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0731 01:33:33.343526 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:33:33.343628 24 exec_util.go:112] Exec stderr: ""
  I0731 01:33:33.343690 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2785 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:33:33.343706 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:33:33.343828 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2785/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  E0731 01:33:33.374344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:33:33.380720 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:33:33.380805 24 exec_util.go:112] Exec stderr: ""
  I0731 01:33:33.380956 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-2785" for this suite. @ 07/31/25 01:33:33.387
• [4.624 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 07/31/25 01:33:33.397
  I0731 01:33:33.397840 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 01:33:33.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:33.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:33.424
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 01:33:33.427
  E0731 01:33:34.374925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:35.375033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:36.375747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:37.375967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:33:37.458
  I0731 01:33:37.462008 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-e617c9b8-66f3-495c-a132-76d5724ce01f container client-container: <nil>
  STEP: delete the pod @ 07/31/25 01:33:37.469
  I0731 01:33:37.499607 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7047" for this suite. @ 07/31/25 01:33:37.504
• [4.120 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/31/25 01:33:37.517
  I0731 01:33:37.517868 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename endpointslice @ 07/31/25 01:33:37.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:37.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:37.544
  I0731 01:33:37.583242      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0731 01:33:38.375984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:39.376144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:33:39.591247      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 01:33:39.647078      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 01:33:39.697891 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1579" for this suite. @ 07/31/25 01:33:39.705
• [2.200 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/31/25 01:33:39.717
  I0731 01:33:39.717827 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename runtimeclass @ 07/31/25 01:33:39.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:39.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:39.744
  I0731 01:33:39.757999 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7871" for this suite. @ 07/31/25 01:33:39.806
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/31/25 01:33:39.825
  I0731 01:33:39.825597 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename limitrange @ 07/31/25 01:33:39.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:39.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:39.854
  STEP: Creating a LimitRange @ 07/31/25 01:33:39.858
  STEP: Setting up watch @ 07/31/25 01:33:39.858
  STEP: Submitting a LimitRange @ 07/31/25 01:33:39.964
  STEP: Verifying LimitRange creation was observed @ 07/31/25 01:33:39.975
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/31/25 01:33:39.975
  I0731 01:33:39.979881 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0731 01:33:39.980131 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/31/25 01:33:39.98
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/31/25 01:33:39.993
  I0731 01:33:40.001259 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0731 01:33:40.001303 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/31/25 01:33:40.001
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/31/25 01:33:40.019
  I0731 01:33:40.023820 24 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0731 01:33:40.024031 24 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/31/25 01:33:40.024
  STEP: Failing to create a Pod with more than max resources @ 07/31/25 01:33:40.027
  STEP: Updating a LimitRange @ 07/31/25 01:33:40.029
  STEP: Verifying LimitRange updating is effective @ 07/31/25 01:33:40.038
  E0731 01:33:40.376231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:41.383101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 07/31/25 01:33:42.043
  STEP: Failing to create a Pod with more than max resources @ 07/31/25 01:33:42.053
  STEP: Deleting a LimitRange @ 07/31/25 01:33:42.055
  STEP: Verifying the LimitRange was deleted @ 07/31/25 01:33:42.065
  E0731 01:33:42.384057      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:43.384499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:44.384903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:45.385083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:46.385383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:33:47.071384 24 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/31/25 01:33:47.071
  I0731 01:33:47.082747 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6367" for this suite. @ 07/31/25 01:33:47.088
• [7.276 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 07/31/25 01:33:47.102
  I0731 01:33:47.102123 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 01:33:47.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:47.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:47.133
  STEP: creating a ConfigMap @ 07/31/25 01:33:47.135
  STEP: fetching the ConfigMap @ 07/31/25 01:33:47.147
  STEP: patching the ConfigMap @ 07/31/25 01:33:47.152
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/31/25 01:33:47.159
  STEP: deleting the ConfigMap by collection with a label selector @ 07/31/25 01:33:47.162
  STEP: listing all ConfigMaps in test namespace @ 07/31/25 01:33:47.172
  I0731 01:33:47.175024 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-109" for this suite. @ 07/31/25 01:33:47.188
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/31/25 01:33:47.197
  I0731 01:33:47.197721 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename tables @ 07/31/25 01:33:47.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:47.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:47.228
  I0731 01:33:47.233961 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1897" for this suite. @ 07/31/25 01:33:47.289
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 07/31/25 01:33:47.303
  I0731 01:33:47.303914 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename disruption @ 07/31/25 01:33:47.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:47.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:47.335
  STEP: Creating a kubernetes client @ 07/31/25 01:33:47.338
  I0731 01:33:47.338283 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename disruption-2 @ 07/31/25 01:33:47.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:47.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:47.356
  STEP: Waiting for the pdb to be processed @ 07/31/25 01:33:47.365
  E0731 01:33:47.386127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:48.386496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/31/25 01:33:49.377
  E0731 01:33:49.387320      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:50.387642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:51.388526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/31/25 01:33:51.389
  E0731 01:33:52.388726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:53.389004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 07/31/25 01:33:53.395
  STEP: listing a collection of PDBs in namespace disruption-7982 @ 07/31/25 01:33:53.4
  STEP: deleting a collection of PDBs @ 07/31/25 01:33:53.403
  STEP: Waiting for the PDB collection to be deleted @ 07/31/25 01:33:53.427
  I0731 01:33:53.431286 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1215" for this suite. @ 07/31/25 01:33:53.436
  I0731 01:33:53.443755 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7982" for this suite. @ 07/31/25 01:33:53.538
• [6.249 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 07/31/25 01:33:53.553
  I0731 01:33:53.553241 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 01:33:53.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:53.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:53.573
  STEP: Setting up server cert @ 07/31/25 01:33:53.607
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 01:33:54.342
  STEP: Deploying the webhook pod @ 07/31/25 01:33:54.351
  STEP: Wait for the deployment to be ready @ 07/31/25 01:33:54.367
  I0731 01:33:54.377555 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 01:33:54.389440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:55.389740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:56.389672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 01:33:56.389
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 01:33:56.412
  E0731 01:33:57.390106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:33:57.413355 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/31/25 01:33:57.419
  STEP: verifying the validating webhook match conditions @ 07/31/25 01:33:57.432
  STEP: updating the validating webhook match conditions @ 07/31/25 01:33:57.437
  STEP: verifying the validating webhook match conditions @ 07/31/25 01:33:57.45
  I0731 01:33:57.532875 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3043" for this suite. @ 07/31/25 01:33:57.539
  STEP: Destroying namespace "webhook-markers-9378" for this suite. @ 07/31/25 01:33:57.554
• [4.011 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 07/31/25 01:33:57.564
  I0731 01:33:57.564486 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename disruption @ 07/31/25 01:33:57.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:57.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:57.59
  STEP: creating the pdb @ 07/31/25 01:33:57.593
  STEP: Waiting for the pdb to be processed @ 07/31/25 01:33:57.601
  E0731 01:33:58.390915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:33:59.394489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 07/31/25 01:33:59.606
  STEP: Waiting for the pdb to be processed @ 07/31/25 01:33:59.617
  STEP: patching the pdb @ 07/31/25 01:33:59.624
  STEP: Waiting for the pdb to be processed @ 07/31/25 01:33:59.647
  STEP: Waiting for the pdb to be deleted @ 07/31/25 01:33:59.668
  I0731 01:33:59.673081 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5278" for this suite. @ 07/31/25 01:33:59.679
• [2.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 07/31/25 01:33:59.693
  I0731 01:33:59.693466 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/31/25 01:33:59.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:33:59.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:33:59.717
  STEP: set up a multi version CRD @ 07/31/25 01:33:59.721
  I0731 01:33:59.722157 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 01:34:00.394536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:01.395638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:02.396594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:03.396628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:04.397749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:05.398389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:06.399219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:07.399934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:08.400327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:09.401333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: rename a version @ 07/31/25 01:34:09.52
  STEP: check the new version name is served @ 07/31/25 01:34:09.538
  E0731 01:34:10.402148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 07/31/25 01:34:11.365
  E0731 01:34:11.402817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 07/31/25 01:34:12.139
  E0731 01:34:12.403447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:13.404042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:14.406778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:15.407571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:34:15.927849 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4554" for this suite. @ 07/31/25 01:34:15.936
• [16.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 07/31/25 01:34:15.945
  I0731 01:34:15.945241 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename sched-preemption @ 07/31/25 01:34:15.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:34:15.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:34:15.968
  I0731 01:34:15.989370 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0731 01:34:16.407736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:17.407824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:18.408394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:19.408540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:20.409184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:21.409517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:22.410218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:23.410547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:24.410917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:25.411233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:26.411716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:27.411764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:28.412745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:29.413026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:30.413929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:31.414333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:32.414912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:33.415028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:34.415206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:35.415722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:36.416506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:37.417058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:38.417864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:39.418506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:40.418646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:41.419304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:42.420374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:43.421024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:44.421811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:45.422866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:46.423723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:47.424004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:48.424979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:49.425354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:50.426186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:51.426310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:52.426954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:53.427227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:54.427386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:55.427673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:56.427861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:57.427940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:58.428925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:34:59.429063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:00.429478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:01.430009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:02.430029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:03.430373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:04.430768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:05.431035      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:06.431184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:07.432179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:08.432483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:09.432685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:10.433388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:11.433700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:12.434257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:13.434422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:14.435132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:15.435284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:15.995518 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/31/25 01:35:15.999
  STEP: Adding a custom resource @ 07/31/25 01:35:15.999
  I0731 01:35:16.021436 24 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0731 01:35:16.039046 24 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/31/25 01:35:16.039
  I0731 01:35:16.068821 24 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0731 01:35:16.079302 24 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/31/25 01:35:16.079
  I0731 01:35:16.099990 24 preemption.go:170] Created pod: pod2-0-sched-preemption-medium-priority
  I0731 01:35:16.107549 24 preemption.go:170] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/31/25 01:35:16.107
  I0731 01:35:16.135138 24 preemption.go:170] Created pod: pod3-0-sched-preemption-medium-priority
  I0731 01:35:16.145598 24 preemption.go:170] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/31/25 01:35:16.145
  E0731 01:35:16.435832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:17.436025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/31/25 01:35:18.18
  E0731 01:35:18.436870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:19.437165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:20.437960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:21.438421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/31/25 01:35:22.264
  STEP: Removing a custom resource @ 07/31/25 01:35:22.279
  STEP: Removing a custom resource @ 07/31/25 01:35:22.293
  STEP: Removing a custom resource @ 07/31/25 01:35:22.309
  I0731 01:35:22.327387 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3160" for this suite. @ 07/31/25 01:35:22.333
• [66.400 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/31/25 01:35:22.346
  I0731 01:35:22.346423 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename daemonsets @ 07/31/25 01:35:22.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:35:22.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:35:22.373
  E0731 01:35:22.438976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:22.450227 24 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/31/25 01:35:22.464
  I0731 01:35:22.534123 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:22.534199 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:22.534235 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:22.547730 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:35:22.547786 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 01:35:23.439270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:23.471827 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:23.471883 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:23.471897 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:23.476919 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:35:23.476980 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 01:35:24.439749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:24.469869 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:24.469932 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:24.469945 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:24.474707 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0731 01:35:24.474789 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/31/25 01:35:24.488
  STEP: Check that daemon pods images are updated. @ 07/31/25 01:35:24.57
  I0731 01:35:24.575040 24 daemon_set.go:1193] Wrong image for pod: daemon-set-7npq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0731 01:35:24.575107 24 daemon_set.go:1193] Wrong image for pod: daemon-set-j7vgn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0731 01:35:24.575114 24 daemon_set.go:1193] Wrong image for pod: daemon-set-r4m2s. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0731 01:35:24.578356 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:24.578396 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:24.578409 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0731 01:35:25.439931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:25.587730 24 daemon_set.go:1193] Wrong image for pod: daemon-set-7npq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0731 01:35:25.587815 24 daemon_set.go:1193] Wrong image for pod: daemon-set-j7vgn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0731 01:35:25.587825 24 daemon_set.go:1198] Pod daemon-set-k66gg is not available
  I0731 01:35:25.587832 24 daemon_set.go:1193] Wrong image for pod: daemon-set-r4m2s. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0731 01:35:25.594744 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:25.594799 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:25.594814 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0731 01:35:26.440138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:26.575581 24 daemon_set.go:1193] Wrong image for pod: daemon-set-7npq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0731 01:35:26.575640 24 daemon_set.go:1193] Wrong image for pod: daemon-set-j7vgn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0731 01:35:26.575648 24 daemon_set.go:1198] Pod daemon-set-k66gg is not available
  I0731 01:35:26.575654 24 daemon_set.go:1193] Wrong image for pod: daemon-set-r4m2s. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0731 01:35:26.580609 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:26.580680 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:26.580694 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0731 01:35:27.441370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:27.579111 24 daemon_set.go:1193] Wrong image for pod: daemon-set-7npq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0731 01:35:27.579195 24 daemon_set.go:1198] Pod daemon-set-djlnt is not available
  I0731 01:35:27.579217 24 daemon_set.go:1193] Wrong image for pod: daemon-set-r4m2s. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0731 01:35:27.594960 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:27.595033 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:27.595062 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0731 01:35:28.441198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:28.577418 24 daemon_set.go:1193] Wrong image for pod: daemon-set-r4m2s. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0731 01:35:28.577485 24 daemon_set.go:1198] Pod daemon-set-xdm5d is not available
  I0731 01:35:28.582889 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:28.582962 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:28.582980 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0731 01:35:29.441200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:29.583196 24 daemon_set.go:1198] Pod daemon-set-xwg6x is not available
  I0731 01:35:29.590140 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:29.590417 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:29.590587 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/31/25 01:35:29.591
  I0731 01:35:29.691085 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:29.691172 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:29.691190 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:29.695598 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0731 01:35:29.695804 24 fixtures.go:131] Node viola-gs-worker-3 is running 0 daemon pod, expected 1
  E0731 01:35:30.441345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:30.597761 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:30.597971 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:30.598041 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:30.601398 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0731 01:35:30.601466 24 fixtures.go:131] Node viola-gs-worker-3 is running 0 daemon pod, expected 1
  E0731 01:35:31.442380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:31.597916 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:31.597991 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:31.598005 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:35:31.602247 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0731 01:35:31.602353 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/31/25 01:35:31.616
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9694, will wait for the garbage collector to delete the pods @ 07/31/25 01:35:31.616
  I0731 01:35:31.678418 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.333166ms
  I0731 01:35:31.779024 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.587326ms
  E0731 01:35:32.443103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:33.443976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:34.283650 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:35:34.283696 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0731 01:35:34.287451 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"873296"},"items":null}

  I0731 01:35:34.290003 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"873296"},"items":null}

  I0731 01:35:34.305008 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9694" for this suite. @ 07/31/25 01:35:34.308
• [11.970 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 07/31/25 01:35:34.316
  I0731 01:35:34.316319 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename dns @ 07/31/25 01:35:34.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:35:34.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:35:34.336
  STEP: Creating a test externalName service @ 07/31/25 01:35:34.338
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-614.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-614.svc.cluster.local; sleep 1; done
   @ 07/31/25 01:35:34.345
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-614.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-614.svc.cluster.local; sleep 1; done
   @ 07/31/25 01:35:34.345
  STEP: creating a pod to probe DNS @ 07/31/25 01:35:34.345
  STEP: submitting the pod to kubernetes @ 07/31/25 01:35:34.345
  E0731 01:35:34.444600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:35.444999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/31/25 01:35:36.362
  STEP: looking for the results for each expected name from probers @ 07/31/25 01:35:36.366
  I0731 01:35:36.374922 24 dns_common.go:571] DNS probes using dns-test-5123ef07-35c6-4c13-a984-1cd2d449c0d7 succeeded

  STEP: changing the externalName to bar.example.com @ 07/31/25 01:35:36.374
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-614.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-614.svc.cluster.local; sleep 1; done
   @ 07/31/25 01:35:36.388
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-614.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-614.svc.cluster.local; sleep 1; done
   @ 07/31/25 01:35:36.388
  STEP: creating a second pod to probe DNS @ 07/31/25 01:35:36.388
  STEP: submitting the pod to kubernetes @ 07/31/25 01:35:36.388
  E0731 01:35:36.444976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:37.445370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/31/25 01:35:38.41
  STEP: looking for the results for each expected name from probers @ 07/31/25 01:35:38.415
  I0731 01:35:38.420758 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-614.svc.cluster.local from pod  dns-614/dns-test-99c89a5d-098a-469d-b7c9-03d6f623e6b7 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0731 01:35:38.425087 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-614.svc.cluster.local from pod  dns-614/dns-test-99c89a5d-098a-469d-b7c9-03d6f623e6b7 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0731 01:35:38.425229 24 dns_common.go:506] Lookups using dns-614/dns-test-99c89a5d-098a-469d-b7c9-03d6f623e6b7 failed for: [agnhost_udp@dns-test-service-3.dns-614.svc.cluster.local jessie_udp@dns-test-service-3.dns-614.svc.cluster.local]

  I0731 01:35:38.439793 24 dns_common.go:514] Pod client logs for webserver: 
  E0731 01:35:38.445811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:38.447005 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0731 01:35:38.455636 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0731 01:35:39.446850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:40.447053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:41.447969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:42.448117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:43.427253 24 dns_common.go:571] DNS probes using dns-test-99c89a5d-098a-469d-b7c9-03d6f623e6b7 succeeded

  STEP: changing the service to type=ClusterIP @ 07/31/25 01:35:43.427
  E0731 01:35:43.448745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:35:43.513307      24 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-614.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-614.svc.cluster.local; sleep 1; done
   @ 07/31/25 01:35:43.513
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-614.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-614.svc.cluster.local; sleep 1; done
   @ 07/31/25 01:35:43.513
  STEP: creating a third pod to probe DNS @ 07/31/25 01:35:43.513
  STEP: submitting the pod to kubernetes @ 07/31/25 01:35:43.518
  E0731 01:35:44.449032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:45.451100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:46.452056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:47.452306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/31/25 01:35:47.553
  STEP: looking for the results for each expected name from probers @ 07/31/25 01:35:47.556
  I0731 01:35:47.566571 24 dns_common.go:571] DNS probes using dns-test-455256e8-f7a6-4450-9c60-c006835e3c10 succeeded

  STEP: deleting the pod @ 07/31/25 01:35:47.566
  STEP: deleting the pod @ 07/31/25 01:35:47.585
  STEP: deleting the pod @ 07/31/25 01:35:47.602
  STEP: deleting the test externalName service @ 07/31/25 01:35:47.63
  I0731 01:35:47.663847 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-614" for this suite. @ 07/31/25 01:35:47.682
• [13.376 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 07/31/25 01:35:47.693
  I0731 01:35:47.693676 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename sched-pred @ 07/31/25 01:35:47.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:35:47.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:35:47.723
  I0731 01:35:47.726416 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0731 01:35:47.786882 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0731 01:35:47.790469 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-1 before test
  I0731 01:35:47.800019 24 predicates.go:958] oauth2-proxy-admin-5f684f44bd-xwfw7 from auth started at 2025-07-31 01:30:02 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.800057 24 predicates.go:960] 	Container oauth2-proxy-admin ready: true, restart count 0
  I0731 01:35:47.800064 24 predicates.go:958] redis-cluster-maintenance-cronjob-29232090-56rm4 from auth started at 2025-07-31 01:30:00 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.800069 24 predicates.go:960] 	Container redis-cluster-check ready: false, restart count 0
  I0731 01:35:47.800077 24 predicates.go:958] mariadb-backup-cronjob-29232090-gv2lr from dataplatform started at 2025-07-31 01:30:00 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.800081 24 predicates.go:960] 	Container mariadb-backup-cronjob ready: false, restart count 0
  I0731 01:35:47.800088 24 predicates.go:958] vault-backup-cronjob-29232090-xhxj9 from dataplatform started at 2025-07-31 01:30:00 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.800092 24 predicates.go:960] 	Container clean-backup ready: false, restart count 0
  I0731 01:35:47.800101 24 predicates.go:958] vault-unsealer-29232090-gdh59 from dataplatform started at 2025-07-31 01:30:00 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.800105 24 predicates.go:960] 	Container unsealer ready: false, restart count 0
  I0731 01:35:47.800114 24 predicates.go:958] cilium-envoy-bqgqv from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.800119 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 01:35:47.800123 24 predicates.go:958] cilium-operator-f46ccdf88-57gr7 from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.800128 24 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0731 01:35:47.800162 24 predicates.go:958] cilium-r2g4v from kube-system started at 2025-07-30 09:17:21 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.800166 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 01:35:47.800170 24 predicates.go:958] csi-nfs-node-2ngqc from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 01:35:47.800175 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 01:35:47.800178 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 01:35:47.800182 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 01:35:47.800205 24 predicates.go:958] kube-proxy-h8fkv from kube-system started at 2025-07-30 06:28:11 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.800211 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 01:35:47.800234 24 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-31 00:27:45 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.800239 24 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0731 01:35:47.800244 24 predicates.go:958] sonobuoy-e2e-job-bb61e2b056fa4f2e from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.800251 24 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0731 01:35:47.800256 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 01:35:47.800261 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-tnd7k from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.800264 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 01:35:47.800268 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 01:35:47.800285 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-2 before test
  I0731 01:35:47.810974 24 predicates.go:958] keycloak-77654bfb97-9l8hz from auth started at 2025-07-29 11:59:00 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811017 24 predicates.go:960] 	Container keycloak ready: true, restart count 0
  I0731 01:35:47.811024 24 predicates.go:958] mariadb-keycloak-0 from auth started at 2025-07-29 11:56:27 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811029 24 predicates.go:960] 	Container mariadb-keycloak ready: true, restart count 0
  I0731 01:35:47.811037 24 predicates.go:958] oauth2-proxy-admin-5f684f44bd-2fzjf from auth started at 2025-07-31 01:30:03 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811043 24 predicates.go:960] 	Container oauth2-proxy-admin ready: true, restart count 0
  I0731 01:35:47.811050 24 predicates.go:958] oauth2-redis-admin-2 from auth started at 2025-07-30 01:44:45 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811123 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:35:47.811152 24 predicates.go:958] oauth2-redis-admin-3 from auth started at 2025-07-29 11:56:36 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811162 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:35:47.811170 24 predicates.go:958] cloud-service-api-6fcb7858d4-5m8ds from cmp started at 2025-07-29 13:04:58 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.811177 24 predicates.go:960] 	Container cloud-service-api ready: true, restart count 0
  I0731 01:35:47.811183 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:35:47.811191 24 predicates.go:958] cloud-service-collector-68bdddc6d8-rbqtz from cmp started at 2025-07-29 13:04:58 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.811370 24 predicates.go:960] 	Container cloud-service-collector ready: true, restart count 0
  I0731 01:35:47.811376 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:35:47.811385 24 predicates.go:958] maestro-remote-app-7f5bc68986-fzkx6 from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.811389 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:35:47.811394 24 predicates.go:960] 	Container maestro-remote-app ready: true, restart count 0
  I0731 01:35:47.811399 24 predicates.go:958] notification-adapter-api-794bc8bbcd-j6jlj from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.811403 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:35:47.811408 24 predicates.go:960] 	Container noti-api ready: true, restart count 0
  I0731 01:35:47.811412 24 predicates.go:958] kafka-cluster-kafka-0 from dataplatform started at 2025-07-30 01:44:46 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811418 24 predicates.go:960] 	Container kafka ready: true, restart count 0
  I0731 01:35:47.811425 24 predicates.go:958] kafka-cluster-zookeeper-1 from dataplatform started at 2025-07-30 01:44:45 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811431 24 predicates.go:960] 	Container zookeeper ready: true, restart count 0
  I0731 01:35:47.811438 24 predicates.go:958] mariadb-sts-0 from dataplatform started at 2025-07-30 01:44:56 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811444 24 predicates.go:960] 	Container mariadb ready: true, restart count 0
  I0731 01:35:47.811452 24 predicates.go:958] vault-0 from dataplatform started at 2025-07-29 11:56:28 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811469 24 predicates.go:960] 	Container vault ready: true, restart count 0
  I0731 01:35:47.811479 24 predicates.go:958] ingress-nginx-controller-847999c88f-64rw2 from ingress-nginx started at 2025-07-29 11:54:19 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811483 24 predicates.go:960] 	Container controller ready: true, restart count 0
  I0731 01:35:47.811488 24 predicates.go:958] istiod-5c89cf5f74-b54ls from istio-system started at 2025-07-29 11:56:33 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811492 24 predicates.go:960] 	Container discovery ready: true, restart count 0
  I0731 01:35:47.811496 24 predicates.go:958] cilium-envoy-72jp8 from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811501 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 01:35:47.811505 24 predicates.go:958] cilium-m7flm from kube-system started at 2025-07-30 09:17:11 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811509 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 01:35:47.811513 24 predicates.go:958] cilium-operator-f46ccdf88-47vls from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811517 24 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0731 01:35:47.811522 24 predicates.go:958] csi-nfs-controller-5845c574bf-6thgf from kube-system started at 2025-07-29 11:15:04 +0000 UTC (4 container statuses recorded)
  I0731 01:35:47.811533 24 predicates.go:960] 	Container csi-provisioner ready: true, restart count 0
  I0731 01:35:47.811539 24 predicates.go:960] 	Container csi-snapshotter ready: true, restart count 0
  I0731 01:35:47.811546 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 01:35:47.811551 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 01:35:47.811557 24 predicates.go:958] csi-nfs-node-vddcx from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 01:35:47.811566 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 01:35:47.811573 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 01:35:47.811577 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 01:35:47.811582 24 predicates.go:958] kube-proxy-hsl8d from kube-system started at 2025-07-30 06:28:05 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.811586 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 01:35:47.811590 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-2rw8x from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.811594 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 01:35:47.811597 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 01:35:47.811615 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-3 before test
  I0731 01:35:47.820779 24 predicates.go:958] oauth2-redis-admin-1 from auth started at 2025-07-29 11:56:31 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.820818 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:35:47.820825 24 predicates.go:958] oauth2-redis-admin-4 from auth started at 2025-07-29 11:56:40 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.820830 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:35:47.820835 24 predicates.go:958] maestro-auth-gateway-7b9b4c47d5-pcg4m from cmp started at 2025-07-30 01:44:44 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.820840 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:35:47.820843 24 predicates.go:960] 	Container maestro-auth-gateway ready: true, restart count 0
  I0731 01:35:47.820847 24 predicates.go:958] maestro-event-pusher-8db95cc5-6nppj from cmp started at 2025-07-29 13:44:48 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.820851 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:35:47.820854 24 predicates.go:960] 	Container maestro-event-pusher ready: true, restart count 0
  I0731 01:35:47.820864 24 predicates.go:958] maestro-host-app-86656c9c7d-wcpv2 from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.820868 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:35:47.820872 24 predicates.go:960] 	Container maestro-host-app ready: true, restart count 0
  I0731 01:35:47.820876 24 predicates.go:958] kafka-cluster-entity-operator-c8b5f4df9-x5q5s from dataplatform started at 2025-07-30 01:44:44 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.820887 24 predicates.go:960] 	Container topic-operator ready: true, restart count 0
  I0731 01:35:47.820891 24 predicates.go:960] 	Container user-operator ready: true, restart count 0
  I0731 01:35:47.820895 24 predicates.go:958] kafka-cluster-kafka-1 from dataplatform started at 2025-07-29 13:00:24 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.820899 24 predicates.go:960] 	Container kafka ready: true, restart count 0
  I0731 01:35:47.820903 24 predicates.go:958] kafka-cluster-zookeeper-0 from dataplatform started at 2025-07-29 12:59:50 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.820907 24 predicates.go:960] 	Container zookeeper ready: true, restart count 0
  I0731 01:35:47.820911 24 predicates.go:958] mariadb-maxscale-65f585776b-vwjt4 from dataplatform started at 2025-07-30 01:44:44 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.820915 24 predicates.go:960] 	Container maxscale ready: true, restart count 0
  I0731 01:35:47.820920 24 predicates.go:958] strimzi-cluster-operator-584d5f5789-fdmrh from dataplatform started at 2025-07-29 12:59:42 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.820928 24 predicates.go:960] 	Container strimzi-cluster-operator ready: true, restart count 0
  I0731 01:35:47.820932 24 predicates.go:958] vault-2 from dataplatform started at 2025-07-30 01:44:50 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.820935 24 predicates.go:960] 	Container vault ready: true, restart count 0
  I0731 01:35:47.820939 24 predicates.go:958] cilium-envoy-cxcfx from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.820943 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 01:35:47.820947 24 predicates.go:958] cilium-kwph5 from kube-system started at 2025-07-30 09:17:00 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.820950 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 01:35:47.820954 24 predicates.go:958] coredns-74697c986-cxqqs from kube-system started at 2025-07-29 11:08:48 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.820959 24 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0731 01:35:47.820963 24 predicates.go:958] csi-nfs-node-p4ddz from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 01:35:47.820967 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 01:35:47.820971 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 01:35:47.820978 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 01:35:47.820982 24 predicates.go:958] kube-proxy-ztnk8 from kube-system started at 2025-07-30 06:28:12 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.820985 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 01:35:47.820990 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-bj545 from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.820993 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 01:35:47.820997 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 01:35:47.821008 24 predicates.go:958] viola-api-698955c4b8-n5j5l from viola started at 2025-07-29 13:28:51 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.821017 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:35:47.821021 24 predicates.go:960] 	Container viola-api ready: true, restart count 0
  I0731 01:35:47.821027 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-4 before test
  I0731 01:35:47.831752 24 predicates.go:958] keycloak-77654bfb97-gtpj2 from auth started at 2025-07-29 11:58:53 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.831810 24 predicates.go:960] 	Container keycloak ready: true, restart count 0
  I0731 01:35:47.831826 24 predicates.go:958] oauth2-redis-admin-0 from auth started at 2025-07-29 11:56:28 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.831834 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:35:47.831842 24 predicates.go:958] oauth2-redis-admin-5 from auth started at 2025-07-29 11:56:42 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.831849 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:35:47.831856 24 predicates.go:958] maestro-common-api-6d9dffc99-k6r7h from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.831884 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:35:47.831891 24 predicates.go:960] 	Container maestro-common-api ready: true, restart count 0
  I0731 01:35:47.831898 24 predicates.go:958] maestro-iam-adapter-api-9c76bb77-kgxg9 from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.831904 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:35:47.831913 24 predicates.go:960] 	Container maestro-iam-adapter-api ready: true, restart count 0
  I0731 01:35:47.831920 24 predicates.go:958] kafka-cluster-kafka-2 from dataplatform started at 2025-07-29 13:00:24 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.831927 24 predicates.go:960] 	Container kafka ready: true, restart count 0
  I0731 01:35:47.831960 24 predicates.go:958] kafka-cluster-zookeeper-2 from dataplatform started at 2025-07-29 12:59:50 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.831966 24 predicates.go:960] 	Container zookeeper ready: true, restart count 0
  I0731 01:35:47.831974 24 predicates.go:958] mariadb-maxscale-65f585776b-8b454 from dataplatform started at 2025-07-29 11:56:26 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.831980 24 predicates.go:960] 	Container maxscale ready: true, restart count 0
  I0731 01:35:47.831991 24 predicates.go:958] mariadb-sts-1 from dataplatform started at 2025-07-29 11:56:32 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.831997 24 predicates.go:960] 	Container mariadb ready: true, restart count 0
  I0731 01:35:47.832004 24 predicates.go:958] redis-0 from dataplatform started at 2025-07-29 11:56:27 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.832010 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 01:35:47.832033 24 predicates.go:958] vault-1 from dataplatform started at 2025-07-29 11:56:29 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.832039 24 predicates.go:960] 	Container vault ready: true, restart count 0
  I0731 01:35:47.832045 24 predicates.go:958] ingress-nginx-admission-create-gzb57 from ingress-nginx started at 2025-07-29 11:54:19 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.832051 24 predicates.go:960] 	Container create ready: false, restart count 0
  I0731 01:35:47.832058 24 predicates.go:958] istio-gateway-6966544c9c-54w69 from istio-system started at 2025-07-30 01:44:44 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.832070 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:35:47.832076 24 predicates.go:958] cilium-envoy-85rht from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.832082 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 01:35:47.832131 24 predicates.go:958] cilium-hw2q8 from kube-system started at 2025-07-30 09:16:49 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.832138 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 01:35:47.832172 24 predicates.go:958] coredns-74697c986-vrt9w from kube-system started at 2025-07-29 11:08:55 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.832184 24 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0731 01:35:47.832310 24 predicates.go:958] csi-nfs-node-rp6pv from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 01:35:47.832318 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 01:35:47.832324 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 01:35:47.832330 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 01:35:47.832337 24 predicates.go:958] dns-autoscaler-56cb45595c-wgcr2 from kube-system started at 2025-07-29 11:08:50 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.832348 24 predicates.go:960] 	Container autoscaler ready: true, restart count 0
  I0731 01:35:47.832354 24 predicates.go:958] kube-proxy-dhsft from kube-system started at 2025-07-30 06:28:14 +0000 UTC (1 container statuses recorded)
  I0731 01:35:47.832360 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 01:35:47.832578 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-2bzrg from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.832599 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 01:35:47.832605 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 01:35:47.832612 24 predicates.go:958] viola-remote-app-59b954dd94-kkvc5 from viola started at 2025-07-30 01:44:44 +0000 UTC (2 container statuses recorded)
  I0731 01:35:47.832618 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 01:35:47.832634 24 predicates.go:960] 	Container viola-remote-app ready: true, restart count 0
  STEP: verifying the node has the label node viola-gs-worker-1 @ 07/31/25 01:35:47.886
  STEP: verifying the node has the label node viola-gs-worker-2 @ 07/31/25 01:35:47.907
  STEP: verifying the node has the label node viola-gs-worker-3 @ 07/31/25 01:35:47.927
  STEP: verifying the node has the label node viola-gs-worker-4 @ 07/31/25 01:35:47.95
  I0731 01:35:47.978271 24 predicates.go:373] Pod keycloak-77654bfb97-9l8hz requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978309 24 predicates.go:373] Pod keycloak-77654bfb97-gtpj2 requesting resource cpu=0m on Node viola-gs-worker-4
  I0731 01:35:47.978316 24 predicates.go:373] Pod mariadb-keycloak-0 requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978321 24 predicates.go:373] Pod oauth2-proxy-admin-5f684f44bd-2fzjf requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978326 24 predicates.go:373] Pod oauth2-proxy-admin-5f684f44bd-xwfw7 requesting resource cpu=0m on Node viola-gs-worker-1
  I0731 01:35:47.978330 24 predicates.go:373] Pod oauth2-redis-admin-0 requesting resource cpu=0m on Node viola-gs-worker-4
  I0731 01:35:47.978335 24 predicates.go:373] Pod oauth2-redis-admin-1 requesting resource cpu=0m on Node viola-gs-worker-3
  I0731 01:35:47.978340 24 predicates.go:373] Pod oauth2-redis-admin-2 requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978349 24 predicates.go:373] Pod oauth2-redis-admin-3 requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978354 24 predicates.go:373] Pod oauth2-redis-admin-4 requesting resource cpu=0m on Node viola-gs-worker-3
  I0731 01:35:47.978359 24 predicates.go:373] Pod oauth2-redis-admin-5 requesting resource cpu=0m on Node viola-gs-worker-4
  I0731 01:35:47.978364 24 predicates.go:373] Pod cloud-service-api-6fcb7858d4-5m8ds requesting resource cpu=100m on Node viola-gs-worker-2
  I0731 01:35:47.978370 24 predicates.go:373] Pod cloud-service-collector-68bdddc6d8-rbqtz requesting resource cpu=100m on Node viola-gs-worker-2
  I0731 01:35:47.978375 24 predicates.go:373] Pod maestro-auth-gateway-7b9b4c47d5-pcg4m requesting resource cpu=100m on Node viola-gs-worker-3
  I0731 01:35:47.978380 24 predicates.go:373] Pod maestro-common-api-6d9dffc99-k6r7h requesting resource cpu=100m on Node viola-gs-worker-4
  I0731 01:35:47.978386 24 predicates.go:373] Pod maestro-event-pusher-8db95cc5-6nppj requesting resource cpu=100m on Node viola-gs-worker-3
  I0731 01:35:47.978394 24 predicates.go:373] Pod maestro-host-app-86656c9c7d-wcpv2 requesting resource cpu=100m on Node viola-gs-worker-3
  I0731 01:35:47.978403 24 predicates.go:373] Pod maestro-iam-adapter-api-9c76bb77-kgxg9 requesting resource cpu=100m on Node viola-gs-worker-4
  I0731 01:35:47.978409 24 predicates.go:373] Pod maestro-remote-app-7f5bc68986-fzkx6 requesting resource cpu=100m on Node viola-gs-worker-2
  I0731 01:35:47.978415 24 predicates.go:373] Pod notification-adapter-api-794bc8bbcd-j6jlj requesting resource cpu=100m on Node viola-gs-worker-2
  I0731 01:35:47.978421 24 predicates.go:373] Pod kafka-cluster-entity-operator-c8b5f4df9-x5q5s requesting resource cpu=0m on Node viola-gs-worker-3
  I0731 01:35:47.978426 24 predicates.go:373] Pod kafka-cluster-kafka-0 requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978434 24 predicates.go:373] Pod kafka-cluster-kafka-1 requesting resource cpu=0m on Node viola-gs-worker-3
  I0731 01:35:47.978439 24 predicates.go:373] Pod kafka-cluster-kafka-2 requesting resource cpu=0m on Node viola-gs-worker-4
  I0731 01:35:47.978443 24 predicates.go:373] Pod kafka-cluster-zookeeper-0 requesting resource cpu=0m on Node viola-gs-worker-3
  I0731 01:35:47.978448 24 predicates.go:373] Pod kafka-cluster-zookeeper-1 requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978453 24 predicates.go:373] Pod kafka-cluster-zookeeper-2 requesting resource cpu=0m on Node viola-gs-worker-4
  I0731 01:35:47.978457 24 predicates.go:373] Pod mariadb-maxscale-65f585776b-8b454 requesting resource cpu=0m on Node viola-gs-worker-4
  I0731 01:35:47.978461 24 predicates.go:373] Pod mariadb-maxscale-65f585776b-vwjt4 requesting resource cpu=0m on Node viola-gs-worker-3
  I0731 01:35:47.978466 24 predicates.go:373] Pod mariadb-sts-0 requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978470 24 predicates.go:373] Pod mariadb-sts-1 requesting resource cpu=0m on Node viola-gs-worker-4
  I0731 01:35:47.978475 24 predicates.go:373] Pod redis-0 requesting resource cpu=0m on Node viola-gs-worker-4
  I0731 01:35:47.978481 24 predicates.go:373] Pod strimzi-cluster-operator-584d5f5789-fdmrh requesting resource cpu=200m on Node viola-gs-worker-3
  I0731 01:35:47.978485 24 predicates.go:373] Pod vault-0 requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978490 24 predicates.go:373] Pod vault-1 requesting resource cpu=0m on Node viola-gs-worker-4
  I0731 01:35:47.978494 24 predicates.go:373] Pod vault-2 requesting resource cpu=0m on Node viola-gs-worker-3
  I0731 01:35:47.978500 24 predicates.go:373] Pod ingress-nginx-controller-847999c88f-64rw2 requesting resource cpu=100m on Node viola-gs-worker-2
  I0731 01:35:47.978506 24 predicates.go:373] Pod istio-gateway-6966544c9c-54w69 requesting resource cpu=100m on Node viola-gs-worker-4
  I0731 01:35:47.978511 24 predicates.go:373] Pod istiod-5c89cf5f74-b54ls requesting resource cpu=500m on Node viola-gs-worker-2
  I0731 01:35:47.978516 24 predicates.go:373] Pod cilium-envoy-72jp8 requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978521 24 predicates.go:373] Pod cilium-envoy-85rht requesting resource cpu=0m on Node viola-gs-worker-4
  I0731 01:35:47.978525 24 predicates.go:373] Pod cilium-envoy-bqgqv requesting resource cpu=0m on Node viola-gs-worker-1
  I0731 01:35:47.978529 24 predicates.go:373] Pod cilium-envoy-cxcfx requesting resource cpu=0m on Node viola-gs-worker-3
  I0731 01:35:47.978535 24 predicates.go:373] Pod cilium-hw2q8 requesting resource cpu=0m on Node viola-gs-worker-4
  I0731 01:35:47.978539 24 predicates.go:373] Pod cilium-kwph5 requesting resource cpu=0m on Node viola-gs-worker-3
  I0731 01:35:47.978547 24 predicates.go:373] Pod cilium-m7flm requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978552 24 predicates.go:373] Pod cilium-operator-f46ccdf88-47vls requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978556 24 predicates.go:373] Pod cilium-operator-f46ccdf88-57gr7 requesting resource cpu=0m on Node viola-gs-worker-1
  I0731 01:35:47.978560 24 predicates.go:373] Pod cilium-r2g4v requesting resource cpu=0m on Node viola-gs-worker-1
  I0731 01:35:47.978565 24 predicates.go:373] Pod coredns-74697c986-cxqqs requesting resource cpu=100m on Node viola-gs-worker-3
  I0731 01:35:47.978574 24 predicates.go:373] Pod coredns-74697c986-vrt9w requesting resource cpu=100m on Node viola-gs-worker-4
  I0731 01:35:47.978579 24 predicates.go:373] Pod csi-nfs-controller-5845c574bf-6thgf requesting resource cpu=40m on Node viola-gs-worker-2
  I0731 01:35:47.978585 24 predicates.go:373] Pod csi-nfs-node-2ngqc requesting resource cpu=30m on Node viola-gs-worker-1
  I0731 01:35:47.978590 24 predicates.go:373] Pod csi-nfs-node-p4ddz requesting resource cpu=30m on Node viola-gs-worker-3
  I0731 01:35:47.978599 24 predicates.go:373] Pod csi-nfs-node-rp6pv requesting resource cpu=30m on Node viola-gs-worker-4
  I0731 01:35:47.978605 24 predicates.go:373] Pod csi-nfs-node-vddcx requesting resource cpu=30m on Node viola-gs-worker-2
  I0731 01:35:47.978610 24 predicates.go:373] Pod dns-autoscaler-56cb45595c-wgcr2 requesting resource cpu=20m on Node viola-gs-worker-4
  I0731 01:35:47.978615 24 predicates.go:373] Pod kube-proxy-dhsft requesting resource cpu=0m on Node viola-gs-worker-4
  I0731 01:35:47.978623 24 predicates.go:373] Pod kube-proxy-h8fkv requesting resource cpu=0m on Node viola-gs-worker-1
  I0731 01:35:47.978628 24 predicates.go:373] Pod kube-proxy-hsl8d requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978632 24 predicates.go:373] Pod kube-proxy-ztnk8 requesting resource cpu=0m on Node viola-gs-worker-3
  I0731 01:35:47.978637 24 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node viola-gs-worker-1
  I0731 01:35:47.978640 24 predicates.go:373] Pod sonobuoy-e2e-job-bb61e2b056fa4f2e requesting resource cpu=0m on Node viola-gs-worker-1
  I0731 01:35:47.978645 24 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-2bzrg requesting resource cpu=0m on Node viola-gs-worker-4
  I0731 01:35:47.978650 24 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-2rw8x requesting resource cpu=0m on Node viola-gs-worker-2
  I0731 01:35:47.978654 24 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-bj545 requesting resource cpu=0m on Node viola-gs-worker-3
  I0731 01:35:47.978658 24 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-tnd7k requesting resource cpu=0m on Node viola-gs-worker-1
  I0731 01:35:47.978663 24 predicates.go:373] Pod viola-api-698955c4b8-n5j5l requesting resource cpu=100m on Node viola-gs-worker-3
  I0731 01:35:47.978667 24 predicates.go:373] Pod viola-remote-app-59b954dd94-kkvc5 requesting resource cpu=100m on Node viola-gs-worker-4
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/31/25 01:35:47.98
  I0731 01:35:47.980902 24 predicates.go:383] Creating a pod which consumes cpu=2359m on Node viola-gs-worker-1
  I0731 01:35:48.008615 24 predicates.go:383] Creating a pod which consumes cpu=1631m on Node viola-gs-worker-2
  I0731 01:35:48.022784 24 predicates.go:383] Creating a pod which consumes cpu=1869m on Node viola-gs-worker-3
  I0731 01:35:48.035441 24 predicates.go:383] Creating a pod which consumes cpu=1995m on Node viola-gs-worker-4
  E0731 01:35:48.452657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:49.462834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:50.455961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:51.455947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/31/25 01:35:52.071
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-287d6ea8-b2a3-48ff-9295-f4ea4edaed1f.1857322cd5683c53], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2679/filler-pod-287d6ea8-b2a3-48ff-9295-f4ea4edaed1f to viola-gs-worker-1] @ 07/31/25 01:35:52.075
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-287d6ea8-b2a3-48ff-9295-f4ea4edaed1f.1857322d3907f704], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/31/25 01:35:52.075
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-287d6ea8-b2a3-48ff-9295-f4ea4edaed1f.1857322d3ca9156d], Reason = [Created], Message = [Created container: filler-pod-287d6ea8-b2a3-48ff-9295-f4ea4edaed1f] @ 07/31/25 01:35:52.075
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-287d6ea8-b2a3-48ff-9295-f4ea4edaed1f.1857322d41bae0e2], Reason = [Started], Message = [Started container filler-pod-287d6ea8-b2a3-48ff-9295-f4ea4edaed1f] @ 07/31/25 01:35:52.075
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-36a521de-27df-45a5-9ebf-68164b736513.1857322cd6aa7646], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2679/filler-pod-36a521de-27df-45a5-9ebf-68164b736513 to viola-gs-worker-2] @ 07/31/25 01:35:52.075
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-36a521de-27df-45a5-9ebf-68164b736513.1857322d5f3e22fe], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/31/25 01:35:52.075
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-36a521de-27df-45a5-9ebf-68164b736513.1857322d6241be4b], Reason = [Created], Message = [Created container: filler-pod-36a521de-27df-45a5-9ebf-68164b736513] @ 07/31/25 01:35:52.075
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-36a521de-27df-45a5-9ebf-68164b736513.1857322d6746a48b], Reason = [Started], Message = [Started container filler-pod-36a521de-27df-45a5-9ebf-68164b736513] @ 07/31/25 01:35:52.075
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a440dbc6-583b-42fd-a686-b75a5f097410.1857322cd781b5e2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2679/filler-pod-a440dbc6-583b-42fd-a686-b75a5f097410 to viola-gs-worker-3] @ 07/31/25 01:35:52.075
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a440dbc6-583b-42fd-a686-b75a5f097410.1857322d5070b008], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/31/25 01:35:52.075
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a440dbc6-583b-42fd-a686-b75a5f097410.1857322d533a1a8b], Reason = [Created], Message = [Created container: filler-pod-a440dbc6-583b-42fd-a686-b75a5f097410] @ 07/31/25 01:35:52.075
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a440dbc6-583b-42fd-a686-b75a5f097410.1857322d5978c04f], Reason = [Started], Message = [Started container filler-pod-a440dbc6-583b-42fd-a686-b75a5f097410] @ 07/31/25 01:35:52.076
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bac71cec-e2c0-4623-8e37-167ae4f23392.1857322cd7eb03b5], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2679/filler-pod-bac71cec-e2c0-4623-8e37-167ae4f23392 to viola-gs-worker-4] @ 07/31/25 01:35:52.076
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bac71cec-e2c0-4623-8e37-167ae4f23392.1857322d57360474], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/31/25 01:35:52.076
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bac71cec-e2c0-4623-8e37-167ae4f23392.1857322d59fae5da], Reason = [Created], Message = [Created container: filler-pod-bac71cec-e2c0-4623-8e37-167ae4f23392] @ 07/31/25 01:35:52.076
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bac71cec-e2c0-4623-8e37-167ae4f23392.1857322d5e80d4b7], Reason = [Started], Message = [Started container filler-pod-bac71cec-e2c0-4623-8e37-167ae4f23392] @ 07/31/25 01:35:52.076
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1857322dc82136ac], Reason = [FailedScheduling], Message = [0/7 nodes are available: 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 4 Insufficient cpu. preemption: 0/7 nodes are available: 3 Preemption is not helpful for scheduling, 4 No preemption victims found for incoming pod.] @ 07/31/25 01:35:52.092
  E0731 01:35:52.456167      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label node off the node viola-gs-worker-1 @ 07/31/25 01:35:53.091
  STEP: verifying the node doesn't have the label node @ 07/31/25 01:35:53.112
  STEP: removing the label node off the node viola-gs-worker-2 @ 07/31/25 01:35:53.119
  STEP: verifying the node doesn't have the label node @ 07/31/25 01:35:53.14
  STEP: removing the label node off the node viola-gs-worker-3 @ 07/31/25 01:35:53.159
  STEP: verifying the node doesn't have the label node @ 07/31/25 01:35:53.18
  STEP: removing the label node off the node viola-gs-worker-4 @ 07/31/25 01:35:53.206
  STEP: verifying the node doesn't have the label node @ 07/31/25 01:35:53.223
  I0731 01:35:53.230465 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2679" for this suite. @ 07/31/25 01:35:53.241
• [5.557 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 07/31/25 01:35:53.252
  I0731 01:35:53.252353 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename containers @ 07/31/25 01:35:53.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:35:53.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:35:53.275
  STEP: Creating a pod to test override arguments @ 07/31/25 01:35:53.279
  E0731 01:35:53.456327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:54.456976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:55.457142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:56.457528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:35:57.309
  I0731 01:35:57.315373 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod client-containers-96169717-7ffd-487a-82d9-68413cb0edb8 container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 01:35:57.321
  I0731 01:35:57.341390 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1674" for this suite. @ 07/31/25 01:35:57.346
• [4.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 07/31/25 01:35:57.355
  I0731 01:35:57.355059 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename secrets @ 07/31/25 01:35:57.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:35:57.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:35:57.376
  STEP: creating a secret @ 07/31/25 01:35:57.378
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/31/25 01:35:57.39
  STEP: patching the secret @ 07/31/25 01:35:57.397
  STEP: deleting the secret using a LabelSelector @ 07/31/25 01:35:57.417
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/31/25 01:35:57.425
  I0731 01:35:57.428887 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7931" for this suite. @ 07/31/25 01:35:57.446
• [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 07/31/25 01:35:57.456
  I0731 01:35:57.456169 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 01:35:57.457812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename webhook @ 07/31/25 01:35:57.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:35:57.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:35:57.478
  STEP: Setting up server cert @ 07/31/25 01:35:57.507
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 01:35:57.699
  STEP: Deploying the webhook pod @ 07/31/25 01:35:57.709
  STEP: Wait for the deployment to be ready @ 07/31/25 01:35:57.725
  I0731 01:35:57.735868 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 01:35:58.458257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:35:59.459050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 01:35:59.751
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 01:35:59.83
  E0731 01:36:00.458951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:00.831237 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/31/25 01:36:00.837
  STEP: create a namespace for the webhook @ 07/31/25 01:36:00.858
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/31/25 01:36:00.872
  I0731 01:36:00.967211 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3717" for this suite. @ 07/31/25 01:36:00.977
  STEP: Destroying namespace "webhook-markers-8290" for this suite. @ 07/31/25 01:36:00.997
  STEP: Destroying namespace "fail-closed-namespace-1547" for this suite. @ 07/31/25 01:36:01.009
• [3.563 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 07/31/25 01:36:01.021
  I0731 01:36:01.021575 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-probe @ 07/31/25 01:36:01.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:36:01.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:36:01.045
  STEP: Creating pod liveness-e7d7e309-fe6b-47f9-936e-303140753394 in namespace container-probe-1179 @ 07/31/25 01:36:01.049
  E0731 01:36:01.459505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:02.459658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/31/25 01:36:03.08
  I0731 01:36:03.083480 24 container_probe.go:1748] Initial restart count of pod liveness-e7d7e309-fe6b-47f9-936e-303140753394 is 0
  I0731 01:36:03.093688 24 container_probe.go:1758] Get pod liveness-e7d7e309-fe6b-47f9-936e-303140753394 in namespace container-probe-1179
  E0731 01:36:03.460174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:04.460310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:05.099325 24 container_probe.go:1758] Get pod liveness-e7d7e309-fe6b-47f9-936e-303140753394 in namespace container-probe-1179
  E0731 01:36:05.461099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:06.461198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:07.103878 24 container_probe.go:1758] Get pod liveness-e7d7e309-fe6b-47f9-936e-303140753394 in namespace container-probe-1179
  E0731 01:36:07.461342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:08.461461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:09.109827 24 container_probe.go:1758] Get pod liveness-e7d7e309-fe6b-47f9-936e-303140753394 in namespace container-probe-1179
  E0731 01:36:09.462469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:10.462624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:11.115020 24 container_probe.go:1758] Get pod liveness-e7d7e309-fe6b-47f9-936e-303140753394 in namespace container-probe-1179
  E0731 01:36:11.463581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:12.463704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:13.120157 24 container_probe.go:1758] Get pod liveness-e7d7e309-fe6b-47f9-936e-303140753394 in namespace container-probe-1179
  E0731 01:36:13.464627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:14.465073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:15.125493 24 container_probe.go:1758] Get pod liveness-e7d7e309-fe6b-47f9-936e-303140753394 in namespace container-probe-1179
  E0731 01:36:15.466132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:16.466575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:17.129677 24 container_probe.go:1758] Get pod liveness-e7d7e309-fe6b-47f9-936e-303140753394 in namespace container-probe-1179
  E0731 01:36:17.467212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:18.467606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:19.134938 24 container_probe.go:1758] Get pod liveness-e7d7e309-fe6b-47f9-936e-303140753394 in namespace container-probe-1179
  E0731 01:36:19.468360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:20.468563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:21.140289 24 container_probe.go:1758] Get pod liveness-e7d7e309-fe6b-47f9-936e-303140753394 in namespace container-probe-1179
  E0731 01:36:21.468655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:22.468857      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:23.145589 24 container_probe.go:1758] Get pod liveness-e7d7e309-fe6b-47f9-936e-303140753394 in namespace container-probe-1179
  I0731 01:36:23.145641 24 container_probe.go:1762] Restart count of pod container-probe-1179/liveness-e7d7e309-fe6b-47f9-936e-303140753394 is now 1 (20.062051897s elapsed)
  STEP: deleting the pod @ 07/31/25 01:36:23.145
  I0731 01:36:23.172551 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1179" for this suite. @ 07/31/25 01:36:23.177
• [22.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 07/31/25 01:36:23.19
  I0731 01:36:23.190356 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename resourcequota @ 07/31/25 01:36:23.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:36:23.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:36:23.218
  E0731 01:36:23.469640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:24.470660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:25.471023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:26.471036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:27.471575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:28.472018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:29.473120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:30.473284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:31.473396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:32.473709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:33.474209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:34.474830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:35.475527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:36.475662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:37.476600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:38.477130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:39.478122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/31/25 01:36:40.225
  E0731 01:36:40.478146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:41.478834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:42.479524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:43.480001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:44.480687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/31/25 01:36:45.23
  STEP: Ensuring resource quota status is calculated @ 07/31/25 01:36:45.24
  E0731 01:36:45.481625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:46.481892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 07/31/25 01:36:47.244
  STEP: Ensuring resource quota status captures configMap creation @ 07/31/25 01:36:47.265
  E0731 01:36:47.482559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:48.482866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 07/31/25 01:36:49.271
  STEP: Ensuring resource quota status released usage @ 07/31/25 01:36:49.278
  E0731 01:36:49.483759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:50.484060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:51.283602 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2901" for this suite. @ 07/31/25 01:36:51.289
• [28.107 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 07/31/25 01:36:51.297
  I0731 01:36:51.297709 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 01:36:51.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:36:51.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:36:51.317
  I0731 01:36:51.320194 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-5254 version'
  I0731 01:36:51.387685 24 builder.go:146] stderr: ""
  I0731 01:36:51.387732 24 builder.go:147] stdout: "Client Version: v1.33.3\nKustomize Version: v5.6.0\nServer Version: v1.33.3\n"
  I0731 01:36:51.388209 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5254" for this suite. @ 07/31/25 01:36:51.394
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 07/31/25 01:36:51.403
  I0731 01:36:51.403757 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename containers @ 07/31/25 01:36:51.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:36:51.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:36:51.423
  STEP: Creating a pod to test override all @ 07/31/25 01:36:51.425
  E0731 01:36:51.485080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:52.485249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:53.485466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:54.485494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:36:55.448
  I0731 01:36:55.451692 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod client-containers-87a79db3-91eb-402b-9405-ffda5f257418 container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 01:36:55.458
  E0731 01:36:55.485991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:55.487232 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5492" for this suite. @ 07/31/25 01:36:55.491
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 07/31/25 01:36:55.499
  I0731 01:36:55.499831 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename crd-webhook @ 07/31/25 01:36:55.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:36:55.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:36:55.523
  STEP: Setting up server cert @ 07/31/25 01:36:55.526
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/31/25 01:36:56.004
  STEP: Deploying the custom resource conversion webhook pod @ 07/31/25 01:36:56.011
  STEP: Wait for the deployment to be ready @ 07/31/25 01:36:56.032
  I0731 01:36:56.040713 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0731 01:36:56.486118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:36:57.486420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 01:36:58.053
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 01:36:58.075
  E0731 01:36:58.486586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:36:59.075886 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0731 01:36:59.081016 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 01:36:59.486744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:00.486760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:01.487782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:02.487835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:03.488538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:04.488820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:05.488965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:06.489374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/31/25 01:37:06.647
  STEP: v2 custom resource should be converted @ 07/31/25 01:37:06.654
  I0731 01:37:07.267941 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3853" for this suite. @ 07/31/25 01:37:07.289
• [11.804 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 07/31/25 01:37:07.303
  I0731 01:37:07.303887 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename sched-preemption @ 07/31/25 01:37:07.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:37:07.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:37:07.336
  I0731 01:37:07.374292 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0731 01:37:07.489644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:08.490061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:09.491044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:10.492009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:11.492102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:12.492468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:13.492933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:14.493361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:15.494050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:16.494445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:17.495349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:18.495443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:19.496582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:20.496841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:21.497789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:22.498122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:23.498291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:24.498370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:25.499102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:26.499227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:27.499617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:28.500064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:29.500199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:30.500431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:31.500876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:32.501161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:33.501638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:34.501893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:35.502097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:36.502913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:37.503726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:38.504030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:39.504314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:40.505473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:41.505752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:42.506080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:43.506733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:44.506994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:45.507137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:46.507365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:47.508207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:48.508339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:49.508432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:50.508628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:51.508748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:52.509054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:53.509250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:54.509521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:55.510549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:56.510676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:57.511588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:58.511870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:37:59.512020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:00.512246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:01.512448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:02.512582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:03.513297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:04.513650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:05.513988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:06.514097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:38:07.380684 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 07/31/25 01:38:07.385
  STEP: Adding a custom resource @ 07/31/25 01:38:07.385
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 07/31/25 01:38:07.399
  I0731 01:38:07.413259 24 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 07/31/25 01:38:07.413
  E0731 01:38:07.514757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:08.514924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 07/31/25 01:38:09.423
  I0731 01:38:09.432821 24 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 07/31/25 01:38:09.432
  E0731 01:38:09.515911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:10.516027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 07/31/25 01:38:11.442
  I0731 01:38:11.445716 24 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0731 01:38:11.516958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:38:11.961452 24 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 07/31/25 01:38:11.984
  STEP: Removing a custom resource @ 07/31/25 01:38:11.998
  STEP: Removing a custom resource @ 07/31/25 01:38:12.008
  STEP: Removing a custom resource @ 07/31/25 01:38:12.016
  I0731 01:38:12.026035 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8906" for this suite. @ 07/31/25 01:38:12.03
• [64.734 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 07/31/25 01:38:12.038
  I0731 01:38:12.038604 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 01:38:12.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:38:12.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:38:12.06
  STEP: Creating configMap with name configmap-test-upd-d52db348-64d4-4f1d-8f7a-fa7662f4da5b @ 07/31/25 01:38:12.07
  STEP: Creating the pod @ 07/31/25 01:38:12.076
  E0731 01:38:12.517949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:13.518518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 07/31/25 01:38:14.096
  STEP: Waiting for pod with binary data @ 07/31/25 01:38:14.102
  I0731 01:38:14.109663 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1310" for this suite. @ 07/31/25 01:38:14.114
• [2.085 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 07/31/25 01:38:14.123
  I0731 01:38:14.123517 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 01:38:14.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:38:14.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:38:14.142
  STEP: creating all guestbook components @ 07/31/25 01:38:14.145
  I0731 01:38:14.146177 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0731 01:38:14.148176 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1766 create -f -'
  I0731 01:38:14.267302 24 builder.go:146] stderr: ""
  I0731 01:38:14.267353 24 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0731 01:38:14.267418 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0731 01:38:14.267473 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1766 create -f -'
  I0731 01:38:14.404335 24 builder.go:146] stderr: ""
  I0731 01:38:14.404382 24 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0731 01:38:14.404462 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0731 01:38:14.404521 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1766 create -f -'
  E0731 01:38:14.519011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:38:14.566114 24 builder.go:146] stderr: ""
  I0731 01:38:14.566162 24 builder.go:147] stdout: "service/frontend created\n"
  I0731 01:38:14.566263 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0731 01:38:14.566328 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1766 create -f -'
  I0731 01:38:14.675774 24 builder.go:146] stderr: ""
  I0731 01:38:14.675820 24 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0731 01:38:14.675892 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0731 01:38:14.675960 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1766 create -f -'
  I0731 01:38:14.806050 24 builder.go:146] stderr: ""
  I0731 01:38:14.806109 24 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0731 01:38:14.806200 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0731 01:38:14.806295 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1766 create -f -'
  I0731 01:38:14.898741 24 builder.go:146] stderr: ""
  I0731 01:38:14.898804 24 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/31/25 01:38:14.898
  I0731 01:38:14.898865 24 kubectl.go:2275] Waiting for all frontend pods to be Running.
  E0731 01:38:15.519774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:16.522167      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:17.523006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:18.523059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:19.523338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:38:19.949968 24 kubectl.go:2279] Waiting for frontend to serve content.
  I0731 01:38:19.962443 24 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0731 01:38:19.974631 24 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 07/31/25 01:38:19.985
  I0731 01:38:19.985344 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1766 delete --grace-period=0 --force -f -'
  I0731 01:38:20.086273 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0731 01:38:20.086354 24 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/31/25 01:38:20.086
  I0731 01:38:20.088002 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1766 delete --grace-period=0 --force -f -'
  I0731 01:38:20.226874 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0731 01:38:20.226981 24 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/31/25 01:38:20.227
  I0731 01:38:20.227394 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1766 delete --grace-period=0 --force -f -'
  I0731 01:38:20.331585 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0731 01:38:20.331634 24 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/31/25 01:38:20.331
  I0731 01:38:20.331772 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1766 delete --grace-period=0 --force -f -'
  I0731 01:38:20.399697 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0731 01:38:20.399748 24 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/31/25 01:38:20.399
  I0731 01:38:20.399870 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1766 delete --grace-period=0 --force -f -'
  I0731 01:38:20.495384 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0731 01:38:20.495499 24 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/31/25 01:38:20.495
  I0731 01:38:20.495654 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1766 delete --grace-period=0 --force -f -'
  E0731 01:38:20.523459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:38:20.576074 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0731 01:38:20.576124 24 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0731 01:38:20.576249 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1766" for this suite. @ 07/31/25 01:38:20.582
• [6.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 07/31/25 01:38:20.601
  I0731 01:38:20.601125 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubelet-test @ 07/31/25 01:38:20.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:38:20.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:38:20.625
  E0731 01:38:21.523566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:22.523821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:38:22.660704 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9597" for this suite. @ 07/31/25 01:38:22.665
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 07/31/25 01:38:22.675
  I0731 01:38:22.675882 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 01:38:22.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:38:22.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:38:22.699
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 01:38:22.701
  E0731 01:38:23.524062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:24.524526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:25.524440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:26.524892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:38:26.728
  I0731 01:38:26.731204 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-03d43aee-ec1d-4b93-88ce-55f0d300b298 container client-container: <nil>
  STEP: delete the pod @ 07/31/25 01:38:26.737
  I0731 01:38:26.757692 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6425" for this suite. @ 07/31/25 01:38:26.762
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 07/31/25 01:38:26.768
  I0731 01:38:26.768999 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 01:38:26.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:38:26.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:38:26.787
  STEP: creating the pod @ 07/31/25 01:38:26.789
  I0731 01:38:26.790057 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8056 create -f -'
  I0731 01:38:26.901765 24 builder.go:146] stderr: ""
  I0731 01:38:26.901817 24 builder.go:147] stdout: "pod/pause created\n"
  E0731 01:38:27.524954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:28.525206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/31/25 01:38:28.912
  I0731 01:38:28.912958 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8056 label pods pause testing-label=testing-label-value'
  I0731 01:38:28.986536 24 builder.go:146] stderr: ""
  I0731 01:38:28.986632 24 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/31/25 01:38:28.986
  I0731 01:38:28.986973 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8056 get pod pause -L testing-label'
  I0731 01:38:29.044899 24 builder.go:146] stderr: ""
  I0731 01:38:29.044963 24 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/31/25 01:38:29.044
  I0731 01:38:29.045149 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8056 label pods pause testing-label-'
  I0731 01:38:29.125484 24 builder.go:146] stderr: ""
  I0731 01:38:29.125550 24 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/31/25 01:38:29.125
  I0731 01:38:29.125664 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8056 get pod pause -L testing-label'
  I0731 01:38:29.188053 24 builder.go:146] stderr: ""
  I0731 01:38:29.188118 24 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 07/31/25 01:38:29.188
  I0731 01:38:29.189320 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8056 delete --grace-period=0 --force -f -'
  I0731 01:38:29.259954 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0731 01:38:29.260022 24 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0731 01:38:29.260171 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8056 get rc,svc -l name=pause --no-headers'
  I0731 01:38:29.321907 24 builder.go:146] stderr: "No resources found in kubectl-8056 namespace.\n"
  I0731 01:38:29.321964 24 builder.go:147] stdout: ""
  I0731 01:38:29.322036 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8056 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0731 01:38:29.376936 24 builder.go:146] stderr: ""
  I0731 01:38:29.376998 24 builder.go:147] stdout: ""
  I0731 01:38:29.377202 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8056" for this suite. @ 07/31/25 01:38:29.383
• [2.623 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 07/31/25 01:38:29.396
  I0731 01:38:29.396108 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename resourcequota @ 07/31/25 01:38:29.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:38:29.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:38:29.415
  STEP: Counting existing ResourceQuota @ 07/31/25 01:38:29.418
  E0731 01:38:29.525838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:30.526644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:31.526793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:32.527551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:33.528318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/31/25 01:38:34.422
  STEP: Ensuring resource quota status is calculated @ 07/31/25 01:38:34.43
  E0731 01:38:34.528984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:35.529359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 07/31/25 01:38:36.436
  STEP: Ensuring resource quota status captures replicaset creation @ 07/31/25 01:38:36.452
  E0731 01:38:36.530018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:37.530411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 07/31/25 01:38:38.458
  STEP: Ensuring resource quota status released usage @ 07/31/25 01:38:38.472
  E0731 01:38:38.530804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:39.530928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:38:40.477642 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1044" for this suite. @ 07/31/25 01:38:40.482
• [11.096 seconds]
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 07/31/25 01:38:40.491
  I0731 01:38:40.492009 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 01:38:40.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:38:40.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:38:40.51
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 07/31/25 01:38:40.513
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 07/31/25 01:38:40.521
  E0731 01:38:40.531748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:41.531965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:42.532586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:43.532773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:44.532968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:45.534082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:46.534352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/31/25 01:38:46.539
  STEP: Verifying that the job status to ensure correct final state @ 07/31/25 01:38:46.546
  I0731 01:38:46.549592 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8809" for this suite. @ 07/31/25 01:38:46.554
• [6.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/31/25 01:38:46.564
  I0731 01:38:46.564200 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pod-network-test @ 07/31/25 01:38:46.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:38:46.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:38:46.587
  STEP: Performing setup for networking test in namespace pod-network-test-8778 @ 07/31/25 01:38:46.59
  STEP: creating a selector @ 07/31/25 01:38:46.59
  STEP: Creating the service pods in kubernetes @ 07/31/25 01:38:46.59
  I0731 01:38:46.590506 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0731 01:38:47.534766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:48.535670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:49.536303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:50.536645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:51.537660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:52.538635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:53.538802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:54.539215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:55.539508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:56.540283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:57.540415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:58.540627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:38:59.541404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:00.541614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/31/25 01:39:00.77
  E0731 01:39:01.542198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:02.542553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:39:02.806039 24 utils.go:802] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0731 01:39:02.806160 24 utils.go:495] Going to poll 10.233.65.77 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0731 01:39:02.808396 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.77 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8778 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:39:02.808435 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:39:02.808517 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8778/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.77+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0731 01:39:03.542903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:39:03.882156 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:39:03.882237 24 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0731 01:39:03.882273 24 utils.go:495] Going to poll 10.233.66.61 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0731 01:39:03.887167 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.61 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8778 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:39:03.887278 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:39:03.887357 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8778/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.61+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0731 01:39:04.542968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:39:04.953939 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:39:04.954097 24 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0731 01:39:04.954158 24 utils.go:495] Going to poll 10.233.67.251 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0731 01:39:04.957217 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.67.251 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8778 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:39:04.957248 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:39:04.957337 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8778/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.67.251+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0731 01:39:05.543935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:39:06.012548 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:39:06.012609 24 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0731 01:39:06.012624 24 utils.go:495] Going to poll 10.233.68.140 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0731 01:39:06.016989 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.68.140 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8778 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:39:06.017159 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:39:06.017552 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8778/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.68.140+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0731 01:39:06.544412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:39:07.077808 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:39:07.077893 24 utils.go:512] Found all 1 expected endpoints: [netserver-3]
  I0731 01:39:07.078213 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8778" for this suite. @ 07/31/25 01:39:07.084
• [20.530 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 07/31/25 01:39:07.095
  I0731 01:39:07.095659 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 01:39:07.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:39:07.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:39:07.119
  STEP: Creating configMap with name configmap-test-upd-2530ca5b-b000-4cb2-9d04-c3c224e150f8 @ 07/31/25 01:39:07.13
  STEP: Creating the pod @ 07/31/25 01:39:07.138
  E0731 01:39:07.544550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:08.545576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-2530ca5b-b000-4cb2-9d04-c3c224e150f8 @ 07/31/25 01:39:09.17
  STEP: waiting to observe update in volume @ 07/31/25 01:39:09.177
  E0731 01:39:09.546356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:10.546584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:11.547491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:12.547523      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:13.548066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:14.548377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:15.548784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:16.549067      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:17.549305      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:18.549675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:19.549956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:20.550167      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:21.550919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:22.551210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:23.552102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:24.552394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:25.553416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:26.553707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:27.554744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:28.555008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:29.555783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:30.556065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:31.556198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:32.556488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:33.557338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:34.557482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:35.557861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:36.558088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:37.560347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:38.561050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:39.561429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:40.561584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:41.561837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:42.561964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:43.562355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:44.562513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:45.563046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:46.563457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:47.563666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:48.563803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:49.564351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:50.564648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:51.564988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:52.565362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:53.565792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:54.566195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:55.566950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:56.567159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:57.568189      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:58.568404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:39:59.569289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:00.569405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:01.570264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:02.570499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:03.571427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:04.571842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:05.572503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:06.572754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:07.573399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:08.573775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:09.574153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:10.574451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:11.575193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:12.575666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:13.576119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:14.576332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:15.576948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:16.577582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:17.577809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:18.578234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:19.578661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:20.578841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:40:21.520749 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4664" for this suite. @ 07/31/25 01:40:21.524
• [74.439 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 07/31/25 01:40:21.535
  I0731 01:40:21.535351 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/31/25 01:40:21.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:40:21.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:40:21.554
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/31/25 01:40:21.557
  I0731 01:40:21.558509 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 01:40:21.579281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:22.579341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:23.580426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:24.580986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:25.581053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:26.581321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:27.582268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:28.583034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:40:29.140260 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 01:40:29.583717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:30.584613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:31.585444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:32.585964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:33.586974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:34.587476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:35.587803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:36.588573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:37.589551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:38.590063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:39.590974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:40.591489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:41.592472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:40:42.526060 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4801" for this suite. @ 07/31/25 01:40:42.534
• [21.008 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 07/31/25 01:40:42.545
  I0731 01:40:42.545277 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 01:40:42.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:40:42.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:40:42.575
  E0731 01:40:42.592905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 07/31/25 01:40:42.601
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 01:40:43.585
  E0731 01:40:43.593478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 07/31/25 01:40:43.594
  STEP: Wait for the deployment to be ready @ 07/31/25 01:40:43.614
  I0731 01:40:43.627269 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 01:40:44.593664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:45.593816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 01:40:45.641
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 01:40:45.664
  E0731 01:40:46.594183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:40:46.665204 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/31/25 01:40:46.671
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/31/25 01:40:46.691
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/31/25 01:40:46.699
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/31/25 01:40:46.723
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/31/25 01:40:46.744
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/31/25 01:40:46.756
  I0731 01:40:46.839768 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3863" for this suite. @ 07/31/25 01:40:46.846
  STEP: Destroying namespace "webhook-markers-172" for this suite. @ 07/31/25 01:40:46.863
• [4.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 07/31/25 01:40:46.878
  I0731 01:40:46.878661 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename resourcequota @ 07/31/25 01:40:46.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:40:46.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:40:46.908
  STEP: Counting existing ResourceQuota @ 07/31/25 01:40:46.913
  E0731 01:40:47.595066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:48.595229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:49.596168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:50.597311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:51.597374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/31/25 01:40:51.916
  STEP: Ensuring resource quota status is calculated @ 07/31/25 01:40:51.925
  E0731 01:40:52.598217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:53.598381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 07/31/25 01:40:53.929
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/31/25 01:40:53.952
  E0731 01:40:54.598784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:55.599180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/31/25 01:40:55.956
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/31/25 01:40:55.958
  STEP: Ensuring a pod cannot update its resource requirements @ 07/31/25 01:40:55.961
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/31/25 01:40:55.966
  E0731 01:40:56.599388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:57.599531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/31/25 01:40:57.971
  STEP: Ensuring resource quota status released the pod usage @ 07/31/25 01:40:57.989
  E0731 01:40:58.600049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:40:59.600492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:40:59.995001 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9610" for this suite. @ 07/31/25 01:40:59.999
• [13.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 07/31/25 01:41:00.011
  I0731 01:41:00.011885 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-probe @ 07/31/25 01:41:00.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:41:00.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:41:00.033
  STEP: Creating pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737 @ 07/31/25 01:41:00.036
  E0731 01:41:00.601124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:01.601461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/31/25 01:41:02.066
  I0731 01:41:02.070566 24 container_probe.go:1748] Initial restart count of pod busybox-437b505c-e747-417b-a343-70c024190ab4 is 0
  I0731 01:41:02.073290 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:02.601950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:03.602237      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:04.079252 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:04.603048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:05.603303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:06.085296 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:06.603921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:07.604302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:08.091902 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:08.604577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:09.605046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:10.097097 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:10.605352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:11.605635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:12.103511 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:12.605857      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:13.606175      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:14.109241 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:14.607005      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:15.607318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:16.114566 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:16.608052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:17.608319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:18.119897 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:18.608453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:19.608793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:20.124748 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:20.609301      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:21.609709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:22.129193 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:22.609722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:23.610021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:24.135075 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:24.610893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:25.611183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:26.139471 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:26.612274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:27.612919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:28.145997 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:28.613624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:29.614256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:30.151862 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:30.614367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:31.614528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:32.157111 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:32.614620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:33.615600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:34.163056 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:34.615673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:35.616412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:36.168491 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:36.616888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:37.617744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:38.173400 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:38.617846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:39.618135      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:40.178878 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:40.618380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:41.618669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:42.184649 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:42.618956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:43.619296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:44.190307 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:44.619931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:45.620248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:46.195607 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:46.621151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:47.621471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:48.200531 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:48.622144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:49.622395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:50.206224 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  E0731 01:41:50.622646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:51.623120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:41:52.211616 24 container_probe.go:1758] Get pod busybox-437b505c-e747-417b-a343-70c024190ab4 in namespace container-probe-2737
  I0731 01:41:52.211669 24 container_probe.go:1762] Restart count of pod container-probe-2737/busybox-437b505c-e747-417b-a343-70c024190ab4 is now 1 (50.141060884s elapsed)
  STEP: deleting the pod @ 07/31/25 01:41:52.211
  I0731 01:41:52.234944 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2737" for this suite. @ 07/31/25 01:41:52.239
• [52.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 07/31/25 01:41:52.251
  I0731 01:41:52.251539 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename var-expansion @ 07/31/25 01:41:52.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:41:52.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:41:52.271
  STEP: Creating a pod to test substitution in container's args @ 07/31/25 01:41:52.273
  E0731 01:41:52.623835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:53.624120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:54.624587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:55.624718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:41:56.297
  I0731 01:41:56.301514 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod var-expansion-4ec19c9c-02eb-4e27-95b7-34bebba58ba7 container dapi-container: <nil>
  STEP: delete the pod @ 07/31/25 01:41:56.319
  I0731 01:41:56.336653 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2591" for this suite. @ 07/31/25 01:41:56.341
• [4.098 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 07/31/25 01:41:56.35
  I0731 01:41:56.350127 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 01:41:56.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:41:56.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:41:56.364
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 01:41:56.368
  E0731 01:41:56.625481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:57.626021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:58.626216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:41:59.626538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:42:00.4
  I0731 01:42:00.403544 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-e9c28aaa-f377-4b6e-bbdd-98d201a7867e container client-container: <nil>
  STEP: delete the pod @ 07/31/25 01:42:00.409
  I0731 01:42:00.432490 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-585" for this suite. @ 07/31/25 01:42:00.441
• [4.099 seconds]
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/31/25 01:42:00.448
  I0731 01:42:00.448817 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename subjectreview @ 07/31/25 01:42:00.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:42:00.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:42:00.468
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-5347" @ 07/31/25 01:42:00.47
  I0731 01:42:00.477818 24 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-5347:e2e"
  I0731 01:42:00.477864 24 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-5347"}
  I0731 01:42:00.477871 24 subjectreviews.go:71] saUID: "ee7e5399-48ff-4fc9-9e7b-fd2263438174"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-5347:e2e" @ 07/31/25 01:42:00.477
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-5347:e2e" @ 07/31/25 01:42:00.478
  I0731 01:42:00.480014 24 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-5347:e2e" api 'list' configmaps in "subjectreview-5347" namespace @ 07/31/25 01:42:00.48
  I0731 01:42:00.481638 24 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-5347:e2e" @ 07/31/25 01:42:00.481
  I0731 01:42:00.484063 24 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0731 01:42:00.484091 24 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0731 01:42:00.484209 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-5347" for this suite. @ 07/31/25 01:42:00.543
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 07/31/25 01:42:00.555
  I0731 01:42:00.555534 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/31/25 01:42:00.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:42:00.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:42:00.581
  I0731 01:42:00.583648 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 01:42:00.627115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:01.627657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:02.627841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:03.628750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:04.629420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:05.629775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:06.630506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:07.631140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:08.632129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:42:08.643979 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-173" for this suite. @ 07/31/25 01:42:08.649
• [8.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 07/31/25 01:42:08.658
  I0731 01:42:08.658877 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir @ 07/31/25 01:42:08.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:42:08.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:42:08.676
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/31/25 01:42:08.68
  E0731 01:42:09.633190      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:10.633600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:11.633713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:12.634377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:42:12.714
  I0731 01:42:12.717988 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-cc83432e-8637-4976-9a2a-42d66cd357f0 container test-container: <nil>
  STEP: delete the pod @ 07/31/25 01:42:12.723
  I0731 01:42:12.747673 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-429" for this suite. @ 07/31/25 01:42:12.752
• [4.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 07/31/25 01:42:12.761
  I0731 01:42:12.761539 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 01:42:12.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:42:12.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:42:12.782
  STEP: Creating the pod @ 07/31/25 01:42:12.785
  E0731 01:42:13.634562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:14.634763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:42:15.336577 24 pod_client.go:173] Successfully updated pod "labelsupdatea8d26cbb-f5e5-4753-be63-66546c611933"
  E0731 01:42:15.634972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:16.635121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:42:17.353187 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7053" for this suite. @ 07/31/25 01:42:17.359
• [4.606 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/31/25 01:42:17.368
  I0731 01:42:17.368253 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 01:42:17.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:42:17.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:42:17.389
  STEP: Creating projection with secret that has name projected-secret-test-efcfd1eb-912a-461e-8198-db911c80d15d @ 07/31/25 01:42:17.392
  STEP: Creating a pod to test consume secrets @ 07/31/25 01:42:17.399
  E0731 01:42:17.635580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:18.636294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:19.637060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:20.637411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:42:21.426
  I0731 01:42:21.429909 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-projected-secrets-012476b1-24a0-434a-a360-68053bc98dc7 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 01:42:21.436
  I0731 01:42:21.458288 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-795" for this suite. @ 07/31/25 01:42:21.462
• [4.105 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/31/25 01:42:21.473
  I0731 01:42:21.473990 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename init-container @ 07/31/25 01:42:21.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:42:21.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:42:21.494
  STEP: creating the pod @ 07/31/25 01:42:21.496
  I0731 01:42:21.496583 24 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0731 01:42:21.638162      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:22.638531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:23.639553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:24.640285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:25.640615      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:26.640729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:27.641097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:28.641194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:29.641589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:30.641623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:31.641945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:32.642064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:33.642427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:34.642674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:35.643001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:36.643100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:37.643816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:38.644293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:39.644494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:40.644775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:41.645142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:42.646351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:43.645617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:44.646385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:45.646901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:46.647232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:47.647552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:48.647876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:49.648368      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:50.648728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:51.649103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:52.649366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:53.649770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:54.650883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:55.651246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:56.651345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:57.651584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:58.651708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:42:59.651997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:00.652102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:01.652365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:02.652533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:03.652851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:04.653099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:05.653781      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:43:06.151351 24 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-bbacd815-91fd-4942-ab05-f0548e8edca1", GenerateName:"", Namespace:"init-container-7717", SelfLink:"", UID:"6a08e2a3-65ec-48dc-a303-a029ac38d5a2", ResourceVersion:"877347", Generation:1, CreationTimestamp:time.Date(2025, time.July, 31, 1, 42, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"496558712"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 31, 1, 42, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049762d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 31, 1, 43, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004976300), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-5h4rp", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0069ab040), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5h4rp", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5h4rp", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5h4rp", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0042e84f0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"viola-gs-worker-1", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc006b02b40), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0042e8570)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0042e8590)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0042e8598), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0042e859c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc001102d70), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 31, 1, 42, 23, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 31, 1, 42, 21, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 31, 1, 42, 21, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 31, 1, 42, 21, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 31, 1, 42, 21, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.20.30.203", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.20.30.203"}}, PodIP:"10.233.65.65", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.65.65"}}, StartTime:time.Date(2025, time.July, 31, 1, 42, 21, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc002406b60)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc002406bd0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://aa22b1c0907a7cb8c578c310bc998be47b6332dfd1462911f25bf235863e6268", Started:(*bool)(0xc0042e865a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc0051c4ed0), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-5h4rp", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc001102d90)}}, User:(*v1.ContainerUser)(0xc0000a42f8), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0069ab0a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0042e8685), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-5h4rp", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc001102da0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0069ab080), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0042e862f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-5h4rp", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc001102d80)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0731 01:43:06.151882 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7717" for this suite. @ 07/31/25 01:43:06.157
• [44.692 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 07/31/25 01:43:06.166
  I0731 01:43:06.166057 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 01:43:06.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:43:06.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:43:06.192
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 07/31/25 01:43:06.195
  STEP: Awaiting for the job to fail as there are failed indexes @ 07/31/25 01:43:06.205
  E0731 01:43:06.653807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:07.654304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:08.655258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:09.655590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:10.656015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:11.656444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:12.657281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:13.657697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:14.658624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:15.658971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:16.659226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:17.659393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:18.659504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:19.659724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:20.660159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:21.660391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:22.660429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:23.660547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:24.661137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:25.661641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:26.662251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:27.662934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:28.662805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:29.663733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 07/31/25 01:43:30.277
  I0731 01:43:30.281336 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5751" for this suite. @ 07/31/25 01:43:30.287
• [24.138 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 07/31/25 01:43:30.305
  I0731 01:43:30.305345 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 01:43:30.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:43:30.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:43:30.333
  STEP: creating Agnhost RC @ 07/31/25 01:43:30.336
  I0731 01:43:30.336511 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8803 create -f -'
  I0731 01:43:30.470098 24 builder.go:146] stderr: ""
  I0731 01:43:30.470148 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/31/25 01:43:30.47
  E0731 01:43:30.664549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:43:31.478442 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0731 01:43:31.478487 24 framework.go:733] Found 0 / 1
  E0731 01:43:31.664617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:43:32.474952 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0731 01:43:32.474996 24 framework.go:733] Found 1 / 1
  I0731 01:43:32.475014 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/31/25 01:43:32.475
  I0731 01:43:32.478073 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0731 01:43:32.478120 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0731 01:43:32.478170 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-8803 patch pod agnhost-primary-rtxnc -p {"metadata":{"annotations":{"x":"y"}}}'
  I0731 01:43:32.547496 24 builder.go:146] stderr: ""
  I0731 01:43:32.547546 24 builder.go:147] stdout: "pod/agnhost-primary-rtxnc patched\n"
  STEP: checking annotations @ 07/31/25 01:43:32.547
  I0731 01:43:32.551476 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0731 01:43:32.551512 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0731 01:43:32.551900 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8803" for this suite. @ 07/31/25 01:43:32.556
• [2.259 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 07/31/25 01:43:32.563
  I0731 01:43:32.563784 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 01:43:32.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:43:32.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:43:32.586
  STEP: Setting up server cert @ 07/31/25 01:43:32.611
  E0731 01:43:32.665272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 01:43:33.037
  STEP: Deploying the webhook pod @ 07/31/25 01:43:33.045
  STEP: Wait for the deployment to be ready @ 07/31/25 01:43:33.067
  I0731 01:43:33.080523 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 01:43:33.665670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:34.665880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 01:43:35.094
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 01:43:35.118
  E0731 01:43:35.666479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:43:36.119059 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/31/25 01:43:36.123
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/31/25 01:43:36.125
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/31/25 01:43:36.125
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/31/25 01:43:36.125
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/31/25 01:43:36.126
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/31/25 01:43:36.126
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/31/25 01:43:36.127
  I0731 01:43:36.207530 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6847" for this suite. @ 07/31/25 01:43:36.217
  STEP: Destroying namespace "webhook-markers-2835" for this suite. @ 07/31/25 01:43:36.23
• [3.680 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/31/25 01:43:36.245
  I0731 01:43:36.245814 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pod-network-test @ 07/31/25 01:43:36.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:43:36.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:43:36.271
  STEP: Performing setup for networking test in namespace pod-network-test-9660 @ 07/31/25 01:43:36.274
  STEP: creating a selector @ 07/31/25 01:43:36.274
  STEP: Creating the service pods in kubernetes @ 07/31/25 01:43:36.274
  I0731 01:43:36.274969 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0731 01:43:36.667118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:37.668115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:38.668450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:39.668716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:40.669343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:41.669599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:42.670286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:43.670490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:44.671458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:45.671824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:46.672017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:47.672456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:48.673204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:49.673465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/31/25 01:43:50.424
  E0731 01:43:50.674348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:51.674620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:43:52.444014 24 utils.go:802] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0731 01:43:52.444061 24 networking.go:42] Breadth first check of 10.233.65.200 on host 172.20.30.203...
  I0731 01:43:52.447581 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.176:9080/dial?request=hostname&protocol=http&host=10.233.65.200&port=8083&tries=1'] Namespace:pod-network-test-9660 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:43:52.447623 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:43:52.447669 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9660/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.176%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.200%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0731 01:43:52.520547 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:43:52.520703 24 utils.go:355] Waiting for responses: map[]
  I0731 01:43:52.520716 24 utils.go:359] reached 10.233.65.200 after 0/1 tries
  I0731 01:43:52.520727 24 networking.go:42] Breadth first check of 10.233.66.216 on host 172.20.30.236...
  I0731 01:43:52.524720 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.176:9080/dial?request=hostname&protocol=http&host=10.233.66.216&port=8083&tries=1'] Namespace:pod-network-test-9660 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:43:52.524755 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:43:52.524815 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9660/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.176%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.216%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0731 01:43:52.588534 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:43:52.588627 24 utils.go:355] Waiting for responses: map[]
  I0731 01:43:52.588640 24 utils.go:359] reached 10.233.66.216 after 0/1 tries
  I0731 01:43:52.588652 24 networking.go:42] Breadth first check of 10.233.67.222 on host 172.20.30.154...
  I0731 01:43:52.598342 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.176:9080/dial?request=hostname&protocol=http&host=10.233.67.222&port=8083&tries=1'] Namespace:pod-network-test-9660 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:43:52.598393 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:43:52.598471 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9660/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.176%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.67.222%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0731 01:43:52.654795 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:43:52.654881 24 utils.go:355] Waiting for responses: map[]
  I0731 01:43:52.654905 24 utils.go:359] reached 10.233.67.222 after 0/1 tries
  I0731 01:43:52.654923 24 networking.go:42] Breadth first check of 10.233.68.215 on host 172.20.30.200...
  I0731 01:43:52.658962 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.176:9080/dial?request=hostname&protocol=http&host=10.233.68.215&port=8083&tries=1'] Namespace:pod-network-test-9660 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:43:52.659070 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:43:52.659155 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9660/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.176%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.68.215%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  E0731 01:43:52.674779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:43:52.714953 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:43:52.715210 24 utils.go:355] Waiting for responses: map[]
  I0731 01:43:52.715251 24 utils.go:359] reached 10.233.68.215 after 0/1 tries
  I0731 01:43:52.715322 24 networking.go:53] Going to retry 0 out of 4 pods....
  I0731 01:43:52.715547 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9660" for this suite. @ 07/31/25 01:43:52.722
• [16.486 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 07/31/25 01:43:52.732
  I0731 01:43:52.732554 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename security-context-test @ 07/31/25 01:43:52.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:43:52.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:43:52.759
  E0731 01:43:53.675316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:54.675499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:55.675670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:56.676443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:43:56.786134 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7538" for this suite. @ 07/31/25 01:43:56.791
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 07/31/25 01:43:56.802
  I0731 01:43:56.802735 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 01:43:56.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:43:56.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:43:56.829
  STEP: Creating configMap with name projected-configmap-test-volume-acf802c6-fbf7-4ac9-b233-490aa52c1806 @ 07/31/25 01:43:56.832
  STEP: Creating a pod to test consume configMaps @ 07/31/25 01:43:56.838
  E0731 01:43:57.677148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:58.678229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:43:59.678614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:00.678993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:44:00.868
  I0731 01:44:00.871929 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-projected-configmaps-c6dbfd9c-80c9-4cec-a7f5-bcd046c41f9c container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 01:44:00.883
  I0731 01:44:00.906489 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3992" for this suite. @ 07/31/25 01:44:00.911
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/31/25 01:44:00.921
  I0731 01:44:00.921378 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename events @ 07/31/25 01:44:00.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:44:00.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:44:00.942
  STEP: creating a test event @ 07/31/25 01:44:00.944
  STEP: listing all events in all namespaces @ 07/31/25 01:44:00.95
  STEP: patching the test event @ 07/31/25 01:44:00.961
  STEP: fetching the test event @ 07/31/25 01:44:00.981
  STEP: updating the test event @ 07/31/25 01:44:00.984
  STEP: getting the test event @ 07/31/25 01:44:00.994
  STEP: deleting the test event @ 07/31/25 01:44:00.997
  STEP: listing all events in all namespaces @ 07/31/25 01:44:01.004
  I0731 01:44:01.013122 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6508" for this suite. @ 07/31/25 01:44:01.017
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 07/31/25 01:44:01.027
  I0731 01:44:01.027980 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 01:44:01.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:44:01.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:44:01.051
  STEP: Setting up server cert @ 07/31/25 01:44:01.078
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 01:44:01.627
  STEP: Deploying the webhook pod @ 07/31/25 01:44:01.639
  STEP: Wait for the deployment to be ready @ 07/31/25 01:44:01.661
  I0731 01:44:01.672500 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 01:44:01.679660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:02.679947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:03.680295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 01:44:03.685
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 01:44:03.713
  E0731 01:44:04.680357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:04.714404 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/31/25 01:44:04.719
  STEP: create a configmap that should be updated by the webhook @ 07/31/25 01:44:04.738
  I0731 01:44:04.856335 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8458" for this suite. @ 07/31/25 01:44:04.864
  STEP: Destroying namespace "webhook-markers-4498" for this suite. @ 07/31/25 01:44:04.875
• [3.868 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/31/25 01:44:04.897
  I0731 01:44:04.897208 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/31/25 01:44:04.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:44:04.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:44:04.926
  I0731 01:44:04.930117 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 01:44:05.680812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:06.681568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:07.681765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:08.681889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:09.682717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:10.487482 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3693" for this suite. @ 07/31/25 01:44:10.499
• [5.615 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/31/25 01:44:10.512
  I0731 01:44:10.512299 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename deployment @ 07/31/25 01:44:10.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:44:10.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:44:10.553
  I0731 01:44:10.569231 24 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  E0731 01:44:10.683582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:11.683928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:12.684045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:13.684437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:14.684713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:15.573987 24 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/31/25 01:44:15.574
  I0731 01:44:15.574136 24 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0731 01:44:15.685215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:16.686259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:17.579602 24 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0731 01:44:17.593632 24 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0731 01:44:17.686754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:18.687046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:19.601549 24 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0731 01:44:19.609342 24 deployment.go:962] Ensure that both replica sets have 1 created replica
  E0731 01:44:19.687357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:19.710431 24 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0731 01:44:19.731401 24 deployment.go:314] Updating deployment test-rollover-deployment
  I0731 01:44:19.731469 24 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0731 01:44:20.687547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:21.687941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:21.738770 24 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0731 01:44:21.745900 24 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0731 01:44:21.752115 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0731 01:44:21.752221 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 44, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0731 01:44:22.688786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:23.689170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:23.762775 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0731 01:44:23.762851 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 44, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0731 01:44:24.689876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:25.690472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:25.764083 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0731 01:44:25.764303 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 44, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0731 01:44:26.690711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:27.691069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:27.762496 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0731 01:44:27.762580 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 44, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0731 01:44:28.691293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:29.691818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:29.763417 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0731 01:44:29.763599 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 44, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 44, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0731 01:44:30.691985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:31.692362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:31.761259 24 deployment.go:95] 
  I0731 01:44:31.761333 24 deployment.go:993] Ensure that both old replica sets have no replicas
  I0731 01:44:31.771106 24 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7390",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "992efb49-2120-4089-80d6-f49a4345ebb0",
      ResourceVersion: (string) (len=6) "878411",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889523057,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523057,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523057,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523057,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0731 01:44:31.775993 24 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7390",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba55db31-6903-4ec7-808d-2a5fd650805f",
      ResourceVersion: (string) (len=6) "878400",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889523059,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "992efb49-2120-4089-80d6-f49a4345ebb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 39 32 65 66 62  34 39 2d 32 31 32 30 2d  |\"992efb49-2120-|
              00000120  34 30 38 39 2d 38 30 64  36 2d 66 34 39 61 34 33  |4089-80d6-f49a43|
              00000130  34 35 65 62 62 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |45ebb0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0731 01:44:31.787882 24 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0731 01:44:31.788317 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7390",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3785d142-544a-4ea2-b08f-ea7b982cd078",
      ResourceVersion: (string) (len=6) "878409",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889523050,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "992efb49-2120-4089-80d6-f49a4345ebb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523050,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 39 32 65 66 62 34 39  2d 32 31 32 30 2d 34 30  |992efb49-2120-40|
              000000c0  38 39 2d 38 30 64 36 2d  66 34 39 61 34 33 34 35  |89-80d6-f49a4345|
              000000d0  65 62 62 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |ebb0\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0731 01:44:31.791828 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7390",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6998bd1b-055a-45fc-b86b-e5cb74fe4f98",
      ResourceVersion: (string) (len=6) "878330",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889523057,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "992efb49-2120-4089-80d6-f49a4345ebb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 39 32 65 66 62  34 39 2d 32 31 32 30 2d  |\"992efb49-2120-|
              00000120  34 30 38 39 2d 38 30 64  36 2d 66 34 39 61 34 33  |4089-80d6-f49a43|
              00000130  34 35 65 62 62 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |45ebb0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0731 01:44:31.798362 24 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-bxkv7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-bxkv7",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-7390",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1bbd225-0515-4156-a96d-b7c04cf5646e",
      ResourceVersion: (string) (len=6) "878347",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889523059,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "ba55db31-6903-4ec7-808d-2a5fd650805f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  35 35 64 62 33 31 2d 36  |d\":\"ba55db31-6|
              00000090  39 30 33 2d 34 65 63 37  2d 38 30 38 64 2d 32 61  |903-4ec7-808d-2a|
              000000a0  35 66 64 36 35 30 38 30  35 66 5c 22 7d 22 3a 7b  |5fd650805f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  36 36 5c 22 7d 22 3a 7b  |.233.65.66\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m89kw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m89kw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) (len=12) "10.233.65.66",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.66"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889523059,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889523060,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://9e700f497e1ae6a7d2fa794d7eadfa11126321498194909f06b3d0a1d03e26b8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m89kw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 01:44:31.799545 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7390" for this suite. @ 07/31/25 01:44:31.805
• [21.303 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 07/31/25 01:44:31.816
  I0731 01:44:31.816217 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 01:44:31.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:44:31.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:44:31.841
  STEP: Creating configMap with name projected-configmap-test-volume-650511a6-81bc-4f34-acb0-1455fbad4e58 @ 07/31/25 01:44:31.844
  STEP: Creating a pod to test consume configMaps @ 07/31/25 01:44:31.854
  E0731 01:44:32.692450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:33.692742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:34.693748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:35.694193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:44:35.886
  I0731 01:44:35.889514 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-projected-configmaps-358ab747-6428-4007-86f7-438d45fd26cc container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 01:44:35.895
  I0731 01:44:35.917081 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4370" for this suite. @ 07/31/25 01:44:35.922
• [4.117 seconds]
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 07/31/25 01:44:35.934
  I0731 01:44:35.934151 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename replication-controller @ 07/31/25 01:44:35.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:44:35.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:44:35.956
  STEP: Given a ReplicationController is created @ 07/31/25 01:44:35.959
  STEP: When the matched label of one of its pods change @ 07/31/25 01:44:35.971
  I0731 01:44:35.975606 24 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  E0731 01:44:36.694039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:37.694419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:38.694616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:39.694850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:40.695038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:40.982898 24 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/31/25 01:44:41
  E0731 01:44:41.695128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:44:42.013024 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7242" for this suite. @ 07/31/25 01:44:42.018
• [6.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/31/25 01:44:42.027
  I0731 01:44:42.027989 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename discovery @ 07/31/25 01:44:42.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:44:42.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:44:42.049
  STEP: Setting up server cert @ 07/31/25 01:44:42.053
  I0731 01:44:42.509379 24 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0731 01:44:42.510405 24 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0731 01:44:42.510621 24 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0731 01:44:42.510638 24 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0731 01:44:42.510651 24 discovery.go:139] Checking APIGroup: apps
  I0731 01:44:42.511595 24 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0731 01:44:42.511621 24 discovery.go:148] Versions found [{apps/v1 v1}]
  I0731 01:44:42.511628 24 discovery.go:154] apps/v1 matches apps/v1
  I0731 01:44:42.511705 24 discovery.go:139] Checking APIGroup: events.k8s.io
  I0731 01:44:42.514094 24 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0731 01:44:42.514165 24 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0731 01:44:42.514175 24 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0731 01:44:42.514183 24 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0731 01:44:42.515104 24 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0731 01:44:42.515136 24 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0731 01:44:42.515142 24 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0731 01:44:42.515148 24 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0731 01:44:42.516078 24 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0731 01:44:42.516118 24 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0731 01:44:42.516127 24 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0731 01:44:42.516133 24 discovery.go:139] Checking APIGroup: autoscaling
  I0731 01:44:42.517056 24 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0731 01:44:42.517091 24 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0731 01:44:42.517099 24 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0731 01:44:42.517107 24 discovery.go:139] Checking APIGroup: batch
  I0731 01:44:42.518026 24 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0731 01:44:42.518045 24 discovery.go:148] Versions found [{batch/v1 v1}]
  I0731 01:44:42.518059 24 discovery.go:154] batch/v1 matches batch/v1
  I0731 01:44:42.518112 24 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0731 01:44:42.518984 24 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0731 01:44:42.519004 24 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0731 01:44:42.519013 24 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0731 01:44:42.519019 24 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0731 01:44:42.520086 24 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0731 01:44:42.520102 24 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0731 01:44:42.520110 24 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0731 01:44:42.520162 24 discovery.go:139] Checking APIGroup: policy
  I0731 01:44:42.521181 24 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0731 01:44:42.521233 24 discovery.go:148] Versions found [{policy/v1 v1}]
  I0731 01:44:42.521241 24 discovery.go:154] policy/v1 matches policy/v1
  I0731 01:44:42.521248 24 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0731 01:44:42.522081 24 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0731 01:44:42.522116 24 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0731 01:44:42.522124 24 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0731 01:44:42.522129 24 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0731 01:44:42.523631 24 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0731 01:44:42.523656 24 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0731 01:44:42.523662 24 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0731 01:44:42.523668 24 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0731 01:44:42.524475 24 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0731 01:44:42.524510 24 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0731 01:44:42.524518 24 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0731 01:44:42.524525 24 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0731 01:44:42.526017 24 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0731 01:44:42.526042 24 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0731 01:44:42.526048 24 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0731 01:44:42.526054 24 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0731 01:44:42.526924 24 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0731 01:44:42.526944 24 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0731 01:44:42.526949 24 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0731 01:44:42.526955 24 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0731 01:44:42.527658 24 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0731 01:44:42.527681 24 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0731 01:44:42.527686 24 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0731 01:44:42.527691 24 discovery.go:139] Checking APIGroup: node.k8s.io
  I0731 01:44:42.528448 24 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0731 01:44:42.528465 24 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0731 01:44:42.528471 24 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0731 01:44:42.528478 24 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0731 01:44:42.529095 24 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0731 01:44:42.529122 24 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0731 01:44:42.529127 24 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0731 01:44:42.529133 24 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0731 01:44:42.529810 24 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0731 01:44:42.529839 24 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0731 01:44:42.529845 24 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0731 01:44:42.529853 24 discovery.go:139] Checking APIGroup: networking.istio.io
  I0731 01:44:42.530489 24 discovery.go:147] PreferredVersion.GroupVersion: networking.istio.io/v1
  I0731 01:44:42.530503 24 discovery.go:148] Versions found [{networking.istio.io/v1 v1} {networking.istio.io/v1beta1 v1beta1} {networking.istio.io/v1alpha3 v1alpha3}]
  I0731 01:44:42.530508 24 discovery.go:154] networking.istio.io/v1 matches networking.istio.io/v1
  I0731 01:44:42.530513 24 discovery.go:139] Checking APIGroup: security.istio.io
  I0731 01:44:42.531614 24 discovery.go:147] PreferredVersion.GroupVersion: security.istio.io/v1
  I0731 01:44:42.531642 24 discovery.go:148] Versions found [{security.istio.io/v1 v1} {security.istio.io/v1beta1 v1beta1}]
  I0731 01:44:42.531672 24 discovery.go:154] security.istio.io/v1 matches security.istio.io/v1
  I0731 01:44:42.531685 24 discovery.go:139] Checking APIGroup: telemetry.istio.io
  I0731 01:44:42.532580 24 discovery.go:147] PreferredVersion.GroupVersion: telemetry.istio.io/v1
  I0731 01:44:42.532611 24 discovery.go:148] Versions found [{telemetry.istio.io/v1 v1} {telemetry.istio.io/v1alpha1 v1alpha1}]
  I0731 01:44:42.532617 24 discovery.go:154] telemetry.istio.io/v1 matches telemetry.istio.io/v1
  I0731 01:44:42.532622 24 discovery.go:139] Checking APIGroup: extensions.istio.io
  I0731 01:44:42.533336 24 discovery.go:147] PreferredVersion.GroupVersion: extensions.istio.io/v1alpha1
  I0731 01:44:42.533357 24 discovery.go:148] Versions found [{extensions.istio.io/v1alpha1 v1alpha1}]
  I0731 01:44:42.533365 24 discovery.go:154] extensions.istio.io/v1alpha1 matches extensions.istio.io/v1alpha1
  I0731 01:44:42.533377 24 discovery.go:139] Checking APIGroup: kafka.strimzi.io
  I0731 01:44:42.534093 24 discovery.go:147] PreferredVersion.GroupVersion: kafka.strimzi.io/v1beta2
  I0731 01:44:42.534136 24 discovery.go:148] Versions found [{kafka.strimzi.io/v1beta2 v1beta2} {kafka.strimzi.io/v1beta1 v1beta1} {kafka.strimzi.io/v1alpha1 v1alpha1}]
  I0731 01:44:42.534146 24 discovery.go:154] kafka.strimzi.io/v1beta2 matches kafka.strimzi.io/v1beta2
  I0731 01:44:42.534151 24 discovery.go:139] Checking APIGroup: core.strimzi.io
  I0731 01:44:42.534863 24 discovery.go:147] PreferredVersion.GroupVersion: core.strimzi.io/v1beta2
  I0731 01:44:42.534888 24 discovery.go:148] Versions found [{core.strimzi.io/v1beta2 v1beta2}]
  I0731 01:44:42.534908 24 discovery.go:154] core.strimzi.io/v1beta2 matches core.strimzi.io/v1beta2
  I0731 01:44:42.534914 24 discovery.go:139] Checking APIGroup: cilium.io
  I0731 01:44:42.535727 24 discovery.go:147] PreferredVersion.GroupVersion: cilium.io/v2
  I0731 01:44:42.535761 24 discovery.go:148] Versions found [{cilium.io/v2 v2} {cilium.io/v2alpha1 v2alpha1}]
  I0731 01:44:42.535767 24 discovery.go:154] cilium.io/v2 matches cilium.io/v2
  I0731 01:44:42.535918 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1081" for this suite. @ 07/31/25 01:44:42.541
• [0.524 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 07/31/25 01:44:42.552
  I0731 01:44:42.552071 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/31/25 01:44:42.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:44:42.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:44:42.575
  I0731 01:44:42.582809 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8512" for this suite. @ 07/31/25 01:44:42.642
• [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 07/31/25 01:44:42.652
  I0731 01:44:42.652985 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/31/25 01:44:42.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:44:42.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:44:42.678
  I0731 01:44:42.684833 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0731 01:44:42.695431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "aggregateddiscovery-8772" for this suite. @ 07/31/25 01:44:42.744
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 07/31/25 01:44:42.754
  I0731 01:44:42.754876 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename cronjob @ 07/31/25 01:44:42.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:44:42.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:44:42.778
  STEP: Creating a suspended cronjob @ 07/31/25 01:44:42.781
  STEP: Ensuring no jobs are scheduled @ 07/31/25 01:44:42.789
  E0731 01:44:43.695815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:44.696690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:45.696673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:46.697020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:47.697310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:48.697666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:49.698717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:50.699144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:51.700050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:52.700504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:53.701427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:54.702296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:55.703288      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:56.703984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:57.704017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:58.704392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:44:59.705181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:00.705764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:01.706441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:02.706758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:03.706916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:04.707256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:05.707685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:06.708104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:07.708255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:08.708383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:09.708495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:10.708687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:11.709185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:12.709311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:13.709497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:14.710189      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:15.710583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:16.710894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:17.711848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:18.712143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:19.712316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:20.712446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:21.712624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:22.712946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:23.713214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:24.713728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:25.714516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:26.714647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:27.715031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:28.715152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:29.716313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:30.716425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:31.717477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:32.717612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:33.718615      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:34.718877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:35.718940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:36.719230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:37.719351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:38.719740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:39.720214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:40.720556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:41.720725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:42.721184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:43.722026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:44.722356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:45.723051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:46.723878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:47.724852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:48.725238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:49.725839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:50.726247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:51.726412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:52.726598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:53.726875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:54.727952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:55.728263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:56.728512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:57.728602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:58.728715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:45:59.729741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:00.730144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:01.730193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:02.730436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:03.730774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:04.731976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:05.732480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:06.732586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:07.732808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:08.732941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:09.733911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:10.734030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:11.734809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:12.734980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:13.735487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:14.736344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:15.737204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:16.737383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:17.738343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:18.738457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:19.738991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:20.739305      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:21.739427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:22.739688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:23.740068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:24.740746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:25.741368      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:26.741753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:27.741860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:28.742281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:29.742553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:30.743056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:31.743797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:32.743882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:33.744438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:34.744707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:35.745235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:36.745813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:37.746125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:38.746294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:39.746629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:40.746917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:41.747917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:42.748095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:43.748478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:44.749087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:45.749218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:46.749479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:47.750132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:48.750810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:49.750889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:50.751242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:51.752014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:52.752313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:53.753264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:54.754152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:55.754177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:56.754417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:57.754750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:58.755058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:46:59.755116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:00.755469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:01.755558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:02.756421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:03.756905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:04.757038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:05.757606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:06.757848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:07.758209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:08.758494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:09.758918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:10.759251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:11.760210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:12.760476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:13.760595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:14.760858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:15.761944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:16.762284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:17.762571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:18.762868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:19.763476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:20.764093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:21.764280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:22.764536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:23.764754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:24.764884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:25.765442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:26.765678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:27.766424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:28.766708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:29.767330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:30.767570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:31.767666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:32.767916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:33.767963      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:34.768150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:35.768448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:36.769370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:37.769396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:38.769654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:39.770322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:40.770566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:41.771391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:42.771666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:43.772396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:44.772769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:45.772847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:46.773109      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:47.773344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:48.773495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:49.773717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:50.773886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:51.774024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:52.774309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:53.774464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:54.774743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:55.774865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:56.775249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:57.776025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:58.776278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:47:59.777060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:00.777389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:01.777497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:02.777774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:03.778179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:04.778303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:05.779352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:06.779648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:07.780789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:08.781208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:09.781466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:10.781586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:11.782324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:12.782565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:13.782752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:14.783378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:15.784030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:16.784339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:17.784530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:18.784904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:19.785473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:20.785627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:21.786434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:22.786598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:23.786806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:24.787229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:25.787371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:26.787866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:27.788681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:28.789049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:29.789967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:30.790264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:31.790635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:32.791066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:33.791300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:34.791460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:35.792491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:36.792763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:37.792904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:38.793207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:39.794194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:40.794487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:41.795482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:42.795575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:43.795742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:44.796728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:45.796918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:46.797201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:47.798126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:48.798239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:49.798851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:50.799126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:51.799317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:52.800247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:53.800884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:54.801785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:55.802791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:56.803176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:57.803421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:58.803643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:48:59.804465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:00.804905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:01.805252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:02.805734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:03.806740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:04.807822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:05.807920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:06.808169      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:07.809000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:08.809157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:09.809896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:10.810173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:11.810837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:12.810960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:13.811930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:14.812104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:15.813060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:16.813227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:17.813925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:18.814197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:19.814900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:20.815219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:21.815476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:22.815606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:23.816807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:24.816994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:25.818035      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:26.818263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:27.818973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:28.819001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:29.819135      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:30.819497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:31.820479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:32.821156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:33.821693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:34.821918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:35.823019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:36.823450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:37.824122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:38.824760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:39.824894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:40.825540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:41.825959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/31/25 01:49:42.79
  STEP: Removing cronjob @ 07/31/25 01:49:42.795
  I0731 01:49:42.805780 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-604" for this suite. @ 07/31/25 01:49:42.812
• [300.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/31/25 01:49:42.822
  I0731 01:49:42.822708 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename secrets @ 07/31/25 01:49:42.825
  E0731 01:49:42.826507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:49:42.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:49:42.851
  STEP: Creating secret with name secret-test-994f29a3-510e-4622-9869-615d8bddb23d @ 07/31/25 01:49:42.88
  STEP: Creating a pod to test consume secrets @ 07/31/25 01:49:42.895
  E0731 01:49:43.826576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:44.827402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:45.827848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:46.828141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:49:46.926
  I0731 01:49:46.929779 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-secrets-924e8ce1-3780-41e4-984c-21444e513a23 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 01:49:46.947
  I0731 01:49:46.981793 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2947" for this suite. @ 07/31/25 01:49:46.987
  STEP: Destroying namespace "secret-namespace-7915" for this suite. @ 07/31/25 01:49:46.998
• [4.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/31/25 01:49:47.022
  I0731 01:49:47.022637 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename crd-watch @ 07/31/25 01:49:47.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:49:47.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:49:47.049
  I0731 01:49:47.052998 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 01:49:47.828835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:48.829296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:49.829566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:50.830674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:51.830827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:52.830949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:53.831144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 07/31/25 01:49:54.601
  I0731 01:49:54.610239 24 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-31T01:49:54Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-31T01:49:54Z]] name:name1 resourceVersion:880370 uid:25512c13-51a9-40f9-9323-ae31459ee1f6] num:map[num1:9223372036854775807 num2:1000000]]}
  E0731 01:49:54.831328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:55.831452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:56.831549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:57.831706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:58.831949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:49:59.832904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:00.832899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:01.833023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:02.833355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:03.833722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 07/31/25 01:50:04.61
  I0731 01:50:04.620881 24 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-31T01:50:04Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-31T01:50:04Z]] name:name2 resourceVersion:880499 uid:0afb1f70-aa97-4df3-ac35-89c9f8220d2b] num:map[num1:9223372036854775807 num2:1000000]]}
  E0731 01:50:04.833887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:05.834209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:06.834391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:07.834672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:08.834823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:09.834884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:10.835360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:11.837584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:12.838603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:13.839084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 07/31/25 01:50:14.622
  I0731 01:50:14.633516 24 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-31T01:49:54Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-31T01:50:14Z]] name:name1 resourceVersion:880562 uid:25512c13-51a9-40f9-9323-ae31459ee1f6] num:map[num1:9223372036854775807 num2:1000000]]}
  E0731 01:50:14.839719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:15.839902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:16.839987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:17.840171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:18.840400      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:19.840933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:20.841075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:21.841183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:22.841294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:23.841479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 07/31/25 01:50:24.634
  I0731 01:50:24.644435 24 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-31T01:50:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-31T01:50:24Z]] name:name2 resourceVersion:880613 uid:0afb1f70-aa97-4df3-ac35-89c9f8220d2b] num:map[num1:9223372036854775807 num2:1000000]]}
  E0731 01:50:24.841720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:25.842263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:26.842602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:27.842980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:28.843198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:29.843287      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:30.843671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:31.843716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:32.844212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:33.844331      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 07/31/25 01:50:34.644
  I0731 01:50:34.657103 24 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-31T01:49:54Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-31T01:50:14Z]] name:name1 resourceVersion:880664 uid:25512c13-51a9-40f9-9323-ae31459ee1f6] num:map[num1:9223372036854775807 num2:1000000]]}
  E0731 01:50:34.844583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:35.845259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:36.845314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:37.845510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:38.845943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:39.846954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:40.847271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:41.847802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:42.848144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:43.848300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 07/31/25 01:50:44.657
  I0731 01:50:44.667945 24 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-31T01:50:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-31T01:50:24Z]] name:name2 resourceVersion:880717 uid:0afb1f70-aa97-4df3-ac35-89c9f8220d2b] num:map[num1:9223372036854775807 num2:1000000]]}
  E0731 01:50:44.849225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:45.849604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:46.850208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:47.850599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:48.851128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:49.851351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:50.851778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:51.852152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:52.852520      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:53.852873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:54.853558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:50:55.184064 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-5254" for this suite. @ 07/31/25 01:50:55.19
• [68.177 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 07/31/25 01:50:55.199
  I0731 01:50:55.199782 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/31/25 01:50:55.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:50:55.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:50:55.227
  STEP: creating the policy @ 07/31/25 01:50:55.242
  STEP: waiting until the marker is denied @ 07/31/25 01:50:55.262
  STEP: testing a replicated Deployment to be allowed @ 07/31/25 01:50:55.676
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/31/25 01:50:55.712
  I0731 01:50:55.800033 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0731 01:50:55.854503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "validating-admission-policy-9944" for this suite. @ 07/31/25 01:50:55.907
• [0.717 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/31/25 01:50:55.917
  I0731 01:50:55.917279 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-runtime @ 07/31/25 01:50:55.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:50:55.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:50:55.94
  STEP: create the container @ 07/31/25 01:50:55.943
  I0731 01:50:55.955948      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/31/25 01:50:55.956
  E0731 01:50:56.855002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:57.855114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:50:58.855599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/31/25 01:50:58.978
  STEP: the container should be terminated @ 07/31/25 01:50:58.982
  STEP: the termination message should be set @ 07/31/25 01:50:58.982
  I0731 01:50:58.983036 24 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/31/25 01:50:58.983
  I0731 01:50:59.005854 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2144" for this suite. @ 07/31/25 01:50:59.012
• [3.104 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/31/25 01:50:59.023
  I0731 01:50:59.024078 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename podtemplate @ 07/31/25 01:50:59.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:50:59.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:50:59.05
  I0731 01:50:59.158818 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-443" for this suite. @ 07/31/25 01:50:59.164
• [0.151 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 07/31/25 01:50:59.174
  I0731 01:50:59.174719 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-probe @ 07/31/25 01:50:59.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:50:59.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:50:59.195
  STEP: Creating pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565 @ 07/31/25 01:50:59.2
  E0731 01:50:59.855806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:00.856118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/31/25 01:51:01.218
  I0731 01:51:01.222092 24 container_probe.go:1748] Initial restart count of pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 is 0
  I0731 01:51:01.225107 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:01.856768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:02.857008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:03.229860 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:03.857107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:04.857329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:05.235565 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:05.857404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:06.857724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:07.240838 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:07.858558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:08.858967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:09.245370 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:09.859954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:10.860558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:11.255467 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:11.861125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:12.861585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:13.262323 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:13.861923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:14.862176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:15.267258 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:15.862921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:16.863290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:17.273843 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:17.863322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:18.863771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:19.279344 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:19.864042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:20.864146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:21.284772 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  I0731 01:51:21.284845 24 container_probe.go:1762] Restart count of pod container-probe-2565/liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 is now 1 (20.062696019s elapsed)
  E0731 01:51:21.864301      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:22.864731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:23.289559 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:23.865131      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:24.865203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:25.296891 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:25.865290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:26.865693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:27.303564 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:27.866059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:28.866191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:29.308996 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:29.866854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:30.866913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:31.315075 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:31.867652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:32.867961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:33.320011 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:33.868540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:34.868713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:35.326508 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:35.868968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:36.869157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:37.332496 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:37.869951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:38.870144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:39.338098 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:39.870793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:40.870970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:41.343288 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  I0731 01:51:41.343353 24 container_probe.go:1762] Restart count of pod container-probe-2565/liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 is now 2 (40.121215514s elapsed)
  E0731 01:51:41.871885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:42.872156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:43.347548 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:43.872180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:44.872916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:45.352936 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:45.873484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:46.873649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:47.359040 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:47.873636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:48.873882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:49.367280 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:49.873954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:50.874250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:51.372059 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:51.874458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:52.874706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:53.377293 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:53.874769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:54.875139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:55.385168 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:55.875219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:56.875767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:57.391156 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:57.876747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:51:58.877168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:51:59.396070 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:51:59.878033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:00.878472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:01.401846 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  I0731 01:52:01.401923 24 container_probe.go:1762] Restart count of pod container-probe-2565/liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 is now 3 (1m0.179777942s elapsed)
  E0731 01:52:01.879605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:02.880203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:03.406364 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:03.881175      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:04.881194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:05.411155 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:05.881400      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:06.881867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:07.416177 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:07.882761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:08.883164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:09.423258 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:09.883945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:10.884370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:11.428429 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:11.884829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:12.885042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:13.434085 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:13.885346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:14.885475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:15.440706 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:15.886292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:16.886548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:17.449266 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:17.886561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:18.886990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:19.454805 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:19.887437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:20.887751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:21.459612 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  I0731 01:52:21.459658 24 container_probe.go:1762] Restart count of pod container-probe-2565/liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 is now 4 (1m20.237523507s elapsed)
  E0731 01:52:21.888095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:22.888469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:23.464617 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:23.889137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:24.889342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:25.470300 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:25.889947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:26.890301      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:27.476598 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:27.891037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:28.891895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:29.483204 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:29.891698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:30.892013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:31.488689 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:31.893078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:32.893359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:33.494392 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:33.893810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:34.894138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:35.500579 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:35.895145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:36.895657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:37.505564 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:37.895981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:38.896450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:39.510600 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:39.897251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:40.898326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:41.516588 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:41.898854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:42.899141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:43.522584 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:43.901110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:44.900854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:45.529753 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:45.901066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:46.901376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:47.535448 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:47.901822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:48.902224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:49.540446 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:49.902934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:50.903019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:51.546322 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:51.903835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:52.904173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:53.552187 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:53.904590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:54.904757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:55.558837 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:55.905204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:56.905411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:57.564489 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:57.905630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:52:58.905772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:52:59.570802 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:52:59.906454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:00.906878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:01.576341 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:01.907801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:02.908198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:03.582577 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:03.909037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:04.909194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:05.588643 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:05.909899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:06.910109      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:07.594632 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:07.911085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:08.911571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:09.600812 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:09.912255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:10.912702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:11.607104 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:11.913389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:12.913995      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:13.613317 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:13.914618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:14.914695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:15.619492 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:15.914787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:16.915153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:17.624293 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:17.915708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:18.916041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:19.629041 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:19.916296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:20.916723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:21.634390 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:21.917654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:22.917996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:23.639993 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:23.918284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:24.918864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:25.646104 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:25.919779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:26.920095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:27.652107 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:27.920724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:28.920992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:29.658764 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  E0731 01:53:29.921073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:30.921538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:31.663704 24 container_probe.go:1758] Get pod liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 in namespace container-probe-2565
  I0731 01:53:31.663789 24 container_probe.go:1762] Restart count of pod container-probe-2565/liveness-358a2b68-a789-4aab-b7d8-6d37be848e70 is now 5 (2m30.44164387s elapsed)
  STEP: deleting the pod @ 07/31/25 01:53:31.664
  I0731 01:53:31.683906 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2565" for this suite. @ 07/31/25 01:53:31.69
• [152.525 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 07/31/25 01:53:31.699
  I0731 01:53:31.699621 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 01:53:31.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:53:31.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:53:31.725
  STEP: Creating a job @ 07/31/25 01:53:31.728
  STEP: Ensuring job reaches completions @ 07/31/25 01:53:31.743
  E0731 01:53:31.922567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:32.922960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:33.923363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:34.923599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:35.924347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:36.924719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:37.925355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:38.925678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:39.926256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:40.927215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:41.778537 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8470" for this suite. @ 07/31/25 01:53:41.784
• [10.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 07/31/25 01:53:41.793
  I0731 01:53:41.793349 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-probe @ 07/31/25 01:53:41.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:53:41.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:53:41.817
  STEP: Creating pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141 @ 07/31/25 01:53:41.82
  E0731 01:53:41.927559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:42.927714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/31/25 01:53:43.841
  I0731 01:53:43.845026 24 container_probe.go:1748] Initial restart count of pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 is 0
  I0731 01:53:43.848978 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:53:43.928191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:44.929022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:45.854287 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:53:45.929521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:46.929680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:47.859968 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:53:47.930169      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:48.930340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:49.864252 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:53:49.930378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:50.930583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:51.868654 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:53:51.930886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:52.931047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:53.873840 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:53:53.932038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:54.932272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:55.878838 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:53:55.933090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:56.933407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:57.883871 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:53:57.934015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:53:58.934340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:53:59.890044 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:53:59.935254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:00.935630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:01.894811 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:01.936048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:02.936361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:03.899260 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:03.937493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:04.937764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:05.904816 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:05.938078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:06.938284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:07.909688 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:07.938866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:08.939186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:09.916700 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:09.939698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:10.939946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:11.923171 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:11.940251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:12.940408      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:13.927556 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:13.940730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:14.940959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:15.932907 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:15.940921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:16.941360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:17.938752 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:17.941752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:18.942020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:19.942246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:19.943747 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:20.942421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:21.943401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:21.949629 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:22.943596      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:23.943880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:23.953898 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:24.944002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:25.944324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:25.963271 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:26.945155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:27.945354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:27.971380 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:28.946329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:29.946819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:29.977223 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:30.947265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:31.947429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:31.982288 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:32.947575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:33.947876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:33.988812 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:34.948970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:35.949320      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:35.994443 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:36.949360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:37.949714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:37.999058 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:38.949856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:39.949980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:40.004998 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:40.950186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:41.950458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:42.009962 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:42.950722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:43.950981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:44.014825 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:44.951966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:45.952230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:46.020786 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:46.952764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:47.953094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:48.024681 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:48.953756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:49.953973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:50.029243 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:50.954196      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:51.954475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:52.034320 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:52.955278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:53.955548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:54.039218 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:54.956434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:55.956697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:56.044138 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:56.957163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:57.957494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:54:58.051576 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:54:58.957540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:54:59.957743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:00.055336 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:00.958296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:01.958554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:02.059736 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:02.958652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:03.958904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:04.063280 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:04.959331      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:05.959601      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:06.069273 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:06.960252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:07.960570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:08.074365 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:08.961258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:09.961498      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:10.079711 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:10.961633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:11.961909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:12.085461 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:12.962586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:13.962835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:14.090515 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:14.963634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:15.963682      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:16.095186 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:16.964315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:17.964370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:18.103032 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:18.965059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:19.965992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:20.113252 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:20.966176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:21.966280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:22.117661 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:22.966454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:23.966929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:24.122785 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:24.967921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:25.968252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:26.128293 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:26.969207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:27.969605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:28.133069 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:28.969930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:29.970136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:30.138103 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:30.971080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:31.971494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:32.143466 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:32.972340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:33.973282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:34.148786 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:34.973692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:35.974044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:36.154654 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:36.974674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:37.975107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:38.159879 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:38.975988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:39.976199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:40.166735 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:40.976549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:41.976859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:42.172473 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:42.977207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:43.977622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:44.178728 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:44.977867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:45.978337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:46.184867 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:46.978633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:47.979018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:48.189623 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:48.979493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:49.980500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:50.196185 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:50.980946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:51.981550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:52.202198 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:52.982031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:53.982621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:54.206008 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:54.983082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:55.983446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:56.212317 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:56.984135      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:57.984447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:55:58.218134 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:55:58.985352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:55:59.985646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:00.224044 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:00.985918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:01.986796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:02.229457 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:02.987723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:03.988115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:04.236099 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:04.989106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:05.989514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:06.241157 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:06.989830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:07.990146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:08.246064 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:08.990239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:09.990444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:10.251431 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:10.990556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:11.991053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:12.256674 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:12.991066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:13.991421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:14.262258 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:14.992069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:15.992458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:16.268680 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:16.993516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:17.993592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:18.273642 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:18.993763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:19.994026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:20.279445 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:20.993978      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:21.994252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:22.286309 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:22.994399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:23.994870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:24.291678 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:24.995777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:25.995863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:26.297438 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:26.996912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:27.997385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:28.303537 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:28.997277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:29.998088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:30.309895 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:30.998954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:31.999222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:32.314666 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:32.999386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:33.999783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:34.320057 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:34.999910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:35.999992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:36.325289 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:37.000974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:38.001158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:38.334995 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:39.001562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:40.002525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:40.339670 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:41.001982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:42.002266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:42.345107 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:43.002742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:44.002863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:44.350636 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:45.003762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:46.004046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:46.356689 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:47.004434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:48.004725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:48.361288 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:49.005120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:50.005300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:50.366381 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:51.006009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:52.006420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:52.371205 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:53.006864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:54.007156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:54.375956 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:55.008159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:56.008415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:56.382999 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:57.008547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:56:58.008791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:56:58.387614 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:56:59.008938      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:00.009111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:00.392934 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:01.009258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:02.009515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:02.398951 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:03.009627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:04.009885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:04.404670 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:05.010580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:06.010668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:06.409071 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:07.010833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:08.011143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:08.413998 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:09.011288      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:10.011487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:10.419671 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:11.012303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:12.012453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:12.424355 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:13.012886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:14.012957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:14.430599 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:15.013276      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:16.013542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:16.437269 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:17.013912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:18.014179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:18.442083 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:19.014653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:20.014848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:20.446835 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:21.015279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:22.016167      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:22.456413 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:23.016618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:24.016831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:24.460915 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:25.017249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:26.017605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:26.466935 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:27.018644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:28.018937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:28.471324 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:29.020014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:30.020208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:30.475596 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:31.020269      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:32.020527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:32.481045 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:33.020620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:34.020869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:34.490963 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:35.021917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:36.022227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:36.499418 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:37.023078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:38.023227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:38.503988 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:39.023548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:40.023685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:40.508646 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:41.024222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:42.024369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:42.513446 24 container_probe.go:1758] Get pod busybox-c10de928-2c6d-4fb5-90ef-66942b469247 in namespace container-probe-7141
  E0731 01:57:43.025086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:44.025374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/31/25 01:57:44.514
  I0731 01:57:44.535873 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7141" for this suite. @ 07/31/25 01:57:44.542
• [242.761 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 07/31/25 01:57:44.555
  I0731 01:57:44.555348 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 01:57:44.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:57:44.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:57:44.58
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1015 @ 07/31/25 01:57:44.583
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/31/25 01:57:44.618
  STEP: creating service externalsvc in namespace services-1015 @ 07/31/25 01:57:44.618
  I0731 01:57:44.669307 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0731 01:57:45.026087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:46.026185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:46.677344 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 1, 57, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 57, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 1, 57, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 1, 57, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalsvc-7576cd9b5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0731 01:57:47.026888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:48.027224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the NodePort service to type=ExternalName @ 07/31/25 01:57:48.687
  I0731 01:57:48.734594 24 resource.go:361] Creating new exec pod
  E0731 01:57:49.028038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:50.028481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:51.028996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:52.029133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:57:52.766564 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=services-1015 exec execpodpkwm6 -- /bin/sh -x -c nslookup nodeport-service.services-1015.svc.cluster.local'
  I0731 01:57:52.943823 24 builder.go:146] stderr: "+ nslookup nodeport-service.services-1015.svc.cluster.local\n"
  I0731 01:57:52.943908 24 builder.go:147] stdout: "Server:\t\t10.233.0.3\nAddress:\t10.233.0.3#53\n\nnodeport-service.services-1015.svc.cluster.local\tcanonical name = externalsvc.services-1015.svc.cluster.local.\nName:\texternalsvc.services-1015.svc.cluster.local\nAddress: 10.233.7.198\n\n"
  I0731 01:57:52.993472 24 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0731 01:57:53.022626 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0731 01:57:53.029843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-1015" for this suite. @ 07/31/25 01:57:53.033
• [8.490 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/31/25 01:57:53.045
  I0731 01:57:53.045634 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 01:57:53.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:57:53.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:57:53.073
  STEP: Creating secret with name projected-secret-test-1b82d251-6b56-4038-9fce-19313bed305f @ 07/31/25 01:57:53.075
  STEP: Creating a pod to test consume secrets @ 07/31/25 01:57:53.082
  E0731 01:57:54.030394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:55.030580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:56.030637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:57.030792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:57:57.107
  I0731 01:57:57.110878 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-projected-secrets-15a0c664-e72a-41c6-bbc0-fc8aee4c2c17 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 01:57:57.127
  I0731 01:57:57.158774 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-612" for this suite. @ 07/31/25 01:57:57.163
• [4.125 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 07/31/25 01:57:57.171
  I0731 01:57:57.171210 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/31/25 01:57:57.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:57:57.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:57:57.196
  E0731 01:57:58.030952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:57:59.031240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 07/31/25 01:57:59.234
  STEP: Cleaning up the configmap @ 07/31/25 01:57:59.242
  STEP: Cleaning up the pod @ 07/31/25 01:57:59.248
  I0731 01:57:59.268382 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4807" for this suite. @ 07/31/25 01:57:59.273
• [2.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/31/25 01:57:59.286
  I0731 01:57:59.286221 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename deployment @ 07/31/25 01:57:59.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:57:59.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:57:59.308
  I0731 01:57:59.323235 24 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  E0731 01:58:00.031986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:01.032402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:02.032562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:03.032955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:04.033229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:04.327478 24 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/31/25 01:58:04.327
  I0731 01:58:04.327705 24 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/31/25 01:58:04.339
  I0731 01:58:04.350731 24 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b73820b-177b-40b1-8a67-9aef8dec39b5",
      ResourceVersion: (string) (len=6) "883605",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889523884,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523884,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0731 01:58:04.388163 24 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d70539de-c4dd-4fd6-a6a3-05d36b944ff6",
      ResourceVersion: (string) (len=6) "883615",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889523884,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9b73820b-177b-40b1-8a67-9aef8dec39b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523884,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 62 37 33 38 32  30 62 2d 31 37 37 62 2d  |\"9b73820b-177b-|
              00000120  34 30 62 31 2d 38 61 36  37 2d 39 61 65 66 38 64  |40b1-8a67-9aef8d|
              00000130  65 63 33 39 62 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ec39b5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523884,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=40) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 7d 7d                           |on":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0731 01:58:04.388598 24 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0731 01:58:04.388894 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d0c7b81-b9e0-4c0f-88ad-77e2c5e9602b",
      ResourceVersion: (string) (len=6) "883606",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889523879,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9b73820b-177b-40b1-8a67-9aef8dec39b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523884,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 39 62 37 33 38 32 30  |"uid\":\"9b73820|
              00000040  62 2d 31 37 37 62 2d 34  30 62 31 2d 38 61 36 37  |b-177b-40b1-8a67|
              00000050  2d 39 61 65 66 38 64 65  63 33 39 62 35 5c 22 7d  |-9aef8dec39b5\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0731 01:58:04.429240 24 deployment.go:68] Pod "test-cleanup-controller-xfg2b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-xfg2b",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-1072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3bd2b1b8-6b41-43f3-a893-d595e8e06554",
      ResourceVersion: (string) (len=6) "883573",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889523879,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "2d0c7b81-b9e0-4c0f-88ad-77e2c5e9602b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  32 64 30 63 37 62 38 31  |uid\":\"2d0c7b81|
              00000080  2d 62 39 65 30 2d 34 63  30 66 2d 38 38 61 64 2d  |-b9e0-4c0f-88ad-|
              00000090  37 37 65 32 63 35 65 39  36 30 32 62 5c 22 7d 22  |77e2c5e9602b\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 33 37 5c 22 7d 22 3a  |.233.65.237\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qgd5f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qgd5f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) (len=13) "10.233.65.237",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.237"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889523879,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889523880,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c97e6a359f2ed21c320b62167475e9e881c03aa28a39ded2122deab4de678fdc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qgd5f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 01:58:04.436369 24 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-5qjr2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-5qjr2",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-1072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3510fef3-8a28-4521-82d4-6b32d43a969f",
      ResourceVersion: (string) (len=6) "883622",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889523884,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "d70539de-c4dd-4fd6-a6a3-05d36b944ff6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523884,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  30 35 33 39 64 65 2d 63  |d\":\"d70539de-c|
              00000090  34 64 64 2d 34 66 64 36  2d 61 36 61 33 2d 30 35  |4dd-4fd6-a6a3-05|
              000000a0  64 33 36 62 39 34 34 66  66 36 5c 22 7d 22 3a 7b  |d36b944ff6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523884,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-44wrc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-44wrc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523884,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523884,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523884,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523884,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889523884,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889523884,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-44wrc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 01:58:04.437664 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1072" for this suite. @ 07/31/25 01:58:04.443
• [5.164 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 07/31/25 01:58:04.45
  I0731 01:58:04.450478 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename containers @ 07/31/25 01:58:04.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:58:04.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:58:04.473
  STEP: Creating a pod to test override command @ 07/31/25 01:58:04.476
  E0731 01:58:05.034164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:06.035107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:07.036083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:08.036959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 01:58:08.499
  I0731 01:58:08.502834 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod client-containers-fc58e301-8869-473f-8135-610629cdd969 container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 01:58:08.51
  I0731 01:58:08.546393 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1429" for this suite. @ 07/31/25 01:58:08.555
• [4.113 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/31/25 01:58:08.563
  I0731 01:58:08.564159 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename daemonsets @ 07/31/25 01:58:08.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:58:08.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:58:08.587
  I0731 01:58:08.676894 24 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0731 01:58:08.687106 24 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0731 01:58:08.756571 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:08.756630 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:08.756750 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:08.764897 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:58:08.765100 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 01:58:09.037100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:09.694729 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:09.694784 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:09.694803 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:09.699019 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0731 01:58:09.699127 24 fixtures.go:131] Node viola-gs-worker-2 is running 0 daemon pod, expected 1
  E0731 01:58:10.037220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:10.693814 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:10.694015 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:10.694073 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:10.699197 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0731 01:58:10.699339 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  I0731 01:58:10.699404 24 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0731 01:58:10.713236 24 daemon_set.go:102] Updating DaemonSet daemon-set
  E0731 01:58:11.038283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:11.728258 24 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0731 01:58:11.739327 24 daemon_set.go:102] Updating DaemonSet daemon-set
  I0731 01:58:11.739399 24 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0731 01:58:11.830028 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:11.830106 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:11.830125 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0731 01:58:12.039353      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:12.748858 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:12.748933 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:12.748954 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0731 01:58:13.040360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:13.755227 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:13.755403 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:13.755470 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0731 01:58:14.041149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:14.750285 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:14.750493 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:14.750537 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0731 01:58:15.041198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:15.745468 24 daemon_set.go:1198] Pod daemon-set-glkh2 is not available
  I0731 01:58:15.751255 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:15.751326 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:58:15.751353 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 07/31/25 01:58:15.865
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3159, will wait for the garbage collector to delete the pods @ 07/31/25 01:58:15.865
  I0731 01:58:15.933059 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.431204ms
  I0731 01:58:16.033776 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.667979ms
  E0731 01:58:16.042031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:17.042342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:17.144202 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 01:58:17.144255 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0731 01:58:17.148316 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"883872"},"items":null}

  I0731 01:58:17.155849 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"883872"},"items":null}

  I0731 01:58:17.173629 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3159" for this suite. @ 07/31/25 01:58:17.177
• [8.625 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 07/31/25 01:58:17.189
  I0731 01:58:17.189737 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename volumeattachment @ 07/31/25 01:58:17.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:58:17.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:58:17.212
  STEP: Create VolumeAttachment "va-e2e-99nsx" on node "viola-gs-worker-2" @ 07/31/25 01:58:17.261
  STEP: Get VolumeAttachment "va-e2e-99nsx" on node "viola-gs-worker-2" @ 07/31/25 01:58:17.269
  STEP: Patch VolumeAttachment "va-e2e-99nsx" on node "viola-gs-worker-2" @ 07/31/25 01:58:17.273
  STEP: List VolumeAttachments with "va-e2e-99nsx=patched" label @ 07/31/25 01:58:17.28
  STEP: Delete VolumeAttachment "va-e2e-99nsx" on node "viola-gs-worker-2" @ 07/31/25 01:58:17.283
  STEP: Confirm deletion of VolumeAttachment "va-e2e-99nsx" on node "viola-gs-worker-2" @ 07/31/25 01:58:17.29
  STEP: Create VolumeAttachment "va-e2e-2ntcm" on node "viola-gs-worker-4" @ 07/31/25 01:58:17.371
  STEP: Update the VolumeAttachment "va-e2e-2ntcm" on node "viola-gs-worker-4" with label "va-e2e=updated" @ 07/31/25 01:58:17.379
  STEP: Create VolumeAttachment "va-e2e-4h4st" on node "viola-gs-master-1" @ 07/31/25 01:58:17.463
  STEP: Update the VolumeAttachment "va-e2e-4h4st" on node "viola-gs-master-1" with label "va-e2e=updated" @ 07/31/25 01:58:17.472
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/31/25 01:58:17.482
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/31/25 01:58:17.498
  I0731 01:58:17.501688 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-8407" for this suite. @ 07/31/25 01:58:17.563
• [0.383 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/31/25 01:58:17.572
  I0731 01:58:17.572789 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pod-network-test @ 07/31/25 01:58:17.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:58:17.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:58:17.597
  STEP: Performing setup for networking test in namespace pod-network-test-7480 @ 07/31/25 01:58:17.6
  STEP: creating a selector @ 07/31/25 01:58:17.6
  STEP: Creating the service pods in kubernetes @ 07/31/25 01:58:17.6
  I0731 01:58:17.600461 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0731 01:58:18.042887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:19.043106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:20.043236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:21.043465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:22.043434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:23.043808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:24.044941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:25.044919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:26.045865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:27.046647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:28.047534      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:29.048447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:30.048676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:31.048820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/31/25 01:58:31.795
  E0731 01:58:32.049739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:33.049958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:33.815979 24 utils.go:802] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0731 01:58:33.816030 24 networking.go:42] Breadth first check of 10.233.65.213 on host 172.20.30.203...
  I0731 01:58:33.819376 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.1:9080/dial?request=hostname&protocol=udp&host=10.233.65.213&port=8081&tries=1'] Namespace:pod-network-test-7480 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:58:33.819504 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:58:33.819585 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7480/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.1%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.213%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0731 01:58:33.895336 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:58:33.895460 24 utils.go:355] Waiting for responses: map[]
  I0731 01:58:33.895474 24 utils.go:359] reached 10.233.65.213 after 0/1 tries
  I0731 01:58:33.895486 24 networking.go:42] Breadth first check of 10.233.66.157 on host 172.20.30.236...
  I0731 01:58:33.899739 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.1:9080/dial?request=hostname&protocol=udp&host=10.233.66.157&port=8081&tries=1'] Namespace:pod-network-test-7480 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:58:33.899875 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:58:33.899976 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7480/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.1%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.157%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0731 01:58:33.958484 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:58:33.958667 24 utils.go:355] Waiting for responses: map[]
  I0731 01:58:33.958732 24 utils.go:359] reached 10.233.66.157 after 0/1 tries
  I0731 01:58:33.958761 24 networking.go:42] Breadth first check of 10.233.67.3 on host 172.20.30.154...
  I0731 01:58:33.962614 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.1:9080/dial?request=hostname&protocol=udp&host=10.233.67.3&port=8081&tries=1'] Namespace:pod-network-test-7480 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:58:33.962732 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:58:33.962843 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7480/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.1%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.67.3%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0731 01:58:34.022295 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:58:34.022451 24 utils.go:355] Waiting for responses: map[]
  I0731 01:58:34.022511 24 utils.go:359] reached 10.233.67.3 after 0/1 tries
  I0731 01:58:34.022544 24 networking.go:42] Breadth first check of 10.233.68.211 on host 172.20.30.200...
  I0731 01:58:34.027020 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.1:9080/dial?request=hostname&protocol=udp&host=10.233.68.211&port=8081&tries=1'] Namespace:pod-network-test-7480 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 01:58:34.027070 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 01:58:34.027112 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7480/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.1%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.68.211%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  E0731 01:58:34.050464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:34.081937 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 01:58:34.082012 24 utils.go:355] Waiting for responses: map[]
  I0731 01:58:34.082023 24 utils.go:359] reached 10.233.68.211 after 0/1 tries
  I0731 01:58:34.082036 24 networking.go:53] Going to retry 0 out of 4 pods....
  I0731 01:58:34.082175 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7480" for this suite. @ 07/31/25 01:58:34.088
• [16.523 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 07/31/25 01:58:34.095
  I0731 01:58:34.095807 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename svcaccounts @ 07/31/25 01:58:34.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:58:34.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:58:34.113
  STEP: Creating a Serviceaccount "e2e-sa-pckbl" in namespace "svcaccounts-1639" @ 07/31/25 01:58:34.116
  STEP: Creating a ServiceaccountToken "e2e-sa-pckbl" in namespace "svcaccounts-1639" @ 07/31/25 01:58:34.122
  STEP: Creating a TokenReview for "e2e-sa-pckbl" in namespace "svcaccounts-1639" @ 07/31/25 01:58:34.126
  I0731 01:58:34.129910 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1639" for this suite. @ 07/31/25 01:58:34.194
• [0.109 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 07/31/25 01:58:34.205
  I0731 01:58:34.205212 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename gc @ 07/31/25 01:58:34.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:58:34.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:58:34.224
  STEP: create the rc @ 07/31/25 01:58:34.29
  I0731 01:58:34.301385      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0731 01:58:35.051282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:36.054956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:37.055958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:38.056259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/31/25 01:58:38.323
  STEP: wait for the rc to be deleted @ 07/31/25 01:58:38.347
  E0731 01:58:39.056641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:39.369188 24 garbage_collector.go:678] 99 pods remaining
  I0731 01:58:39.369345 24 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0731 01:58:39.369373 24 garbage_collector.go:686] 
  E0731 01:58:40.057365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:40.362453 24 garbage_collector.go:678] 99 pods remaining
  I0731 01:58:40.362509 24 garbage_collector.go:685] 73 pods has nil DeletionTimestamp
  I0731 01:58:40.362519 24 garbage_collector.go:686] 
  E0731 01:58:41.057533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:41.366776 24 garbage_collector.go:678] 99 pods remaining
  I0731 01:58:41.366827 24 garbage_collector.go:685] 58 pods has nil DeletionTimestamp
  I0731 01:58:41.366836 24 garbage_collector.go:686] 
  E0731 01:58:42.057722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:42.381073 24 garbage_collector.go:678] 99 pods remaining
  I0731 01:58:42.381124 24 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0731 01:58:42.381131 24 garbage_collector.go:686] 
  E0731 01:58:43.057926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:43.367184 24 garbage_collector.go:678] 99 pods remaining
  I0731 01:58:43.367233 24 garbage_collector.go:685] 33 pods has nil DeletionTimestamp
  I0731 01:58:43.367240 24 garbage_collector.go:686] 
  E0731 01:58:44.058002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:44.367231 24 garbage_collector.go:678] 99 pods remaining
  I0731 01:58:44.367280 24 garbage_collector.go:685] 18 pods has nil DeletionTimestamp
  I0731 01:58:44.367286 24 garbage_collector.go:686] 
  E0731 01:58:45.058351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:45.364450 24 garbage_collector.go:678] 99 pods remaining
  I0731 01:58:45.364500 24 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0731 01:58:45.364506 24 garbage_collector.go:686] 
  E0731 01:58:46.059171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:46.366634 24 garbage_collector.go:678] 95 pods remaining
  I0731 01:58:46.366710 24 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0731 01:58:46.366719 24 garbage_collector.go:686] 
  E0731 01:58:47.059719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:47.359728 24 garbage_collector.go:678] 84 pods remaining
  I0731 01:58:47.359778 24 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0731 01:58:47.359784 24 garbage_collector.go:686] 
  E0731 01:58:48.059856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:48.362152 24 garbage_collector.go:678] 73 pods remaining
  I0731 01:58:48.362190 24 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0731 01:58:48.362196 24 garbage_collector.go:686] 
  E0731 01:58:49.060532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:49.362725 24 garbage_collector.go:678] 64 pods remaining
  I0731 01:58:49.362776 24 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0731 01:58:49.362783 24 garbage_collector.go:686] 
  E0731 01:58:50.061575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:50.359630 24 garbage_collector.go:678] 54 pods remaining
  I0731 01:58:50.359673 24 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0731 01:58:50.359679 24 garbage_collector.go:686] 
  E0731 01:58:51.061774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:51.358796 24 garbage_collector.go:678] 43 pods remaining
  I0731 01:58:51.358846 24 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0731 01:58:51.358855 24 garbage_collector.go:686] 
  E0731 01:58:52.061815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:52.358363 24 garbage_collector.go:678] 34 pods remaining
  I0731 01:58:52.358400 24 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0731 01:58:52.358418 24 garbage_collector.go:686] 
  E0731 01:58:53.062864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:53.358911 24 garbage_collector.go:678] 24 pods remaining
  I0731 01:58:53.358947 24 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0731 01:58:53.358954 24 garbage_collector.go:686] 
  E0731 01:58:54.063786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:58:54.355937 24 garbage_collector.go:678] 13 pods remaining
  I0731 01:58:54.356107 24 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0731 01:58:54.356148 24 garbage_collector.go:686] 
  E0731 01:58:55.064660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/31/25 01:58:55.359
  I0731 01:58:55.448119 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0731 01:58:55.448302 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8623" for this suite. @ 07/31/25 01:58:55.454
• [21.258 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 07/31/25 01:58:55.463
  I0731 01:58:55.463351 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename resourcequota @ 07/31/25 01:58:55.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:58:55.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:58:55.485
  STEP: Creating a ResourceQuota with terminating scope @ 07/31/25 01:58:55.488
  STEP: Ensuring ResourceQuota status is calculated @ 07/31/25 01:58:55.5
  E0731 01:58:56.064708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:57.065544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 07/31/25 01:58:57.504
  STEP: Ensuring ResourceQuota status is calculated @ 07/31/25 01:58:57.511
  E0731 01:58:58.066604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:58:59.066984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 07/31/25 01:58:59.516
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/31/25 01:58:59.533
  E0731 01:59:00.067871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:01.068248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/31/25 01:59:01.538
  E0731 01:59:02.069228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:03.069591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/31/25 01:59:03.549
  STEP: Ensuring resource quota status released the pod usage @ 07/31/25 01:59:03.567
  E0731 01:59:04.070652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:05.070892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 07/31/25 01:59:05.573
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/31/25 01:59:05.594
  E0731 01:59:06.071852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:07.072599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/31/25 01:59:07.599
  E0731 01:59:08.073203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:09.073238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/31/25 01:59:09.604
  STEP: Ensuring resource quota status released the pod usage @ 07/31/25 01:59:09.626
  E0731 01:59:10.074132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:11.074448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:59:11.631466 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3180" for this suite. @ 07/31/25 01:59:11.636
• [16.185 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/31/25 01:59:11.648
  I0731 01:59:11.648050 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/31/25 01:59:11.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:59:11.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:59:11.671
  I0731 01:59:11.674217 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 01:59:12.075172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:13.076314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:14.076458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:15.077579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:16.077717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:17.078712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:59:17.701684 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6318" for this suite. @ 07/31/25 01:59:17.708
• [6.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 07/31/25 01:59:17.718
  I0731 01:59:17.718032 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 01:59:17.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:59:17.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:59:17.741
  STEP: Creating a suspended job @ 07/31/25 01:59:17.747
  STEP: Patching the Job @ 07/31/25 01:59:17.756
  STEP: Watching for Job to be patched @ 07/31/25 01:59:17.78
  I0731 01:59:17.782781 24 job.go:1369] Event ADDED observed for Job e2e-rk42v in namespace job-4325 with labels: map[e2e-job-label:e2e-rk42v] and annotations: map[]
  I0731 01:59:17.782842 24 job.go:1369] Event MODIFIED observed for Job e2e-rk42v in namespace job-4325 with labels: map[e2e-job-label:e2e-rk42v] and annotations: map[]
  I0731 01:59:17.782865 24 job.go:1372] Event MODIFIED found for Job e2e-rk42v in namespace job-4325 with labels: map[e2e-job-label:e2e-rk42v e2e-rk42v:patched] and annotations: map[]
  STEP: Updating the job @ 07/31/25 01:59:17.782
  STEP: Watching for Job to be updated @ 07/31/25 01:59:17.795
  I0731 01:59:17.796843 24 job.go:1372] Event MODIFIED found for Job e2e-rk42v in namespace job-4325 with labels: map[e2e-job-label:e2e-rk42v e2e-rk42v:patched] and annotations: map[updated:true]
  I0731 01:59:17.796942 24 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/31/25 01:59:17.796
  I0731 01:59:17.799822 24 job.go:1247] Job: e2e-rk42v as labels: map[e2e-job-label:e2e-rk42v e2e-rk42v:patched]
  STEP: Waiting for job to complete @ 07/31/25 01:59:17.799
  E0731 01:59:18.079723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:19.080009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:20.080648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:21.081023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:22.081314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:23.081596      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:24.082552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:25.082998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 07/31/25 01:59:25.834
  STEP: Watching for Job to be deleted @ 07/31/25 01:59:25.845
  I0731 01:59:25.847508 24 job.go:1369] Event MODIFIED observed for Job e2e-rk42v in namespace job-4325 with labels: map[e2e-job-label:e2e-rk42v e2e-rk42v:patched] and annotations: map[updated:true]
  I0731 01:59:25.847623 24 job.go:1369] Event MODIFIED observed for Job e2e-rk42v in namespace job-4325 with labels: map[e2e-job-label:e2e-rk42v e2e-rk42v:patched] and annotations: map[updated:true]
  I0731 01:59:25.847703 24 job.go:1369] Event MODIFIED observed for Job e2e-rk42v in namespace job-4325 with labels: map[e2e-job-label:e2e-rk42v e2e-rk42v:patched] and annotations: map[updated:true]
  I0731 01:59:25.847728 24 job.go:1369] Event MODIFIED observed for Job e2e-rk42v in namespace job-4325 with labels: map[e2e-job-label:e2e-rk42v e2e-rk42v:patched] and annotations: map[updated:true]
  I0731 01:59:25.847789 24 job.go:1369] Event MODIFIED observed for Job e2e-rk42v in namespace job-4325 with labels: map[e2e-job-label:e2e-rk42v e2e-rk42v:patched] and annotations: map[updated:true]
  I0731 01:59:25.847884 24 job.go:1372] Event DELETED found for Job e2e-rk42v in namespace job-4325 with labels: map[e2e-job-label:e2e-rk42v e2e-rk42v:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/31/25 01:59:25.847
  I0731 01:59:25.851060 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4325" for this suite. @ 07/31/25 01:59:25.855
• [8.166 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/31/25 01:59:25.887
  I0731 01:59:25.887675 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename controllerrevisions @ 07/31/25 01:59:25.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:59:25.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:59:25.921
  STEP: Creating DaemonSet "e2e-wtr62-daemon-set" @ 07/31/25 01:59:25.978
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/31/25 01:59:25.988
  I0731 01:59:26.058328 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:59:26.058510 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:59:26.058575 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:59:26.065802 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-wtr62-daemon-set: 0
  I0731 01:59:26.065861 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 01:59:26.083228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:59:26.995419 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:59:26.995485 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:59:26.995505 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:59:26.999380 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-wtr62-daemon-set: 1
  I0731 01:59:26.999417 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 01:59:27.083542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:59:27.997189 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:59:27.997467 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:59:27.997554 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 01:59:28.003111 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-wtr62-daemon-set: 4
  I0731 01:59:28.003273 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset e2e-wtr62-daemon-set
  STEP: Confirm DaemonSet "e2e-wtr62-daemon-set" successfully created with "daemonset-name=e2e-wtr62-daemon-set" label @ 07/31/25 01:59:28.006
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-wtr62-daemon-set" @ 07/31/25 01:59:28.012
  I0731 01:59:28.017983 24 controller_revision.go:162] Located ControllerRevision: "e2e-wtr62-daemon-set-86f7d754d9"
  STEP: Patching ControllerRevision "e2e-wtr62-daemon-set-86f7d754d9" @ 07/31/25 01:59:28.02
  I0731 01:59:28.030651 24 controller_revision.go:173] e2e-wtr62-daemon-set-86f7d754d9 has been patched
  STEP: Create a new ControllerRevision @ 07/31/25 01:59:28.03
  I0731 01:59:28.037329 24 controller_revision.go:191] Created ControllerRevision: e2e-wtr62-daemon-set-784bc649c7
  STEP: Confirm that there are two ControllerRevisions @ 07/31/25 01:59:28.037
  I0731 01:59:28.037722 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0731 01:59:28.040800 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-wtr62-daemon-set-86f7d754d9" @ 07/31/25 01:59:28.04
  STEP: Confirm that there is only one ControllerRevision @ 07/31/25 01:59:28.057
  I0731 01:59:28.057408 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0731 01:59:28.060677 24 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-wtr62-daemon-set-784bc649c7" @ 07/31/25 01:59:28.064
  I0731 01:59:28.075060 24 controller_revision.go:220] e2e-wtr62-daemon-set-784bc649c7 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/31/25 01:59:28.075
  E0731 01:59:28.084103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:59:28.086652      24 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 07/31/25 01:59:28.086
  I0731 01:59:28.086836 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0731 01:59:29.084517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:59:29.087406 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0731 01:59:29.093425 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-wtr62-daemon-set-784bc649c7=updated" @ 07/31/25 01:59:29.093
  STEP: Confirm that there is only one ControllerRevision @ 07/31/25 01:59:29.103
  I0731 01:59:29.103490 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0731 01:59:29.106631 24 controller_revision.go:265] Found 1 ControllerRevisions
  I0731 01:59:29.109627 24 controller_revision.go:246] ControllerRevision "e2e-wtr62-daemon-set-8554c6f9b" has revision 3
  STEP: Deleting DaemonSet "e2e-wtr62-daemon-set" @ 07/31/25 01:59:29.113
  STEP: deleting DaemonSet.extensions e2e-wtr62-daemon-set in namespace controllerrevisions-5767, will wait for the garbage collector to delete the pods @ 07/31/25 01:59:29.113
  I0731 01:59:29.183182 24 resources.go:139] Deleting DaemonSet.extensions e2e-wtr62-daemon-set took: 15.114688ms
  I0731 01:59:29.283888 24 resources.go:163] Terminating DaemonSet.extensions e2e-wtr62-daemon-set pods took: 100.686211ms
  E0731 01:59:30.084969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:59:30.991739 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-wtr62-daemon-set: 0
  I0731 01:59:30.991837 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-wtr62-daemon-set
  I0731 01:59:30.996043 24 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"886698"},"items":null}

  I0731 01:59:30.999554 24 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"886698"},"items":null}

  I0731 01:59:31.019608 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5767" for this suite. @ 07/31/25 01:59:31.024
• [5.145 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 07/31/25 01:59:31.033
  I0731 01:59:31.033578 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename statefulset @ 07/31/25 01:59:31.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:59:31.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:59:31.06
  STEP: Creating service test in namespace statefulset-2166 @ 07/31/25 01:59:31.064
  E0731 01:59:31.085217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:59:31.093149 24 wait.go:44] Found 0 stateful pods, waiting for 1
  E0731 01:59:32.085450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:33.085608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:34.085709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:35.086665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:36.086848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:37.087993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:38.088246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:39.088516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:40.088771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:41.088856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:59:41.092974 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/31/25 01:59:41.099
  I0731 01:59:41.125211 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0731 01:59:41.125277 24 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0731 01:59:42.089440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:43.089734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:44.090300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:45.091239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:46.091256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:47.091911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:48.091908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:49.092386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:50.093259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:51.093648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:59:51.118560 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0731 01:59:51.118620 24 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/31/25 01:59:51.125
  STEP: Delete all of the StatefulSets @ 07/31/25 01:59:51.128
  STEP: Verify that StatefulSets have been deleted @ 07/31/25 01:59:51.137
  I0731 01:59:51.141689 24 statefulset.go:138] Deleting all statefulset in ns statefulset-2166
  I0731 01:59:51.169616 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2166" for this suite. @ 07/31/25 01:59:51.278
• [20.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 07/31/25 01:59:51.288
  I0731 01:59:51.288275 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-probe @ 07/31/25 01:59:51.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 01:59:51.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 01:59:51.309
  STEP: Creating pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590 @ 07/31/25 01:59:51.312
  E0731 01:59:52.094158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:53.094511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/31/25 01:59:53.331
  I0731 01:59:53.335672 24 container_probe.go:1748] Initial restart count of pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 is 0
  I0731 01:59:53.338332 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 01:59:54.095249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:55.095545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:59:55.343233 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 01:59:56.095872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:57.096638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:59:57.347945 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 01:59:58.096776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 01:59:59.097356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 01:59:59.353503 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:00.098292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:01.098774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:01.358795 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:02.098975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:03.099970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:03.375402 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:04.100082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:05.100478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:05.385214 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:06.100518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:07.100702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:07.391427 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:08.101155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:09.101187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:09.397772 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:10.102041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:11.102343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:11.404099 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:12.102416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:13.102578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:13.409987 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:14.102782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:15.102945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:15.415602 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:16.103423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:17.103631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:17.421246 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:18.104138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:19.104138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:19.426826 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:20.104831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:21.105709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:21.432054 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:22.105801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:23.106368      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:23.438300 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:24.106943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:25.107217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:25.443937 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:26.107691      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:27.107791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:27.449827 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:28.108485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:29.108696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:29.454709 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:30.109918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:31.110205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:31.461033 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:32.110476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:33.110924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:33.465797 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:34.111457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:35.111530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:35.470592 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:36.112581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:37.112759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:37.476247 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:38.112912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:39.113064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:39.481850 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:40.113862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:41.114122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:41.488205 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:42.114903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:43.115836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:43.495152 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:44.116780      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:45.116924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:45.501286 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:46.117006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:47.117111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:47.505828 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:48.117570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:49.117625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:49.511064 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:50.117930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:51.118072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:51.516937 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:52.118610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:53.118763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:53.524844 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:54.118876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:55.119999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:55.531086 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:56.120725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:57.120891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:57.537402 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:00:58.121084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:00:59.121228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:00:59.542768 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:01:00.121531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:01.122187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:01:01.549442 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:01:02.123011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:03.123549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:01:03.554985 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:01:04.123633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:05.123828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:01:05.559265 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  E0731 02:01:06.124875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:07.125146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:01:07.565424 24 container_probe.go:1758] Get pod test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 in namespace container-probe-7590
  I0731 02:01:07.565615 24 container_probe.go:1762] Restart count of pod container-probe-7590/test-grpc-7661b98a-7db9-4b3b-a5fe-d8cacf160d57 is now 1 (1m14.229879737s elapsed)
  STEP: deleting the pod @ 07/31/25 02:01:07.565
  I0731 02:01:07.585246 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7590" for this suite. @ 07/31/25 02:01:07.591
• [76.314 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 07/31/25 02:01:07.602
  I0731 02:01:07.602517 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename security-context-test @ 07/31/25 02:01:07.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:01:07.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:01:07.628
  E0731 02:01:08.125339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:09.125531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:10.125694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:11.126002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:01:11.673367 24 security_context.go:619] Got logs for pod "busybox-privileged-false-c4752075-6cd8-4c27-a9f8-58225f099a15": "ip: RTNETLINK answers: Operation not permitted\n"
  I0731 02:01:11.673528 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1113" for this suite. @ 07/31/25 02:01:11.679
• [4.086 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/31/25 02:01:11.689
  I0731 02:01:11.689160 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 02:01:11.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:01:11.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:01:11.708
  STEP: Creating secret with name s-test-opt-del-f600cb0b-38af-4699-92e6-b52c4a0272ad @ 07/31/25 02:01:11.78
  STEP: Creating secret with name s-test-opt-upd-3fb534aa-aaad-4bc5-8251-17cb2e5302bc @ 07/31/25 02:01:11.791
  STEP: Creating the pod @ 07/31/25 02:01:11.8
  E0731 02:01:12.126857      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:13.127223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-f600cb0b-38af-4699-92e6-b52c4a0272ad @ 07/31/25 02:01:13.854
  STEP: Updating secret s-test-opt-upd-3fb534aa-aaad-4bc5-8251-17cb2e5302bc @ 07/31/25 02:01:13.862
  STEP: Creating secret with name s-test-opt-create-6c212fbd-5a67-4ee1-9851-f846e95bbe0c @ 07/31/25 02:01:13.869
  STEP: waiting to observe update in volume @ 07/31/25 02:01:13.876
  E0731 02:01:14.127413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:15.127656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:01:15.905163 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1202" for this suite. @ 07/31/25 02:01:15.91
• [4.232 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 07/31/25 02:01:15.921
  I0731 02:01:15.921297 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 02:01:15.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:01:15.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:01:15.946
  STEP: Creating configMap with name projected-configmap-test-volume-map-596afd81-c90e-4299-90e0-9b02229c2b11 @ 07/31/25 02:01:15.949
  STEP: Creating a pod to test consume configMaps @ 07/31/25 02:01:15.958
  E0731 02:01:16.128427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:17.128707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:18.129717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:19.130133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:01:19.984
  I0731 02:01:19.988154 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-projected-configmaps-5ef03710-a822-4010-83cd-e04c08ed9c47 container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 02:01:19.993
  I0731 02:01:20.021744 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7056" for this suite. @ 07/31/25 02:01:20.026
• [4.114 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 07/31/25 02:01:20.035
  I0731 02:01:20.035435 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename csinodes @ 07/31/25 02:01:20.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:01:20.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:01:20.054
  STEP: Creating initial csiNode "e2e-csinode-mp46c" @ 07/31/25 02:01:20.057
  STEP: Getting initial csiNode "e2e-csinode-mp46c" @ 07/31/25 02:01:20.064
  STEP: Patching initial csiNode: "e2e-csinode-mp46c" @ 07/31/25 02:01:20.068
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-mp46c=patched" @ 07/31/25 02:01:20.074
  STEP: Delete initial csiNode: "e2e-csinode-mp46c" @ 07/31/25 02:01:20.077
  STEP: Confirm deletion of csiNode "e2e-csinode-mp46c" @ 07/31/25 02:01:20.086
  STEP: Creating replacement csiNode "e2e-csinode-m56sc" @ 07/31/25 02:01:20.092
  STEP: Getting replacement csiNode "e2e-csinode-m56sc" @ 07/31/25 02:01:20.098
  STEP: Updating replacement csiNode "e2e-csinode-m56sc" @ 07/31/25 02:01:20.101
  STEP: DeleteCollection of CSINodes with "e2e-csinode-m56sc=updated" label @ 07/31/25 02:01:20.109
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-m56sc=updated" @ 07/31/25 02:01:20.118
  I0731 02:01:20.121083 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-5676" for this suite. @ 07/31/25 02:01:20.126
  E0731 02:01:20.130085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 07/31/25 02:01:20.135
  I0731 02:01:20.135446 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename gc @ 07/31/25 02:01:20.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:01:20.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:01:20.156
  STEP: create the deployment @ 07/31/25 02:01:20.16
  I0731 02:01:20.167594      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/31/25 02:01:20.167
  STEP: delete the deployment @ 07/31/25 02:01:20.281
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/31/25 02:01:20.296
  STEP: Gathering metrics @ 07/31/25 02:01:20.816
  I0731 02:01:20.911209 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0731 02:01:20.912063 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1565" for this suite. @ 07/31/25 02:01:20.919
• [0.794 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/31/25 02:01:20.929
  I0731 02:01:20.929611 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename secrets @ 07/31/25 02:01:20.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:01:20.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:01:20.949
  STEP: Creating secret with name secret-test-143bf85f-3453-4b6a-a759-5d737d80d2a8 @ 07/31/25 02:01:20.951
  STEP: Creating a pod to test consume secrets @ 07/31/25 02:01:20.958
  E0731 02:01:21.130549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:22.130839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:23.131327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:24.131656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:01:24.995
  I0731 02:01:24.999121 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-secrets-02fe0c96-f56d-413b-8bd8-05e31bfc4ffb container secret-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 02:01:25.005
  I0731 02:01:25.033506 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5098" for this suite. @ 07/31/25 02:01:25.041
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/31/25 02:01:25.054
  I0731 02:01:25.054061 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename replicaset @ 07/31/25 02:01:25.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:01:25.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:01:25.079
  I0731 02:01:25.100644 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0731 02:01:25.131937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:26.132084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:27.132375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:28.132576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:29.132946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:01:30.106439 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/31/25 02:01:30.106
  STEP: Scaling up "test-rs" replicaset @ 07/31/25 02:01:30.106
  I0731 02:01:30.117841 24 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/31/25 02:01:30.117
  I0731 02:01:30.131360 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4491 with ReadyReplicas 1, AvailableReplicas 1
  E0731 02:01:30.133384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:01:30.153182 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4491 with ReadyReplicas 1, AvailableReplicas 1
  I0731 02:01:30.181184 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4491 with ReadyReplicas 1, AvailableReplicas 1
  I0731 02:01:30.192205 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4491 with ReadyReplicas 1, AvailableReplicas 1
  I0731 02:01:31.020963 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4491 with ReadyReplicas 2, AvailableReplicas 2
  E0731 02:01:31.134299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:01:31.324603 24 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-4491 with ReadyReplicas 3 found true
  I0731 02:01:31.324833 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4491" for this suite. @ 07/31/25 02:01:31.329
• [6.284 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 07/31/25 02:01:31.338
  I0731 02:01:31.338419 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename crd-webhook @ 07/31/25 02:01:31.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:01:31.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:01:31.36
  STEP: Setting up server cert @ 07/31/25 02:01:31.364
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/31/25 02:01:31.617
  STEP: Deploying the custom resource conversion webhook pod @ 07/31/25 02:01:31.626
  STEP: Wait for the deployment to be ready @ 07/31/25 02:01:31.646
  I0731 02:01:31.655634 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0731 02:01:32.134739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:33.134942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 02:01:33.67
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 02:01:33.692
  E0731 02:01:34.135069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:01:34.693677 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0731 02:01:34.699707 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 02:01:35.135157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:36.135980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:37.136791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:38.137704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:39.137779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:40.137993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:41.138562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:42.138872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/31/25 02:01:42.266
  STEP: Create a v2 custom resource @ 07/31/25 02:01:42.304
  STEP: List CRs in v1 @ 07/31/25 02:01:42.334
  STEP: List CRs in v2 @ 07/31/25 02:01:42.42
  I0731 02:01:43.004908 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4280" for this suite. @ 07/31/25 02:01:43.01
• [11.693 seconds]
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 07/31/25 02:01:43.031
  I0731 02:01:43.031362 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 02:01:43.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:01:43.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:01:43.054
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 02:01:43.057
  E0731 02:01:43.139289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:44.139564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:45.140256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:46.140585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:01:47.09
  I0731 02:01:47.094012 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-5eac6bd3-1908-4241-97ca-e311cbe754e3 container client-container: <nil>
  STEP: delete the pod @ 07/31/25 02:01:47.099
  I0731 02:01:47.121865 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1782" for this suite. @ 07/31/25 02:01:47.131
• [4.108 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 07/31/25 02:01:47.139
  I0731 02:01:47.139437 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubelet-test @ 07/31/25 02:01:47.14
  E0731 02:01:47.141362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:01:47.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:01:47.163
  STEP: Waiting for pod completion @ 07/31/25 02:01:47.177
  E0731 02:01:48.141580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:49.142051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:50.142383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:51.142378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:01:51.198781 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3974" for this suite. @ 07/31/25 02:01:51.206
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 07/31/25 02:01:51.216
  I0731 02:01:51.216855 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/31/25 02:01:51.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:01:51.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:01:51.239
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/31/25 02:01:51.242
  I0731 02:01:51.242882 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 02:01:52.142718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:53.143297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:54.143460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:55.144431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:56.145474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:57.145559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:01:58.146277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:01:58.820852 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 02:01:59.146344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:00.146877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:01.147437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:02.148333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:03.148961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:04.149856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:05.150453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:06.151099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:07.151254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:08.151949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:09.152523      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:10.153387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:11.153593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:12.153709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:02:12.308384 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8608" for this suite. @ 07/31/25 02:02:12.316
• [21.107 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 07/31/25 02:02:12.325
  I0731 02:02:12.325120 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/31/25 02:02:12.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:12.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:12.349
  STEP: create the container to handle the HTTPGet hook request. @ 07/31/25 02:02:12.417
  E0731 02:02:13.153964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:14.154642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/31/25 02:02:14.447
  E0731 02:02:15.155627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:16.156442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/31/25 02:02:16.467
  STEP: delete the pod with lifecycle hook @ 07/31/25 02:02:16.477
  E0731 02:02:17.157384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:18.157770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:02:18.495168 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4657" for this suite. @ 07/31/25 02:02:18.5
• [6.186 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/31/25 02:02:18.51
  I0731 02:02:18.510644 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename podtemplate @ 07/31/25 02:02:18.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:18.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:18.535
  STEP: Create a pod template @ 07/31/25 02:02:18.538
  STEP: Replace a pod template @ 07/31/25 02:02:18.546
  I0731 02:02:18.555768 24 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0731 02:02:18.556030 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2207" for this suite. @ 07/31/25 02:02:18.601
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/31/25 02:02:18.611
  I0731 02:02:18.611261 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename conformance-tests @ 07/31/25 02:02:18.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:18.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:18.636
  STEP: Getting node addresses @ 07/31/25 02:02:18.639
  I0731 02:02:18.639612 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0731 02:02:18.702951 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6361" for this suite. @ 07/31/25 02:02:18.708
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 07/31/25 02:02:18.718
  I0731 02:02:18.718496 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 02:02:18.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:18.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:18.753
  STEP: Starting the proxy @ 07/31/25 02:02:18.756
  I0731 02:02:18.756981 24 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1467 proxy --unix-socket=/tmp/kubectl-proxy-unix2601396732/test'
  STEP: retrieving proxy /api/ output @ 07/31/25 02:02:18.81
  I0731 02:02:18.812604 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1467" for this suite. @ 07/31/25 02:02:18.819
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/31/25 02:02:18.831
  I0731 02:02:18.831517 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pods @ 07/31/25 02:02:18.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:18.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:18.856
  I0731 02:02:18.859403 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: creating the pod @ 07/31/25 02:02:18.859
  STEP: submitting the pod to kubernetes @ 07/31/25 02:02:18.86
  E0731 02:02:19.158868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:20.159717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:02:20.965146 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5559" for this suite. @ 07/31/25 02:02:20.971
• [2.153 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 07/31/25 02:02:20.984
  I0731 02:02:20.985073 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename daemonsets @ 07/31/25 02:02:20.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:21.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:21.01
  STEP: Creating simple DaemonSet "daemon-set" @ 07/31/25 02:02:21.088
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/31/25 02:02:21.096
  E0731 02:02:21.160499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:02:21.172956 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:02:21.173012 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:02:21.173027 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:02:21.183251 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 02:02:21.183302 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  I0731 02:02:22.101580 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:02:22.101713 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:02:22.101787 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:02:22.104733 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0731 02:02:22.104838 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 02:02:22.160755      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:02:23.102312 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:02:23.102370 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:02:23.102427 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:02:23.106315 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0731 02:02:23.106748 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Getting /status @ 07/31/25 02:02:23.11
  I0731 02:02:23.114573 24 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/31/25 02:02:23.114
  I0731 02:02:23.125658 24 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/31/25 02:02:23.125
  I0731 02:02:23.129033 24 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0731 02:02:23.129221 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0731 02:02:23.129322 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0731 02:02:23.129422 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0731 02:02:23.129533 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0731 02:02:23.129585 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0731 02:02:23.129618 24 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-724 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0731 02:02:23.129634 24 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/31/25 02:02:23.129
  STEP: watching for the daemon set status to be patched @ 07/31/25 02:02:23.137
  I0731 02:02:23.140220 24 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0731 02:02:23.140316 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0731 02:02:23.140396 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0731 02:02:23.140736 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0731 02:02:23.140818 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0731 02:02:23.140915 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0731 02:02:23.141000 24 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-724 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0731 02:02:23.141081 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0731 02:02:23.141094 24 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-724 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0731 02:02:23.141104 24 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/31/25 02:02:23.147
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-724, will wait for the garbage collector to delete the pods @ 07/31/25 02:02:23.147
  E0731 02:02:23.160738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:02:23.212869 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.947163ms
  I0731 02:02:23.313297 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.384744ms
  E0731 02:02:24.161124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:02:24.817522 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 02:02:24.817581 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0731 02:02:24.821568 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"888621"},"items":null}

  I0731 02:02:24.824686 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"888621"},"items":null}

  I0731 02:02:24.841067 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-724" for this suite. @ 07/31/25 02:02:24.931
• [3.958 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 07/31/25 02:02:24.943
  I0731 02:02:24.943358 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename security-context @ 07/31/25 02:02:24.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:24.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:24.968
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/31/25 02:02:24.971
  E0731 02:02:25.162000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:26.162525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:27.162758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:28.163377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:02:28.997
  I0731 02:02:29.000046 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod security-context-4e27a0ac-9dcf-484c-9125-cb653c076d39 container test-container: <nil>
  STEP: delete the pod @ 07/31/25 02:02:29.005
  I0731 02:02:29.028646 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-212" for this suite. @ 07/31/25 02:02:29.033
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 07/31/25 02:02:29.045
  I0731 02:02:29.045368 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 02:02:29.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:29.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:29.063
  STEP: Creating an indexed job with successPolicy @ 07/31/25 02:02:29.068
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 07/31/25 02:02:29.076
  E0731 02:02:29.163855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:30.164134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:31.164671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:32.164880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/31/25 02:02:33.091
  STEP: Verifying that the job status to ensure correct final state @ 07/31/25 02:02:33.097
  I0731 02:02:33.100490 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6717" for this suite. @ 07/31/25 02:02:33.105
• [4.071 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 07/31/25 02:02:33.116
  I0731 02:02:33.116482 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 02:02:33.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:33.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:33.132
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 02:02:33.135
  E0731 02:02:33.165753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:34.166326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:35.166259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:36.167083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:02:37.166
  E0731 02:02:37.167758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:02:37.169332 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-03a947dc-3f18-4fba-b86d-e6ba56bf854e container client-container: <nil>
  STEP: delete the pod @ 07/31/25 02:02:37.176
  I0731 02:02:37.200861 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4762" for this suite. @ 07/31/25 02:02:37.207
• [4.101 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/31/25 02:02:37.217
  I0731 02:02:37.217447 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 02:02:37.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:37.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:37.24
  STEP: Creating projection with secret that has name projected-secret-test-map-4f89b341-6a6e-4331-ba71-1b7e84b3d6ee @ 07/31/25 02:02:37.244
  STEP: Creating a pod to test consume secrets @ 07/31/25 02:02:37.251
  E0731 02:02:38.171584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:39.171946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:40.172905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:41.173654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:02:41.28
  I0731 02:02:41.284967 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-projected-secrets-45cc23ed-5e60-424d-bfba-a2fba60912d1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 02:02:41.293
  I0731 02:02:41.329896 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1449" for this suite. @ 07/31/25 02:02:41.335
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 07/31/25 02:02:41.346
  I0731 02:02:41.346382 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 02:02:41.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:41.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:41.363
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 02:02:41.366
  E0731 02:02:42.174111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:43.174900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:44.175126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:45.175183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:02:45.396
  I0731 02:02:45.399473 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-60c6ec80-ba56-4f76-a998-49d2c21c62ac container client-container: <nil>
  STEP: delete the pod @ 07/31/25 02:02:45.406
  I0731 02:02:45.424814 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7405" for this suite. @ 07/31/25 02:02:45.429
• [4.104 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/31/25 02:02:45.451
  I0731 02:02:45.451259 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename watch @ 07/31/25 02:02:45.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:45.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:45.469
  STEP: creating a new configmap @ 07/31/25 02:02:45.473
  STEP: modifying the configmap once @ 07/31/25 02:02:45.479
  STEP: modifying the configmap a second time @ 07/31/25 02:02:45.486
  STEP: deleting the configmap @ 07/31/25 02:02:45.493
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/31/25 02:02:45.499
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/31/25 02:02:45.501
  I0731 02:02:45.501502 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5200  57fe6d8c-d177-4ccc-97d7-22786565f388 888920 0 2025-07-31 02:02:45 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-31 02:02:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 02:02:45.501711 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5200  57fe6d8c-d177-4ccc-97d7-22786565f388 888921 0 2025-07-31 02:02:45 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-31 02:02:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0731 02:02:45.501821 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5200" for this suite. @ 07/31/25 02:02:45.53
• [0.090 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 07/31/25 02:02:45.54
  I0731 02:02:45.540531 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename resourcequota @ 07/31/25 02:02:45.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:45.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:45.573
  STEP: Creating a ResourceQuota @ 07/31/25 02:02:45.576
  STEP: Getting a ResourceQuota @ 07/31/25 02:02:45.583
  STEP: Updating a ResourceQuota @ 07/31/25 02:02:45.585
  STEP: Verifying a ResourceQuota was modified @ 07/31/25 02:02:45.6
  STEP: Deleting a ResourceQuota @ 07/31/25 02:02:45.604
  STEP: Verifying the deleted ResourceQuota @ 07/31/25 02:02:45.61
  I0731 02:02:45.613283 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5244" for this suite. @ 07/31/25 02:02:45.63
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 07/31/25 02:02:45.641
  I0731 02:02:45.641527 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename gc @ 07/31/25 02:02:45.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:45.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:45.661
  STEP: create the rc @ 07/31/25 02:02:45.665
  I0731 02:02:45.676238      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0731 02:02:46.176984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:47.177772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:48.178152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:49.178392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:50.178757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/31/25 02:02:50.684
  STEP: wait for all pods to be garbage collected @ 07/31/25 02:02:50.692
  E0731 02:02:51.178910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:52.179117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:53.179556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:54.179748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:55.179923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/31/25 02:02:55.702
  I0731 02:02:55.783903 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0731 02:02:55.785877 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-50" for this suite. @ 07/31/25 02:02:55.791
• [10.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 07/31/25 02:02:55.804
  I0731 02:02:55.804827 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename taint-single-pod @ 07/31/25 02:02:55.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:02:55.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:02:55.831
  I0731 02:02:55.834697 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0731 02:02:56.180403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:57.180633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:58.181086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:02:59.181531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:00.181816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:01.182030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:02.185524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:03.185708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:04.186735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:05.187017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:06.187554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:07.187694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:08.187881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:09.188186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:10.188726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:11.188904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:12.190016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:13.190382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:14.191412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:15.191679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:16.191824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:17.192095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:18.192683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:19.192963      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:20.194078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:21.194372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:22.194965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:23.195945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:24.196844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:25.196788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:26.196960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:27.197049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:28.197823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:29.198013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:30.198624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:31.198868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:32.199898      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:33.200139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:34.200448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:35.200610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:36.201361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:37.201746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:38.202428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:39.203068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:40.203932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:41.204278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:42.205428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:43.205759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:44.206678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:45.206932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:46.207982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:47.208432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:48.209229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:49.209568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:50.209875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:51.210214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:52.211253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:53.211543      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:54.211808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:55.212087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:03:55.835448 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0731 02:03:55.841121 24 taints.go:144] Starting informer...
  STEP: Starting pod... @ 07/31/25 02:03:55.841
  I0731 02:03:56.058776 24 taints.go:294] Pod is running on viola-gs-worker-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/31/25 02:03:56.059
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/31/25 02:03:56.073
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/31/25 02:03:56.076
  I0731 02:03:56.076920 24 taints.go:313] Pod wasn't evicted. Proceeding
  I0731 02:03:56.076939 24 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/31/25 02:03:56.091
  STEP: Waiting some time to make sure that toleration time passed. @ 07/31/25 02:03:56.096
  E0731 02:03:56.213155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:57.213859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:58.214166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:03:59.214371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:00.214524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:01.214734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:02.214970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:03.215092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:04.215418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:05.215508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:06.216186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:07.216599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:08.216933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:09.217194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:10.217377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:11.217645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:12.218603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:13.218994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:14.219454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:15.219709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:16.220448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:17.220703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:18.220955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:19.221367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:20.221565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:21.221818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:22.222102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:23.222468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:24.223357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:25.224310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:26.224438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:27.224486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:28.224784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:29.224912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:30.225075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:31.225815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:32.226606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:33.227075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:34.227413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:35.227627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:36.227945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:37.228577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:38.228912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:39.229311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:40.229612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:41.230021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:42.230358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:43.230668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:44.231068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:45.231194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:46.231565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:47.231979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:48.232318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:49.232740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:50.233052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:51.233459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:52.233811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:53.234237      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:54.234653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:55.234772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:56.235890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:57.236014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:58.236352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:04:59.236805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:00.237065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:01.237393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:02.238475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:03.238895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:04.239245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:05.239372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:06.239700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:07.240087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:08.240400      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:09.240578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:10.241553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:05:11.097368 24 taints.go:329] Pod wasn't evicted. Test successful
  I0731 02:05:11.097692 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4808" for this suite. @ 07/31/25 02:05:11.105
• [135.311 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 07/31/25 02:05:11.115
  I0731 02:05:11.115777 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename statefulset @ 07/31/25 02:05:11.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:05:11.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:05:11.142
  STEP: Creating service test in namespace statefulset-9483 @ 07/31/25 02:05:11.145
  STEP: Creating a new StatefulSet @ 07/31/25 02:05:11.155
  I0731 02:05:11.173630 24 wait.go:44] Found 0 stateful pods, waiting for 3
  E0731 02:05:11.241955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:12.242380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:13.242603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:14.243009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:15.243137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:16.243953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:17.244070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:18.244436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:19.244562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:20.244834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:05:21.175246 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0731 02:05:21.175296 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0731 02:05:21.175303 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0731 02:05:21.184885 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-9483 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0731 02:05:21.245465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:05:21.341049 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0731 02:05:21.341100 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0731 02:05:21.341116 24 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0731 02:05:22.246249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:23.246345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:24.246604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:25.246745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:26.247040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:27.247126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:28.247464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:29.247549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:30.247665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:31.247807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/31/25 02:05:31.351
  I0731 02:05:31.361743 24 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 07/31/25 02:05:31.361
  E0731 02:05:32.248004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:33.248148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:34.248427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:35.248522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:36.248801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:37.248921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:38.249182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:39.249301      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:40.249457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:41.249585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 07/31/25 02:05:41.371
  I0731 02:05:41.375494 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-9483 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0731 02:05:41.509647 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0731 02:05:41.509707 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0731 02:05:41.509721 24 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0731 02:05:42.249704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:43.250017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:44.250609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:45.251498      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:46.252265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:47.252383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:48.252782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:49.252915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:50.253100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:51.253315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 07/31/25 02:05:51.527
  I0731 02:05:51.527153 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-9483 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0731 02:05:51.645955 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0731 02:05:51.646210 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0731 02:05:51.646224 24 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0731 02:05:52.253895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:53.253872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:54.253873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:55.254026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:56.254144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:57.254546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:58.254641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:05:59.255242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:00.255849      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:01.256237      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:06:01.668239 24 statefulset.go:2542] Updating stateful set ss2
  E0731 02:06:02.257193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:03.257554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:04.257990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:05.258001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:06.258321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:07.258623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:08.259139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:09.259423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:10.259533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:11.259984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 07/31/25 02:06:11.683
  I0731 02:06:11.781052 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=statefulset-9483 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0731 02:06:11.910253 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0731 02:06:11.910331 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0731 02:06:11.910344 24 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0731 02:06:12.260818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:13.261513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:14.261675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:15.261839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:16.261938      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:17.262064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:18.262178      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:19.262365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:20.262469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:21.262621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:06:21.925457 24 statefulset.go:138] Deleting all statefulset in ns statefulset-9483
  I0731 02:06:21.929614 24 rest.go:153] Scaling statefulset ss2 to 0
  E0731 02:06:22.263151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:23.263434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:24.263764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:25.263989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:26.264849      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:27.265121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:28.265398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:29.266277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:30.267056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:31.267907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:06:31.946125 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0731 02:06:31.949561 24 rest.go:91] Deleting statefulset ss2
  I0731 02:06:31.969460 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9483" for this suite. @ 07/31/25 02:06:31.973
• [80.868 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 07/31/25 02:06:31.989
  I0731 02:06:31.989253 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 02:06:31.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:06:32.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:06:32.024
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 02:06:32.027
  E0731 02:06:32.268398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:33.268691      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:34.269192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:35.269305      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:06:36.052
  I0731 02:06:36.056215 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-b1a19e7c-070e-48ee-8236-4fbc7a37e263 container client-container: <nil>
  STEP: delete the pod @ 07/31/25 02:06:36.071
  I0731 02:06:36.091986 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4919" for this suite. @ 07/31/25 02:06:36.096
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 07/31/25 02:06:36.103
  I0731 02:06:36.103719 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename disruption @ 07/31/25 02:06:36.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:06:36.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:06:36.122
  STEP: Waiting for the pdb to be processed @ 07/31/25 02:06:36.13
  E0731 02:06:36.269822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:37.269979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 07/31/25 02:06:38.135
  STEP: Waiting for all pods to be running @ 07/31/25 02:06:38.145
  I0731 02:06:38.158465 24 disruption.go:691] running pods: 0 < 1
  E0731 02:06:38.270466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:39.270618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/31/25 02:06:40.15
  STEP: Waiting for the pdb to be processed @ 07/31/25 02:06:40.165
  STEP: Patching PodDisruptionBudget status @ 07/31/25 02:06:40.174
  STEP: Waiting for the pdb to be processed @ 07/31/25 02:06:40.188
  I0731 02:06:40.196621 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7345" for this suite. @ 07/31/25 02:06:40.2
• [4.105 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 07/31/25 02:06:40.209
  I0731 02:06:40.209053 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 02:06:40.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:06:40.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:06:40.233
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 02:06:40.236
  E0731 02:06:40.271559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:41.271784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:42.272020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:43.272338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:06:44.264
  I0731 02:06:44.267958 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-55e60790-d304-4bbe-8ba1-30ce8f77a112 container client-container: <nil>
  E0731 02:06:44.272943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/31/25 02:06:44.273
  I0731 02:06:44.294233 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-314" for this suite. @ 07/31/25 02:06:44.299
• [4.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 07/31/25 02:06:44.31
  I0731 02:06:44.310331 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 02:06:44.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:06:44.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:06:44.332
  STEP: Setting up server cert @ 07/31/25 02:06:44.356
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 02:06:44.595
  STEP: Deploying the webhook pod @ 07/31/25 02:06:44.602
  STEP: Wait for the deployment to be ready @ 07/31/25 02:06:44.622
  I0731 02:06:44.631797 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 02:06:45.273954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:46.274436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 02:06:46.645
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 02:06:46.666
  E0731 02:06:47.275411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:06:47.666751 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/31/25 02:06:47.671
  I0731 02:06:47.752844 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3075" for this suite. @ 07/31/25 02:06:47.76
  STEP: Destroying namespace "webhook-markers-1849" for this suite. @ 07/31/25 02:06:47.774
• [3.475 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 07/31/25 02:06:47.785
  I0731 02:06:47.785769 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubelet-test @ 07/31/25 02:06:47.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:06:47.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:06:47.808
  E0731 02:06:48.276402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:49.276535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:50.276929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:51.276855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:06:51.833515 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5401" for this suite. @ 07/31/25 02:06:51.839
• [4.062 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/31/25 02:06:51.847
  I0731 02:06:51.847540 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename daemonsets @ 07/31/25 02:06:51.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:06:51.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:06:51.867
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/31/25 02:06:51.954
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/31/25 02:06:51.963
  I0731 02:06:52.041347 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:52.041401 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:52.041416 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:52.048711 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 02:06:52.048768 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 02:06:52.277838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:06:52.967851 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:52.967895 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:52.967910 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:52.992038 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 02:06:52.992074 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 02:06:53.278207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:06:53.969604 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:53.969754 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:53.969803 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:53.974132 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0731 02:06:53.974251 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/31/25 02:06:53.977
  I0731 02:06:54.070275 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:54.070581 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:54.070799 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:54.075903 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0731 02:06:54.076282 24 fixtures.go:131] Node viola-gs-worker-4 is running 0 daemon pod, expected 1
  E0731 02:06:54.279058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:06:54.997610 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:54.997657 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:54.997672 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:55.001542 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0731 02:06:55.001570 24 fixtures.go:131] Node viola-gs-worker-4 is running 0 daemon pod, expected 1
  E0731 02:06:55.280075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:06:55.997889 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:55.997931 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:55.997947 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:06:56.003636 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0731 02:06:56.003679 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/31/25 02:06:56.003
  STEP: Deleting DaemonSet "daemon-set" @ 07/31/25 02:06:56.012
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7863, will wait for the garbage collector to delete the pods @ 07/31/25 02:06:56.012
  I0731 02:06:56.085031 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 14.364998ms
  I0731 02:06:56.186079 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.04299ms
  E0731 02:06:56.280455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:57.281586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:06:57.391332 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 02:06:57.391379 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0731 02:06:57.395310 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"891095"},"items":null}

  I0731 02:06:57.398836 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"891095"},"items":null}

  I0731 02:06:57.416557 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7863" for this suite. @ 07/31/25 02:06:57.425
• [5.586 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 07/31/25 02:06:57.434
  I0731 02:06:57.434090 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 02:06:57.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:06:57.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:06:57.456
  STEP: Creating configMap with name projected-configmap-test-volume-map-c2660baf-d9b2-4cc4-bdf1-170aff00d707 @ 07/31/25 02:06:57.458
  STEP: Creating a pod to test consume configMaps @ 07/31/25 02:06:57.464
  E0731 02:06:58.283026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:06:59.283993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:00.284086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:01.284425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:07:01.509
  I0731 02:07:01.512906 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-projected-configmaps-02b40762-b1af-43fb-ac09-07da72ab38d6 container agnhost-container: <nil>
  STEP: delete the pod @ 07/31/25 02:07:01.519
  I0731 02:07:01.541526 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2399" for this suite. @ 07/31/25 02:07:01.549
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/31/25 02:07:01.557
  I0731 02:07:01.557570 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename events @ 07/31/25 02:07:01.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:07:01.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:07:01.58
  STEP: creating a test event @ 07/31/25 02:07:01.584
  STEP: listing events in all namespaces @ 07/31/25 02:07:01.591
  STEP: listing events in test namespace @ 07/31/25 02:07:01.6
  STEP: listing events with field selection filtering on source @ 07/31/25 02:07:01.608
  STEP: listing events with field selection filtering on reportingController @ 07/31/25 02:07:01.611
  STEP: getting the test event @ 07/31/25 02:07:01.619
  STEP: patching the test event @ 07/31/25 02:07:01.623
  STEP: getting the test event @ 07/31/25 02:07:01.642
  STEP: updating the test event @ 07/31/25 02:07:01.646
  STEP: getting the test event @ 07/31/25 02:07:01.683
  STEP: deleting the test event @ 07/31/25 02:07:01.687
  STEP: listing events in all namespaces @ 07/31/25 02:07:01.696
  STEP: listing events in test namespace @ 07/31/25 02:07:01.706
  I0731 02:07:01.709689 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9661" for this suite. @ 07/31/25 02:07:01.716
• [0.172 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 07/31/25 02:07:01.729
  I0731 02:07:01.729627 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 02:07:01.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:07:01.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:07:01.748
  STEP: Creating configMap with name cm-test-opt-del-6fa3c639-d2cc-4af5-8808-6fdb97e6351f @ 07/31/25 02:07:01.817
  STEP: Creating configMap with name cm-test-opt-upd-0aada419-ce9f-4540-b169-dcafa60d0af0 @ 07/31/25 02:07:01.824
  STEP: Creating the pod @ 07/31/25 02:07:01.832
  E0731 02:07:02.284610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:03.284984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-6fa3c639-d2cc-4af5-8808-6fdb97e6351f @ 07/31/25 02:07:03.878
  STEP: Updating configmap cm-test-opt-upd-0aada419-ce9f-4540-b169-dcafa60d0af0 @ 07/31/25 02:07:03.886
  STEP: Creating configMap with name cm-test-opt-create-824af9aa-7fcb-4b7c-b735-c61713f0705f @ 07/31/25 02:07:03.893
  STEP: waiting to observe update in volume @ 07/31/25 02:07:03.9
  E0731 02:07:04.285617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:05.285772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:06.286017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:07.286283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:08.286822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:09.286924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:10.287982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:11.288357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:12.288959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:13.289166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:14.289826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:15.290114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:16.290243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:17.290602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:18.290934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:19.291978      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:20.292557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:21.292796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:22.292975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:23.293355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:24.294080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:25.294368      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:26.294930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:27.295199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:28.296818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:29.296788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:30.297467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:31.297574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:32.298212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:33.298448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:34.299515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:35.299994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:36.300992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:37.301476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:38.302164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:39.302203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:40.302937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:41.303262      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:42.303583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:43.304381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:44.304568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:45.305164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:46.305958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:47.306861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:48.307466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:49.307538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:50.307739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:51.308202      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:52.308344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:53.308578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:54.308610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:55.309043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:56.309763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:57.310009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:58.310179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:07:59.310457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:00.310637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:01.310781      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:02.311590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:03.311859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:04.312922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:05.313210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:06.313327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:07.313641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:08.313810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:09.314107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:10.314332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:11.315397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:12.315924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:13.316232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:14.316903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:15.317093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:16.317673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:17.317990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:18.318942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:19.319209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:20.319481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:21.319740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:22.320711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:23.321027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:24.321430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:25.321569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:26.322268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:27.322726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:28.323724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:29.323958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:30.324614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:31.325449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:32.326535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:33.326625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:34.326883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:08:34.355303 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5664" for this suite. @ 07/31/25 02:08:34.359
• [92.641 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 07/31/25 02:08:34.37
  I0731 02:08:34.370903 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename resourcequota @ 07/31/25 02:08:34.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:08:34.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:08:34.393
  STEP: Counting existing ResourceQuota @ 07/31/25 02:08:34.396
  E0731 02:08:35.326925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:36.327961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:37.328279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:38.328299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:39.328443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/31/25 02:08:39.4
  STEP: Ensuring resource quota status is calculated @ 07/31/25 02:08:39.409
  E0731 02:08:40.329271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:41.329617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 07/31/25 02:08:41.415
  STEP: Creating a NodePort Service @ 07/31/25 02:08:41.452
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/31/25 02:08:41.493
  STEP: Ensuring resource quota status captures service creation @ 07/31/25 02:08:41.544
  E0731 02:08:42.329721      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:43.330042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 07/31/25 02:08:43.549
  STEP: Ensuring resource quota status released usage @ 07/31/25 02:08:43.645
  E0731 02:08:44.330475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:45.330909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:08:45.651506 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8379" for this suite. @ 07/31/25 02:08:45.657
• [11.297 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 07/31/25 02:08:45.668
  I0731 02:08:45.668555 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename dns @ 07/31/25 02:08:45.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:08:45.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:08:45.692
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5543.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-5543.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 07/31/25 02:08:45.696
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5543.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5543.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/31/25 02:08:45.696
  STEP: creating a pod to probe /etc/hosts @ 07/31/25 02:08:45.696
  STEP: submitting the pod to kubernetes @ 07/31/25 02:08:45.697
  E0731 02:08:46.331968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:47.332148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:48.333177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:49.333361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/31/25 02:08:49.727
  STEP: looking for the results for each expected name from probers @ 07/31/25 02:08:49.731
  I0731 02:08:49.747716 24 dns_common.go:546] DNS probes using dns-5543/dns-test-bf9df377-32ea-488a-9e76-fb4f3526a69c succeeded

  STEP: deleting the pod @ 07/31/25 02:08:49.747
  I0731 02:08:49.770784 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5543" for this suite. @ 07/31/25 02:08:49.777
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 07/31/25 02:08:49.788
  I0731 02:08:49.788738 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 02:08:49.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:08:49.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:08:49.811
  STEP: Creating the pod @ 07/31/25 02:08:49.814
  E0731 02:08:50.333696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:51.333804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:52.334280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:08:52.384023 24 pod_client.go:173] Successfully updated pod "labelsupdate15f1ebb5-0499-4262-91fe-8cf42874426f"
  E0731 02:08:53.335040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:54.335522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:08:54.400573 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-502" for this suite. @ 07/31/25 02:08:54.408
• [4.630 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 07/31/25 02:08:54.419
  I0731 02:08:54.419071 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pv @ 07/31/25 02:08:54.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:08:54.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:08:54.441
  STEP: Creating initial PV and PVC @ 07/31/25 02:08:54.444
  I0731 02:08:54.444536 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4614" @ 07/31/25 02:08:54.474
  STEP: Listing PVCs in namespace "pv-4614" @ 07/31/25 02:08:54.481
  STEP: Reading "pvc-s2jfd" Status @ 07/31/25 02:08:54.485
  STEP: Reading "pv-4614-mqcbf" Status @ 07/31/25 02:08:54.491
  STEP: Patching "pvc-s2jfd" Status @ 07/31/25 02:08:54.497
  STEP: Patching "pv-4614-mqcbf" Status @ 07/31/25 02:08:54.51
  STEP: Updating "pvc-s2jfd" Status @ 07/31/25 02:08:54.52
  STEP: Updating "pv-4614-mqcbf" Status @ 07/31/25 02:08:54.537
  I0731 02:08:54.572542 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0731 02:08:54.572820 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-s2jfd"
  I0731 02:08:54.593741 24 pv.go:193] Deleting PersistentVolume "pv-4614-mqcbf"
  I0731 02:08:54.605521 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4614" for this suite. @ 07/31/25 02:08:54.616
• [0.205 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 07/31/25 02:08:54.624
  I0731 02:08:54.624119 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename field-validation @ 07/31/25 02:08:54.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:08:54.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:08:54.653
  I0731 02:08:54.659307 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 02:08:55.336386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:56.337055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:57.337744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:58.337965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:08:59.338569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:00.339585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:01.339908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:09:02.202909      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0731 02:09:02.202952      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0731 02:09:02.202960      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0731 02:09:02.202971      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0731 02:09:02.203080      24 warnings.go:110] "Warning: unknown field \"gamma\""
  E0731 02:09:02.340398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:09:02.751395 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-418" for this suite. @ 07/31/25 02:09:02.756
• [8.140 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 07/31/25 02:09:02.763
  I0731 02:09:02.763992 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename configmap @ 07/31/25 02:09:02.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:09:02.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:09:02.783
  STEP: Creating configMap with name configmap-test-volume-0c227607-2a80-44df-8883-26c4ca2bb4c6 @ 07/31/25 02:09:02.785
  STEP: Creating a pod to test consume configMaps @ 07/31/25 02:09:02.791
  E0731 02:09:03.340527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:04.340687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:05.341001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:06.341214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:09:06.815
  I0731 02:09:06.819051 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-configmaps-2f1aecd8-f7c5-487c-b23d-ffb539b22442 container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 02:09:06.824
  I0731 02:09:06.847535 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5626" for this suite. @ 07/31/25 02:09:06.853
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/31/25 02:09:06.861
  I0731 02:09:06.861493 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename hostport @ 07/31/25 02:09:06.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:09:06.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:09:06.886
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/31/25 02:09:06.955
  E0731 02:09:07.341804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:08.341926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.20.30.236 on the node which pod1 resides and expect scheduled @ 07/31/25 02:09:08.979
  E0731 02:09:09.342639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:10.342892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.20.30.236 but use UDP protocol on the node which pod2 resides @ 07/31/25 02:09:10.993
  E0731 02:09:11.343450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:12.343683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:13.344083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:14.344023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:15.345045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:16.345483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:17.346547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:18.346998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:19.347810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:20.348021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:21.348266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:22.348902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:23.349886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:24.350000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/31/25 02:09:25.055
  I0731 02:09:25.055125 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.20.30.236 http://127.0.0.1:54323/hostname] Namespace:hostport-6630 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 02:09:25.055148 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 02:09:25.055198 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/hostport-6630/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.20.30.236+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0731 02:09:25.147143 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.20.30.236, port: 54323 @ 07/31/25 02:09:25.147
  I0731 02:09:25.147278 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.20.30.236:54323/hostname] Namespace:hostport-6630 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 02:09:25.147304 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 02:09:25.147433 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/hostport-6630/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.20.30.236%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0731 02:09:25.204815 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.20.30.236, port: 54323 UDP @ 07/31/25 02:09:25.204
  I0731 02:09:25.205049 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.20.30.236 54323] Namespace:hostport-6630 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 02:09:25.205077 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 02:09:25.205187 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/hostport-6630/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.20.30.236+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0731 02:09:25.354612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:26.354917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:27.355326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:28.355553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:29.355722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:09:30.268890 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 02:09:30.269083 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6630" for this suite. @ 07/31/25 02:09:30.275
• [23.423 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 07/31/25 02:09:30.284
  I0731 02:09:30.284283 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 02:09:30.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:09:30.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:09:30.303
  STEP: Setting up server cert @ 07/31/25 02:09:30.328
  E0731 02:09:30.356298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 02:09:30.928
  STEP: Deploying the webhook pod @ 07/31/25 02:09:30.937
  STEP: Wait for the deployment to be ready @ 07/31/25 02:09:30.956
  I0731 02:09:30.964817 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0731 02:09:31.357436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:32.357710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 02:09:32.976
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 02:09:32.997
  E0731 02:09:33.358220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:09:33.997949 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/31/25 02:09:34.003
  STEP: create a pod that should be denied by the webhook @ 07/31/25 02:09:34.023
  STEP: create a pod that causes the webhook to hang @ 07/31/25 02:09:34.033
  E0731 02:09:34.359060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:35.360041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:36.360152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:37.360297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:38.360649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:39.360839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:40.361023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:41.361253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:42.361650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:43.361760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 07/31/25 02:09:44.041
  STEP: create a configmap that should be admitted by the webhook @ 07/31/25 02:09:44.05
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/31/25 02:09:44.062
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/31/25 02:09:44.071
  STEP: create a namespace that bypass the webhook @ 07/31/25 02:09:44.077
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/31/25 02:09:44.092
  I0731 02:09:44.179444 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2914" for this suite. @ 07/31/25 02:09:44.194
  STEP: Destroying namespace "webhook-markers-4662" for this suite. @ 07/31/25 02:09:44.207
  STEP: Destroying namespace "exempted-namespace-2403" for this suite. @ 07/31/25 02:09:44.216
• [13.942 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/31/25 02:09:44.228
  I0731 02:09:44.228091 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename secrets @ 07/31/25 02:09:44.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:09:44.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:09:44.253
  STEP: Creating secret with name secret-test-map-5ff68582-c347-4a75-a03a-0ee2e58b7978 @ 07/31/25 02:09:44.256
  STEP: Creating a pod to test consume secrets @ 07/31/25 02:09:44.264
  E0731 02:09:44.362404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:45.364559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:46.365049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:47.365282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:09:48.292
  I0731 02:09:48.296479 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-secrets-3a8e8948-c6b6-46c6-9350-db511e0f9778 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/31/25 02:09:48.304
  I0731 02:09:48.342250 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6269" for this suite. @ 07/31/25 02:09:48.346
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 07/31/25 02:09:48.359
  I0731 02:09:48.359100 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 02:09:48.359
  E0731 02:09:48.365574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:09:48.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:09:48.381
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 02:09:48.385
  E0731 02:09:49.366166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:50.366352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:51.366764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:52.367195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:09:52.408
  I0731 02:09:52.412631 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-f462a557-1d2a-433a-80d9-3af49c6d6910 container client-container: <nil>
  STEP: delete the pod @ 07/31/25 02:09:52.418
  I0731 02:09:52.441215 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8600" for this suite. @ 07/31/25 02:09:52.444
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 07/31/25 02:09:52.459
  I0731 02:09:52.459680 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 02:09:52.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:09:52.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:09:52.477
  STEP: Setting up server cert @ 07/31/25 02:09:52.505
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 02:09:53.077
  STEP: Deploying the webhook pod @ 07/31/25 02:09:53.083
  STEP: Wait for the deployment to be ready @ 07/31/25 02:09:53.101
  I0731 02:09:53.113467 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 02:09:53.367896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:54.368169      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 02:09:55.127
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 02:09:55.152
  E0731 02:09:55.369638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:09:56.153306 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/31/25 02:09:56.159
  I0731 02:09:56.239370 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-978" for this suite. @ 07/31/25 02:09:56.246
  STEP: Destroying namespace "webhook-markers-6990" for this suite. @ 07/31/25 02:09:56.263
• [3.813 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 07/31/25 02:09:56.274
  I0731 02:09:56.274426 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 02:09:56.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:09:56.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:09:56.301
  STEP: Setting up server cert @ 07/31/25 02:09:56.337
  E0731 02:09:56.368926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 02:09:57.279
  STEP: Deploying the webhook pod @ 07/31/25 02:09:57.293
  STEP: Wait for the deployment to be ready @ 07/31/25 02:09:57.309
  I0731 02:09:57.321571 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 02:09:57.369731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:09:58.370229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:09:59.334434 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 31, 2, 9, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 2, 9, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 2, 9, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 2, 9, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0731 02:09:59.370742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:00.370912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 02:10:01.338
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 02:10:01.356
  E0731 02:10:01.371861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:10:02.357806 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/31/25 02:10:02.362
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/31/25 02:10:02.362
  E0731 02:10:02.371833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/31/25 02:10:02.38
  E0731 02:10:03.374982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/31/25 02:10:03.399
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/31/25 02:10:03.399
  E0731 02:10:04.375359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 07/31/25 02:10:04.435
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/31/25 02:10:04.436
  E0731 02:10:05.375696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:06.375790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:07.375991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:08.376781      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:09.376979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/31/25 02:10:09.475
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/31/25 02:10:09.475
  E0731 02:10:10.377183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:11.377477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:12.377834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:13.378157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:14.378372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:10:14.597381 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3221" for this suite. @ 07/31/25 02:10:14.601
  STEP: Destroying namespace "webhook-markers-4207" for this suite. @ 07/31/25 02:10:14.611
• [18.348 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 07/31/25 02:10:14.621
  I0731 02:10:14.621805 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename gc @ 07/31/25 02:10:14.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:10:14.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:10:14.644
  I0731 02:10:14.746605 24 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"e210aaa3-4a8c-4406-b915-4d805688a10d", Controller:(*bool)(0xc0075ee156), BlockOwnerDeletion:(*bool)(0xc0075ee157)}}
  I0731 02:10:14.754487 24 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"f413cafc-3733-4706-a0e5-9ddcffda1b85", Controller:(*bool)(0xc00425f066), BlockOwnerDeletion:(*bool)(0xc00425f067)}}
  I0731 02:10:14.766962 24 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"f89a2156-b122-43d4-8a3a-ad905d57c8b9", Controller:(*bool)(0xc00425f222), BlockOwnerDeletion:(*bool)(0xc00425f223)}}
  E0731 02:10:15.378616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:16.378984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:17.379125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:18.379756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:19.379881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:10:19.783083 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-309" for this suite. @ 07/31/25 02:10:19.787
• [5.175 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 07/31/25 02:10:19.796
  I0731 02:10:19.796851 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 02:10:19.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:10:19.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:10:19.817
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 07/31/25 02:10:19.821
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 07/31/25 02:10:19.83
  E0731 02:10:20.380018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:21.380195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:22.380282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:23.380449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 07/31/25 02:10:23.843
  I0731 02:10:23.847370 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-375" for this suite. @ 07/31/25 02:10:23.852
• [4.062 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/31/25 02:10:23.859
  I0731 02:10:23.859151 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename daemonsets @ 07/31/25 02:10:23.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:10:23.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:10:23.876
  STEP: Creating simple DaemonSet "daemon-set" @ 07/31/25 02:10:23.971
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/31/25 02:10:23.98
  I0731 02:10:24.053974 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:24.054054 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:24.054076 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:24.063852 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 02:10:24.063910 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 02:10:24.381137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:10:24.989633 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:24.989688 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:24.989702 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:24.992737 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0731 02:10:24.992780 24 fixtures.go:131] Node viola-gs-worker-1 is running 0 daemon pod, expected 1
  E0731 02:10:25.382140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:10:25.987743 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:25.987832 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:25.987849 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:25.992551 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0731 02:10:25.992586 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/31/25 02:10:25.995
  I0731 02:10:26.088393 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:26.088438 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:26.088459 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:26.093310 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0731 02:10:26.093344 24 fixtures.go:131] Node viola-gs-worker-3 is running 0 daemon pod, expected 1
  E0731 02:10:26.382405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:10:27.013876 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:27.013916 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:27.013937 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:27.017743 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0731 02:10:27.017774 24 fixtures.go:131] Node viola-gs-worker-3 is running 0 daemon pod, expected 1
  E0731 02:10:27.383111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:10:28.013071 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:28.013122 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:28.013147 24 fixtures.go:90] DaemonSet pods can't tolerate node viola-gs-master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0731 02:10:28.016115 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0731 02:10:28.016141 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/31/25 02:10:28.018
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1722, will wait for the garbage collector to delete the pods @ 07/31/25 02:10:28.018
  I0731 02:10:28.078513 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.306644ms
  I0731 02:10:28.179302 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.718489ms
  E0731 02:10:28.383967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:29.384145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:30.384593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:10:31.084046 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0731 02:10:31.084112 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0731 02:10:31.087379 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"893251"},"items":null}

  I0731 02:10:31.090432 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"893251"},"items":null}

  I0731 02:10:31.106912 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1722" for this suite. @ 07/31/25 02:10:31.112
• [7.262 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 07/31/25 02:10:31.122
  I0731 02:10:31.122267 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubelet-test @ 07/31/25 02:10:31.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:10:31.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:10:31.146
  I0731 02:10:31.185622 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9789" for this suite. @ 07/31/25 02:10:31.201
• [0.094 seconds]
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 07/31/25 02:10:31.215
  I0731 02:10:31.215972 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 02:10:31.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:10:31.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:10:31.238
  STEP: Looking for a node to schedule job pods @ 07/31/25 02:10:31.24
  STEP: Creating a job @ 07/31/25 02:10:31.305
  STEP: Waiting for all the pods to be ready @ 07/31/25 02:10:31.322
  E0731 02:10:31.385238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:32.386015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:33.386140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:34.386328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 07/31/25 02:10:35.338
  STEP: Evict all the Pods @ 07/31/25 02:10:35.348
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-xwshq/job-857 @ 07/31/25 02:10:35.348
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-ln67v/job-857 @ 07/31/25 02:10:35.348
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-8j86x/job-857 @ 07/31/25 02:10:35.349
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-xwshq/job-857 to be deleted @ 07/31/25 02:10:35.383
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-ln67v/job-857 to be deleted @ 07/31/25 02:10:35.384
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-8j86x/job-857 to be deleted @ 07/31/25 02:10:35.385
  E0731 02:10:35.387192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:36.386901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:37.387970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:38.389010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:39.389277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 07/31/25 02:10:39.398
  E0731 02:10:40.389521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:41.389899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:42.390768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:43.390940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:44.391297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:45.392239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:46.392493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:47.392716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:48.392821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:49.392989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:50.393366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:51.393672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:52.393869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:53.393964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:54.394722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:55.395474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:56.395484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:57.395809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:58.396531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:10:59.397545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:00.397951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:01.398347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:02.399178      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:03.399538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:04.400174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:05.400332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:06.400900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:07.400892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:08.401267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:09.401432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:10.402469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:11.402911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:12.403625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:13.403804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:14.404847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:15.405030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:16.405370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:17.405606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:18.406341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:19.406724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:20.407355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:21.407653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:11:21.513706 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-857" for this suite. @ 07/31/25 02:11:21.52
• [50.315 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 07/31/25 02:11:21.531
  I0731 02:11:21.531140 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename gc @ 07/31/25 02:11:21.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:11:21.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:11:21.556
  STEP: create the deployment @ 07/31/25 02:11:21.559
  I0731 02:11:21.566904      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/31/25 02:11:21.567
  STEP: delete the deployment @ 07/31/25 02:11:22.072
  STEP: wait for all rs to be garbage collected @ 07/31/25 02:11:22.081
  STEP: expected 0 pods, got 2 pods @ 07/31/25 02:11:22.103
  E0731 02:11:22.408648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/31/25 02:11:22.595
  I0731 02:11:22.680017 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0731 02:11:22.681284 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7920" for this suite. @ 07/31/25 02:11:22.687
• [1.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 07/31/25 02:11:22.697
  I0731 02:11:22.697212 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 02:11:22.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:11:22.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:11:22.717
  STEP: Setting up server cert @ 07/31/25 02:11:22.743
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 02:11:23.257
  STEP: Deploying the webhook pod @ 07/31/25 02:11:23.265
  STEP: Wait for the deployment to be ready @ 07/31/25 02:11:23.283
  I0731 02:11:23.298941 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 02:11:23.409788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:24.410052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 02:11:25.312
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 02:11:25.344
  E0731 02:11:25.410419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:11:26.345327 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0731 02:11:26.351259 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 02:11:26.411029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:27.411965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:28.412927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:29.413296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:30.414406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:31.415044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2726-crds.webhook.example.com via the AdmissionRegistration API @ 07/31/25 02:11:31.867
  STEP: Creating a custom resource while v1 is storage version @ 07/31/25 02:11:31.886
  E0731 02:11:32.415197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:33.415310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/31/25 02:11:33.926
  STEP: Patching the custom resource while v2 is storage version @ 07/31/25 02:11:33.933
  E0731 02:11:34.416386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:11:34.573917 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4095" for this suite. @ 07/31/25 02:11:34.581
  STEP: Destroying namespace "webhook-markers-568" for this suite. @ 07/31/25 02:11:34.591
• [11.904 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 07/31/25 02:11:34.601
  I0731 02:11:34.601661 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename secrets @ 07/31/25 02:11:34.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:11:34.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:11:34.64
  STEP: creating secret secrets-6984/secret-test-2ba1e3d1-8fb8-4243-92eb-f15e3175526a @ 07/31/25 02:11:34.642
  STEP: Creating a pod to test consume secrets @ 07/31/25 02:11:34.661
  E0731 02:11:35.417204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:36.417761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:37.418715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:38.419192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:11:38.692
  I0731 02:11:38.695811 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-configmaps-297e2352-0a00-47af-9669-e4cb60232066 container env-test: <nil>
  STEP: delete the pod @ 07/31/25 02:11:38.701
  I0731 02:11:38.718430 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6984" for this suite. @ 07/31/25 02:11:38.723
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 07/31/25 02:11:38.734
  I0731 02:11:38.734644 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 02:11:38.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:11:38.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:11:38.76
  STEP: Creating a pod to test downward API volume plugin @ 07/31/25 02:11:38.763
  E0731 02:11:39.419355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:40.419486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:41.419527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:42.419789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:11:42.797
  I0731 02:11:42.801381 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downwardapi-volume-c5dc082c-43a9-436a-940b-1f083aff974d container client-container: <nil>
  STEP: delete the pod @ 07/31/25 02:11:42.809
  I0731 02:11:42.832321 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8685" for this suite. @ 07/31/25 02:11:42.839
• [4.116 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 07/31/25 02:11:42.851
  I0731 02:11:42.851106 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename sched-pred @ 07/31/25 02:11:42.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:11:42.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:11:42.876
  I0731 02:11:42.878893 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0731 02:11:42.946027 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0731 02:11:42.952506 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-1 before test
  I0731 02:11:42.958030 24 predicates.go:958] mariadb-backup-cronjob-29232130-46slt from dataplatform started at 2025-07-31 02:10:00 +0000 UTC (1 container statuses recorded)
  I0731 02:11:42.958070 24 predicates.go:960] 	Container mariadb-backup-cronjob ready: false, restart count 0
  I0731 02:11:42.958082 24 predicates.go:958] vault-backup-cronjob-29232130-bn9pw from dataplatform started at 2025-07-31 02:10:00 +0000 UTC (1 container statuses recorded)
  I0731 02:11:42.958090 24 predicates.go:960] 	Container clean-backup ready: false, restart count 0
  I0731 02:11:42.958103 24 predicates.go:958] vault-unsealer-29232130-zppwz from dataplatform started at 2025-07-31 02:10:00 +0000 UTC (1 container statuses recorded)
  I0731 02:11:42.958110 24 predicates.go:960] 	Container unsealer ready: false, restart count 0
  I0731 02:11:42.958118 24 predicates.go:958] cilium-envoy-bqgqv from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 02:11:42.958465 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 02:11:42.958478 24 predicates.go:958] cilium-operator-f46ccdf88-57gr7 from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 02:11:42.958491 24 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0731 02:11:42.958500 24 predicates.go:958] cilium-r2g4v from kube-system started at 2025-07-30 09:17:21 +0000 UTC (1 container statuses recorded)
  I0731 02:11:42.958506 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 02:11:42.959377 24 predicates.go:958] csi-nfs-node-2ngqc from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 02:11:42.959396 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 02:11:42.959405 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 02:11:42.959415 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 02:11:42.959423 24 predicates.go:958] kube-proxy-h8fkv from kube-system started at 2025-07-30 06:28:11 +0000 UTC (1 container statuses recorded)
  I0731 02:11:42.959430 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 02:11:42.959439 24 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-31 00:27:45 +0000 UTC (1 container statuses recorded)
  I0731 02:11:42.959446 24 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0731 02:11:42.959455 24 predicates.go:958] sonobuoy-e2e-job-bb61e2b056fa4f2e from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 02:11:42.959468 24 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0731 02:11:42.959480 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 02:11:42.959489 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-tnd7k from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 02:11:42.959496 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 02:11:42.959502 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 02:11:42.959509 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-2 before test
  I0731 02:11:43.064144 24 predicates.go:958] keycloak-77654bfb97-9l8hz from auth started at 2025-07-29 11:59:00 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064187 24 predicates.go:960] 	Container keycloak ready: true, restart count 0
  I0731 02:11:43.064196 24 predicates.go:958] mariadb-keycloak-0 from auth started at 2025-07-29 11:56:27 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064207 24 predicates.go:960] 	Container mariadb-keycloak ready: true, restart count 0
  I0731 02:11:43.064216 24 predicates.go:958] oauth2-proxy-admin-5d54c567b4-jqfgr from auth started at 2025-07-31 02:00:03 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064227 24 predicates.go:960] 	Container oauth2-proxy-admin ready: true, restart count 0
  I0731 02:11:43.064237 24 predicates.go:958] oauth2-redis-admin-2 from auth started at 2025-07-30 01:44:45 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064242 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 02:11:43.064248 24 predicates.go:958] oauth2-redis-admin-3 from auth started at 2025-07-29 11:56:36 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064254 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 02:11:43.064260 24 predicates.go:958] cloud-service-api-6fcb7858d4-5m8ds from cmp started at 2025-07-29 13:04:58 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.064266 24 predicates.go:960] 	Container cloud-service-api ready: true, restart count 0
  I0731 02:11:43.064271 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 02:11:43.064277 24 predicates.go:958] cloud-service-collector-68bdddc6d8-rbqtz from cmp started at 2025-07-29 13:04:58 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.064282 24 predicates.go:960] 	Container cloud-service-collector ready: true, restart count 0
  I0731 02:11:43.064286 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 02:11:43.064292 24 predicates.go:958] maestro-remote-app-7f5bc68986-fzkx6 from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.064297 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 02:11:43.064301 24 predicates.go:960] 	Container maestro-remote-app ready: true, restart count 0
  I0731 02:11:43.064312 24 predicates.go:958] notification-adapter-api-794bc8bbcd-j6jlj from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.064318 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 02:11:43.064324 24 predicates.go:960] 	Container noti-api ready: true, restart count 0
  I0731 02:11:43.064330 24 predicates.go:958] kafka-cluster-kafka-0 from dataplatform started at 2025-07-30 01:44:46 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064335 24 predicates.go:960] 	Container kafka ready: true, restart count 0
  I0731 02:11:43.064341 24 predicates.go:958] kafka-cluster-zookeeper-1 from dataplatform started at 2025-07-30 01:44:45 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064347 24 predicates.go:960] 	Container zookeeper ready: true, restart count 0
  I0731 02:11:43.064353 24 predicates.go:958] mariadb-sts-0 from dataplatform started at 2025-07-30 01:44:56 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064358 24 predicates.go:960] 	Container mariadb ready: true, restart count 0
  I0731 02:11:43.064364 24 predicates.go:958] vault-0 from dataplatform started at 2025-07-29 11:56:28 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064373 24 predicates.go:960] 	Container vault ready: true, restart count 0
  I0731 02:11:43.064379 24 predicates.go:958] ingress-nginx-controller-847999c88f-64rw2 from ingress-nginx started at 2025-07-29 11:54:19 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064384 24 predicates.go:960] 	Container controller ready: true, restart count 0
  I0731 02:11:43.064389 24 predicates.go:958] istiod-5c89cf5f74-b54ls from istio-system started at 2025-07-29 11:56:33 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064394 24 predicates.go:960] 	Container discovery ready: true, restart count 0
  I0731 02:11:43.064399 24 predicates.go:958] cilium-envoy-72jp8 from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064404 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 02:11:43.064415 24 predicates.go:958] cilium-m7flm from kube-system started at 2025-07-30 09:17:11 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064425 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 02:11:43.064432 24 predicates.go:958] cilium-operator-f46ccdf88-47vls from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064437 24 predicates.go:960] 	Container cilium-operator ready: true, restart count 0
  I0731 02:11:43.064443 24 predicates.go:958] csi-nfs-controller-5845c574bf-6thgf from kube-system started at 2025-07-29 11:15:04 +0000 UTC (4 container statuses recorded)
  I0731 02:11:43.064448 24 predicates.go:960] 	Container csi-provisioner ready: true, restart count 0
  I0731 02:11:43.064459 24 predicates.go:960] 	Container csi-snapshotter ready: true, restart count 0
  I0731 02:11:43.064464 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 02:11:43.064469 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 02:11:43.064474 24 predicates.go:958] csi-nfs-node-vddcx from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 02:11:43.064479 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 02:11:43.064484 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 02:11:43.064490 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 02:11:43.064495 24 predicates.go:958] kube-proxy-hsl8d from kube-system started at 2025-07-30 06:28:05 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.064504 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 02:11:43.064510 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-2rw8x from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.064516 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 02:11:43.064526 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 02:11:43.064535 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-3 before test
  I0731 02:11:43.074432 24 predicates.go:958] oauth2-redis-admin-1 from auth started at 2025-07-29 11:56:31 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.074650 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 02:11:43.074739 24 predicates.go:958] oauth2-redis-admin-4 from auth started at 2025-07-29 11:56:40 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.074829 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 02:11:43.074895 24 predicates.go:958] maestro-auth-gateway-7b9b4c47d5-pcg4m from cmp started at 2025-07-30 01:44:44 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.074929 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 02:11:43.075000 24 predicates.go:960] 	Container maestro-auth-gateway ready: true, restart count 0
  I0731 02:11:43.075070 24 predicates.go:958] maestro-event-pusher-8db95cc5-6nppj from cmp started at 2025-07-29 13:44:48 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.075238 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 02:11:43.075304 24 predicates.go:960] 	Container maestro-event-pusher ready: true, restart count 0
  I0731 02:11:43.075354 24 predicates.go:958] maestro-host-app-86656c9c7d-wcpv2 from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.075397 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 02:11:43.075427 24 predicates.go:960] 	Container maestro-host-app ready: true, restart count 0
  I0731 02:11:43.075531 24 predicates.go:958] kafka-cluster-entity-operator-c8b5f4df9-x5q5s from dataplatform started at 2025-07-30 01:44:44 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.075582 24 predicates.go:960] 	Container topic-operator ready: true, restart count 0
  I0731 02:11:43.075629 24 predicates.go:960] 	Container user-operator ready: true, restart count 0
  I0731 02:11:43.075676 24 predicates.go:958] kafka-cluster-kafka-1 from dataplatform started at 2025-07-29 13:00:24 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.075710 24 predicates.go:960] 	Container kafka ready: true, restart count 0
  I0731 02:11:43.075775 24 predicates.go:958] kafka-cluster-zookeeper-0 from dataplatform started at 2025-07-29 12:59:50 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.075821 24 predicates.go:960] 	Container zookeeper ready: true, restart count 0
  I0731 02:11:43.075863 24 predicates.go:958] mariadb-maxscale-65f585776b-vwjt4 from dataplatform started at 2025-07-30 01:44:44 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.075961 24 predicates.go:960] 	Container maxscale ready: true, restart count 0
  I0731 02:11:43.076051 24 predicates.go:958] strimzi-cluster-operator-584d5f5789-fdmrh from dataplatform started at 2025-07-29 12:59:42 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.076096 24 predicates.go:960] 	Container strimzi-cluster-operator ready: true, restart count 0
  I0731 02:11:43.076152 24 predicates.go:958] vault-2 from dataplatform started at 2025-07-30 01:44:50 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.076203 24 predicates.go:960] 	Container vault ready: true, restart count 0
  I0731 02:11:43.076246 24 predicates.go:958] cilium-envoy-cxcfx from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.076280 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 02:11:43.076333 24 predicates.go:958] cilium-kwph5 from kube-system started at 2025-07-30 09:17:00 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.076378 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 02:11:43.076422 24 predicates.go:958] coredns-74697c986-cxqqs from kube-system started at 2025-07-29 11:08:48 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.076472 24 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0731 02:11:43.076516 24 predicates.go:958] csi-nfs-node-p4ddz from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 02:11:43.076580 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 02:11:43.076630 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 02:11:43.076676 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 02:11:43.076709 24 predicates.go:958] kube-proxy-ztnk8 from kube-system started at 2025-07-30 06:28:12 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.076763 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 02:11:43.076806 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-bj545 from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.076989 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 02:11:43.077152 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 02:11:43.077324 24 predicates.go:958] viola-api-698955c4b8-n5j5l from viola started at 2025-07-29 13:28:51 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.077358 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 02:11:43.077443 24 predicates.go:960] 	Container viola-api ready: true, restart count 0
  I0731 02:11:43.077569 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node viola-gs-worker-4 before test
  I0731 02:11:43.086439 24 predicates.go:958] keycloak-77654bfb97-gtpj2 from auth started at 2025-07-29 11:58:53 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.086568 24 predicates.go:960] 	Container keycloak ready: true, restart count 0
  I0731 02:11:43.086631 24 predicates.go:958] oauth2-proxy-admin-5d54c567b4-5bvjj from auth started at 2025-07-31 02:03:56 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.086664 24 predicates.go:960] 	Container oauth2-proxy-admin ready: true, restart count 0
  I0731 02:11:43.086736 24 predicates.go:958] oauth2-redis-admin-0 from auth started at 2025-07-29 11:56:28 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.086806 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 02:11:43.086841 24 predicates.go:958] oauth2-redis-admin-5 from auth started at 2025-07-29 11:56:42 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.086906 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 02:11:43.086986 24 predicates.go:958] maestro-common-api-6d9dffc99-k6r7h from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.087027 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 02:11:43.087107 24 predicates.go:960] 	Container maestro-common-api ready: true, restart count 0
  I0731 02:11:43.087187 24 predicates.go:958] maestro-iam-adapter-api-9c76bb77-kgxg9 from cmp started at 2025-07-29 13:04:59 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.087257 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 02:11:43.087284 24 predicates.go:960] 	Container maestro-iam-adapter-api ready: true, restart count 0
  I0731 02:11:43.087336 24 predicates.go:958] kafka-cluster-kafka-2 from dataplatform started at 2025-07-29 13:00:24 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.087368 24 predicates.go:960] 	Container kafka ready: true, restart count 0
  I0731 02:11:43.087422 24 predicates.go:958] kafka-cluster-zookeeper-2 from dataplatform started at 2025-07-29 12:59:50 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.087450 24 predicates.go:960] 	Container zookeeper ready: true, restart count 0
  I0731 02:11:43.087500 24 predicates.go:958] mariadb-maxscale-65f585776b-8b454 from dataplatform started at 2025-07-29 11:56:26 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.087525 24 predicates.go:960] 	Container maxscale ready: true, restart count 0
  I0731 02:11:43.087549 24 predicates.go:958] mariadb-sts-1 from dataplatform started at 2025-07-29 11:56:32 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.087584 24 predicates.go:960] 	Container mariadb ready: true, restart count 0
  I0731 02:11:43.087620 24 predicates.go:958] redis-0 from dataplatform started at 2025-07-29 11:56:27 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.087660 24 predicates.go:960] 	Container redis ready: true, restart count 0
  I0731 02:11:43.087685 24 predicates.go:958] vault-1 from dataplatform started at 2025-07-29 11:56:29 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.087716 24 predicates.go:960] 	Container vault ready: true, restart count 0
  I0731 02:11:43.087745 24 predicates.go:958] ingress-nginx-admission-create-gzb57 from ingress-nginx started at 2025-07-29 11:54:19 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.087769 24 predicates.go:960] 	Container create ready: false, restart count 0
  I0731 02:11:43.087910 24 predicates.go:958] istio-gateway-6966544c9c-54w69 from istio-system started at 2025-07-30 01:44:44 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.087982 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 02:11:43.088025 24 predicates.go:958] cilium-envoy-85rht from kube-system started at 2025-07-29 11:07:50 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.088097 24 predicates.go:960] 	Container cilium-envoy ready: true, restart count 0
  I0731 02:11:43.088129 24 predicates.go:958] cilium-hw2q8 from kube-system started at 2025-07-30 09:16:49 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.088176 24 predicates.go:960] 	Container cilium-agent ready: true, restart count 0
  I0731 02:11:43.088211 24 predicates.go:958] coredns-74697c986-vrt9w from kube-system started at 2025-07-29 11:08:55 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.088273 24 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0731 02:11:43.088304 24 predicates.go:958] csi-nfs-node-rp6pv from kube-system started at 2025-07-29 11:15:04 +0000 UTC (3 container statuses recorded)
  I0731 02:11:43.088356 24 predicates.go:960] 	Container liveness-probe ready: true, restart count 0
  I0731 02:11:43.088382 24 predicates.go:960] 	Container nfs ready: true, restart count 0
  I0731 02:11:43.088406 24 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0731 02:11:43.088443 24 predicates.go:958] dns-autoscaler-56cb45595c-wgcr2 from kube-system started at 2025-07-29 11:08:50 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.088467 24 predicates.go:960] 	Container autoscaler ready: true, restart count 0
  I0731 02:11:43.088491 24 predicates.go:958] kube-proxy-dhsft from kube-system started at 2025-07-30 06:28:14 +0000 UTC (1 container statuses recorded)
  I0731 02:11:43.088527 24 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0731 02:11:43.088552 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-7546ad178ae74790-2bzrg from sonobuoy started at 2025-07-31 00:27:48 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.088585 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0731 02:11:43.088634 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0731 02:11:43.088667 24 predicates.go:958] viola-remote-app-59b954dd94-kkvc5 from viola started at 2025-07-30 01:44:44 +0000 UTC (2 container statuses recorded)
  I0731 02:11:43.088739 24 predicates.go:960] 	Container istio-proxy ready: true, restart count 0
  I0731 02:11:43.088780 24 predicates.go:960] 	Container viola-remote-app ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/31/25 02:11:43.088
  E0731 02:11:43.419974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:44.420371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/31/25 02:11:45.116
  STEP: Trying to apply a random label on the found node. @ 07/31/25 02:11:45.146
  STEP: verifying the node has the label kubernetes.io/e2e-e4d9b72d-3b87-4e7f-8045-17bff6c0cc37 42 @ 07/31/25 02:11:45.159
  STEP: Trying to relaunch the pod, now with labels. @ 07/31/25 02:11:45.165
  E0731 02:11:45.423054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:46.423360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-e4d9b72d-3b87-4e7f-8045-17bff6c0cc37 off the node viola-gs-worker-1 @ 07/31/25 02:11:47.2
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-e4d9b72d-3b87-4e7f-8045-17bff6c0cc37 @ 07/31/25 02:11:47.217
  I0731 02:11:47.222366 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6548" for this suite. @ 07/31/25 02:11:47.232
• [4.390 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 07/31/25 02:11:47.24
  I0731 02:11:47.240988 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 02:11:47.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:11:47.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:11:47.268
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-a27a2db4-be1c-4aa7-9c1b-26c9b3aca5e4 @ 07/31/25 02:11:47.333
  STEP: Creating the pod @ 07/31/25 02:11:47.341
  E0731 02:11:47.423420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:48.423730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-a27a2db4-be1c-4aa7-9c1b-26c9b3aca5e4 @ 07/31/25 02:11:49.375
  STEP: waiting to observe update in volume @ 07/31/25 02:11:49.381
  E0731 02:11:49.424552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:50.425305      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:51.425584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:52.425881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:53.426406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:54.426782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:55.427610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:56.427956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:57.428272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:58.428467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:11:59.429364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:00.430012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:01.430379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:02.430776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:03.431545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:04.431704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:05.432025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:06.433137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:07.433298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:08.434262      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:09.434452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:10.434945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:11.435216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:12.435986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:13.436574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:14.436528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:15.436677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:16.437216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:17.438271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:18.438420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:19.438558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:20.438761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:21.438858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:22.438901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:23.438987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:24.439829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:25.440192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:26.440825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:27.440971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:28.441417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:29.441569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:30.441719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:31.442085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:32.442272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:33.442354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:34.442720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:35.442892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:36.442983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:37.443165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:38.443261      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:39.443684      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:40.444742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:41.445122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:42.445519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:43.446357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:44.447097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:45.447267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:46.447447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:47.447940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:48.448013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:49.448391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:50.448529      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:51.448903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:52.449284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:53.449435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:54.449572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:55.449734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:56.449818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:57.449942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:58.450114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:12:59.450312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:00.450355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:01.450735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:02.450897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:03.451177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:04.451783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:05.452080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:06.452996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:07.453594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:08.454400      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:09.454629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:10.455520      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:11.455871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:13:11.774801 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2866" for this suite. @ 07/31/25 02:13:11.78
• [84.548 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 07/31/25 02:13:11.788
  I0731 02:13:11.788696 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename secrets @ 07/31/25 02:13:11.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:13:11.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:13:11.811
  STEP: Creating projection with secret that has name secret-emptykey-test-85f0883c-0f8c-4c68-8376-68d1a8cc383f @ 07/31/25 02:13:11.813
  I0731 02:13:11.815035 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6753" for this suite. @ 07/31/25 02:13:11.881
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/31/25 02:13:11.897
  I0731 02:13:11.897865 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 02:13:11.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:13:11.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:13:11.92
  STEP: Creating a pod to test downward api env vars @ 07/31/25 02:13:11.923
  E0731 02:13:12.455969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:13.456185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:14.456841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:15.456952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:13:15.949
  I0731 02:13:15.952869 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downward-api-97695748-a602-4ae8-9296-f5f2d10d9f58 container dapi-container: <nil>
  STEP: delete the pod @ 07/31/25 02:13:15.959
  I0731 02:13:15.989280 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-179" for this suite. @ 07/31/25 02:13:15.994
• [4.108 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/31/25 02:13:16.004
  I0731 02:13:16.004581 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename events @ 07/31/25 02:13:16.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:13:16.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:13:16.023
  STEP: Create set of events @ 07/31/25 02:13:16.026
  STEP: get a list of Events with a label in the current namespace @ 07/31/25 02:13:16.045
  STEP: delete a list of events @ 07/31/25 02:13:16.048
  I0731 02:13:16.048808 24 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/31/25 02:13:16.071
  I0731 02:13:16.075756 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9963" for this suite. @ 07/31/25 02:13:16.095
• [0.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/31/25 02:13:16.106
  I0731 02:13:16.106338 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pod-network-test @ 07/31/25 02:13:16.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:13:16.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:13:16.125
  STEP: Performing setup for networking test in namespace pod-network-test-3764 @ 07/31/25 02:13:16.128
  STEP: creating a selector @ 07/31/25 02:13:16.128
  STEP: Creating the service pods in kubernetes @ 07/31/25 02:13:16.128
  I0731 02:13:16.128171 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0731 02:13:16.457112      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:17.457399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:18.457528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:19.457831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:20.458073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:21.458397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:22.459169      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:23.459396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:24.459501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:25.459796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:26.460828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:27.461181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:28.461999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:29.462318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/31/25 02:13:30.315
  E0731 02:13:30.463195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:31.463575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:13:32.351996 24 utils.go:802] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0731 02:13:32.352164 24 utils.go:495] Going to poll 10.233.65.182 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0731 02:13:32.355139 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.182:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3764 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 02:13:32.355180 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 02:13:32.355218 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3764/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.182%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0731 02:13:32.423753 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 02:13:32.423919 24 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0731 02:13:32.423966 24 utils.go:495] Going to poll 10.233.66.245 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0731 02:13:32.428073 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.245:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3764 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 02:13:32.428184 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 02:13:32.428254 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3764/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.245%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0731 02:13:32.463936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:13:32.506281 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 02:13:32.506430 24 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0731 02:13:32.506489 24 utils.go:495] Going to poll 10.233.67.111 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0731 02:13:32.510724 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.67.111:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3764 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 02:13:32.510756 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 02:13:32.510800 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3764/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.67.111%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0731 02:13:32.583647 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 02:13:32.583705 24 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0731 02:13:32.583720 24 utils.go:495] Going to poll 10.233.68.18 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0731 02:13:32.588463 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.68.18:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3764 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 02:13:32.588496 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 02:13:32.588545 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3764/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.68.18%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0731 02:13:32.645613 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0731 02:13:32.645681 24 utils.go:512] Found all 1 expected endpoints: [netserver-3]
  I0731 02:13:32.645813 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3764" for this suite. @ 07/31/25 02:13:32.651
• [16.554 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/31/25 02:13:32.66
  I0731 02:13:32.660466 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename deployment @ 07/31/25 02:13:32.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:13:32.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:13:32.689
  I0731 02:13:32.692111 24 deployment.go:1215] Creating deployment "webserver-deployment"
  I0731 02:13:32.699467 24 deployment.go:1219] Waiting for observed generation 1
  E0731 02:13:33.466801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:34.466978      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:13:34.708461 24 deployment.go:1224] Waiting for all required pods to come up
  I0731 02:13:34.714158 24 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/31/25 02:13:34.714
  I0731 02:13:34.714526 24 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0731 02:13:34.724105 24 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0731 02:13:34.739055 24 deployment.go:314] Updating deployment webserver-deployment
  I0731 02:13:34.739148 24 deployment.go:1243] Waiting for observed generation 2
  E0731 02:13:35.467037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:36.467393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:13:36.750794 24 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0731 02:13:36.753765 24 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0731 02:13:36.756169 24 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0731 02:13:36.764291 24 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0731 02:13:36.764333 24 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0731 02:13:36.766728 24 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0731 02:13:36.771704 24 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0731 02:13:36.771732 24 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0731 02:13:36.783227 24 deployment.go:314] Updating deployment webserver-deployment
  I0731 02:13:36.783363 24 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0731 02:13:36.793242 24 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0731 02:13:36.800325 24 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  E0731 02:13:37.467800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:38.468155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:13:38.809110 24 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "afd24899-6fd0-41ba-b982-9e5de90e7587",
      ResourceVersion: (string) (len=6) "895260",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0731 02:13:38.813364 24 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
      ResourceVersion: (string) (len=6) "895076",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "afd24899-6fd0-41ba-b982-9e5de90e7587",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 66 64 32 34 38  39 39 2d 36 66 64 30 2d  |\"afd24899-6fd0-|
              00000120  34 31 62 61 2d 62 39 38  32 2d 39 65 35 64 65 39  |41ba-b982-9e5de9|
              00000130  30 65 37 35 38 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0e7587\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0731 02:13:38.822549 24 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0731 02:13:38.822915 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
      ResourceVersion: (string) (len=6) "895258",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "afd24899-6fd0-41ba-b982-9e5de90e7587",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 66 64 32 34 38  39 39 2d 36 66 64 30 2d  |\"afd24899-6fd0-|
              00000120  34 31 62 61 2d 62 39 38  32 2d 39 65 35 64 65 39  |41ba-b982-9e5de9|
              00000130  30 65 37 35 38 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0e7587\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0731 02:13:38.834880 24 deployment.go:68] Pod "webserver-deployment-685b768f58-26n42" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-26n42",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c96249f9-4af9-4bea-a2c5-e600623973df",
      ResourceVersion: (string) (len=6) "894914",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  36 32 5c 22 7d 22 3a 7b  |.233.67.62\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4n7ht",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4n7ht",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.154",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.154"
        }
      },
      PodIP: (string) (len=12) "10.233.67.62",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.67.62"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524813,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1c01ddf95c3f022d46f6cafc75fd6fcad35f278da4d788ced4faf6d7e7397edd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4n7ht",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.836674 24 deployment.go:68] Pod "webserver-deployment-685b768f58-29jt2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-29jt2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30bc7873-a859-40b5-8c23-1315dd49a310",
      ResourceVersion: (string) (len=6) "894891",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  31 33 30 5c 22 7d 22 3a  |.233.68.130\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p2jn2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p2jn2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.200"
        }
      },
      PodIP: (string) (len=13) "10.233.68.130",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.130"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524813,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0cb15cc30bee1b8f1b03c4c75aacd8c8dd70a0f84f9eabef40931446ca5b28d0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p2jn2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.838670 24 deployment.go:68] Pod "webserver-deployment-685b768f58-4b6kz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4b6kz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05771fa9-7a49-4fb2-80e3-abb8f2c2678c",
      ResourceVersion: (string) (len=6) "895242",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  39 31 5c 22 7d 22 3a 7b  |.233.65.91\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mcg9s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mcg9s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) (len=12) "10.233.65.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524817,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://458b92071180fdb48c2e2a1a1a5081300aba52c54788c33656a2be3539b12c26",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mcg9s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.839911 24 deployment.go:68] Pod "webserver-deployment-685b768f58-9kzl6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9kzl6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ed36d05-4737-4164-8db1-e47d0beafddc",
      ResourceVersion: (string) (len=6) "895251",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  31 34 32 5c 22 7d 22 3a  |.233.67.142\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2xxks",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2xxks",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.154",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.154"
        }
      },
      PodIP: (string) (len=13) "10.233.67.142",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.142"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524818,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fcdef24ec19b4aef916a56b71f29db717dd08d53a30dc6288a9b37080995a89b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2xxks",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.841003 24 deployment.go:68] Pod "webserver-deployment-685b768f58-drndw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-drndw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "620f0df0-1eea-4193-8d61-824352d605bd",
      ResourceVersion: (string) (len=6) "894910",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  32 34 38 5c 22 7d 22 3a  |.233.67.248\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d6s27",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d6s27",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.154",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.154"
        }
      },
      PodIP: (string) (len=13) "10.233.67.248",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.248"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524813,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4d273d9b5ba7f348f3fdd35651ebd7ea4a8aefc6fe937e1f0f700cffee063af5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-d6s27",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.842187 24 deployment.go:68] Pod "webserver-deployment-685b768f58-hfm2z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-hfm2z",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2afffcf3-499a-469d-84e8-2066461baddc",
      ResourceVersion: (string) (len=6) "895241",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  31 33 39 5c 22 7d 22 3a  |.233.67.139\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-88ldr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-88ldr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.154",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.154"
        }
      },
      PodIP: (string) (len=13) "10.233.67.139",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.139"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524818,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1807c06712d516aa215a1d521c79cc5becd580c2d3475b4dd9052aa5c8212712",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-88ldr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.843455 24 deployment.go:68] Pod "webserver-deployment-685b768f58-j9vsq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-j9vsq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3fe13cb-5cdc-4c32-bc1d-7072cc43134c",
      ResourceVersion: (string) (len=6) "895225",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 31 37 5c 22 7d 22 3a  |.233.66.217\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jggvt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jggvt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.236",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.236"
        }
      },
      PodIP: (string) (len=13) "10.233.66.217",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.217"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524818,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8887c9155b64c37b548ca8f8838d2b401001915ca69617b6f6f5b905975e1e9f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jggvt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.845208 24 deployment.go:68] Pod "webserver-deployment-685b768f58-md4wf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-md4wf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bdb0d39b-c8ba-46b9-9d57-d9ed3ed754ae",
      ResourceVersion: (string) (len=6) "895236",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  33 30 5c 22 7d 22 3a 7b  |.233.67.30\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pgvkr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pgvkr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.154",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.154"
        }
      },
      PodIP: (string) (len=12) "10.233.67.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.67.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524818,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4e1c53aa2a4a9eb47f829b84a3b0114352a94abe27b484a537545d579d1cf3f5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pgvkr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.850882 24 deployment.go:68] Pod "webserver-deployment-685b768f58-pp5bk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pp5bk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc2724c3-f0d7-452a-9f3a-d369543f6e0f",
      ResourceVersion: (string) (len=6) "894903",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 33 33 5c 22 7d 22 3a  |.233.66.133\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fntwg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fntwg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.236",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.236"
        }
      },
      PodIP: (string) (len=13) "10.233.66.133",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.133"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524813,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1a0db1c15299c82dc5c9c99fffbc7261f5d4f39ebd30259c12f435d2c8257f11",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fntwg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.852925 24 deployment.go:68] Pod "webserver-deployment-685b768f58-q2zd6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-q2zd6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "084facc3-b3fe-48bb-a9fa-94681e7c1384",
      ResourceVersion: (string) (len=6) "895232",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  37 34 5c 22 7d 22 3a 7b  |.233.66.74\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ph5c4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ph5c4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.236",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.236"
        }
      },
      PodIP: (string) (len=12) "10.233.66.74",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.74"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524818,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fa931a6cc47bcf1c6a19ac38e53d958d7ec35d3b12f6955135bb431e25d0a24e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ph5c4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.854453 24 deployment.go:68] Pod "webserver-deployment-685b768f58-q92zj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-q92zj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82b3ec84-8bd1-4daa-8730-7d65ab0ba7e7",
      ResourceVersion: (string) (len=6) "895211",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  31 32 34 5c 22 7d 22 3a  |.233.68.124\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-94qc6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-94qc6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.200"
        }
      },
      PodIP: (string) (len=13) "10.233.68.124",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.124"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524817,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://14bbde1eccae3c5bbe9b18d828b43728796faa392131763e02f957ded410c481",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-94qc6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.856005 24 deployment.go:68] Pod "webserver-deployment-685b768f58-r78bn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-r78bn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebf14505-bb35-43fa-bfcb-3305c540e72b",
      ResourceVersion: (string) (len=6) "895223",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  36 31 5c 22 7d 22 3a 7b  |.233.66.61\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2l5sw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2l5sw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.236",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.236"
        }
      },
      PodIP: (string) (len=12) "10.233.66.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524818,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3f4f888ebfe21a245742c4e0491d1847e560fd437ab7dcd4e9330ac7c5c5e3f2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2l5sw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.857569 24 deployment.go:68] Pod "webserver-deployment-685b768f58-swkrp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-swkrp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03f35e43-53f2-4ce9-8d7c-d760953942c7",
      ResourceVersion: (string) (len=6) "895256",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 37 5c 22 7d 22 3a 7b  |.233.65.27\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g4kkd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g4kkd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) (len=12) "10.233.65.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524818,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d8a9fc6fabfcc1e8f47a6d93c0a44b7584476a35c1c01b26a9f96fb9dc3cb1c5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g4kkd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.859721 24 deployment.go:68] Pod "webserver-deployment-685b768f58-t8gsf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-t8gsf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a88e7d7-7905-45ad-b549-c2adbf3fce9f",
      ResourceVersion: (string) (len=6) "894908",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  33 39 5c 22 7d 22 3a 7b  |.233.65.39\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p97w7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p97w7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) (len=12) "10.233.65.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524813,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7da1efa88bb4e4b9c1f99556ce22214239da8f8ce37600d228b040abdf4108ac",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p97w7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.861453 24 deployment.go:68] Pod "webserver-deployment-685b768f58-tglhl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-tglhl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf248571-63f5-4528-bdce-c62c05088503",
      ResourceVersion: (string) (len=6) "895213",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  35 37 5c 22 7d 22 3a 7b  |.233.68.57\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2ggqp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2ggqp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.200"
        }
      },
      PodIP: (string) (len=12) "10.233.68.57",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.68.57"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524818,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://17ab76b7ee90b3aa5f1c7810f931dd64c2c87f8bcaa644790dee46fa6d910c1c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2ggqp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.863369 24 deployment.go:68] Pod "webserver-deployment-685b768f58-tqj75" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-tqj75",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d785d78-3c1e-49c7-adf8-3b178ed0b9b4",
      ResourceVersion: (string) (len=6) "894896",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  32 31 37 5c 22 7d 22 3a  |.233.68.217\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hnp5j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hnp5j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.200"
        }
      },
      PodIP: (string) (len=13) "10.233.68.217",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.217"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524813,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b55d240ae252475b6b089704f6338ffb497ce8c32b78ae270a0030f632327491",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hnp5j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.865143 24 deployment.go:68] Pod "webserver-deployment-685b768f58-w9tcj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-w9tcj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "736d87ea-6681-4c4b-820f-a3a5997d934c",
      ResourceVersion: (string) (len=6) "895252",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 32 39 5c 22 7d 22 3a  |.233.65.129\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8fhqd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8fhqd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) (len=13) "10.233.65.129",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.129"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524818,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://85a4c041c02201c5ff0bcf0a03b8f100b8c739c31feb8650f20a138bf3d1c70a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8fhqd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.867207 24 deployment.go:68] Pod "webserver-deployment-685b768f58-wgsrm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wgsrm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60392ac3-f66c-4172-b429-fdad401984b0",
      ResourceVersion: (string) (len=6) "894911",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 31 31 5c 22 7d 22 3a  |.233.65.211\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6mg9c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6mg9c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) (len=13) "10.233.65.211",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.211"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524813,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://407cda11fa76cb8e176b1a0c29514f2bd49e5909f661083f7e5623b8fcbadf14",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6mg9c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.869110 24 deployment.go:68] Pod "webserver-deployment-685b768f58-wq8hf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wq8hf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9bd2ddbd-1679-4dac-a806-7b1487b437e6",
      ResourceVersion: (string) (len=6) "894901",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 30 36 5c 22 7d 22 3a  |.233.66.106\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gmx9r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gmx9r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.236",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.236"
        }
      },
      PodIP: (string) (len=13) "10.233.66.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524813,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://27ef4d27b3c5225525df2e278feac0f63fb7aa8dcaa13eaf005d74115ed6870f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gmx9r",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.870710 24 deployment.go:68] Pod "webserver-deployment-685b768f58-z4s6h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-z4s6h",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b88b426f-b11c-402a-9023-ffc8fd772e5d",
      ResourceVersion: (string) (len=6) "895220",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "40f1b0c5-9dce-49e6-907c-d84fc8264c49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  66 31 62 30 63 35 2d 39  |d\":\"40f1b0c5-9|
              00000090  64 63 65 2d 34 39 65 36  2d 39 30 37 63 2d 64 38  |dce-49e6-907c-d8|
              000000a0  34 66 63 38 32 36 34 63  34 39 5c 22 7d 22 3a 7b  |4fc8264c49\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  31 34 34 5c 22 7d 22 3a  |.233.68.144\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f6rsd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f6rsd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.200"
        }
      },
      PodIP: (string) (len=13) "10.233.68.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524818,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://68e4f7ab1e8133e62c65764e865415194ba4fc0a3b28d2ce2844c66843ca4c65",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f6rsd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.872088 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-2gzv6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-2gzv6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4e2b582-c450-4502-8dbb-a54010a72092",
      ResourceVersion: (string) (len=6) "895133",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  31 65 35 66 33 36 2d 66  |d\":\"931e5f36-f|
              00000090  33 32 37 2d 34 31 63 32  2d 39 63 66 32 2d 64 37  |327-41c2-9cf2-d7|
              000000a0  39 37 61 63 37 30 31 39  34 65 5c 22 7d 22 3a 7b  |97ac70194e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 36 35 2e 31 39 34  5c 22 7d 22 3a 7b 22 2e  |3.65.194\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hp5nk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hp5nk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) (len=13) "10.233.65.194",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.194"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hp5nk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.873667 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-2wsrp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-2wsrp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2367b0c9-2072-4fbb-b032-86977c25a9e0",
      ResourceVersion: (string) (len=6) "895080",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  31 65 35 66 33 36 2d 66  |d\":\"931e5f36-f|
              00000090  33 32 37 2d 34 31 63 32  2d 39 63 66 32 2d 64 37  |327-41c2-9cf2-d7|
              000000a0  39 37 61 63 37 30 31 39  34 65 5c 22 7d 22 3a 7b  |97ac70194e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hg7pr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hg7pr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.236",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.236"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hg7pr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.875052 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-c965p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-c965p",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30033b13-f604-4063-9611-cf8626fe6a3b",
      ResourceVersion: (string) (len=6) "895113",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  31 65 35 66 33 36 2d 66  |d\":\"931e5f36-f|
              00000090  33 32 37 2d 34 31 63 32  2d 39 63 66 32 2d 64 37  |327-41c2-9cf2-d7|
              000000a0  39 37 61 63 37 30 31 39  34 65 5c 22 7d 22 3a 7b  |97ac70194e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 36 38 2e 31 36 39  5c 22 7d 22 3a 7b 22 2e  |3.68.169\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dt656",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dt656",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.200"
        }
      },
      PodIP: (string) (len=13) "10.233.68.169",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.169"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dt656",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.876819 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-h8klh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-h8klh",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "947d78b6-b1c5-4854-8ad8-985325feb132",
      ResourceVersion: (string) (len=6) "895132",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  31 65 35 66 33 36 2d 66  |d\":\"931e5f36-f|
              00000090  33 32 37 2d 34 31 63 32  2d 39 63 66 32 2d 64 37  |327-41c2-9cf2-d7|
              000000a0  39 37 61 63 37 30 31 39  34 65 5c 22 7d 22 3a 7b  |97ac70194e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 36 37 2e 32 32 5c  22 7d 22 3a 7b 22 2e 22  |3.67.22\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q4s4j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q4s4j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.154",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.154"
        }
      },
      PodIP: (string) (len=12) "10.233.67.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.67.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q4s4j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.879290 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jdrzb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jdrzb",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13b0a6ad-16c1-402f-a3c7-7a29449888de",
      ResourceVersion: (string) (len=6) "895259",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  31 65 35 66 33 36 2d 66  |d\":\"931e5f36-f|
              00000090  33 32 37 2d 34 31 63 32  2d 39 63 66 32 2d 64 37  |327-41c2-9cf2-d7|
              000000a0  39 37 61 63 37 30 31 39  34 65 5c 22 7d 22 3a 7b  |97ac70194e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 36 35 2e 32 35 32  5c 22 7d 22 3a 7b 22 2e  |3.65.252\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nl8zd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nl8zd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524818,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) (len=13) "10.233.65.252",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.252"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nl8zd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.881216 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-js7ls" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-js7ls",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7eef07b4-d73e-49fc-bc50-139670371ebf",
      ResourceVersion: (string) (len=6) "895122",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  31 65 35 66 33 36 2d 66  |d\":\"931e5f36-f|
              00000090  33 32 37 2d 34 31 63 32  2d 39 63 66 32 2d 64 37  |327-41c2-9cf2-d7|
              000000a0  39 37 61 63 37 30 31 39  34 65 5c 22 7d 22 3a 7b  |97ac70194e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 36 36 2e 31 30 34  5c 22 7d 22 3a 7b 22 2e  |3.66.104\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r5k2m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r5k2m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.236",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.236"
        }
      },
      PodIP: (string) (len=13) "10.233.66.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r5k2m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.882637 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-kdkt6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-kdkt6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7431d63-d8d2-4b5e-ab81-d4b39635f2e1",
      ResourceVersion: (string) (len=6) "895089",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  31 65 35 66 33 36 2d 66  |d\":\"931e5f36-f|
              00000090  33 32 37 2d 34 31 63 32  2d 39 63 66 32 2d 64 37  |327-41c2-9cf2-d7|
              000000a0  39 37 61 63 37 30 31 39  34 65 5c 22 7d 22 3a 7b  |97ac70194e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6zxgf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6zxgf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6zxgf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.883914 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mspms" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mspms",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7fb57973-3c73-4460-bca4-7a4e66b40731",
      ResourceVersion: (string) (len=6) "895096",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  31 65 35 66 33 36 2d 66  |d\":\"931e5f36-f|
              00000090  33 32 37 2d 34 31 63 32  2d 39 63 66 32 2d 64 37  |327-41c2-9cf2-d7|
              000000a0  39 37 61 63 37 30 31 39  34 65 5c 22 7d 22 3a 7b  |97ac70194e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qgnqm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qgnqm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qgnqm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.885074 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-npsg7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-npsg7",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0bed6987-3bb2-45cc-92c6-79b05347c4a1",
      ResourceVersion: (string) (len=6) "895060",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  31 65 35 66 33 36 2d 66  |d\":\"931e5f36-f|
              00000090  33 32 37 2d 34 31 63 32  2d 39 63 66 32 2d 64 37  |327-41c2-9cf2-d7|
              000000a0  39 37 61 63 37 30 31 39  34 65 5c 22 7d 22 3a 7b  |97ac70194e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4rds5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4rds5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.154",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.154"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4rds5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.886133 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-rs66h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-rs66h",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "545e46ac-a2c3-41ff-a63e-08a0d19abd04",
      ResourceVersion: (string) (len=6) "895087",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  31 65 35 66 33 36 2d 66  |d\":\"931e5f36-f|
              00000090  33 32 37 2d 34 31 63 32  2d 39 63 66 32 2d 64 37  |327-41c2-9cf2-d7|
              000000a0  39 37 61 63 37 30 31 39  34 65 5c 22 7d 22 3a 7b  |97ac70194e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2ncln",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2ncln",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.236",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.236"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2ncln",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.887331 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-s7zrn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-s7zrn",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "42af1868-68f3-4dfa-91aa-e2eff7391272",
      ResourceVersion: (string) (len=6) "895084",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  31 65 35 66 33 36 2d 66  |d\":\"931e5f36-f|
              00000090  33 32 37 2d 34 31 63 32  2d 39 63 66 32 2d 64 37  |327-41c2-9cf2-d7|
              000000a0  39 37 61 63 37 30 31 39  34 65 5c 22 7d 22 3a 7b  |97ac70194e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-789mf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-789mf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.154",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.154"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-789mf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.888620 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-t689t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-t689t",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a91cff0-6f58-439c-9eb1-26e899b4a5ad",
      ResourceVersion: (string) (len=6) "895097",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  31 65 35 66 33 36 2d 66  |d\":\"931e5f36-f|
              00000090  33 32 37 2d 34 31 63 32  2d 39 63 66 32 2d 64 37  |327-41c2-9cf2-d7|
              000000a0  39 37 61 63 37 30 31 39  34 65 5c 22 7d 22 3a 7b  |97ac70194e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6v2lx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6v2lx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6v2lx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.889934 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vcnzv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vcnzv",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2784ccd-11c5-40b0-90eb-fb56b7e2dcdb",
      ResourceVersion: (string) (len=6) "895086",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "931e5f36-f327-41c2-9cf2-d797ac70194e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  31 65 35 66 33 36 2d 66  |d\":\"931e5f36-f|
              00000090  33 32 37 2d 34 31 63 32  2d 39 63 66 32 2d 64 37  |327-41c2-9cf2-d7|
              000000a0  39 37 61 63 37 30 31 39  34 65 5c 22 7d 22 3a 7b  |97ac70194e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d4gfm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d4gfm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-d4gfm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:13:38.891024 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9519" for this suite. @ 07/31/25 02:13:38.898
• [6.249 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 07/31/25 02:13:38.911
  I0731 02:13:38.911188 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/31/25 02:13:38.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:13:38.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:13:38.934
  STEP: getting /apis @ 07/31/25 02:13:38.945
  STEP: getting /apis/admissionregistration.k8s.io @ 07/31/25 02:13:38.949
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/31/25 02:13:38.95
  STEP: creating @ 07/31/25 02:13:38.951
  STEP: getting @ 07/31/25 02:13:38.975
  STEP: listing @ 07/31/25 02:13:38.981
  STEP: watching @ 07/31/25 02:13:38.988
  I0731 02:13:38.988308 24 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 07/31/25 02:13:38.99
  STEP: updating @ 07/31/25 02:13:38.999
  I0731 02:13:39.008296 24 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 07/31/25 02:13:39.008
  STEP: deleting a collection @ 07/31/25 02:13:39.021
  I0731 02:13:39.042461 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9083" for this suite. @ 07/31/25 02:13:39.046
• [0.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 07/31/25 02:13:39.054
  I0731 02:13:39.054833 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 02:13:39.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:13:39.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:13:39.078
  STEP: starting the proxy server @ 07/31/25 02:13:39.081
  I0731 02:13:39.081257 24 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-6901 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/31/25 02:13:39.134
  I0731 02:13:39.145774 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0731 02:13:39.149241 24 kubectl.go:2232] kubectl proxy stderr: W0731 02:13:39.133380    1224 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0731 02:13:39.149229 24 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:40387

  STEP: Destroying namespace "kubectl-6901" for this suite. @ 07/31/25 02:13:39.159
• [0.116 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/31/25 02:13:39.171
  I0731 02:13:39.171385 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename deployment @ 07/31/25 02:13:39.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:13:39.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:13:39.2
  STEP: creating a Deployment @ 07/31/25 02:13:39.206
  STEP: waiting for Deployment to be created @ 07/31/25 02:13:39.215
  STEP: waiting for all Replicas to be Ready @ 07/31/25 02:13:39.217
  I0731 02:13:39.218273 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0731 02:13:39.218302 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0731 02:13:39.238269 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0731 02:13:39.238320 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0731 02:13:39.265863 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0731 02:13:39.265911 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0731 02:13:39.311644 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0731 02:13:39.311706 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0731 02:13:39.469025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:13:40.456124 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0731 02:13:40.456186 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0731 02:13:40.469264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:13:40.634063 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/31/25 02:13:40.634
  I0731 02:13:40.645188 24 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/31/25 02:13:40.645
  I0731 02:13:40.646463 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0
  I0731 02:13:40.646492 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0
  I0731 02:13:40.646499 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0
  I0731 02:13:40.646505 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0
  I0731 02:13:40.646531 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0
  I0731 02:13:40.646539 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0
  I0731 02:13:40.646666 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0
  I0731 02:13:40.646705 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 0
  I0731 02:13:40.646719 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1
  I0731 02:13:40.646725 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1
  I0731 02:13:40.646731 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2
  I0731 02:13:40.646735 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2
  I0731 02:13:40.646786 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2
  I0731 02:13:40.646794 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2
  I0731 02:13:40.666530 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2
  I0731 02:13:40.666579 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2
  I0731 02:13:40.691025 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2
  I0731 02:13:40.691078 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2
  I0731 02:13:40.723888 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1
  I0731 02:13:40.723943 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1
  I0731 02:13:40.742191 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1
  I0731 02:13:40.742235 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1
  E0731 02:13:41.469998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:13:41.663944 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2
  I0731 02:13:41.663991 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2
  I0731 02:13:41.698596 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1
  STEP: listing Deployments @ 07/31/25 02:13:41.698
  I0731 02:13:41.702462 24 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/31/25 02:13:41.702
  I0731 02:13:41.727422 24 deployment.go:360] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/31/25 02:13:41.727
  I0731 02:13:41.739419 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0731 02:13:41.746279 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0731 02:13:41.820899 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0731 02:13:41.858847 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0731 02:13:41.878878 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0731 02:13:42.470161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:43.470563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:13:43.476035 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0731 02:13:43.677103 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0731 02:13:43.751029 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0731 02:13:43.759804 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0731 02:13:44.470798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:45.470948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:13:45.719944 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/31/25 02:13:45.765
  STEP: fetching the DeploymentStatus @ 07/31/25 02:13:45.779
  I0731 02:13:45.787214 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1
  I0731 02:13:45.787258 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1
  I0731 02:13:45.787375 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1
  I0731 02:13:45.787452 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1
  I0731 02:13:45.787514 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 1
  I0731 02:13:45.787665 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2
  I0731 02:13:45.787774 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 3
  I0731 02:13:45.787801 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2
  I0731 02:13:45.787814 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 2
  I0731 02:13:45.787847 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-902 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/31/25 02:13:45.787
  I0731 02:13:45.824962 24 deployment.go:474] observed event type MODIFIED
  I0731 02:13:45.825523 24 deployment.go:474] observed event type MODIFIED
  I0731 02:13:45.825542 24 deployment.go:474] observed event type MODIFIED
  I0731 02:13:45.825550 24 deployment.go:474] observed event type MODIFIED
  I0731 02:13:45.825577 24 deployment.go:474] observed event type MODIFIED
  I0731 02:13:45.825694 24 deployment.go:474] observed event type MODIFIED
  I0731 02:13:45.825701 24 deployment.go:474] observed event type MODIFIED
  I0731 02:13:45.825707 24 deployment.go:474] observed event type MODIFIED
  I0731 02:13:45.825727 24 deployment.go:474] observed event type MODIFIED
  I0731 02:13:45.826014 24 deployment.go:474] observed event type MODIFIED
  I0731 02:13:45.826026 24 deployment.go:474] observed event type MODIFIED
  I0731 02:13:45.826043 24 deployment.go:474] observed event type MODIFIED
  I0731 02:13:45.826144 24 deployment.go:474] observed event type MODIFIED
  I0731 02:13:45.832788 24 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0731 02:13:45.845481 24 deployment.go:656] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-902",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6fd77e5a-c244-44a8-a4ab-b359d75ff57f",
      ResourceVersion: (string) (len=6) "895696",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3fde8770-a495-460d-a05c-64dc13f003f0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 66 64 65  38 37 37 30 2d 61 34 39  |":\"3fde8770-a49|
              00000130  35 2d 34 36 30 64 2d 61  30 35 63 2d 36 34 64 63  |5-460d-a05c-64dc|
              00000140  31 33 66 30 30 33 66 30  5c 22 7d 22 3a 7b 7d 7d  |13f003f0\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0731 02:13:45.851990 24 deployment.go:668] pod: "test-deployment-79899bcfcc-92wkc":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-92wkc",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=14) "deployment-902",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f121780a-9f8a-4bb7-b8a7-cfb392fc56ec",
      ResourceVersion: (string) (len=6) "895694",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "6fd77e5a-c244-44a8-a4ab-b359d75ff57f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 66 64 37 37 65 35 61  |uid\":\"6fd77e5a|
              000000a0  2d 63 32 34 34 2d 34 34  61 38 2d 61 34 61 62 2d  |-c244-44a8-a4ab-|
              000000b0  62 33 35 39 64 37 35 66  66 35 37 66 5c 22 7d 22  |b359d75ff57f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  32 33 35 5c 22 7d 22 3a  |.233.67.235\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7wgbf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7wgbf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.154",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.154"
        }
      },
      PodIP: (string) (len=13) "10.233.67.235",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.235"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524824,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e82ede70e8547e0521235e51b63468fb2d6e9473a87999ae254a842fb483c321",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7wgbf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0731 02:13:45.853913 24 deployment.go:668] pod: "test-deployment-79899bcfcc-g7r8s":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-g7r8s",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=14) "deployment-902",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07e99e66-f15c-46c2-866f-d164a775abb3",
      ResourceVersion: (string) (len=6) "895465",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "6fd77e5a-c244-44a8-a4ab-b359d75ff57f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 66 64 37 37 65 35 61  |uid\":\"6fd77e5a|
              000000a0  2d 63 32 34 34 2d 34 34  61 38 2d 61 34 61 62 2d  |-c244-44a8-a4ab-|
              000000b0  62 33 35 39 64 37 35 66  66 35 37 66 5c 22 7d 22  |b359d75ff57f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  39 32 5c 22 7d 22 3a 7b  |.233.65.92\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9xscs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9xscs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) (len=12) "10.233.65.92",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.92"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524822,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://18808fe2c49863f5264dbf97ac1970bc5bb17cbb4915a5081ff63106fda9297a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9xscs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0731 02:13:45.855141 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-902" for this suite. @ 07/31/25 02:13:45.871
• [6.713 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 07/31/25 02:13:45.885
  I0731 02:13:45.885340 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/31/25 02:13:45.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:13:45.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:13:45.907
  I0731 02:13:45.910273 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  E0731 02:13:46.471137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:47.471336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:48.471972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:49.473039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:50.473115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:51.473265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:52.474140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/31/25 02:13:53.401
  I0731 02:13:53.401779 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-6756 --namespace=crd-publish-openapi-6756 create -f -'
  E0731 02:13:53.474420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:13:53.493152 24 builder.go:146] stderr: ""
  I0731 02:13:53.493332 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3379-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0731 02:13:53.493394 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-6756 --namespace=crd-publish-openapi-6756 delete e2e-test-crd-publish-openapi-3379-crds test-cr'
  I0731 02:13:53.567691 24 builder.go:146] stderr: ""
  I0731 02:13:53.567837 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3379-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0731 02:13:53.567890 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-6756 --namespace=crd-publish-openapi-6756 apply -f -'
  I0731 02:13:53.644115 24 builder.go:146] stderr: ""
  I0731 02:13:53.644243 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3379-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0731 02:13:53.644311 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-6756 --namespace=crd-publish-openapi-6756 delete e2e-test-crd-publish-openapi-3379-crds test-cr'
  I0731 02:13:53.709949 24 builder.go:146] stderr: ""
  I0731 02:13:53.710098 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3379-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/31/25 02:13:53.71
  I0731 02:13:53.710183 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=crd-publish-openapi-6756 explain e2e-test-crd-publish-openapi-3379-crds'
  I0731 02:13:53.768044 24 builder.go:146] stderr: ""
  I0731 02:13:53.768108 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3379-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0731 02:13:54.474501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:55.475330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:13:56.171944 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6756" for this suite. @ 07/31/25 02:13:56.181
• [10.304 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/31/25 02:13:56.19
  I0731 02:13:56.190508 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-runtime @ 07/31/25 02:13:56.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:13:56.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:13:56.216
  STEP: create the container @ 07/31/25 02:13:56.219
  I0731 02:13:56.233062      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/31/25 02:13:56.233
  E0731 02:13:56.476073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:57.477020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:13:58.477034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/31/25 02:13:59.255
  STEP: the container should be terminated @ 07/31/25 02:13:59.261
  STEP: the termination message should be set @ 07/31/25 02:13:59.261
  I0731 02:13:59.261373 24 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/31/25 02:13:59.261
  I0731 02:13:59.282716 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9128" for this suite. @ 07/31/25 02:13:59.287
• [3.108 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 07/31/25 02:13:59.297
  I0731 02:13:59.297667 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename resourcequota @ 07/31/25 02:13:59.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:13:59.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:13:59.317
  STEP: Creating resourceQuota "e2e-rq-status-bxvwc" @ 07/31/25 02:13:59.323
  I0731 02:13:59.338463 24 resource_quota.go:1106] Resource quota "e2e-rq-status-bxvwc" reports spec: hard cpu limit of 500m
  I0731 02:13:59.338537 24 resource_quota.go:1108] Resource quota "e2e-rq-status-bxvwc" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-bxvwc" /status @ 07/31/25 02:13:59.338
  STEP: Confirm /status for "e2e-rq-status-bxvwc" resourceQuota via watch @ 07/31/25 02:13:59.352
  I0731 02:13:59.354119 24 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-bxvwc" in namespace "resourcequota-883" with hard status: v1.ResourceList(nil)
  I0731 02:13:59.354233 24 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-bxvwc" in namespace "resourcequota-883" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0731 02:13:59.354253 24 resource_quota.go:1145] ResourceQuota "e2e-rq-status-bxvwc" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/31/25 02:13:59.357
  I0731 02:13:59.365334 24 resource_quota.go:1156] Resource quota "e2e-rq-status-bxvwc" reports spec: hard cpu limit of 1
  I0731 02:13:59.365370 24 resource_quota.go:1157] Resource quota "e2e-rq-status-bxvwc" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-bxvwc" /status @ 07/31/25 02:13:59.365
  STEP: Confirm /status for "e2e-rq-status-bxvwc" resourceQuota via watch @ 07/31/25 02:13:59.371
  I0731 02:13:59.373340 24 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-bxvwc" in namespace "resourcequota-883" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0731 02:13:59.373382 24 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-bxvwc" in namespace "resourcequota-883" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0731 02:13:59.373404 24 resource_quota.go:1189] ResourceQuota "e2e-rq-status-bxvwc" /status was patched
  STEP: Get "e2e-rq-status-bxvwc" /status @ 07/31/25 02:13:59.373
  I0731 02:13:59.376795 24 resource_quota.go:1200] Resourcequota "e2e-rq-status-bxvwc" reports status: hard cpu of 1
  I0731 02:13:59.376822 24 resource_quota.go:1202] Resourcequota "e2e-rq-status-bxvwc" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-bxvwc" /status before checking Spec is unchanged @ 07/31/25 02:13:59.379
  I0731 02:13:59.386312 24 resource_quota.go:1222] Resourcequota "e2e-rq-status-bxvwc" reports status: hard cpu of 2
  I0731 02:13:59.386350 24 resource_quota.go:1224] Resourcequota "e2e-rq-status-bxvwc" reports status: hard memory of 2Gi
  I0731 02:13:59.387834 24 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-bxvwc" in namespace "resourcequota-883" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0731 02:13:59.390549 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-bxvwc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bxvwc", GenerateName:"", Namespace:"resourcequota-883", SelfLink:"", UID:"4c48c295-a758-47a7-a6e2-de85cc08fae3", ResourceVersion:"896028", Generation:0, CreationTimestamp:time.Date(2025, time.July, 31, 2, 13, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bxvwc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 31, 2, 13, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e5adc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 31, 2, 13, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e5ae10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 31, 2, 13, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e5ae70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  E0731 02:13:59.477651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:00.478032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:01.478287      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:02.478556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:03.478845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:14:04.392134 24 resource_quota.go:1264] ResourceQuota "e2e-rq-status-bxvwc" Spec was unchanged and /status reset
  I0731 02:14:04.392290 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-883" for this suite. @ 07/31/25 02:14:04.396
• [5.106 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/31/25 02:14:04.404
  I0731 02:14:04.404191 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pods @ 07/31/25 02:14:04.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:14:04.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:14:04.428
  STEP: creating the pod @ 07/31/25 02:14:04.43
  STEP: submitting the pod to kubernetes @ 07/31/25 02:14:04.43
  I0731 02:14:04.441770      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  E0731 02:14:04.479932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:05.480383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/31/25 02:14:06.453
  STEP: updating the pod @ 07/31/25 02:14:06.456
  E0731 02:14:06.480917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:14:06.971036 24 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-9d3dcbc5-2e1a-473f-a00c-0a7c67d6f751"
  E0731 02:14:07.481265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:08.481474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:09.482385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:10.482620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:14:10.986051 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2099" for this suite. @ 07/31/25 02:14:10.99
• [6.600 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/31/25 02:14:11.004
  I0731 02:14:11.004642 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename pods @ 07/31/25 02:14:11.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:14:11.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:14:11.028
  STEP: creating pod @ 07/31/25 02:14:11.03
  E0731 02:14:11.483609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:12.484017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:14:13.063373 24 pods.go:83] Pod pod-hostip-db954494-54af-4755-941e-175516389a3f has hostIP: 172.20.30.203
  I0731 02:14:13.063644 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3984" for this suite. @ 07/31/25 02:14:13.071
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 07/31/25 02:14:13.08
  I0731 02:14:13.080366 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename security-context-test @ 07/31/25 02:14:13.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:14:13.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:14:13.1
  E0731 02:14:13.484047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:14.484420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:15.485251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:16.485840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:14:17.128750 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8102" for this suite. @ 07/31/25 02:14:17.133
• [4.061 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 07/31/25 02:14:17.142
  I0731 02:14:17.142279 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl-logs @ 07/31/25 02:14:17.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:14:17.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:14:17.17
  STEP: creating a pod @ 07/31/25 02:14:17.173
  I0731 02:14:17.173248 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-logs-872 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0731 02:14:17.251410 24 builder.go:146] stderr: ""
  I0731 02:14:17.251460 24 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/31/25 02:14:17.251
  I0731 02:14:17.251588 24 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0731 02:14:17.486830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:18.487264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:14:19.262345 24 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/31/25 02:14:19.262
  I0731 02:14:19.262564 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-logs-872 logs logs-generator logs-generator'
  I0731 02:14:19.349051 24 builder.go:146] stderr: ""
  I0731 02:14:19.349162 24 builder.go:147] stdout: "I0731 02:14:18.082893       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/gncp 208\nI0731 02:14:18.283016       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/ppx 415\nI0731 02:14:18.483577       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/snvf 538\nI0731 02:14:18.683916       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/6tnc 525\nI0731 02:14:18.883288       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/cx27 452\nI0731 02:14:19.083688       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/f4fj 416\nI0731 02:14:19.284509       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/lm8h 227\n"
  STEP: limiting log lines @ 07/31/25 02:14:19.349
  I0731 02:14:19.349447 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-logs-872 logs logs-generator logs-generator --tail=1'
  I0731 02:14:19.425545 24 builder.go:146] stderr: ""
  I0731 02:14:19.425623 24 builder.go:147] stdout: "I0731 02:14:19.284509       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/lm8h 227\n"
  I0731 02:14:19.425635 24 logs.go:180] got output "I0731 02:14:19.284509       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/lm8h 227\n"
  STEP: limiting log bytes @ 07/31/25 02:14:19.425
  I0731 02:14:19.425990 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-logs-872 logs logs-generator logs-generator --limit-bytes=1'
  E0731 02:14:19.487805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:14:19.496909 24 builder.go:146] stderr: ""
  I0731 02:14:19.496980 24 builder.go:147] stdout: "I"
  I0731 02:14:19.496994 24 logs.go:186] got output "I"
  STEP: exposing timestamps @ 07/31/25 02:14:19.497
  I0731 02:14:19.497110 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-logs-872 logs logs-generator logs-generator --tail=1 --timestamps'
  I0731 02:14:19.563029 24 builder.go:146] stderr: ""
  I0731 02:14:19.563152 24 builder.go:147] stdout: "2025-07-31T02:14:19.484070626Z I0731 02:14:19.483861       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/5t4 588\n"
  I0731 02:14:19.563169 24 logs.go:192] got output "2025-07-31T02:14:19.484070626Z I0731 02:14:19.483861       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/5t4 588\n"
  STEP: restricting to a time range @ 07/31/25 02:14:19.563
  E0731 02:14:20.488328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:21.488588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:14:22.064333 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-logs-872 logs logs-generator logs-generator --since=1s'
  I0731 02:14:22.129144 24 builder.go:146] stderr: ""
  I0731 02:14:22.129287 24 builder.go:147] stdout: "I0731 02:14:21.283121       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/gkb 217\nI0731 02:14:21.483484       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/hdc8 460\nI0731 02:14:21.683885       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/bzlh 290\nI0731 02:14:21.883245       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/mg5 581\nI0731 02:14:22.083738       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/mvr9 257\n"
  I0731 02:14:22.129679 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-logs-872 logs logs-generator logs-generator --since=24h'
  I0731 02:14:22.196310 24 builder.go:146] stderr: ""
  I0731 02:14:22.196435 24 builder.go:147] stdout: "I0731 02:14:18.082893       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/gncp 208\nI0731 02:14:18.283016       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/ppx 415\nI0731 02:14:18.483577       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/snvf 538\nI0731 02:14:18.683916       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/6tnc 525\nI0731 02:14:18.883288       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/cx27 452\nI0731 02:14:19.083688       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/f4fj 416\nI0731 02:14:19.284509       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/lm8h 227\nI0731 02:14:19.483861       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/5t4 588\nI0731 02:14:19.683083       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/x2d 531\nI0731 02:14:19.883534       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/cxjl 206\nI0731 02:14:20.083906       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/psr 488\nI0731 02:14:20.283331       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/jsx 518\nI0731 02:14:20.483720       1 logs_generator.go:76] 12 POST /api/v1/namespaces/default/pods/gcm 375\nI0731 02:14:20.683033       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/kv4 461\nI0731 02:14:20.883421       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/mfp 363\nI0731 02:14:21.083808       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/g49 276\nI0731 02:14:21.283121       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/gkb 217\nI0731 02:14:21.483484       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/hdc8 460\nI0731 02:14:21.683885       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/bzlh 290\nI0731 02:14:21.883245       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/mg5 581\nI0731 02:14:22.083738       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/mvr9 257\n"
  I0731 02:14:22.196801 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-logs-872 delete pod logs-generator'
  E0731 02:14:22.488968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:14:22.824710 24 builder.go:146] stderr: ""
  I0731 02:14:22.824759 24 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0731 02:14:22.824924 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-872" for this suite. @ 07/31/25 02:14:22.831
• [5.698 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 07/31/25 02:14:22.839
  I0731 02:14:22.839877 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename projected @ 07/31/25 02:14:22.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:14:22.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:14:22.858
  STEP: Creating the pod @ 07/31/25 02:14:22.861
  E0731 02:14:23.490050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:24.490066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:14:25.410016 24 pod_client.go:173] Successfully updated pod "annotationupdate2042d208-9509-45be-abc4-1a56cf199dec"
  E0731 02:14:25.491047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:26.491126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:14:27.428953 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-641" for this suite. @ 07/31/25 02:14:27.434
• [4.605 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 07/31/25 02:14:27.444
  I0731 02:14:27.444954 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename webhook @ 07/31/25 02:14:27.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:14:27.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:14:27.469
  E0731 02:14:27.492011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 07/31/25 02:14:27.496
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/31/25 02:14:27.641
  STEP: Deploying the webhook pod @ 07/31/25 02:14:27.649
  STEP: Wait for the deployment to be ready @ 07/31/25 02:14:27.67
  I0731 02:14:27.682435 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0731 02:14:28.492628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:29.493133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/31/25 02:14:29.698
  STEP: Verifying the service has paired with the endpoint @ 07/31/25 02:14:29.72
  E0731 02:14:30.493586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:14:30.720824 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/31/25 02:14:30.728
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/31/25 02:14:30.752
  STEP: Creating a configMap that should not be mutated @ 07/31/25 02:14:30.765
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/31/25 02:14:30.788
  STEP: Creating a configMap that should be mutated @ 07/31/25 02:14:30.8
  I0731 02:14:30.918743 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1177" for this suite. @ 07/31/25 02:14:30.927
  STEP: Destroying namespace "webhook-markers-7174" for this suite. @ 07/31/25 02:14:30.945
• [3.511 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 07/31/25 02:14:30.96
  I0731 02:14:30.960778 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename services @ 07/31/25 02:14:30.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:14:30.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:14:30.999
  I0731 02:14:31.008234      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 07/31/25 02:14:31.008
  I0731 02:14:31.017139      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 07/31/25 02:14:31.017
  I0731 02:14:31.019491      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 07/31/25 02:14:31.02
  I0731 02:14:31.027711      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 07/31/25 02:14:31.027
  I0731 02:14:31.039119      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 02:14:31.043022      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/31/25 02:14:31.043
  I0731 02:14:31.047954      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 07/31/25 02:14:31.048
  I0731 02:14:31.056442      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 02:14:31.058929      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/31/25 02:14:31.059
  I0731 02:14:31.066897      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 07/31/25 02:14:31.066
  I0731 02:14:31.076812      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 07/31/25 02:14:31.076
  I0731 02:14:31.082296      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/31/25 02:14:31.082
  I0731 02:14:31.089693      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0731 02:14:31.090935 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7541" for this suite. @ 07/31/25 02:14:31.101
• [0.154 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/31/25 02:14:31.118
  I0731 02:14:31.118436 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename subpath @ 07/31/25 02:14:31.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:14:31.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:14:31.146
  STEP: Setting up data @ 07/31/25 02:14:31.15
  STEP: Creating pod pod-subpath-test-secret-whpg @ 07/31/25 02:14:31.181
  STEP: Creating a pod to test atomic-volume-subpath @ 07/31/25 02:14:31.181
  E0731 02:14:31.493700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:32.494089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:33.494674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:34.494930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:35.495105      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:36.495324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:37.496171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:38.496266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:39.496575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:40.496758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:41.496828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:42.497105      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:43.497404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:44.497526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:45.498515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:46.498738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:47.499291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:48.499407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:49.499831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:50.499969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:51.500278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:52.500395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:53.500474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:54.500617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:14:55.27
  I0731 02:14:55.274315 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod pod-subpath-test-secret-whpg container test-container-subpath-secret-whpg: <nil>
  STEP: delete the pod @ 07/31/25 02:14:55.28
  STEP: Deleting pod pod-subpath-test-secret-whpg @ 07/31/25 02:14:55.3
  I0731 02:14:55.300921 24 delete.go:62] Deleting pod "pod-subpath-test-secret-whpg" in namespace "subpath-6447"
  I0731 02:14:55.304393 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6447" for this suite. @ 07/31/25 02:14:55.309
• [24.205 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/31/25 02:14:55.323
  I0731 02:14:55.323464 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename container-runtime @ 07/31/25 02:14:55.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:14:55.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:14:55.347
  STEP: create the container @ 07/31/25 02:14:55.351
  I0731 02:14:55.364304      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 07/31/25 02:14:55.364
  E0731 02:14:55.501132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:56.501491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:57.502339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/31/25 02:14:58.383
  STEP: the container should be terminated @ 07/31/25 02:14:58.387
  STEP: the termination message should be set @ 07/31/25 02:14:58.387
  I0731 02:14:58.387285 24 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/31/25 02:14:58.387
  I0731 02:14:58.406624 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2987" for this suite. @ 07/31/25 02:14:58.411
• [3.098 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 07/31/25 02:14:58.421
  I0731 02:14:58.421660 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename deployment @ 07/31/25 02:14:58.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:14:58.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:14:58.446
  STEP: creating a Deployment @ 07/31/25 02:14:58.453
  I0731 02:14:58.453885 24 deployment.go:506] Creating simple deployment test-deployment-lcpwc
  I0731 02:14:58.471927 24 deployment.go:223] deployment "test-deployment-lcpwc" doesn't have the required revision set
  E0731 02:14:58.502956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:14:59.503760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 07/31/25 02:15:00.49
  I0731 02:15:00.495942 24 deployment.go:531] Deployment test-deployment-lcpwc has Conditions: [{Available True 2025-07-31 02:14:59 +0000 UTC 2025-07-31 02:14:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-07-31 02:14:59 +0000 UTC 2025-07-31 02:14:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lcpwc-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/31/25 02:15:00.496
  E0731 02:15:00.504093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:15:00.511162 24 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 2, 14, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 2, 14, 59, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 31, 2, 14, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 31, 2, 14, 58, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-lcpwc-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/31/25 02:15:00.511
  I0731 02:15:00.513627 24 deployment.go:578] Observed &Deployment event: ADDED
  I0731 02:15:00.513701 24 deployment.go:574] Observed Deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-31 02:14:58 +0000 UTC 2025-07-31 02:14:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lcpwc-6fb4c74686"}
  I0731 02:15:00.513912 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0731 02:15:00.513941 24 deployment.go:574] Observed Deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-31 02:14:58 +0000 UTC 2025-07-31 02:14:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lcpwc-6fb4c74686"}
  I0731 02:15:00.513952 24 deployment.go:574] Observed Deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-31 02:14:58 +0000 UTC 2025-07-31 02:14:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0731 02:15:00.514093 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0731 02:15:00.514264 24 deployment.go:574] Observed Deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-31 02:14:58 +0000 UTC 2025-07-31 02:14:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0731 02:15:00.514278 24 deployment.go:574] Observed Deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-31 02:14:58 +0000 UTC 2025-07-31 02:14:58 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-lcpwc-6fb4c74686" is progressing.}
  I0731 02:15:00.514436 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0731 02:15:00.514637 24 deployment.go:574] Observed Deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-31 02:14:59 +0000 UTC 2025-07-31 02:14:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0731 02:15:00.514655 24 deployment.go:574] Observed Deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-31 02:14:59 +0000 UTC 2025-07-31 02:14:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lcpwc-6fb4c74686" has successfully progressed.}
  I0731 02:15:00.514820 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0731 02:15:00.514849 24 deployment.go:574] Observed Deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-31 02:14:59 +0000 UTC 2025-07-31 02:14:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0731 02:15:00.514859 24 deployment.go:574] Observed Deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-31 02:14:59 +0000 UTC 2025-07-31 02:14:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lcpwc-6fb4c74686" has successfully progressed.}
  I0731 02:15:00.514875 24 deployment.go:571] Found Deployment test-deployment-lcpwc in namespace deployment-9608 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0731 02:15:00.514888 24 deployment.go:582] Deployment test-deployment-lcpwc has an updated status
  STEP: patching the Statefulset Status @ 07/31/25 02:15:00.514
  I0731 02:15:00.514947 24 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0731 02:15:00.525820 24 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/31/25 02:15:00.525
  I0731 02:15:00.527867 24 deployment.go:615] Observed &Deployment event: ADDED
  I0731 02:15:00.527939 24 deployment.go:611] Observed deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-31 02:14:58 +0000 UTC 2025-07-31 02:14:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lcpwc-6fb4c74686"}
  I0731 02:15:00.528032 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0731 02:15:00.528056 24 deployment.go:611] Observed deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-31 02:14:58 +0000 UTC 2025-07-31 02:14:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lcpwc-6fb4c74686"}
  I0731 02:15:00.528067 24 deployment.go:611] Observed deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-31 02:14:58 +0000 UTC 2025-07-31 02:14:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0731 02:15:00.528151 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0731 02:15:00.528210 24 deployment.go:611] Observed deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-31 02:14:58 +0000 UTC 2025-07-31 02:14:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0731 02:15:00.528226 24 deployment.go:611] Observed deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-31 02:14:58 +0000 UTC 2025-07-31 02:14:58 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-lcpwc-6fb4c74686" is progressing.}
  I0731 02:15:00.528335 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0731 02:15:00.528367 24 deployment.go:611] Observed deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-31 02:14:59 +0000 UTC 2025-07-31 02:14:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0731 02:15:00.528376 24 deployment.go:611] Observed deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-31 02:14:59 +0000 UTC 2025-07-31 02:14:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lcpwc-6fb4c74686" has successfully progressed.}
  I0731 02:15:00.528462 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0731 02:15:00.528483 24 deployment.go:611] Observed deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-31 02:14:59 +0000 UTC 2025-07-31 02:14:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0731 02:15:00.528494 24 deployment.go:611] Observed deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-31 02:14:59 +0000 UTC 2025-07-31 02:14:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lcpwc-6fb4c74686" has successfully progressed.}
  I0731 02:15:00.528502 24 deployment.go:611] Observed deployment test-deployment-lcpwc in namespace deployment-9608 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0731 02:15:00.528596 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0731 02:15:00.528609 24 deployment.go:608] Found deployment test-deployment-lcpwc in namespace deployment-9608 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0731 02:15:00.528636 24 deployment.go:619] Deployment test-deployment-lcpwc has a patched status
  I0731 02:15:00.538879 24 deployment.go:632] Deployment "test-deployment-lcpwc":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-lcpwc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9608",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "918d666c-78cf-46e1-9aa2-d49d43b4dd2a",
      ResourceVersion: (string) (len=6) "896690",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0731 02:15:00.582874 24 deployment.go:40] New ReplicaSet "test-deployment-lcpwc-6fb4c74686" of Deployment "test-deployment-lcpwc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-lcpwc-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9608",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d76ca2c3-821a-4a52-b382-a14205704b60",
      ResourceVersion: (string) (len=6) "896672",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-lcpwc",
          UID: (types.UID) (len=36) "918d666c-78cf-46e1-9aa2-d49d43b4dd2a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 39 31 38  |k:{\"uid\":\"918|
              00000120  64 36 36 36 63 2d 37 38  63 66 2d 34 36 65 31 2d  |d666c-78cf-46e1-|
              00000130  39 61 61 32 2d 64 34 39  64 34 33 62 34 64 64 32  |9aa2-d49d43b4dd2|
              00000140  61 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |a\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0731 02:15:00.588847 24 deployment.go:68] Pod "test-deployment-lcpwc-6fb4c74686-qdv79" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-lcpwc-6fb4c74686-qdv79",
      GenerateName: (string) (len=33) "test-deployment-lcpwc-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-9608",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1cd3ac4e-508d-4e60-b19e-74613404f0d6",
      ResourceVersion: (string) (len=6) "896671",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-lcpwc-6fb4c74686",
          UID: (types.UID) (len=36) "d76ca2c3-821a-4a52-b382-a14205704b60",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 64 37 36 63 61 32 63  33 2d 38 32 31 61 2d 34  |"d76ca2c3-821a-4|
              000000a0  61 35 32 2d 62 33 38 32  2d 61 31 34 32 30 35 37  |a52-b382-a142057|
              000000b0  30 34 62 36 30 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |04b60\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 37 32 5c 22 7d 22 3a  |.233.65.172\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xzv4n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xzv4n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=17) "viola-gs-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889524898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.30.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.30.203"
        }
      },
      PodIP: (string) (len=13) "10.233.65.172",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.172"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889524898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889524899,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://92e65667745b0d6156d5515862aff5a562ae6159e31640d9fde09ac7a70bdd18",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xzv4n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0731 02:15:00.590183 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9608" for this suite. @ 07/31/25 02:15:00.594
• [2.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 07/31/25 02:15:00.603
  I0731 02:15:00.603754 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename proxy @ 07/31/25 02:15:00.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:15:00.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:15:00.626
  I0731 02:15:00.628689 24 proxy.go:336] Creating pod...
  E0731 02:15:01.504807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:02.505161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:15:02.657508 24 proxy.go:360] Creating service...
  I0731 02:15:02.687370 24 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/pods/agnhost/proxy/some/path/with/DELETE
  I0731 02:15:02.704313 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0731 02:15:02.704372 24 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/pods/agnhost/proxy/some/path/with/GET
  I0731 02:15:02.718565 24 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0731 02:15:02.718640 24 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/pods/agnhost/proxy/some/path/with/HEAD
  I0731 02:15:02.732298 24 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0731 02:15:02.732349 24 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/pods/agnhost/proxy/some/path/with/OPTIONS
  I0731 02:15:02.736392 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0731 02:15:02.736777 24 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/pods/agnhost/proxy/some/path/with/PATCH
  I0731 02:15:02.749379 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0731 02:15:02.749729 24 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/pods/agnhost/proxy/some/path/with/POST
  I0731 02:15:02.759049 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0731 02:15:02.759139 24 proxy.go:397] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/pods/agnhost/proxy/some/path/with/PUT
  I0731 02:15:02.763441 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0731 02:15:02.763734 24 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/services/test-service/proxy/some/path/with/DELETE
  I0731 02:15:02.769383 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0731 02:15:02.769606 24 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/services/test-service/proxy/some/path/with/GET
  I0731 02:15:02.775364 24 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0731 02:15:02.775412 24 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/services/test-service/proxy/some/path/with/HEAD
  I0731 02:15:02.781009 24 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0731 02:15:02.781077 24 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/services/test-service/proxy/some/path/with/OPTIONS
  I0731 02:15:02.789785 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0731 02:15:02.789833 24 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/services/test-service/proxy/some/path/with/PATCH
  I0731 02:15:02.795358 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0731 02:15:02.795409 24 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/services/test-service/proxy/some/path/with/POST
  I0731 02:15:02.799728 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0731 02:15:02.799760 24 proxy.go:408] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8452/services/test-service/proxy/some/path/with/PUT
  I0731 02:15:02.804967 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0731 02:15:02.805260 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8452" for this suite. @ 07/31/25 02:15:02.81
• [2.217 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 07/31/25 02:15:02.822
  I0731 02:15:02.822299 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename job @ 07/31/25 02:15:02.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:15:02.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:15:02.847
  STEP: Creating a job @ 07/31/25 02:15:02.851
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/31/25 02:15:02.861
  E0731 02:15:03.505233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:04.505454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:05.505672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:06.505995      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/31/25 02:15:06.879
  STEP: updating /status @ 07/31/25 02:15:06.892
  STEP: get /status @ 07/31/25 02:15:06.903
  I0731 02:15:06.907098 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7352" for this suite. @ 07/31/25 02:15:06.911
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 07/31/25 02:15:06.918
  I0731 02:15:06.918824 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename dns @ 07/31/25 02:15:06.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:15:06.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:15:06.943
  STEP: Creating a test headless service @ 07/31/25 02:15:06.946
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-190 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-190;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-190 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-190;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-190.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-190.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-190.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-190.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-190.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-190.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-190.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-190.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-190.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-190.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-190.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-190.svc;check="$$(dig +notcp +noall +answer +search 131.25.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.25.131_udp@PTR;check="$$(dig +tcp +noall +answer +search 131.25.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.25.131_tcp@PTR;sleep 1; done
   @ 07/31/25 02:15:06.983
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-190 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-190;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-190 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-190;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-190.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-190.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-190.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-190.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-190.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-190.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-190.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-190.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-190.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-190.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-190.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-190.svc;check="$$(dig +notcp +noall +answer +search 131.25.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.25.131_udp@PTR;check="$$(dig +tcp +noall +answer +search 131.25.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.25.131_tcp@PTR;sleep 1; done
   @ 07/31/25 02:15:06.983
  STEP: creating a pod to probe DNS @ 07/31/25 02:15:06.983
  STEP: submitting the pod to kubernetes @ 07/31/25 02:15:06.983
  E0731 02:15:07.506340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:08.506804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:09.507077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:10.507160      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/31/25 02:15:11.024
  STEP: looking for the results for each expected name from probers @ 07/31/25 02:15:11.028
  I0731 02:15:11.032429 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.035760 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.039491 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-190 from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.042488 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-190 from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.045532 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-190.svc from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.049053 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-190.svc from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.051948 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-190.svc from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.054798 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-190.svc from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.074039 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.077316 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.081065 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-190 from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.084127 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-190 from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.087754 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-190.svc from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.091504 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-190.svc from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.094555 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-190.svc from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.099067 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-190.svc from pod dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639: the server could not find the requested resource (get pods dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639)
  I0731 02:15:11.119609 24 dns_common.go:506] Lookups using dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-190 agnhost_tcp@dns-test-service.dns-190 agnhost_udp@dns-test-service.dns-190.svc agnhost_tcp@dns-test-service.dns-190.svc agnhost_udp@_http._tcp.dns-test-service.dns-190.svc agnhost_tcp@_http._tcp.dns-test-service.dns-190.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-190 jessie_tcp@dns-test-service.dns-190 jessie_udp@dns-test-service.dns-190.svc jessie_tcp@dns-test-service.dns-190.svc jessie_udp@_http._tcp.dns-test-service.dns-190.svc jessie_tcp@_http._tcp.dns-test-service.dns-190.svc]

  I0731 02:15:11.131108 24 dns_common.go:514] Pod client logs for webserver: 
  I0731 02:15:11.138982 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0731 02:15:11.145997 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0731 02:15:11.507675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:12.507949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:13.508210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:14.510521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:15.510850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:15:16.106973 24 dns_common.go:546] DNS probes using dns-190/dns-test-f3bf660a-2adf-4fbd-91e5-393ab1802639 succeeded

  STEP: deleting the pod @ 07/31/25 02:15:16.107
  STEP: deleting the test service @ 07/31/25 02:15:16.129
  STEP: deleting the test headless service @ 07/31/25 02:15:16.176
  I0731 02:15:16.198318 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-190" for this suite. @ 07/31/25 02:15:16.207
• [9.298 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 07/31/25 02:15:16.217
  I0731 02:15:16.217213 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename var-expansion @ 07/31/25 02:15:16.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:15:16.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:15:16.238
  STEP: creating the pod @ 07/31/25 02:15:16.241
  STEP: waiting for pod running @ 07/31/25 02:15:16.254
  E0731 02:15:16.511362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:17.511764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:18.512599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:19.512887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 07/31/25 02:15:20.27
  I0731 02:15:20.274823 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-846 PodName:var-expansion-69ec77bf-81c5-4765-a1b9-a58f8f49e4ed ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 02:15:20.274862 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 02:15:20.274916 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/var-expansion-846/pods/var-expansion-69ec77bf-81c5-4765-a1b9-a58f8f49e4ed/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0731 02:15:20.338952 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 07/31/25 02:15:20.339
  I0731 02:15:20.344064 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-846 PodName:var-expansion-69ec77bf-81c5-4765-a1b9-a58f8f49e4ed ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0731 02:15:20.344202 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0731 02:15:20.344344 24 exec_util.go:84] ExecWithOptions: execute(https://10.233.0.1:443/api/v1/namespaces/var-expansion-846/pods/var-expansion-69ec77bf-81c5-4765-a1b9-a58f8f49e4ed/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0731 02:15:20.403737 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 07/31/25 02:15:20.403
  E0731 02:15:20.513967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:15:20.922757 24 pod_client.go:173] Successfully updated pod "var-expansion-69ec77bf-81c5-4765-a1b9-a58f8f49e4ed"
  STEP: waiting for annotated pod running @ 07/31/25 02:15:20.922
  STEP: deleting the pod gracefully @ 07/31/25 02:15:20.926
  I0731 02:15:20.926076 24 delete.go:62] Deleting pod "var-expansion-69ec77bf-81c5-4765-a1b9-a58f8f49e4ed" in namespace "var-expansion-846"
  I0731 02:15:20.936519 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-69ec77bf-81c5-4765-a1b9-a58f8f49e4ed" to be fully deleted
  E0731 02:15:21.514604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:22.514969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:23.515626      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:24.515652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:25.516113      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:26.516486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:27.516813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:28.517118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:29.517843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:30.517953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:31.518137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:32.518420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:33.518631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:34.518983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:35.519795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:36.519931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:37.520067      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:38.520168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:39.521227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:40.521271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:41.522199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:42.522334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:43.522523      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:44.522657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:45.523649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:46.523970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:47.524119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:48.524419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:49.525325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:50.525445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:51.526493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:52.526665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:15:53.032768 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-846" for this suite. @ 07/31/25 02:15:53.04
• [36.831 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 07/31/25 02:15:53.049
  I0731 02:15:53.049148 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename statefulset @ 07/31/25 02:15:53.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:15:53.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:15:53.073
  STEP: Creating service test in namespace statefulset-8264 @ 07/31/25 02:15:53.076
  STEP: Creating statefulset ss in namespace statefulset-8264 @ 07/31/25 02:15:53.083
  I0731 02:15:53.097911 24 wait.go:44] Found 0 stateful pods, waiting for 1
  E0731 02:15:53.527559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:54.527773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:55.529662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:56.530164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:57.530458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:58.530818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:15:59.531205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:00.531451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:01.531948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:02.532314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:16:03.098500 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/31/25 02:16:03.104
  STEP: updating a scale subresource @ 07/31/25 02:16:03.108
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/31/25 02:16:03.118
  STEP: Patch a scale subresource @ 07/31/25 02:16:03.121
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/31/25 02:16:03.131
  I0731 02:16:03.143544 24 statefulset.go:138] Deleting all statefulset in ns statefulset-8264
  I0731 02:16:03.151103 24 rest.go:153] Scaling statefulset ss to 0
  E0731 02:16:03.533018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:04.533481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:05.533702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:06.534084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:07.534481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:08.534967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:09.535589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:10.535859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:11.536239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:12.536589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:16:13.169480 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0731 02:16:13.172838 24 rest.go:91] Deleting statefulset ss
  I0731 02:16:13.189595 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8264" for this suite. @ 07/31/25 02:16:13.194
• [20.153 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 07/31/25 02:16:13.202
  I0731 02:16:13.202883 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename downward-api @ 07/31/25 02:16:13.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:16:13.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:16:13.227
  STEP: Creating a pod to test downward api env vars @ 07/31/25 02:16:13.229
  E0731 02:16:13.536947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:14.537128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:15.537484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:16.537827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/31/25 02:16:17.255
  I0731 02:16:17.258169 24 output.go:207] Trying to get logs from node viola-gs-worker-1 pod downward-api-b229d3bd-85e9-410d-921e-2fd4e96eae78 container dapi-container: <nil>
  STEP: delete the pod @ 07/31/25 02:16:17.265
  I0731 02:16:17.285275 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3862" for this suite. @ 07/31/25 02:16:17.292
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 07/31/25 02:16:17.302
  I0731 02:16:17.302117 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1096263091
  STEP: Building a namespace api object, basename kubectl @ 07/31/25 02:16:17.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/31/25 02:16:17.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/31/25 02:16:17.325
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/31/25 02:16:17.328
  I0731 02:16:17.328763 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1953 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0731 02:16:17.414631 24 builder.go:146] stderr: ""
  I0731 02:16:17.414697 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/31/25 02:16:17.414
  I0731 02:16:17.426486 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1096263091 --namespace=kubectl-1953 delete pods e2e-test-httpd-pod'
  E0731 02:16:17.537876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0731 02:16:18.538056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0731 02:16:19.240653 24 builder.go:146] stderr: ""
  I0731 02:16:19.240704 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0731 02:16:19.240897 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1953" for this suite. @ 07/31/25 02:16:19.247
• [1.955 seconds]
------------------------------
SS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0731 02:16:19.257016 24 suites.go:34] Running AfterSuite actions on node 1
  I0731 02:16:19.257046 24 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.049 seconds]
------------------------------

Ran 419 of 6731 Specs in 6509.512 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h48m30.413947489s
Test Suite Passed
