  I0508 14:10:43.776370      22 e2e.go:109] Starting e2e run "ea598a33-1ae6-4a6e-874a-e18cfe1f996e" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1746713442 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0508 14:10:44.210231 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  I0508 14:10:44.211416 22 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0508 14:10:46.124253 22 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0508 14:10:46.126996 22 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'rke2-canal' (0 seconds elapsed)
  I0508 14:10:46.127042 22 e2e.go:245] e2e test version: v1.33.0
  I0508 14:10:46.128242 22 e2e.go:254] kube-apiserver version: v1.33.0+rke2r1
  I0508 14:10:46.128357 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  I0508 14:10:46.131566 22 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [1.921 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/08/25 14:10:46.303
  I0508 14:10:46.303449 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename hostport @ 05/08/25 14:10:46.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:10:46.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:10:46.37
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/08/25 14:10:46.4
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.20.200 on the node which pod1 resides and expect scheduled @ 05/08/25 14:11:02.709
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.20.200 but use UDP protocol on the node which pod2 resides @ 05/08/25 14:11:04.945
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/08/25 14:11:11
  I0508 14:11:11.000427 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.20.200 http://127.0.0.1:54323/hostname] Namespace:hostport-3783 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:11:11.000443 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:11:11.000527 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-3783/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.20.200+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0508 14:11:11.090561 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.20.200, port: 54323 @ 05/08/25 14:11:11.09
  I0508 14:11:11.090649 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.20.200:54323/hostname] Namespace:hostport-3783 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:11:11.090663 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:11:11.090805 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-3783/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.20.200%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0508 14:11:11.160393 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.20.200, port: 54323 UDP @ 05/08/25 14:11:11.16
  I0508 14:11:11.160762 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.20.200 54323] Namespace:hostport-3783 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:11:11.160780 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:11:11.160859 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-3783/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.20.200+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0508 14:11:16.235781 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 14:11:16.236003 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-3783" for this suite. @ 05/08/25 14:11:16.238
• [29.950 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 05/08/25 14:11:16.253
  I0508 14:11:16.253589 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 14:11:16.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:11:16.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:11:16.281
  STEP: Looking for a node to schedule job pod @ 05/08/25 14:11:16.283
  STEP: Creating a job @ 05/08/25 14:11:16.339
  STEP: Ensuring job fails @ 05/08/25 14:11:16.354
  I0508 14:11:24.374852 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3281" for this suite. @ 05/08/25 14:11:24.377
• [8.134 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 05/08/25 14:11:24.388
  I0508 14:11:24.388088 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename namespaces @ 05/08/25 14:11:24.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:11:24.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:11:24.421
  STEP: Read namespace status @ 05/08/25 14:11:24.427
  I0508 14:11:24.431361 22 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/08/25 14:11:24.431
  I0508 14:11:24.442170 22 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/08/25 14:11:24.442
  I0508 14:11:24.458088 22 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0508 14:11:24.458268 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6509" for this suite. @ 05/08/25 14:11:24.478
• [0.114 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 05/08/25 14:11:24.502
  I0508 14:11:24.502486 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename ingress @ 05/08/25 14:11:24.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:11:24.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:11:24.533
  STEP: getting /apis @ 05/08/25 14:11:24.536
  STEP: getting /apis/networking.k8s.io @ 05/08/25 14:11:24.541
  STEP: getting /apis/networking.k8s.iov1 @ 05/08/25 14:11:24.543
  STEP: creating @ 05/08/25 14:11:24.555
  STEP: getting @ 05/08/25 14:11:24.603
  STEP: listing @ 05/08/25 14:11:24.606
  STEP: watching @ 05/08/25 14:11:24.609
  I0508 14:11:24.609615 22 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 05/08/25 14:11:24.611
  STEP: cluster-wide watching @ 05/08/25 14:11:24.613
  I0508 14:11:24.613276 22 ingress.go:198] starting watch
  STEP: patching @ 05/08/25 14:11:24.614
  STEP: updating @ 05/08/25 14:11:24.627
  I0508 14:11:24.659708 22 ingress.go:221] waiting for watch events with expected annotations
  I0508 14:11:24.659762 22 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 05/08/25 14:11:24.659
  STEP: updating /status @ 05/08/25 14:11:24.671
  STEP: get /status @ 05/08/25 14:11:24.682
  STEP: deleting @ 05/08/25 14:11:24.684
  STEP: deleting a collection @ 05/08/25 14:11:24.702
  I0508 14:11:24.723990 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3111" for this suite. @ 05/08/25 14:11:24.726
• [0.239 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 05/08/25 14:11:24.741
  I0508 14:11:24.742015 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 14:11:24.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:11:24.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:11:24.781
  STEP: creating service nodeport-test with type=NodePort in namespace services-3674 @ 05/08/25 14:11:24.785
  I0508 14:11:24.878618 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0508 14:11:26.881694 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 14, 11, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 11, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 11, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 11, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"nodeport-test-556868c564\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:11:28.891447 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 14, 11, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 11, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 11, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 11, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"nodeport-test-556868c564\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:11:30.884270 22 resource.go:361] Creating new exec pod
  I0508 14:11:32.922449 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3674 exec execpodl2j8r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0508 14:11:33.076257 22 builder.go:146] stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test (10.43.46.236) 80 port [tcp/http] succeeded!\n"
  I0508 14:11:33.076311 22 builder.go:147] stdout: ""
  I0508 14:11:33.922874 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3674 exec execpodl2j8r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0508 14:11:34.131853 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.43.46.236) 80 port [tcp/http] succeeded!\n"
  I0508 14:11:34.131897 22 builder.go:147] stdout: "nodeport-test-556868c564-4mbqh"
  I0508 14:11:34.131963 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3674 exec execpodl2j8r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.46.236 80'
  I0508 14:11:34.248568 22 builder.go:146] stderr: "+ + nc -v -t -w 2 10.43.46.236 80\necho hostName\nConnection to 10.43.46.236 80 port [tcp/http] succeeded!\n"
  I0508 14:11:34.248633 22 builder.go:147] stdout: ""
  I0508 14:11:35.132608 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3674 exec execpodl2j8r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.46.236 80'
  I0508 14:11:35.258771 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.46.236 80\nConnection to 10.43.46.236 80 port [tcp/http] succeeded!\n"
  I0508 14:11:35.258822 22 builder.go:147] stdout: ""
  I0508 14:11:36.132608 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3674 exec execpodl2j8r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.46.236 80'
  I0508 14:11:36.258924 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.46.236 80\nConnection to 10.43.46.236 80 port [tcp/http] succeeded!\n"
  I0508 14:11:36.258966 22 builder.go:147] stdout: "nodeport-test-556868c564-4mbqh"
  I0508 14:11:36.259032 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3674 exec execpodl2j8r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.200 31185'
  I0508 14:11:36.377874 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.200 31185\nConnection to 172.31.20.200 31185 port [tcp/*] succeeded!\n"
  I0508 14:11:36.377928 22 builder.go:147] stdout: ""
  I0508 14:11:37.259960 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3674 exec execpodl2j8r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.200 31185'
  I0508 14:11:37.387141 22 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.20.200 31185\n+ echo hostName\nConnection to 172.31.20.200 31185 port [tcp/*] succeeded!\n"
  I0508 14:11:37.387189 22 builder.go:147] stdout: "nodeport-test-556868c564-4mbqh"
  I0508 14:11:37.387267 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3674 exec execpodl2j8r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.27.218 31185'
  I0508 14:11:37.514335 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.27.218 31185\nConnection to 172.31.27.218 31185 port [tcp/*] succeeded!\n"
  I0508 14:11:37.514377 22 builder.go:147] stdout: ""
  I0508 14:11:38.387413 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3674 exec execpodl2j8r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.27.218 31185'
  I0508 14:11:38.506610 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.27.218 31185\nConnection to 172.31.27.218 31185 port [tcp/*] succeeded!\n"
  I0508 14:11:38.506658 22 builder.go:147] stdout: ""
  I0508 14:11:39.387745 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3674 exec execpodl2j8r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.27.218 31185'
  I0508 14:11:39.521965 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.27.218 31185\nConnection to 172.31.27.218 31185 port [tcp/*] succeeded!\n"
  I0508 14:11:39.522009 22 builder.go:147] stdout: ""
  I0508 14:11:40.387904 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3674 exec execpodl2j8r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.27.218 31185'
  I0508 14:11:40.523003 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.27.218 31185\nConnection to 172.31.27.218 31185 port [tcp/*] succeeded!\n"
  I0508 14:11:40.523052 22 builder.go:147] stdout: "nodeport-test-556868c564-4mbqh"
  I0508 14:11:40.523192 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3674" for this suite. @ 05/08/25 14:11:40.525
• [15.792 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/08/25 14:11:40.534
  I0508 14:11:40.534015 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename prestop @ 05/08/25 14:11:40.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:11:40.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:11:40.562
  STEP: Creating server pod server in namespace prestop-6117 @ 05/08/25 14:11:40.566
  STEP: Waiting for pods to come up. @ 05/08/25 14:11:40.576
  STEP: Creating tester pod tester in namespace prestop-6117 @ 05/08/25 14:11:42.595
  STEP: Deleting pre-stop pod @ 05/08/25 14:11:46.613
  I0508 14:11:51.635981 22 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/08/25 14:11:51.636
  I0508 14:11:51.667702 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-6117" for this suite. @ 05/08/25 14:11:51.671
• [11.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 05/08/25 14:11:51.689
  I0508 14:11:51.689074 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 14:11:51.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:11:51.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:11:51.718
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 14:11:51.722
  STEP: Saw pod success @ 05/08/25 14:11:55.763
  I0508 14:11:55.765157 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-c970e347-82b4-4977-b8fa-90a4b752246e container client-container: <nil>
  STEP: delete the pod @ 05/08/25 14:11:55.779
  I0508 14:11:55.809119 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5432" for this suite. @ 05/08/25 14:11:55.812
• [4.133 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/08/25 14:11:55.822
  I0508 14:11:55.822419 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename secrets @ 05/08/25 14:11:55.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:11:55.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:11:55.861
  I0508 14:11:55.920884 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4027" for this suite. @ 05/08/25 14:11:55.924
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 05/08/25 14:11:55.933
  I0508 14:11:55.933969 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 14:11:55.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:11:55.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:11:55.965
  STEP: Setting up server cert @ 05/08/25 14:11:56.049
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 14:11:56.282
  STEP: Deploying the webhook pod @ 05/08/25 14:11:56.291
  STEP: Wait for the deployment to be ready @ 05/08/25 14:11:56.315
  I0508 14:11:56.324416 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/08/25 14:11:58.332
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 14:11:58.359
  I0508 14:11:59.361048 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0508 14:11:59.364914 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/08/25 14:11:59.88
  STEP: Creating a custom resource that should be denied by the webhook @ 05/08/25 14:11:59.908
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/08/25 14:12:01.933
  STEP: Updating the custom resource with disallowed data should be denied @ 05/08/25 14:12:01.986
  STEP: Deleting the custom resource should be denied @ 05/08/25 14:12:02.062
  STEP: Remove the offending key and value from the custom resource data @ 05/08/25 14:12:02.123
  STEP: Deleting the updated custom resource should be successful @ 05/08/25 14:12:02.18
  I0508 14:12:02.979017 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8645" for this suite. @ 05/08/25 14:12:02.992
  STEP: Destroying namespace "webhook-markers-4678" for this suite. @ 05/08/25 14:12:03.003
• [7.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 05/08/25 14:12:03.016
  I0508 14:12:03.016358 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 14:12:03.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:12:03.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:12:03.048
  STEP: fetching services @ 05/08/25 14:12:03.06
  I0508 14:12:03.069929 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1248" for this suite. @ 05/08/25 14:12:03.103
• [0.098 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/08/25 14:12:03.114
  I0508 14:12:03.114769 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename limitrange @ 05/08/25 14:12:03.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:12:03.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:12:03.149
  STEP: Creating LimitRange "e2e-limitrange-vc4n7" in namespace "limitrange-5542" @ 05/08/25 14:12:03.152
  STEP: Creating another limitRange in another namespace @ 05/08/25 14:12:03.162
  I0508 14:12:03.186255 22 limit_range.go:299] Namespace "e2e-limitrange-vc4n7-1781" created
  I0508 14:12:03.186526 22 limit_range.go:300] Creating LimitRange "e2e-limitrange-vc4n7" in namespace "e2e-limitrange-vc4n7-1781"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-vc4n7" @ 05/08/25 14:12:03.196
  I0508 14:12:03.198543 22 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-vc4n7" in "limitrange-5542" namespace @ 05/08/25 14:12:03.198
  I0508 14:12:03.218664 22 limit_range.go:335] LimitRange "e2e-limitrange-vc4n7" has been patched
  STEP: Delete LimitRange "e2e-limitrange-vc4n7" by Collection with labelSelector: "e2e-limitrange-vc4n7=patched" @ 05/08/25 14:12:03.218
  STEP: Confirm that the limitRange "e2e-limitrange-vc4n7" has been deleted @ 05/08/25 14:12:03.228
  I0508 14:12:03.228596 22 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0508 14:12:03.230876 22 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-vc4n7=patched"
  I0508 14:12:03.230915 22 limit_range.go:344] LimitRange "e2e-limitrange-vc4n7" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-vc4n7" @ 05/08/25 14:12:03.23
  I0508 14:12:03.233301 22 limit_range.go:350] Found 1 limitRange
  I0508 14:12:03.233585 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5542" for this suite. @ 05/08/25 14:12:03.238
  STEP: Destroying namespace "e2e-limitrange-vc4n7-1781" for this suite. @ 05/08/25 14:12:03.252
• [0.146 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/08/25 14:12:03.261
  I0508 14:12:03.261946 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename init-container @ 05/08/25 14:12:03.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:12:03.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:12:03.294
  STEP: creating the pod @ 05/08/25 14:12:03.297
  I0508 14:12:03.297073 22 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0508 14:12:07.013690 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1483" for this suite. @ 05/08/25 14:12:07.022
• [3.788 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 05/08/25 14:12:07.05
  I0508 14:12:07.050586 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/08/25 14:12:07.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:12:07.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:12:07.081
  STEP: set up a multi version CRD @ 05/08/25 14:12:07.084
  I0508 14:12:07.084993 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: rename a version @ 05/08/25 14:12:10.948
  STEP: check the new version name is served @ 05/08/25 14:12:10.968
  STEP: check the old version name is removed @ 05/08/25 14:12:11.977
  STEP: check the other version is not changed @ 05/08/25 14:12:12.688
  I0508 14:12:15.374836 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7826" for this suite. @ 05/08/25 14:12:15.39
• [8.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 05/08/25 14:12:15.401
  I0508 14:12:15.401047 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 14:12:15.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:12:15.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:12:15.445
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/08/25 14:12:15.447
  I0508 14:12:15.447706 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9150 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0508 14:12:15.513193 22 builder.go:146] stderr: ""
  I0508 14:12:15.513247 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/08/25 14:12:15.513
  I0508 14:12:15.513337 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9150 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0508 14:12:15.588698 22 builder.go:146] stderr: ""
  I0508 14:12:15.588747 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/08/25 14:12:15.588
  I0508 14:12:15.591214 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9150 delete pods e2e-test-httpd-pod'
  I0508 14:12:16.774879 22 builder.go:146] stderr: ""
  I0508 14:12:16.774929 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0508 14:12:16.775025 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9150" for this suite. @ 05/08/25 14:12:16.777
• [1.386 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/08/25 14:12:16.786
  I0508 14:12:16.786770 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename deployment @ 05/08/25 14:12:16.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:12:16.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:12:16.817
  I0508 14:12:16.829885 22 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  I0508 14:12:21.913700 22 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/08/25 14:12:21.913
  I0508 14:12:21.913790 22 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/08/25 14:12:21.926
  I0508 14:12:23.954145 22 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3935",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c09999f0-f5ae-4cf9-8009-951e9288c1fd",
      ResourceVersion: (string) (len=5) "17736",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882310341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0508 14:12:23.957505 22 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3935",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d68bc848-e51f-42d0-9bd1-391a0e3d0e32",
      ResourceVersion: (string) (len=5) "17726",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882310341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "c09999f0-f5ae-4cf9-8009-951e9288c1fd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 30 39 39 39 39  66 30 2d 66 35 61 65 2d  |\"c09999f0-f5ae-|
              00000120  34 63 66 39 2d 38 30 30  39 2d 39 35 31 65 39 32  |4cf9-8009-951e92|
              00000130  38 38 63 31 66 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |88c1fd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0508 14:12:23.961224 22 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-84w7s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-84w7s",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-3935",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7273d07-0bec-45b5-89c9-3f52c984fb45",
      ResourceVersion: (string) (len=5) "17725",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882310341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "49686df8809e262ead08519808af0f80568c4be2b181e63635fb83edcf826fe4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.13/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.13/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "d68bc848-e51f-42d0-9bd1-391a0e3d0e32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  38 62 63 38 34 38 2d 65  |d\":\"d68bc848-e|
              00000090  35 31 66 2d 34 32 64 30  2d 39 62 64 31 2d 33 39  |51f-42d0-9bd1-39|
              000000a0  31 61 30 65 33 64 30 65  33 32 5c 22 7d 22 3a 7b  |1a0e3d0e32\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310342,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 33  5c 22 7d 22 3a 7b 22 2e  |.42.1.13\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5d6pq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5d6pq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310342,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882310341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) (len=10) "10.42.1.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882310342,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882310342,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://0ecbf477bd8431e5d78464a33ed1184b10a0cf9464addc83c0a6e506f2aec0fa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5d6pq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:12:23.963969 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3935" for this suite. @ 05/08/25 14:12:23.972
• [7.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/08/25 14:12:23.987
  I0508 14:12:23.987700 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename endpointslice @ 05/08/25 14:12:23.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:12:24.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:12:24.015
  I0508 14:12:24.057579      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 14:12:26.060159      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 14:12:26.133797      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 14:12:26.166172 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8069" for this suite. @ 05/08/25 14:12:26.169
• [2.193 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 05/08/25 14:12:26.181
  I0508 14:12:26.181404 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/08/25 14:12:26.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:12:26.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:12:26.22
  STEP: set up a multi version CRD @ 05/08/25 14:12:26.225
  I0508 14:12:26.226074 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: mark a version not serverd @ 05/08/25 14:12:29.77
  STEP: check the unserved version gets removed @ 05/08/25 14:12:29.795
  STEP: check the other version is not changed @ 05/08/25 14:12:30.595
  I0508 14:12:33.344159 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1214" for this suite. @ 05/08/25 14:12:33.349
• [7.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 05/08/25 14:12:33.363
  I0508 14:12:33.363382 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename aggregator @ 05/08/25 14:12:33.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:12:33.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:12:33.384
  I0508 14:12:33.386566 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Registering the sample API server. @ 05/08/25 14:12:33.387
  I0508 14:12:34.299442 22 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0508 14:12:34.358625 22 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0508 14:12:36.458071 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:12:38.461218 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:12:40.461354 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:12:42.461785 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:12:44.460900 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:12:46.460677 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:12:48.461217 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:12:50.461125 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:12:52.460697 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:12:54.460966 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:12:56.464306 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:12:58.579805 22 aggregator.go:756] Waited 110.173916ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/08/25 14:12:58.641
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/08/25 14:12:58.644
  STEP: List APIServices @ 05/08/25 14:12:58.657
  I0508 14:12:58.663385 22 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/08/25 14:12:58.663
  I0508 14:12:58.682844 22 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/08/25 14:12:58.685
  I0508 14:12:58.696331 22 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.May, 8, 14, 12, 58, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/08/25 14:12:58.696
  I0508 14:12:58.699112 22 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-05-08 14:12:58 +0000 UTC Passed all checks passed}
  I0508 14:12:58.699166 22 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0508 14:12:58.699178 22 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/08/25 14:12:58.699
  I0508 14:12:58.715305 22 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-421038935" @ 05/08/25 14:12:58.715
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/08/25 14:12:58.73
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/08/25 14:12:58.745
  STEP: Patch APIService Status @ 05/08/25 14:12:58.747
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/08/25 14:12:58.769
  I0508 14:12:58.776709 22 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-05-08 14:12:58 +0000 UTC Passed all checks passed}
  I0508 14:12:58.776755 22 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0508 14:12:58.776771 22 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0508 14:12:58.776789 22 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/08/25 14:12:58.776
  STEP: Confirm that the generated APIService has been deleted @ 05/08/25 14:12:58.874
  I0508 14:12:58.874284 22 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0508 14:12:58.876560 22 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0508 14:12:58.876597 22 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0508 14:12:59.046046 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2509" for this suite. @ 05/08/25 14:12:59.048
• [25.697 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 05/08/25 14:12:59.06
  I0508 14:12:59.060871 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 14:12:59.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:12:59.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:12:59.099
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/08/25 14:12:59.103
  STEP: Saw pod success @ 05/08/25 14:13:05.132
  I0508 14:13:05.135157 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-42cb40cf-2327-4779-bbb5-1aa4070a3e9d container test-container: <nil>
  STEP: delete the pod @ 05/08/25 14:13:05.14
  I0508 14:13:05.168945 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-858" for this suite. @ 05/08/25 14:13:05.171
• [6.120 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 05/08/25 14:13:05.18
  I0508 14:13:05.180789 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename resourcequota @ 05/08/25 14:13:05.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:13:05.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:13:05.214
  STEP: Counting existing ResourceQuota @ 05/08/25 14:13:05.217
  STEP: Creating a ResourceQuota @ 05/08/25 14:13:10.221
  STEP: Ensuring resource quota status is calculated @ 05/08/25 14:13:10.229
  STEP: Creating a ReplicaSet @ 05/08/25 14:13:12.231
  STEP: Ensuring resource quota status captures replicaset creation @ 05/08/25 14:13:12.254
  STEP: Deleting a ReplicaSet @ 05/08/25 14:13:14.257
  STEP: Ensuring resource quota status released usage @ 05/08/25 14:13:14.265
  I0508 14:13:16.269126 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9154" for this suite. @ 05/08/25 14:13:16.271
• [11.100 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 05/08/25 14:13:16.281
  I0508 14:13:16.281553 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename var-expansion @ 05/08/25 14:13:16.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:13:16.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:13:16.37
  STEP: Creating a pod to test substitution in container's command @ 05/08/25 14:13:16.376
  STEP: Saw pod success @ 05/08/25 14:13:20.429
  I0508 14:13:20.431586 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod var-expansion-db746fce-8605-427b-a749-7d11e7e443b0 container dapi-container: <nil>
  STEP: delete the pod @ 05/08/25 14:13:20.436
  I0508 14:13:20.470888 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7749" for this suite. @ 05/08/25 14:13:20.473
• [4.206 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 05/08/25 14:13:20.488
  I0508 14:13:20.488192 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename statefulset @ 05/08/25 14:13:20.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:13:20.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:13:20.509
  STEP: Creating service test in namespace statefulset-5737 @ 05/08/25 14:13:20.511
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/08/25 14:13:20.519
  STEP: Creating stateful set ss in namespace statefulset-5737 @ 05/08/25 14:13:20.524
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5737 @ 05/08/25 14:13:20.54
  I0508 14:13:20.582101 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0508 14:13:30.544824 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/08/25 14:13:30.544
  I0508 14:13:30.546996 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5737 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0508 14:13:30.674284 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0508 14:13:30.674325 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0508 14:13:30.674341 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0508 14:13:30.676883 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0508 14:13:40.678531 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0508 14:13:40.678580 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0508 14:13:40.780218 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999999668s
  I0508 14:13:41.783109 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.910334622s
  I0508 14:13:42.787028 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.907452688s
  I0508 14:13:43.790640 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.902769864s
  I0508 14:13:44.793551 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.899820005s
  I0508 14:13:45.796454 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.897018478s
  I0508 14:13:46.799538 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.894101274s
  I0508 14:13:47.802660 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.890648044s
  I0508 14:13:48.806616 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.886922185s
  I0508 14:13:49.809990 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 883.869461ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5737 @ 05/08/25 14:13:50.81
  I0508 14:13:50.813748 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5737 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0508 14:13:50.945880 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0508 14:13:50.945921 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0508 14:13:50.945938 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0508 14:13:50.958583 22 wait.go:44] Found 1 stateful pods, waiting for 3
  I0508 14:14:00.949452 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0508 14:14:00.949491 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0508 14:14:00.949501 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/08/25 14:14:00.949
  STEP: Scale down will halt with unhealthy stateful pod @ 05/08/25 14:14:00.949
  I0508 14:14:00.954046 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5737 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0508 14:14:01.095262 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0508 14:14:01.095395 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0508 14:14:01.095420 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0508 14:14:01.095477 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5737 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0508 14:14:01.719214 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0508 14:14:01.719312 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0508 14:14:01.719332 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0508 14:14:01.719566 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5737 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0508 14:14:02.199668 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0508 14:14:02.199711 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0508 14:14:02.199724 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0508 14:14:02.199734 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0508 14:14:02.210182 22 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0508 14:14:12.208206 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0508 14:14:12.208248 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0508 14:14:12.208258 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0508 14:14:12.308720 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999667s
  I0508 14:14:13.312643 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.909963518s
  I0508 14:14:14.316204 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.906443425s
  I0508 14:14:15.319119 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.90329581s
  I0508 14:14:16.321848 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.900364653s
  I0508 14:14:17.328487 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.89753697s
  I0508 14:14:18.331942 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.891007224s
  I0508 14:14:19.336311 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.886587853s
  I0508 14:14:20.340204 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.88225271s
  I0508 14:14:21.343863 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 879.293709ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5737 @ 05/08/25 14:14:22.344
  I0508 14:14:22.347240 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5737 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0508 14:14:22.490926 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0508 14:14:22.490973 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0508 14:14:22.490988 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0508 14:14:22.491037 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5737 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0508 14:14:22.618603 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0508 14:14:22.618644 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0508 14:14:22.618663 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0508 14:14:22.618744 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5737 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0508 14:14:22.747022 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0508 14:14:22.747076 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0508 14:14:22.747088 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0508 14:14:22.747099 22 rest.go:153] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/08/25 14:14:32.755
  I0508 14:14:32.755562 22 statefulset.go:138] Deleting all statefulset in ns statefulset-5737
  I0508 14:14:32.757818 22 rest.go:153] Scaling statefulset ss to 0
  I0508 14:14:32.761233 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0508 14:14:32.763007 22 rest.go:91] Deleting statefulset ss
  I0508 14:14:32.777015 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5737" for this suite. @ 05/08/25 14:14:32.779
• [72.299 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/08/25 14:14:32.788
  I0508 14:14:32.788210 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 14:14:32.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:14:32.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:14:32.821
  STEP: Creating a pod to test downward api env vars @ 05/08/25 14:14:32.824
  STEP: Saw pod success @ 05/08/25 14:14:36.846
  I0508 14:14:36.849277 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downward-api-c2ac84be-4b61-4ab2-82db-efc69ea269ff container dapi-container: <nil>
  STEP: delete the pod @ 05/08/25 14:14:36.854
  I0508 14:14:36.884726 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6127" for this suite. @ 05/08/25 14:14:36.887
• [4.108 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/08/25 14:14:36.896
  I0508 14:14:36.896742 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename conformance-tests @ 05/08/25 14:14:36.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:14:36.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:14:36.929
  STEP: Getting node addresses @ 05/08/25 14:14:36.941
  I0508 14:14:36.941697 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0508 14:14:36.988483 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-5317" for this suite. @ 05/08/25 14:14:36.99
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 05/08/25 14:14:37
  I0508 14:14:37.000551 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 14:14:37.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:14:37.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:14:37.021
  STEP: Creating the pod @ 05/08/25 14:14:37.029
  I0508 14:14:39.582431 22 pod_client.go:173] Successfully updated pod "labelsupdate7a3dc2c8-4b8f-4c13-ada1-c5828978d768"
  I0508 14:14:43.600645 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8354" for this suite. @ 05/08/25 14:14:43.603
• [6.612 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 05/08/25 14:14:43.612
  I0508 14:14:43.612817 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 14:14:43.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:14:43.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:14:43.647
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 14:14:43.65
  STEP: Saw pod success @ 05/08/25 14:14:47.671
  I0508 14:14:47.673412 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-722b65c7-bb25-4cfb-bac1-6cc63ff3973f container client-container: <nil>
  STEP: delete the pod @ 05/08/25 14:14:47.678
  I0508 14:14:47.707210 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8205" for this suite. @ 05/08/25 14:14:47.709
• [4.105 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/08/25 14:14:47.718
  I0508 14:14:47.718222 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pods @ 05/08/25 14:14:47.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:14:47.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:14:47.747
  STEP: creating the pod @ 05/08/25 14:14:47.749
  STEP: submitting the pod to kubernetes @ 05/08/25 14:14:47.75
  STEP: verifying the pod is in kubernetes @ 05/08/25 14:14:51.776
  STEP: updating the pod @ 05/08/25 14:14:51.778
  I0508 14:14:52.292993 22 pod_client.go:173] Successfully updated pod "pod-update-de6a8f13-0dae-4277-8d10-407c8d0dff07"
  STEP: verifying the updated pod is in kubernetes @ 05/08/25 14:14:52.295
  I0508 14:14:52.298372 22 pods.go:391] Pod update OK
  I0508 14:14:52.298624 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8684" for this suite. @ 05/08/25 14:14:52.305
• [4.612 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/08/25 14:14:52.331
  I0508 14:14:52.331263 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename tables @ 05/08/25 14:14:52.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:14:52.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:14:52.392
  I0508 14:14:52.397225 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1044" for this suite. @ 05/08/25 14:14:52.425
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/08/25 14:14:52.436
  I0508 14:14:52.436970 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename chunking @ 05/08/25 14:14:52.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:14:52.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:14:52.468
  STEP: creating a large number of resources @ 05/08/25 14:14:52.47
  I0508 14:15:00.101299      22 request.go:752] "Waited before sending request" delay="1.004477613s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.43.0.1:443/api/v1/namespaces/chunking-3805/podtemplates"
  STEP: retrieving the first page @ 05/08/25 14:15:10.146
  I0508 14:15:10.192320 22 chunking.go:163] Retrieved 40/40 results with rv 19246 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 05/08/25 14:15:10.192
  I0508 14:15:30.197542 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:15:50.196820 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:16:10.197216 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:16:30.196096 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:16:50.196853 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:17:10.196212 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:17:30.196626 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:17:50.196033 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:18:10.196547 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:18:30.196138 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:18:50.198074 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:19:10.197469 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:19:30.196991 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:19:50.196477 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:20:10.196800 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:20:30.196687 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0508 14:20:50.195395 22 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0508 14:20:50.195434 22 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/08/25 14:20:50.195
  STEP: retrieving all remaining pages @ 05/08/25 14:20:50.198
  I0508 14:20:50.204114 22 chunking.go:221] Retrieved 40/40 results with rv 20296 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTYsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0508 14:20:50.207305 22 chunking.go:221] Retrieved 40/40 results with rv 20296 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTYsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0508 14:20:50.210584 22 chunking.go:221] Retrieved 40/40 results with rv 20296 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTYsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0508 14:20:50.217641 22 chunking.go:221] Retrieved 40/40 results with rv 20296 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTYsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0508 14:20:50.221174 22 chunking.go:221] Retrieved 40/40 results with rv 20296 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTYsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0508 14:20:50.224825 22 chunking.go:221] Retrieved 40/40 results with rv 20296 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTYsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0508 14:20:50.227972 22 chunking.go:221] Retrieved 40/40 results with rv 20296 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTYsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0508 14:20:50.231007 22 chunking.go:221] Retrieved 40/40 results with rv 20296 and continue 
  I0508 14:20:50.231248 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3805" for this suite. @ 05/08/25 14:20:50.233
• [357.804 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/08/25 14:20:50.241
  I0508 14:20:50.241415 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename podtemplate @ 05/08/25 14:20:50.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:20:50.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:20:50.27
  I0508 14:20:50.324022 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6711" for this suite. @ 05/08/25 14:20:50.326
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 05/08/25 14:20:50.336
  I0508 14:20:50.336316 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/08/25 14:20:50.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:20:50.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:20:50.372
  STEP: create the container to handle the HTTPGet hook request. @ 05/08/25 14:20:50.427
  STEP: create the pod with lifecycle hook @ 05/08/25 14:20:54.449
  STEP: check poststart hook @ 05/08/25 14:20:58.481
  STEP: delete the pod with lifecycle hook @ 05/08/25 14:20:58.5
  I0508 14:21:00.526662 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-517" for this suite. @ 05/08/25 14:21:00.529
• [10.208 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 05/08/25 14:21:00.544
  I0508 14:21:00.544528 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 14:21:00.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:21:00.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:21:00.572
  STEP: Looking for a node to schedule job pods @ 05/08/25 14:21:00.575
  STEP: Creating a job @ 05/08/25 14:21:00.633
  STEP: Waiting for all the pods to be ready @ 05/08/25 14:21:00.65
  STEP: Fetch all running pods @ 05/08/25 14:21:04.661
  STEP: Evict all the Pods @ 05/08/25 14:21:04.665
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-62v2r/job-6771 @ 05/08/25 14:21:04.665
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-vtwtj/job-6771 @ 05/08/25 14:21:04.665
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-f5q8p/job-6771 @ 05/08/25 14:21:04.665
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-vtwtj/job-6771 to be deleted @ 05/08/25 14:21:04.715
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-62v2r/job-6771 to be deleted @ 05/08/25 14:21:04.726
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-f5q8p/job-6771 to be deleted @ 05/08/25 14:21:04.743
  STEP: Ensuring job reaches completions @ 05/08/25 14:21:10.766
  I0508 14:21:52.861398 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6771" for this suite. @ 05/08/25 14:21:52.868
• [52.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 05/08/25 14:21:52.881
  I0508 14:21:52.881136 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 14:21:52.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:21:52.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:21:52.91
  STEP: Creating configMap with name configmap-test-volume-d7f74606-083c-4e8d-b3a3-9729bb9c8d2f @ 05/08/25 14:21:52.913
  STEP: Creating a pod to test consume configMaps @ 05/08/25 14:21:52.922
  STEP: Saw pod success @ 05/08/25 14:21:56.954
  I0508 14:21:56.956939 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-configmaps-084cbf23-80ae-41d3-8bd5-6b4f7a0be089 container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 14:21:56.969
  I0508 14:21:57.004761 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9446" for this suite. @ 05/08/25 14:21:57.007
• [4.134 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 05/08/25 14:21:57.016
  I0508 14:21:57.016366 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename svcaccounts @ 05/08/25 14:21:57.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:21:57.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:21:57.04
  STEP: creating a ServiceAccount @ 05/08/25 14:21:57.047
  STEP: watching for the ServiceAccount to be added @ 05/08/25 14:21:57.057
  STEP: patching the ServiceAccount @ 05/08/25 14:21:57.058
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/08/25 14:21:57.067
  STEP: deleting the ServiceAccount @ 05/08/25 14:21:57.069
  I0508 14:21:57.086652 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3062" for this suite. @ 05/08/25 14:21:57.112
• [0.105 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 05/08/25 14:21:57.122
  I0508 14:21:57.122549 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename crd-webhook @ 05/08/25 14:21:57.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:21:57.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:21:57.148
  STEP: Setting up server cert @ 05/08/25 14:21:57.15
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/08/25 14:21:57.493
  STEP: Deploying the custom resource conversion webhook pod @ 05/08/25 14:21:57.501
  STEP: Wait for the deployment to be ready @ 05/08/25 14:21:57.538
  I0508 14:21:57.548886 22 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/08/25 14:21:59.556
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 14:21:59.591
  I0508 14:22:00.591904 22 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0508 14:22:00.594991 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Creating a v1 custom resource @ 05/08/25 14:22:03.173
  STEP: v2 custom resource should be converted @ 05/08/25 14:22:03.182
  I0508 14:22:03.803650 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1656" for this suite. @ 05/08/25 14:22:03.807
• [6.714 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 05/08/25 14:22:03.838
  I0508 14:22:03.839077 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 14:22:03.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:22:03.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:22:03.876
  STEP: Creating configMap with name configmap-test-volume-2d032ffa-3a9a-4202-8154-11474dd1e6b4 @ 05/08/25 14:22:03.879
  STEP: Creating a pod to test consume configMaps @ 05/08/25 14:22:03.889
  STEP: Saw pod success @ 05/08/25 14:22:07.93
  I0508 14:22:07.932772 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-configmaps-42f2133f-95f1-48ee-a8a2-e6bf30f1764b container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 14:22:07.938
  I0508 14:22:07.962196 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1178" for this suite. @ 05/08/25 14:22:07.965
• [4.135 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 05/08/25 14:22:07.975
  I0508 14:22:07.975233 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename security-context @ 05/08/25 14:22:07.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:22:07.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:22:07.999
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/08/25 14:22:08.006
  STEP: Saw pod success @ 05/08/25 14:22:12.026
  I0508 14:22:12.030151 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod security-context-68cac76c-14d2-4fae-97d0-58b6945664bc container test-container: <nil>
  STEP: delete the pod @ 05/08/25 14:22:12.037
  I0508 14:22:12.073055 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6232" for this suite. @ 05/08/25 14:22:12.075
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 05/08/25 14:22:12.086
  I0508 14:22:12.086996 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 14:22:12.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:22:12.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:22:12.126
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 14:22:12.128
  STEP: Saw pod success @ 05/08/25 14:22:16.153
  I0508 14:22:16.155873 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-225435c7-9f49-4e62-8712-203f748c548c container client-container: <nil>
  STEP: delete the pod @ 05/08/25 14:22:16.161
  I0508 14:22:16.186373 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6650" for this suite. @ 05/08/25 14:22:16.189
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 05/08/25 14:22:16.204
  I0508 14:22:16.204460 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubelet-test @ 05/08/25 14:22:16.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:22:16.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:22:16.24
  I0508 14:22:18.284802 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7934" for this suite. @ 05/08/25 14:22:18.287
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 05/08/25 14:22:18.296
  I0508 14:22:18.296791 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-probe @ 05/08/25 14:22:18.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:22:18.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:22:18.332
  STEP: Creating pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267 @ 05/08/25 14:22:18.335
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/08/25 14:22:20.361
  I0508 14:22:20.363260 22 container_probe.go:1748] Initial restart count of pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 is 0
  I0508 14:22:20.365188 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:22.368226 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:24.371901 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:26.375000 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:28.377918 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:30.381046 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:32.384354 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:34.387608 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:36.393911 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:38.397364 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:40.400127 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:40.400168 22 container_probe.go:1762] Restart count of pod container-probe-2267/liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 is now 1 (20.036850816s elapsed)
  I0508 14:22:42.403294 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:44.406934 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:46.411931 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:48.420994 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:50.429566 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:52.433148 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:54.436218 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:56.438993 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:22:58.441583 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:00.445450 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:00.445499 22 container_probe.go:1762] Restart count of pod container-probe-2267/liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 is now 2 (40.082181362s elapsed)
  I0508 14:23:02.450410 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:04.453591 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:06.456565 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:08.459242 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:10.462446 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:12.465328 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:14.468429 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:16.471350 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:18.475133 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:20.478460 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:20.478502 22 container_probe.go:1762] Restart count of pod container-probe-2267/liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 is now 3 (1m0.115184633s elapsed)
  I0508 14:23:22.481553 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:24.485529 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:26.490823 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:28.493491 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:30.497008 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:32.500330 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:34.504039 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:36.507311 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:38.510671 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:40.514348 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:40.514381 22 container_probe.go:1762] Restart count of pod container-probe-2267/liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 is now 4 (1m20.151063805s elapsed)
  I0508 14:23:42.517961 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:44.521291 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:46.525041 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:48.527734 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:50.531020 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:52.534892 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:54.537947 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:56.540706 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:23:58.543314 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:00.547084 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:02.551024 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:04.554160 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:06.557425 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:08.561139 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:10.563945 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:12.567315 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:14.570967 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:16.574499 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:18.578038 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:20.581652 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:22.584675 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:24.588041 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:26.591159 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:28.599010 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:30.601770 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:32.606018 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:34.608754 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:36.611271 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:38.613888 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:40.616398 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:42.619181 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:44.623128 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:46.626933 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:48.629798 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:50.632588 22 container_probe.go:1758] Get pod liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 in namespace container-probe-2267
  I0508 14:24:50.632629 22 container_probe.go:1762] Restart count of pod container-probe-2267/liveness-7e927b1b-8a47-4f9c-a652-ddb7075cde63 is now 5 (2m30.269311511s elapsed)
  STEP: deleting the pod @ 05/08/25 14:24:50.632
  I0508 14:24:50.659766 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2267" for this suite. @ 05/08/25 14:24:50.663
• [152.375 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 05/08/25 14:24:50.671
  I0508 14:24:50.671780 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename statefulset @ 05/08/25 14:24:50.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:24:50.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:24:50.703
  STEP: Creating service test in namespace statefulset-5109 @ 05/08/25 14:24:50.706
  STEP: Creating stateful set ss in namespace statefulset-5109 @ 05/08/25 14:24:50.714
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5109 @ 05/08/25 14:24:50.743
  I0508 14:24:50.747012 22 wait.go:44] Found 0 stateful pods, waiting for 1
  I0508 14:25:00.746545 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/08/25 14:25:00.746
  I0508 14:25:00.749445 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5109 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0508 14:25:00.885471 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0508 14:25:00.885522 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0508 14:25:00.885537 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0508 14:25:00.888163 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0508 14:25:10.888703 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0508 14:25:10.888749 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0508 14:25:10.917901 22 resource.go:168] POD   NODE                                         PHASE    GRACE  CONDITIONS
  I0508 14:25:10.917965 22 resource.go:175] ss-0  ip-172-31-27-218.us-east-2.compute.internal  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:24:52 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:24:50 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:01 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:01 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:24:50 +0000 UTC  }]
  I0508 14:25:10.917977 22 resource.go:175] ss-1                                               Pending         []
  I0508 14:25:10.917984 22 resource.go:178] 
  I0508 14:25:10.918025 22 statefulset.go:2448] StatefulSet ss has not reached scale 3, at 2
  I0508 14:25:11.925120 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.984191557s
  I0508 14:25:12.928406 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.977095745s
  I0508 14:25:13.932692 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.973483665s
  I0508 14:25:14.936542 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.968593792s
  I0508 14:25:15.941086 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.964700841s
  I0508 14:25:16.944268 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.961140967s
  I0508 14:25:17.947219 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.957918762s
  I0508 14:25:18.951076 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.954372619s
  I0508 14:25:19.954237 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 950.394333ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5109 @ 05/08/25 14:25:20.954
  I0508 14:25:20.957930 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5109 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0508 14:25:21.086640 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0508 14:25:21.086692 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0508 14:25:21.086708 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0508 14:25:21.086896 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5109 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0508 14:25:21.220754 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0508 14:25:21.220792 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0508 14:25:21.220803 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0508 14:25:21.220850 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5109 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0508 14:25:21.360758 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0508 14:25:21.360811 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0508 14:25:21.360825 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0508 14:25:21.363783 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0508 14:25:31.366468 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0508 14:25:31.366519 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0508 14:25:31.366529 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/08/25 14:25:31.366
  I0508 14:25:31.368669 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5109 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0508 14:25:31.514693 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0508 14:25:31.514919 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0508 14:25:31.514953 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0508 14:25:31.515008 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5109 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0508 14:25:31.659148 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0508 14:25:31.659189 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0508 14:25:31.659201 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0508 14:25:31.659248 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-5109 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0508 14:25:31.792372 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0508 14:25:31.792418 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0508 14:25:31.792432 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0508 14:25:31.792446 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0508 14:25:31.794915 22 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0508 14:25:41.799113 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0508 14:25:41.799154 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0508 14:25:41.799192 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0508 14:25:41.829933 22 resource.go:168] POD   NODE                                         PHASE    GRACE  CONDITIONS
  I0508 14:25:41.829986 22 resource.go:175] ss-0  ip-172-31-27-218.us-east-2.compute.internal  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:24:52 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:24:50 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:24:50 +0000 UTC  }]
  I0508 14:25:41.830006 22 resource.go:175] ss-1  ip-172-31-20-200.us-east-2.compute.internal  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:12 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:10 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:10 +0000 UTC  }]
  I0508 14:25:41.830025 22 resource.go:175] ss-2  ip-172-31-27-218.us-east-2.compute.internal  Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:12 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:10 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:10 +0000 UTC  }]
  I0508 14:25:41.830031 22 resource.go:178] 
  I0508 14:25:41.830038 22 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  I0508 14:25:42.833524 22 resource.go:168] POD   NODE                                         PHASE      GRACE  CONDITIONS
  I0508 14:25:42.833591 22 resource.go:175] ss-1  ip-172-31-20-200.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:42 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:10 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:32 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:32 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 14:25:10 +0000 UTC  }]
  I0508 14:25:42.833601 22 resource.go:178] 
  I0508 14:25:42.833609 22 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 1
  I0508 14:25:43.836286 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.976168706s
  I0508 14:25:44.839068 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.973450365s
  I0508 14:25:45.841868 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.970692518s
  I0508 14:25:46.844743 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.967893547s
  I0508 14:25:47.848646 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.964034623s
  I0508 14:25:48.852868 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.960128726s
  I0508 14:25:49.855673 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.956859642s
  I0508 14:25:50.858320 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 954.096535ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5109 @ 05/08/25 14:25:51.858
  I0508 14:25:51.861217 22 rest.go:153] Scaling statefulset ss to 0
  I0508 14:25:51.865015 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0508 14:25:51.866799 22 statefulset.go:138] Deleting all statefulset in ns statefulset-5109
  I0508 14:25:51.869024 22 rest.go:153] Scaling statefulset ss to 0
  I0508 14:25:51.872542 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0508 14:25:51.874203 22 rest.go:91] Deleting statefulset ss
  I0508 14:25:51.899134 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5109" for this suite. @ 05/08/25 14:25:51.906
• [61.244 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 05/08/25 14:25:51.915
  I0508 14:25:51.915907 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 14:25:51.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:25:51.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:25:51.938
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 05/08/25 14:25:51.946
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 05/08/25 14:25:51.955
  STEP: Ensure that the job reaches completions @ 05/08/25 14:25:55.964
  STEP: Verifying that the job status to ensure correct final state @ 05/08/25 14:25:55.968
  I0508 14:25:55.970640 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3229" for this suite. @ 05/08/25 14:25:55.98
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 05/08/25 14:25:55.989
  I0508 14:25:55.989945 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 14:25:55.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:25:56.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:25:56.024
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/08/25 14:25:56.026
  STEP: Saw pod success @ 05/08/25 14:26:00.048
  I0508 14:26:00.053448 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-4f36939c-f614-44bd-8bc5-c916e13ff900 container test-container: <nil>
  STEP: delete the pod @ 05/08/25 14:26:00.071
  I0508 14:26:00.130957 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2926" for this suite. @ 05/08/25 14:26:00.142
• [4.179 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 05/08/25 14:26:00.169
  I0508 14:26:00.169211 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename field-validation @ 05/08/25 14:26:00.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:26:00.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:26:00.197
  I0508 14:26:00.208552 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  W0508 14:26:00.211824      22 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0045fc700 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  I0508 14:26:02.839141      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0508 14:26:02.839170      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0508 14:26:02.839179      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0508 14:26:02.839187      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0508 14:26:02.839194      22 warnings.go:110] "Warning: unknown field \"gamma\""
  I0508 14:26:03.410880 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5268" for this suite. @ 05/08/25 14:26:03.414
• [3.265 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 05/08/25 14:26:03.434
  I0508 14:26:03.434234 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 14:26:03.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:26:03.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:26:03.483
  STEP: creating Agnhost RC @ 05/08/25 14:26:03.486
  I0508 14:26:03.486965 22 kubectl.go:1540] namespace kubectl-3013
  I0508 14:26:03.487014 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-3013 create -f -'
  I0508 14:26:03.645712 22 builder.go:146] stderr: ""
  I0508 14:26:03.645751 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/08/25 14:26:03.645
  I0508 14:26:04.649050 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0508 14:26:04.649085 22 framework.go:733] Found 0 / 1
  I0508 14:26:05.649698 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0508 14:26:05.649750 22 framework.go:733] Found 1 / 1
  I0508 14:26:05.649774 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0508 14:26:05.651903 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0508 14:26:05.651937 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0508 14:26:05.651949 22 kubectl.go:1547] wait on agnhost-primary startup in kubectl-3013 
  I0508 14:26:05.651997 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-3013 logs agnhost-primary-982xm agnhost-primary'
  I0508 14:26:05.726100 22 builder.go:146] stderr: ""
  I0508 14:26:05.726141 22 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 05/08/25 14:26:05.726
  I0508 14:26:05.726304 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-3013 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0508 14:26:05.842568 22 builder.go:146] stderr: ""
  I0508 14:26:05.842606 22 builder.go:147] stdout: "service/rm2 exposed\n"
  I0508 14:26:05.864345 22 utils.go:1115] Service rm2 in namespace kubectl-3013 found.
  STEP: exposing service @ 05/08/25 14:26:07.87
  I0508 14:26:07.870384 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-3013 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0508 14:26:07.963059 22 builder.go:146] stderr: ""
  I0508 14:26:07.963106 22 builder.go:147] stdout: "service/rm3 exposed\n"
  I0508 14:26:07.976003 22 utils.go:1115] Service rm3 in namespace kubectl-3013 found.
  I0508 14:26:09.984526 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3013" for this suite. @ 05/08/25 14:26:09.987
• [6.561 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 05/08/25 14:26:09.996
  I0508 14:26:09.996240 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename security-context-test @ 05/08/25 14:26:09.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:26:10.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:26:10.024
  I0508 14:26:14.062475 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7283" for this suite. @ 05/08/25 14:26:14.065
• [4.077 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/08/25 14:26:14.073
  I0508 14:26:14.074037 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename daemonsets @ 05/08/25 14:26:14.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:26:14.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:26:14.105
  STEP: Creating simple DaemonSet "daemon-set" @ 05/08/25 14:26:14.17
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/08/25 14:26:14.179
  I0508 14:26:14.317848 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 14:26:14.317998 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 14:26:15.185498 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 14:26:15.185627 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 14:26:16.186544 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0508 14:26:16.186580 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/08/25 14:26:16.188
  I0508 14:26:16.286852 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0508 14:26:16.286889 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 14:26:17.210153 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0508 14:26:17.210190 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 14:26:18.211125 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0508 14:26:18.211161 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 14:26:19.211803 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0508 14:26:19.211845 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 14:26:20.221864 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0508 14:26:20.221909 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/08/25 14:26:20.234
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-870, will wait for the garbage collector to delete the pods @ 05/08/25 14:26:20.234
  I0508 14:26:20.305458 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.754874ms
  I0508 14:26:20.405852 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.393416ms
  I0508 14:26:22.509230 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 14:26:22.509272 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0508 14:26:22.513027 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22682"},"items":null}

  I0508 14:26:22.525729 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22682"},"items":null}

  I0508 14:26:22.532729 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-870" for this suite. @ 05/08/25 14:26:22.535
• [8.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 05/08/25 14:26:22.544
  I0508 14:26:22.544747 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename statefulset @ 05/08/25 14:26:22.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:26:22.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:26:22.577
  STEP: Creating service test in namespace statefulset-2532 @ 05/08/25 14:26:22.579
  STEP: Creating statefulset ss in namespace statefulset-2532 @ 05/08/25 14:26:22.588
  I0508 14:26:22.610958 22 wait.go:44] Found 0 stateful pods, waiting for 1
  I0508 14:26:32.608005 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/08/25 14:26:32.613
  STEP: updating a scale subresource @ 05/08/25 14:26:32.615
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/08/25 14:26:32.629
  STEP: Patch a scale subresource @ 05/08/25 14:26:32.633
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/08/25 14:26:32.649
  I0508 14:26:32.661133 22 statefulset.go:138] Deleting all statefulset in ns statefulset-2532
  I0508 14:26:32.664245 22 rest.go:153] Scaling statefulset ss to 0
  I0508 14:26:42.689595 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0508 14:26:42.691931 22 rest.go:91] Deleting statefulset ss
  I0508 14:26:42.706864 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2532" for this suite. @ 05/08/25 14:26:42.71
• [20.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 05/08/25 14:26:42.725
  I0508 14:26:42.725153 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename statefulset @ 05/08/25 14:26:42.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:26:42.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:26:42.746
  STEP: Creating service test in namespace statefulset-7030 @ 05/08/25 14:26:42.754
  STEP: Creating statefulset ss in namespace statefulset-7030 @ 05/08/25 14:26:42.777
  I0508 14:26:42.802973 22 wait.go:44] Found 0 stateful pods, waiting for 1
  I0508 14:26:52.795668 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/08/25 14:26:52.799
  STEP: Getting /status @ 05/08/25 14:26:52.81
  I0508 14:26:52.813970 22 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/08/25 14:26:52.814
  I0508 14:26:52.830994 22 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/08/25 14:26:52.831
  I0508 14:26:52.833519 22 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0508 14:26:52.833559 22 statefulset.go:1126] Found Statefulset ss in namespace statefulset-7030 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0508 14:26:52.833573 22 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/08/25 14:26:52.833
  I0508 14:26:52.833617 22 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0508 14:26:52.851472 22 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/08/25 14:26:52.851
  I0508 14:26:52.853529 22 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0508 14:26:52.853616 22 statefulset.go:138] Deleting all statefulset in ns statefulset-7030
  I0508 14:26:52.855579 22 rest.go:153] Scaling statefulset ss to 0
  I0508 14:27:02.878571 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0508 14:27:02.881064 22 rest.go:91] Deleting statefulset ss
  I0508 14:27:02.897927 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7030" for this suite. @ 05/08/25 14:27:02.901
• [20.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 05/08/25 14:27:02.913
  I0508 14:27:02.913624 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename security-context-test @ 05/08/25 14:27:02.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:27:02.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:27:02.942
  I0508 14:27:06.971733 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-769" for this suite. @ 05/08/25 14:27:06.974
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 05/08/25 14:27:06.984
  I0508 14:27:06.984188 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 14:27:06.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:27:07.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:27:07.018
  STEP: Creating configMap with name projected-configmap-test-volume-99f585f6-6ee1-4e78-a929-1f8675ba7c8c @ 05/08/25 14:27:07.021
  STEP: Creating a pod to test consume configMaps @ 05/08/25 14:27:07.029
  STEP: Saw pod success @ 05/08/25 14:27:11.059
  I0508 14:27:11.061390 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-projected-configmaps-a74fa27b-f1d8-400b-9871-0522ca8cc74c container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 14:27:11.068
  I0508 14:27:11.097247 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8017" for this suite. @ 05/08/25 14:27:11.1
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 05/08/25 14:27:11.109
  I0508 14:27:11.109792 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename svcaccounts @ 05/08/25 14:27:11.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:27:11.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:27:11.135
  I0508 14:27:11.150243 22 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-6720"
  I0508 14:27:11.158463 22 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-6720"
  STEP: waiting for a new root ca configmap created @ 05/08/25 14:27:11.659
  I0508 14:27:11.661875 22 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-6720"
  I0508 14:27:11.671802 22 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-6720"
  STEP: waiting for the root ca configmap reconciled @ 05/08/25 14:27:12.172
  I0508 14:27:12.175008 22 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-6720"
  I0508 14:27:12.175255 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6720" for this suite. @ 05/08/25 14:27:12.177
• [1.081 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:443
  STEP: Creating a kubernetes client @ 05/08/25 14:27:12.191
  I0508 14:27:12.191365 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename sched-pred @ 05/08/25 14:27:12.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:27:12.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:27:12.222
  I0508 14:27:12.224936 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0508 14:27:12.280529 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0508 14:27:12.283233 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-20-200.us-east-2.compute.internal before test
  I0508 14:27:12.288730 22 predicates.go:956] cloud-controller-manager-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:52 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288761 22 predicates.go:958] 	Container cloud-controller-manager ready: true, restart count 0
  I0508 14:27:12.288770 22 predicates.go:956] etcd-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:24 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288777 22 predicates.go:958] 	Container etcd ready: true, restart count 0
  I0508 14:27:12.288785 22 predicates.go:956] helm-install-rke2-canal-ftk2n from kube-system started at 2025-05-08 12:45:58 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288792 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 14:27:12.288799 22 predicates.go:956] helm-install-rke2-coredns-lmmjk from kube-system started at 2025-05-08 12:45:58 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288805 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 14:27:12.288811 22 predicates.go:956] helm-install-rke2-metrics-server-8m9m2 from kube-system started at 2025-05-08 12:46:24 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288817 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 14:27:12.288824 22 predicates.go:956] helm-install-rke2-runtimeclasses-pcsjl from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288829 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 14:27:12.288835 22 predicates.go:956] helm-install-rke2-snapshot-controller-77fsq from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288840 22 predicates.go:958] 	Container helm ready: false, restart count 2
  I0508 14:27:12.288847 22 predicates.go:956] helm-install-rke2-snapshot-controller-crd-jsh9g from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288852 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 14:27:12.288858 22 predicates.go:956] kube-apiserver-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:39 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288886 22 predicates.go:958] 	Container kube-apiserver ready: true, restart count 0
  I0508 14:27:12.288894 22 predicates.go:956] kube-controller-manager-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:50 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288899 22 predicates.go:958] 	Container kube-controller-manager ready: true, restart count 0
  I0508 14:27:12.288906 22 predicates.go:956] kube-proxy-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:24 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288911 22 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0508 14:27:12.288918 22 predicates.go:956] kube-scheduler-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:50 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288923 22 predicates.go:958] 	Container kube-scheduler ready: true, restart count 0
  I0508 14:27:12.288930 22 predicates.go:956] rke2-canal-9hk6c from kube-system started at 2025-05-08 12:46:07 +0000 UTC (2 container statuses recorded)
  I0508 14:27:12.288935 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0508 14:27:12.288958 22 predicates.go:958] 	Container kube-flannel ready: true, restart count 0
  I0508 14:27:12.288966 22 predicates.go:956] rke2-coredns-rke2-coredns-78c6cdfd9-p6ldk from kube-system started at 2025-05-08 12:46:24 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288971 22 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0508 14:27:12.288980 22 predicates.go:956] rke2-coredns-rke2-coredns-autoscaler-6bb9778ffb-dqqh2 from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288986 22 predicates.go:958] 	Container autoscaler ready: true, restart count 0
  I0508 14:27:12.288994 22 predicates.go:956] rke2-metrics-server-85479b695c-42rvh from kube-system started at 2025-05-08 12:46:44 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.288999 22 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0508 14:27:12.289008 22 predicates.go:956] rke2-snapshot-controller-696989ffdd-bpbd9 from kube-system started at 2025-05-08 12:47:01 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.289024 22 predicates.go:958] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0508 14:27:12.289031 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-e41e32d222f74fe8-8p4wr from sonobuoy started at 2025-05-08 14:10:29 +0000 UTC (2 container statuses recorded)
  I0508 14:27:12.289037 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0508 14:27:12.289042 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0508 14:27:12.289049 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-27-218.us-east-2.compute.internal before test
  I0508 14:27:12.291729 22 predicates.go:956] kube-proxy-ip-172-31-27-218.us-east-2.compute.internal from kube-system started at 2025-05-08 12:48:07 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.291763 22 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0508 14:27:12.291773 22 predicates.go:956] rke2-canal-rnbhm from kube-system started at 2025-05-08 12:48:07 +0000 UTC (2 container statuses recorded)
  I0508 14:27:12.291780 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0508 14:27:12.291786 22 predicates.go:958] 	Container kube-flannel ready: true, restart count 0
  I0508 14:27:12.291820 22 predicates.go:956] rke2-coredns-rke2-coredns-78c6cdfd9-q7lcz from kube-system started at 2025-05-08 12:48:42 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.291827 22 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0508 14:27:12.291834 22 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-08 14:10:24 +0000 UTC (1 container statuses recorded)
  I0508 14:27:12.291840 22 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0508 14:27:12.291849 22 predicates.go:956] sonobuoy-e2e-job-f43826452bc6480c from sonobuoy started at 2025-05-08 14:10:29 +0000 UTC (2 container statuses recorded)
  I0508 14:27:12.291855 22 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0508 14:27:12.291860 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0508 14:27:12.291867 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-e41e32d222f74fe8-vfkbf from sonobuoy started at 2025-05-08 14:10:29 +0000 UTC (2 container statuses recorded)
  I0508 14:27:12.291893 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0508 14:27:12.291900 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/08/25 14:27:12.291
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.183d93858f05c0be], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 05/08/25 14:27:12.345
  I0508 14:27:13.331570 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8834" for this suite. @ 05/08/25 14:27:13.334
• [1.157 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/08/25 14:27:13.349
  I0508 14:27:13.349438 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename endpointslice @ 05/08/25 14:27:13.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:27:13.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:27:13.378
  I0508 14:27:13.388098      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 14:27:13.390124 22 endpointslice.go:1045] Endpoints addresses: [3.22.208.33] , ports: [6443]
  I0508 14:27:13.390160 22 endpointslice.go:1075] EndpointSlices addresses: [3.22.208.33] , ports: [6443]
  I0508 14:27:13.390243 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9454" for this suite. @ 05/08/25 14:27:13.392
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/08/25 14:27:13.403
  I0508 14:27:13.403072 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename secrets @ 05/08/25 14:27:13.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:27:13.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:27:13.437
  STEP: Creating secret with name secret-test-1935f199-0e79-4723-bce4-2f57c8a2f36b @ 05/08/25 14:27:13.479
  STEP: Creating a pod to test consume secrets @ 05/08/25 14:27:13.487
  STEP: Saw pod success @ 05/08/25 14:27:17.519
  I0508 14:27:17.521057 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-secrets-5ee61c17-c944-44c5-aecd-7b216fb08b5d container secret-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 14:27:17.526
  I0508 14:27:17.550332 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4956" for this suite. @ 05/08/25 14:27:17.553
  STEP: Destroying namespace "secret-namespace-1397" for this suite. @ 05/08/25 14:27:17.561
• [4.167 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 05/08/25 14:27:17.571
  I0508 14:27:17.571041 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-probe @ 05/08/25 14:27:17.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:27:17.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:27:17.605
  STEP: Creating pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012 @ 05/08/25 14:27:17.608
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/08/25 14:27:19.627
  I0508 14:27:19.629095 22 container_probe.go:1748] Initial restart count of pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 is 0
  I0508 14:27:19.630775 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:21.633171 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:23.636147 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:25.639170 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:27.641762 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:29.645185 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:31.647856 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:33.651173 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:35.654498 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:37.657872 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:39.660968 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:41.663385 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:43.669135 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:45.672349 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:47.674909 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:49.678420 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:51.681239 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:53.684299 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:55.686891 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:57.689411 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:27:59.692843 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:28:01.701791 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:28:03.704974 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:28:05.707714 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:28:07.710989 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:28:09.715215 22 container_probe.go:1758] Get pod busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 in namespace container-probe-6012
  I0508 14:28:09.715261 22 container_probe.go:1762] Restart count of pod container-probe-6012/busybox-e807cde4-7c58-41ba-8ecf-ab47c02875f6 is now 1 (50.086131841s elapsed)
  STEP: deleting the pod @ 05/08/25 14:28:09.715
  I0508 14:28:09.750430 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6012" for this suite. @ 05/08/25 14:28:09.759
• [52.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/08/25 14:28:09.779
  I0508 14:28:09.779721 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/08/25 14:28:09.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:28:09.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:28:09.805
  STEP: fetching the /apis discovery document @ 05/08/25 14:28:09.807
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/08/25 14:28:09.808
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/08/25 14:28:09.808
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/08/25 14:28:09.808
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/08/25 14:28:09.809
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/08/25 14:28:09.809
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/08/25 14:28:09.81
  I0508 14:28:09.810444 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5494" for this suite. @ 05/08/25 14:28:09.863
• [0.098 seconds]
------------------------------
S
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 05/08/25 14:28:09.877
  I0508 14:28:09.877703 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 14:28:09.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:28:09.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:28:09.898
  STEP: Creating an indexed job with successPolicy @ 05/08/25 14:28:09.901
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 05/08/25 14:28:09.914
  STEP: Ensure that the job reaches completions @ 05/08/25 14:28:15.936
  STEP: Verifying that the job status to ensure correct final state @ 05/08/25 14:28:15.941
  I0508 14:28:15.943007 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7907" for this suite. @ 05/08/25 14:28:15.945
• [6.077 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 05/08/25 14:28:15.955
  I0508 14:28:15.955043 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename replication-controller @ 05/08/25 14:28:15.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:28:15.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:28:15.976
  STEP: Given a ReplicationController is created @ 05/08/25 14:28:15.984
  STEP: When the matched label of one of its pods change @ 05/08/25 14:28:15.993
  I0508 14:28:15.996198 22 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  I0508 14:28:21.005044 22 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/08/25 14:28:21.027
  I0508 14:28:21.044222 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4397" for this suite. @ 05/08/25 14:28:21.069
• [5.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 05/08/25 14:28:21.09
  I0508 14:28:21.090548 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 14:28:21.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:28:21.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:28:21.119
  STEP: creating the pod @ 05/08/25 14:28:21.121
  I0508 14:28:21.122059 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-2891 create -f -'
  I0508 14:28:21.256904 22 builder.go:146] stderr: ""
  I0508 14:28:21.256952 22 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/08/25 14:28:23.295
  I0508 14:28:23.295287 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-2891 label pods pause testing-label=testing-label-value'
  I0508 14:28:23.367960 22 builder.go:146] stderr: ""
  I0508 14:28:23.367994 22 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/08/25 14:28:23.368
  I0508 14:28:23.368132 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-2891 get pod pause -L testing-label'
  I0508 14:28:23.425462 22 builder.go:146] stderr: ""
  I0508 14:28:23.425506 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/08/25 14:28:23.425
  I0508 14:28:23.425644 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-2891 label pods pause testing-label-'
  I0508 14:28:23.514162 22 builder.go:146] stderr: ""
  I0508 14:28:23.514197 22 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/08/25 14:28:23.514
  I0508 14:28:23.514265 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-2891 get pod pause -L testing-label'
  I0508 14:28:23.575940 22 builder.go:146] stderr: ""
  I0508 14:28:23.575988 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/08/25 14:28:23.576
  I0508 14:28:23.576361 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-2891 delete --grace-period=0 --force -f -'
  I0508 14:28:23.655693 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0508 14:28:23.655727 22 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0508 14:28:23.655762 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-2891 get rc,svc -l name=pause --no-headers'
  I0508 14:28:23.727272 22 builder.go:146] stderr: "No resources found in kubectl-2891 namespace.\n"
  I0508 14:28:23.727313 22 builder.go:147] stdout: ""
  I0508 14:28:23.727359 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-2891 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0508 14:28:23.789674 22 builder.go:146] stderr: ""
  I0508 14:28:23.789719 22 builder.go:147] stdout: ""
  I0508 14:28:23.789815 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2891" for this suite. @ 05/08/25 14:28:23.792
• [2.710 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 05/08/25 14:28:23.801
  I0508 14:28:23.801043 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 14:28:23.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:28:23.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:28:23.827
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8186 @ 05/08/25 14:28:23.83
  STEP: changing the ExternalName service to type=NodePort @ 05/08/25 14:28:23.838
  I0508 14:28:23.927339 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0508 14:28:25.930926 22 resource.go:361] Creating new exec pod
  I0508 14:28:29.953405 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8186 exec execpodvhzdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0508 14:28:30.109978 22 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 externalname-service 80\nConnection to externalname-service (10.43.57.144) 80 port [tcp/http] succeeded!\n"
  I0508 14:28:30.110023 22 builder.go:147] stdout: "externalname-service-7448dc44b6-86w7b"
  I0508 14:28:30.110104 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8186 exec execpodvhzdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.57.144 80'
  I0508 14:28:30.243835 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.57.144 80\nConnection to 10.43.57.144 80 port [tcp/http] succeeded!\n"
  I0508 14:28:30.243873 22 builder.go:147] stdout: ""
  I0508 14:28:31.110250 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8186 exec execpodvhzdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.57.144 80'
  I0508 14:28:31.240681 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.57.144 80\nConnection to 10.43.57.144 80 port [tcp/http] succeeded!\n"
  I0508 14:28:31.240722 22 builder.go:147] stdout: ""
  I0508 14:28:32.110677 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8186 exec execpodvhzdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.57.144 80'
  I0508 14:28:32.243431 22 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.57.144 80\nConnection to 10.43.57.144 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0508 14:28:32.243474 22 builder.go:147] stdout: ""
  I0508 14:28:33.110540 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8186 exec execpodvhzdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.57.144 80'
  I0508 14:28:33.227271 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.57.144 80\nConnection to 10.43.57.144 80 port [tcp/http] succeeded!\n"
  I0508 14:28:33.227320 22 builder.go:147] stdout: ""
  I0508 14:28:34.110182 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8186 exec execpodvhzdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.57.144 80'
  I0508 14:28:34.234748 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.57.144 80\nConnection to 10.43.57.144 80 port [tcp/http] succeeded!\n"
  I0508 14:28:34.234803 22 builder.go:147] stdout: "externalname-service-7448dc44b6-86w7b"
  I0508 14:28:34.234907 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8186 exec execpodvhzdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.200 30393'
  I0508 14:28:34.366229 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.200 30393\nConnection to 172.31.20.200 30393 port [tcp/*] succeeded!\n"
  I0508 14:28:34.366281 22 builder.go:147] stdout: ""
  I0508 14:28:35.235093 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8186 exec execpodvhzdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.200 30393'
  I0508 14:28:35.359934 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.200 30393\nConnection to 172.31.20.200 30393 port [tcp/*] succeeded!\n"
  I0508 14:28:35.359991 22 builder.go:147] stdout: "externalname-service-7448dc44b6-tw8tj"
  I0508 14:28:35.360158 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8186 exec execpodvhzdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.27.218 30393'
  I0508 14:28:35.482438 22 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.27.218 30393\n+ echo hostName\nConnection to 172.31.27.218 30393 port [tcp/*] succeeded!\n"
  I0508 14:28:35.482478 22 builder.go:147] stdout: ""
  I0508 14:28:36.360222 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8186 exec execpodvhzdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.27.218 30393'
  I0508 14:28:36.482940 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.27.218 30393\nConnection to 172.31.27.218 30393 port [tcp/*] succeeded!\n"
  I0508 14:28:36.482983 22 builder.go:147] stdout: "externalname-service-7448dc44b6-tw8tj"
  I0508 14:28:36.483048 22 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0508 14:28:36.530880 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8186" for this suite. @ 05/08/25 14:28:36.533
• [12.741 seconds]
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 05/08/25 14:28:36.542
  I0508 14:28:36.542360 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 14:28:36.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:28:36.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:28:36.575
  STEP: Creating a job @ 05/08/25 14:28:36.578
  STEP: Ensuring active pods == parallelism @ 05/08/25 14:28:36.587
  STEP: delete a job @ 05/08/25 14:28:38.592
  STEP: deleting Job.batch foo in namespace job-3394, will wait for the garbage collector to delete the pods @ 05/08/25 14:28:38.592
  I0508 14:28:38.654730 22 resources.go:139] Deleting Job.batch foo took: 9.279627ms
  I0508 14:28:38.755374 22 resources.go:163] Terminating Job.batch foo pods took: 100.673272ms
  STEP: Ensuring job was deleted @ 05/08/25 14:28:41.155
  I0508 14:28:41.158636 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3394" for this suite. @ 05/08/25 14:28:41.161
• [4.628 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/08/25 14:28:41.171
  I0508 14:28:41.171315 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename events @ 05/08/25 14:28:41.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:28:41.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:28:41.199
  STEP: creating a test event @ 05/08/25 14:28:41.202
  STEP: listing all events in all namespaces @ 05/08/25 14:28:41.21
  STEP: patching the test event @ 05/08/25 14:28:41.214
  STEP: fetching the test event @ 05/08/25 14:28:41.224
  STEP: updating the test event @ 05/08/25 14:28:41.226
  STEP: getting the test event @ 05/08/25 14:28:41.236
  STEP: deleting the test event @ 05/08/25 14:28:41.239
  STEP: listing all events in all namespaces @ 05/08/25 14:28:41.253
  I0508 14:28:41.257122 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3160" for this suite. @ 05/08/25 14:28:41.271
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 05/08/25 14:28:41.279
  I0508 14:28:41.279557 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 14:28:41.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:28:41.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:28:41.301
  I0508 14:28:41.361641 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5220" for this suite. @ 05/08/25 14:28:41.381
• [0.111 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 05/08/25 14:28:41.39
  I0508 14:28:41.390467 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/08/25 14:28:41.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:28:41.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:28:41.428
  STEP: creating the policy @ 05/08/25 14:28:41.44
  STEP: waiting until the marker is denied @ 05/08/25 14:28:41.471
  STEP: testing a replicated Deployment to be allowed @ 05/08/25 14:28:42.297
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/08/25 14:28:42.339
  I0508 14:28:42.476765 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1703" for this suite. @ 05/08/25 14:28:42.487
• [1.120 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 05/08/25 14:28:42.51
  I0508 14:28:42.510899 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename dns @ 05/08/25 14:28:42.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:28:42.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:28:42.544
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/08/25 14:28:42.547
  I0508 14:28:42.558948 22 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7470  61d3441e-02ed-4430-81fe-3f12123728dc 23831 1 2025-05-08 14:28:42 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-05-08 14:28:42 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4h2rq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4h2rq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/08/25 14:28:44.565
  I0508 14:28:44.565311 22 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7470 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:28:44.565345 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:28:44.565385 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/dns-7470/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0508 14:28:44.649812 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 05/08/25 14:28:44.649
  I0508 14:28:44.649929 22 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7470 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:28:44.649940 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:28:44.650051 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/dns-7470/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0508 14:28:44.729891 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 14:28:44.730002 22 dns.go:451] Deleting pod test-dns-nameservers...
  I0508 14:28:44.760570 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7470" for this suite. @ 05/08/25 14:28:44.764
• [2.264 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 05/08/25 14:28:44.775
  I0508 14:28:44.775554 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 14:28:44.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:28:44.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:28:44.796
  STEP: Creating the pod @ 05/08/25 14:28:44.804
  I0508 14:28:47.357808 22 pod_client.go:173] Successfully updated pod "annotationupdatec40425f7-509b-4bfd-8ed3-f90205a3b856"
  I0508 14:28:51.385994 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1735" for this suite. @ 05/08/25 14:28:51.388
• [6.623 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 05/08/25 14:28:51.398
  I0508 14:28:51.399021 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 14:28:51.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:28:51.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:28:51.423
  STEP: Creating configMap with name configmap-test-volume-map-17371094-89b4-422c-9a09-ef6ed20b9b03 @ 05/08/25 14:28:51.425
  STEP: Creating a pod to test consume configMaps @ 05/08/25 14:28:51.439
  STEP: Saw pod success @ 05/08/25 14:28:55.462
  I0508 14:28:55.465016 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-configmaps-19e06c6b-d41f-4e7b-b702-6616a14001d0 container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 14:28:55.47
  I0508 14:28:55.500285 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3273" for this suite. @ 05/08/25 14:28:55.503
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 05/08/25 14:28:55.524
  I0508 14:28:55.524596 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename resourcequota @ 05/08/25 14:28:55.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:28:55.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:28:55.551
  STEP: Creating a ResourceQuota with best effort scope @ 05/08/25 14:28:55.553
  STEP: Ensuring ResourceQuota status is calculated @ 05/08/25 14:28:55.561
  STEP: Creating a ResourceQuota with not best effort scope @ 05/08/25 14:28:57.564
  STEP: Ensuring ResourceQuota status is calculated @ 05/08/25 14:28:57.573
  STEP: Creating a best-effort pod @ 05/08/25 14:28:59.577
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/08/25 14:28:59.603
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/08/25 14:29:01.607
  STEP: Deleting the pod @ 05/08/25 14:29:03.611
  STEP: Ensuring resource quota status released the pod usage @ 05/08/25 14:29:03.644
  STEP: Creating a not best-effort pod @ 05/08/25 14:29:05.648
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/08/25 14:29:05.664
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/08/25 14:29:07.667
  STEP: Deleting the pod @ 05/08/25 14:29:09.672
  STEP: Ensuring resource quota status released the pod usage @ 05/08/25 14:29:09.704
  I0508 14:29:11.707916 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-609" for this suite. @ 05/08/25 14:29:11.71
• [16.195 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 05/08/25 14:29:11.72
  I0508 14:29:11.720250 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename disruption @ 05/08/25 14:29:11.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:29:11.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:29:11.743
  STEP: Waiting for the pdb to be processed @ 05/08/25 14:29:11.759
  STEP: Updating PodDisruptionBudget status @ 05/08/25 14:29:13.762
  STEP: Waiting for all pods to be running @ 05/08/25 14:29:13.772
  I0508 14:29:13.791789 22 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 05/08/25 14:29:15.775
  STEP: Waiting for the pdb to be processed @ 05/08/25 14:29:15.8
  STEP: Patching PodDisruptionBudget status @ 05/08/25 14:29:15.808
  STEP: Waiting for the pdb to be processed @ 05/08/25 14:29:15.821
  I0508 14:29:15.824391 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6536" for this suite. @ 05/08/25 14:29:15.831
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 05/08/25 14:29:15.85
  I0508 14:29:15.850603 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-probe @ 05/08/25 14:29:15.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:29:15.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:29:15.882
  STEP: Creating pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912 @ 05/08/25 14:29:15.884
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/08/25 14:29:17.906
  I0508 14:29:17.909357 22 container_probe.go:1748] Initial restart count of pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f is 0
  I0508 14:29:17.911465 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:19.914081 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:21.917420 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:23.920404 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:25.927599 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:27.931194 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:29.934411 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:31.937558 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:33.940217 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:35.943240 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:37.946890 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:39.953274 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:41.956364 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:43.959343 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:45.961805 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:47.965755 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:49.969386 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:51.972177 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:53.975229 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:55.978388 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:57.981974 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:29:59.987168 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:02.009448 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:04.012881 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:06.016317 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:08.020380 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:10.023012 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:12.026037 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:14.030765 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:16.034224 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:18.037781 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:20.041120 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:22.043664 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:24.046381 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:26.050116 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:28.053313 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:30.056623 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:32.059257 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:34.063660 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:36.067275 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:38.071636 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:40.075309 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:42.078014 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:44.081387 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:46.084028 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:48.087318 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:50.091051 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:52.094363 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:54.097346 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:56.100254 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:30:58.103284 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:00.113612 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:02.117545 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:04.120166 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:06.122945 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:08.125820 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:10.128523 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:12.132334 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:14.135589 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:16.138934 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:18.141744 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:20.144527 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:22.147382 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:24.150315 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:26.153099 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:28.156283 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:30.158714 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:32.161588 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:34.164366 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:36.167773 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:38.171509 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:40.175128 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:42.178618 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:44.184802 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:46.187557 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:48.191144 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:50.193695 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:52.197093 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:54.200153 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:56.202958 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:31:58.206504 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:00.210489 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:02.215175 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:04.218692 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:06.222233 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:08.225180 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:10.227727 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:12.230981 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:14.233294 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:16.236676 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:18.240339 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:20.243094 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:22.246893 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:24.249126 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:26.251819 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:28.255314 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:30.257980 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:32.261030 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:34.269124 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:36.272402 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:38.275095 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:40.278921 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:42.281844 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:44.284807 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:46.288226 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:48.291124 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:50.294435 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:52.297102 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:54.300822 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:56.304437 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:32:58.307897 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:33:00.316101 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:33:02.319396 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:33:04.322237 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:33:06.324953 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:33:08.327960 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:33:10.331318 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:33:12.333973 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:33:14.336617 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  I0508 14:33:16.340211 22 container_probe.go:1758] Get pod test-grpc-d1ae1187-b217-484b-838f-ab7d7fdeed5f in namespace container-probe-1912
  STEP: deleting the pod @ 05/08/25 14:33:18.34
  I0508 14:33:18.373698 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1912" for this suite. @ 05/08/25 14:33:18.378
• [242.546 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 05/08/25 14:33:18.397
  I0508 14:33:18.397447 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename var-expansion @ 05/08/25 14:33:18.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:33:18.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:33:18.43
  STEP: creating the pod with failed condition @ 05/08/25 14:33:18.433
  STEP: updating the pod @ 05/08/25 14:35:18.45
  I0508 14:35:18.969746 22 pod_client.go:173] Successfully updated pod "var-expansion-23f38e91-d030-43c1-9c60-5d5577980180"
  STEP: waiting for pod running @ 05/08/25 14:35:18.969
  STEP: deleting the pod gracefully @ 05/08/25 14:35:20.976
  I0508 14:35:20.976492 22 delete.go:62] Deleting pod "var-expansion-23f38e91-d030-43c1-9c60-5d5577980180" in namespace "var-expansion-3135"
  I0508 14:35:20.995693 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-23f38e91-d030-43c1-9c60-5d5577980180" to be fully deleted
  I0508 14:35:53.063877 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3135" for this suite. @ 05/08/25 14:35:53.066
• [154.678 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/08/25 14:35:53.076
  I0508 14:35:53.076602 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pods @ 05/08/25 14:35:53.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:35:53.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:35:53.107
  STEP: creating pod @ 05/08/25 14:35:53.109
  I0508 14:35:55.143158 22 pods.go:83] Pod pod-hostip-efa11e4a-bde4-465e-8789-c4ea2cc3c053 has hostIP: 172.31.27.218
  I0508 14:35:55.143272 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8644" for this suite. @ 05/08/25 14:35:55.145
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 05/08/25 14:35:55.168
  I0508 14:35:55.168238 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/08/25 14:35:55.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:35:55.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:35:55.193
  I0508 14:35:55.196794 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/08/25 14:35:56.522
  I0508 14:35:56.522630 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 --namespace=crd-publish-openapi-5264 create -f -'
  I0508 14:35:58.622163 22 builder.go:146] stderr: ""
  I0508 14:35:58.622204 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4981-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0508 14:35:58.622248 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 --namespace=crd-publish-openapi-5264 delete e2e-test-crd-publish-openapi-4981-crds test-foo'
  I0508 14:35:58.694719 22 builder.go:146] stderr: ""
  I0508 14:35:58.695013 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4981-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0508 14:35:58.695140 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 --namespace=crd-publish-openapi-5264 apply -f -'
  I0508 14:35:58.761259 22 builder.go:146] stderr: ""
  I0508 14:35:58.761301 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4981-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0508 14:35:58.761346 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 --namespace=crd-publish-openapi-5264 delete e2e-test-crd-publish-openapi-4981-crds test-foo'
  I0508 14:35:58.824878 22 builder.go:146] stderr: ""
  I0508 14:35:58.824927 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4981-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/08/25 14:35:58.824
  I0508 14:35:58.825001 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 --namespace=crd-publish-openapi-5264 create -f -'
  I0508 14:35:58.883405 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/08/25 14:35:58.883
  I0508 14:35:58.883566 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 --namespace=crd-publish-openapi-5264 create -f -'
  I0508 14:35:58.947538 22 builder.go:135] rc: 1
  I0508 14:35:58.947623 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 --namespace=crd-publish-openapi-5264 apply -f -'
  I0508 14:35:59.012453 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/08/25 14:35:59.012
  I0508 14:35:59.012616 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 --namespace=crd-publish-openapi-5264 create -f -'
  I0508 14:35:59.077471 22 builder.go:135] rc: 1
  I0508 14:35:59.077559 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 --namespace=crd-publish-openapi-5264 apply -f -'
  I0508 14:35:59.138324 22 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/08/25 14:35:59.138
  I0508 14:35:59.138468 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 explain e2e-test-crd-publish-openapi-4981-crds'
  I0508 14:35:59.193459 22 builder.go:146] stderr: ""
  I0508 14:35:59.193522 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4981-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/08/25 14:35:59.193
  I0508 14:35:59.194048 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 explain e2e-test-crd-publish-openapi-4981-crds.metadata'
  I0508 14:35:59.253845 22 builder.go:146] stderr: ""
  I0508 14:35:59.254093 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4981-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0508 14:35:59.254413 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 explain e2e-test-crd-publish-openapi-4981-crds.spec'
  I0508 14:35:59.313473 22 builder.go:146] stderr: ""
  I0508 14:35:59.313529 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4981-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0508 14:35:59.313767 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 explain e2e-test-crd-publish-openapi-4981-crds.spec.bars'
  I0508 14:35:59.374269 22 builder.go:146] stderr: ""
  I0508 14:35:59.374313 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4981-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/08/25 14:35:59.374
  I0508 14:35:59.374644 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-5264 explain e2e-test-crd-publish-openapi-4981-crds.spec.bars2'
  I0508 14:35:59.435937 22 builder.go:135] rc: 1
  I0508 14:36:00.915795 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5264" for this suite. @ 05/08/25 14:36:00.927
• [5.774 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 05/08/25 14:36:00.942
  I0508 14:36:00.942997 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/08/25 14:36:00.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:36:00.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:36:00.975
  STEP: Setting up the test @ 05/08/25 14:36:00.978
  STEP: Creating hostNetwork=false pod @ 05/08/25 14:36:00.978
  STEP: Creating hostNetwork=true pod @ 05/08/25 14:36:05.021
  STEP: Running the test @ 05/08/25 14:36:07.04
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/08/25 14:36:07.04
  I0508 14:36:07.041008 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8108 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:36:07.041046 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:36:07.041090 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8108/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0508 14:36:07.109351 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 14:36:07.109521 22 exec_util.go:112] Exec stderr: ""
  I0508 14:36:07.109566 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8108 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:36:07.109576 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:36:07.109630 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8108/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0508 14:36:07.171948 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 14:36:07.171994 22 exec_util.go:112] Exec stderr: ""
  I0508 14:36:07.172025 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8108 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:36:07.172036 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:36:07.172089 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8108/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0508 14:36:07.231464 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 14:36:07.231614 22 exec_util.go:112] Exec stderr: ""
  I0508 14:36:07.231699 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8108 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:36:07.231750 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:36:07.231852 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8108/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0508 14:36:07.295252 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 14:36:07.295384 22 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/08/25 14:36:07.295
  I0508 14:36:07.295505 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8108 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:36:07.295563 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:36:07.295659 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8108/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0508 14:36:07.365392 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 14:36:07.365448 22 exec_util.go:112] Exec stderr: ""
  I0508 14:36:07.365471 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8108 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:36:07.365480 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:36:07.365549 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8108/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0508 14:36:07.440042 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 14:36:07.440094 22 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/08/25 14:36:07.44
  I0508 14:36:07.440148 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8108 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:36:07.440169 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:36:07.440222 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8108/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0508 14:36:07.502956 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 14:36:07.503004 22 exec_util.go:112] Exec stderr: ""
  I0508 14:36:07.503024 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8108 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:36:07.503033 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:36:07.503099 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8108/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0508 14:36:07.569731 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 14:36:07.569817 22 exec_util.go:112] Exec stderr: ""
  I0508 14:36:07.569846 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8108 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:36:07.569906 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:36:07.569996 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8108/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0508 14:36:07.632378 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 14:36:07.632550 22 exec_util.go:112] Exec stderr: ""
  I0508 14:36:07.632580 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8108 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:36:07.632589 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:36:07.632659 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8108/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0508 14:36:07.698196 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 14:36:07.698238 22 exec_util.go:112] Exec stderr: ""
  I0508 14:36:07.698329 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8108" for this suite. @ 05/08/25 14:36:07.701
• [6.767 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 05/08/25 14:36:07.711
  I0508 14:36:07.711411 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pods @ 05/08/25 14:36:07.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:36:07.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:36:07.752
  STEP: Create set of pods @ 05/08/25 14:36:07.754
  I0508 14:36:07.764759 22 pods.go:874] created test-pod-1
  I0508 14:36:07.787405 22 pods.go:874] created test-pod-2
  I0508 14:36:07.804852 22 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/08/25 14:36:07.805
  STEP: waiting for all pods to be deleted @ 05/08/25 14:36:11.883
  I0508 14:36:11.885493 22 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I0508 14:36:12.886951 22 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I0508 14:36:13.886488 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4611" for this suite. @ 05/08/25 14:36:13.889
• [6.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 05/08/25 14:36:13.898
  I0508 14:36:13.898024 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 14:36:13.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:36:13.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:36:13.919
  I0508 14:36:13.926007 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-8671 create -f -'
  I0508 14:36:14.068440 22 builder.go:146] stderr: ""
  I0508 14:36:14.068490 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0508 14:36:14.068665 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-8671 create -f -'
  I0508 14:36:14.235475 22 builder.go:146] stderr: ""
  I0508 14:36:14.235511 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/08/25 14:36:14.235
  I0508 14:36:15.238535 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0508 14:36:15.238567 22 framework.go:733] Found 0 / 1
  I0508 14:36:16.239162 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0508 14:36:16.239203 22 framework.go:733] Found 1 / 1
  I0508 14:36:16.239219 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0508 14:36:16.241260 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0508 14:36:16.241289 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0508 14:36:16.241350 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-8671 describe pod agnhost-primary-8fqrv'
  I0508 14:36:16.308116 22 builder.go:146] stderr: ""
  I0508 14:36:16.308294 22 builder.go:147] stdout: "Name:             agnhost-primary-8fqrv\nNamespace:        kubectl-8671\nPriority:         0\nService Account:  default\nNode:             ip-172-31-27-218.us-east-2.compute.internal/172.31.27.218\nStart Time:       Thu, 08 May 2025 14:36:14 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 95d32cf9a2057d8f784fdb3ade31dab78d899310daf8d8b78c776f2c9b56dd39\n                  cni.projectcalico.org/podIP: 10.42.1.63/32\n                  cni.projectcalico.org/podIPs: 10.42.1.63/32\nStatus:           Running\nIP:               10.42.1.63\nIPs:\n  IP:           10.42.1.63\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://373a478c3c923c9bf91bc7903fdcbc098ae3ca390c417275e05483689eefb00c\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 08 May 2025 14:36:15 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-jp8h9 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-jp8h9:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-8671/agnhost-primary-8fqrv to ip-172-31-27-218.us-east-2.compute.internal\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    2s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0508 14:36:16.308587 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-8671 describe rc agnhost-primary'
  I0508 14:36:16.381466 22 builder.go:146] stderr: ""
  I0508 14:36:16.381522 22 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8671\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-8fqrv\n"
  I0508 14:36:16.381583 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-8671 describe service agnhost-primary'
  I0508 14:36:16.450468 22 builder.go:146] stderr: ""
  I0508 14:36:16.450516 22 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-8671\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.43.103.36\nIPs:                      10.43.103.36\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.42.1.63:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0508 14:36:16.477927 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-8671 describe node ip-172-31-20-200.us-east-2.compute.internal'
  I0508 14:36:16.556774 22 builder.go:146] stderr: ""
  I0508 14:36:16.556888 22 builder.go:147] stdout: "Name:               ip-172-31-20-200.us-east-2.compute.internal\nRoles:              control-plane,etcd,master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=rke2\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-20-200.us-east-2.compute.internal\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=true\n                    node-role.kubernetes.io/etcd=true\n                    node-role.kubernetes.io/master=true\n                    node.kubernetes.io/instance-type=rke2\n                    role-control-plane=true\n                    role-etcd=true\n                    role-worker=true\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 172.31.20.200\n                    etcd.rke2.cattle.io/local-snapshots-timestamp: 2025-05-08T14:28:37Z\n                    etcd.rke2.cattle.io/node-address: 172.31.20.200\n                    etcd.rke2.cattle.io/node-name: ip-172-31-20-200.us-east-2.compute.internal-7e29bb07\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"c6:42:2a:93:d5:0a\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.20.200\n                    node.alpha.kubernetes.io/ttl: 0\n                    rke2.io/encryption-config-hash: start-fcb1ec228f73723979fd16ac60c2d95f524ab006f230e809f7c590b21883fe4d\n                    rke2.io/external-ip: 3.22.208.33\n                    rke2.io/hostname: ip-172-31-20-200\n                    rke2.io/internal-ip: 172.31.20.200\n                    rke2.io/node-args:\n                      [\"server\",\"--write-kubeconfig-mode\",\"0644\",\"--tls-san\",\"fake.fqdn.value\",\"--node-name\",\"ip-172-31-20-200.us-east-2.compute.internal\",\"--di...\n                    rke2.io/node-config-hash: VTUXSLVFC3EKYXGXBXNKR6EJ7X4HMO3QATZQZCS7PP3KT3JHCUUA====\n                    rke2.io/node-env: {}\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 08 May 2025 12:45:44 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-20-200.us-east-2.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 08 May 2025 14:36:13 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Thu, 08 May 2025 12:46:32 +0000   Thu, 08 May 2025 12:46:32 +0000   FlannelIsUp                  Flannel is running on this node\n  EtcdIsVoter          True    Thu, 08 May 2025 14:35:53 +0000   Thu, 08 May 2025 12:45:53 +0000   MemberNotLearner             Node is a voting member of the etcd cluster\n  MemoryPressure       False   Thu, 08 May 2025 14:31:44 +0000   Thu, 08 May 2025 12:45:43 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 08 May 2025 14:31:44 +0000   Thu, 08 May 2025 12:45:43 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 08 May 2025 14:31:44 +0000   Thu, 08 May 2025 12:45:43 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 08 May 2025 14:31:44 +0000   Thu, 08 May 2025 12:46:23 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.20.200\n  ExternalIP:  3.22.208.33\n  Hostname:    ip-172-31-20-200\nCapacity:\n  cpu:                2\n  ephemeral-storage:  36611052Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3933496Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  35615231358\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3933496Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec20e9176e6c01d687d50732fc4a7a56\n  System UUID:                ec20e917-6e6c-01d6-87d5-0732fc4a7a56\n  Boot ID:                    19f9f67c-0024-4f86-85c6-ba5c1beb06e4\n  Kernel Version:             6.4.0-150600.23.33-default\n  OS Image:                   SUSE Linux Enterprise Server 15 SP6\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.0.4-k3s2\n  Kubelet Version:            v1.33.0+rke2r1\n  Kube-Proxy Version:         \nPodCIDR:                      10.42.0.0/24\nPodCIDRs:                     10.42.0.0/24\nProviderID:                   rke2://ip-172-31-20-200.us-east-2.compute.internal\nNon-terminated Pods:          (12 in total)\n  Namespace                   Name                                                                    CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                                    ------------  ----------  ---------------  -------------  ---\n  kube-system                 cloud-controller-manager-ip-172-31-20-200.us-east-2.compute.internal    100m (5%)     0 (0%)      128Mi (3%)       0 (0%)         110m\n  kube-system                 etcd-ip-172-31-20-200.us-east-2.compute.internal                        200m (10%)    0 (0%)      512Mi (13%)      0 (0%)         110m\n  kube-system                 kube-apiserver-ip-172-31-20-200.us-east-2.compute.internal              250m (12%)    0 (0%)      1Gi (26%)        0 (0%)         110m\n  kube-system                 kube-controller-manager-ip-172-31-20-200.us-east-2.compute.internal     200m (10%)    0 (0%)      256Mi (6%)       0 (0%)         110m\n  kube-system                 kube-proxy-ip-172-31-20-200.us-east-2.compute.internal                  250m (12%)    0 (0%)      128Mi (3%)       0 (0%)         110m\n  kube-system                 kube-scheduler-ip-172-31-20-200.us-east-2.compute.internal              100m (5%)     0 (0%)      128Mi (3%)       0 (0%)         110m\n  kube-system                 rke2-canal-9hk6c                                                        250m (12%)    0 (0%)      0 (0%)           0 (0%)         110m\n  kube-system                 rke2-coredns-rke2-coredns-78c6cdfd9-p6ldk                               100m (5%)     100m (5%)   128Mi (3%)       128Mi (3%)     110m\n  kube-system                 rke2-coredns-rke2-coredns-autoscaler-6bb9778ffb-dqqh2                   25m (1%)      100m (5%)   16Mi (0%)        64Mi (1%)      110m\n  kube-system                 rke2-metrics-server-85479b695c-42rvh                                    100m (5%)     0 (0%)      200Mi (5%)       0 (0%)         109m\n  kube-system                 rke2-snapshot-controller-696989ffdd-bpbd9                               0 (0%)        0 (0%)      0 (0%)           0 (0%)         109m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-e41e32d222f74fe8-8p4wr                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         25m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests      Limits\n  --------           --------      ------\n  cpu                1575m (78%)   200m (10%)\n  memory             2520Mi (65%)  192Mi (4%)\n  ephemeral-storage  0 (0%)        0 (0%)\n  hugepages-1Gi      0 (0%)        0 (0%)\n  hugepages-2Mi      0 (0%)        0 (0%)\nEvents:              <none>\n"
  I0508 14:36:16.556947 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-8671 describe namespace kubectl-8671'
  I0508 14:36:16.624959 22 builder.go:146] stderr: ""
  I0508 14:36:16.625015 22 builder.go:147] stdout: "Name:         kubectl-8671\nLabels:       e2e-framework=kubectl\n              e2e-run=ea598a33-1ae6-4a6e-874a-e18cfe1f996e\n              kubernetes.io/metadata.name=kubectl-8671\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0508 14:36:16.625315 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8671" for this suite. @ 05/08/25 14:36:16.627
• [2.743 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 05/08/25 14:36:16.64
  I0508 14:36:16.640933 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 14:36:16.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:36:16.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:36:16.666
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 14:36:16.669
  STEP: Saw pod success @ 05/08/25 14:36:20.705
  I0508 14:36:20.707486 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-9fa4d57f-0a41-4ebb-945d-f0d5baf15e5e container client-container: <nil>
  STEP: delete the pod @ 05/08/25 14:36:20.721
  I0508 14:36:20.746370 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3553" for this suite. @ 05/08/25 14:36:20.751
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 05/08/25 14:36:20.768
  I0508 14:36:20.768263 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename var-expansion @ 05/08/25 14:36:20.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:36:20.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:36:20.805
  I0508 14:36:22.827200 22 delete.go:62] Deleting pod "var-expansion-b95f03db-d077-4354-86a1-a4ed169ef761" in namespace "var-expansion-2776"
  I0508 14:36:22.841267 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-b95f03db-d077-4354-86a1-a4ed169ef761" to be fully deleted
  I0508 14:36:26.850534 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2776" for this suite. @ 05/08/25 14:36:26.853
• [6.094 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/08/25 14:36:26.862
  I0508 14:36:26.862134 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename cronjob @ 05/08/25 14:36:26.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:36:26.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:36:26.889
  STEP: Creating a suspended cronjob @ 05/08/25 14:36:26.893
  STEP: Ensuring no jobs are scheduled @ 05/08/25 14:36:26.902
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/08/25 14:41:26.903
  STEP: Removing cronjob @ 05/08/25 14:41:26.905
  I0508 14:41:26.913927 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4175" for this suite. @ 05/08/25 14:41:26.916
• [300.068 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 05/08/25 14:41:26.931
  I0508 14:41:26.931693 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename statefulset @ 05/08/25 14:41:26.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:41:26.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:41:26.959
  STEP: Creating service test in namespace statefulset-8186 @ 05/08/25 14:41:26.962
  STEP: Creating a new StatefulSet @ 05/08/25 14:41:26.971
  I0508 14:41:26.997323 22 wait.go:44] Found 0 stateful pods, waiting for 3
  I0508 14:41:36.998958 22 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0508 14:41:36.998995 22 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0508 14:41:36.999005 22 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/08/25 14:41:37.01
  I0508 14:41:37.038222 22 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 05/08/25 14:41:37.038
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/08/25 14:41:47.045
  STEP: Performing a canary update @ 05/08/25 14:41:47.046
  I0508 14:41:47.061886 22 statefulset.go:2542] Updating stateful set ss2
  I0508 14:41:47.086192 22 wait.go:74] Waiting for Pod statefulset-8186/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/08/25 14:41:57.069
  I0508 14:41:57.194987 22 wait.go:44] Found 2 stateful pods, waiting for 3
  I0508 14:42:07.177488 22 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0508 14:42:07.177527 22 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0508 14:42:07.177537 22 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/08/25 14:42:07.181
  I0508 14:42:07.193255 22 statefulset.go:2542] Updating stateful set ss2
  I0508 14:42:07.218316 22 wait.go:74] Waiting for Pod statefulset-8186/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0508 14:42:17.208836 22 statefulset.go:2542] Updating stateful set ss2
  I0508 14:42:17.226723 22 wait.go:56] Waiting for StatefulSet statefulset-8186/ss2 to complete update
  I0508 14:42:17.226764 22 wait.go:63] Waiting for Pod statefulset-8186/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0508 14:42:27.218612 22 statefulset.go:138] Deleting all statefulset in ns statefulset-8186
  I0508 14:42:27.221180 22 rest.go:153] Scaling statefulset ss2 to 0
  I0508 14:42:37.251379 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0508 14:42:37.253380 22 rest.go:91] Deleting statefulset ss2
  I0508 14:42:37.278257 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8186" for this suite. @ 05/08/25 14:42:37.291
• [70.374 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 05/08/25 14:42:37.305
  I0508 14:42:37.305947 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 14:42:37.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:42:37.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:42:37.333
  STEP: validating api versions @ 05/08/25 14:42:37.337
  I0508 14:42:37.337541 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9136 api-versions'
  I0508 14:42:37.393356 22 builder.go:146] stderr: ""
  I0508 14:42:37.393405 22 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\ngroupsnapshot.storage.k8s.io/v1beta1\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy.networking.k8s.io/v1alpha1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0508 14:42:37.393581 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9136" for this suite. @ 05/08/25 14:42:37.396
• [0.099 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/08/25 14:42:37.405
  I0508 14:42:37.405382 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename sysctl @ 05/08/25 14:42:37.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:42:37.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:42:37.436
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/08/25 14:42:37.439
  STEP: Watching for error events or started pod @ 05/08/25 14:42:37.459
  STEP: Waiting for pod completion @ 05/08/25 14:42:39.462
  STEP: Checking that the pod succeeded @ 05/08/25 14:42:41.469
  STEP: Getting logs from the pod @ 05/08/25 14:42:41.469
  STEP: Checking that the sysctl is actually updated @ 05/08/25 14:42:41.482
  I0508 14:42:41.482464 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9548" for this suite. @ 05/08/25 14:42:41.486
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 05/08/25 14:42:41.508
  I0508 14:42:41.508715 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename replication-controller @ 05/08/25 14:42:41.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:42:41.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:42:41.54
  STEP: Creating replication controller my-hostname-basic-b1f8ee53-3cc0-400a-a7a4-e7e9a3fb8810 @ 05/08/25 14:42:41.543
  I0508 14:42:41.566603 22 resource.go:81] Pod name my-hostname-basic-b1f8ee53-3cc0-400a-a7a4-e7e9a3fb8810: Found 1 pods out of 1
  I0508 14:42:41.566640 22 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-b1f8ee53-3cc0-400a-a7a4-e7e9a3fb8810" are running
  I0508 14:42:43.590994 22 rc.go:525] Pod "my-hostname-basic-b1f8ee53-3cc0-400a-a7a4-e7e9a3fb8810-ljbgf" is running and ready(conditions: [])
  I0508 14:42:43.591038 22 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/08/25 14:42:43.591
  I0508 14:42:43.601852 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4091" for this suite. @ 05/08/25 14:42:43.604
• [2.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 05/08/25 14:42:43.613
  I0508 14:42:43.613539 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename resourcequota @ 05/08/25 14:42:43.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:42:43.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:42:43.641
  STEP: Creating a ResourceQuota @ 05/08/25 14:42:43.644
  STEP: Getting a ResourceQuota @ 05/08/25 14:42:43.651
  STEP: Updating a ResourceQuota @ 05/08/25 14:42:43.669
  STEP: Verifying a ResourceQuota was modified @ 05/08/25 14:42:43.677
  STEP: Deleting a ResourceQuota @ 05/08/25 14:42:43.685
  STEP: Verifying the deleted ResourceQuota @ 05/08/25 14:42:43.693
  I0508 14:42:43.695767 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6125" for this suite. @ 05/08/25 14:42:43.705
• [0.107 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/08/25 14:42:43.72
  I0508 14:42:43.720761 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-runtime @ 05/08/25 14:42:43.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:42:43.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:42:43.741
  STEP: create the container @ 05/08/25 14:42:43.744
  I0508 14:42:43.762602      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 05/08/25 14:42:43.762
  STEP: get the container status @ 05/08/25 14:42:46.775
  STEP: the container should be terminated @ 05/08/25 14:42:46.777
  STEP: the termination message should be set @ 05/08/25 14:42:46.777
  I0508 14:42:46.777847 22 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/08/25 14:42:46.777
  I0508 14:42:46.805764 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-303" for this suite. @ 05/08/25 14:42:46.808
• [3.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 05/08/25 14:42:46.817
  I0508 14:42:46.817326 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename var-expansion @ 05/08/25 14:42:46.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:42:46.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:42:46.849
  I0508 14:42:48.880986 22 delete.go:62] Deleting pod "var-expansion-7ec77aac-b64b-4888-9d52-6b565863b08c" in namespace "var-expansion-5248"
  I0508 14:42:48.896237 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-7ec77aac-b64b-4888-9d52-6b565863b08c" to be fully deleted
  I0508 14:42:50.909586 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5248" for this suite. @ 05/08/25 14:42:50.912
• [4.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 05/08/25 14:42:50.921
  I0508 14:42:50.921483 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename resourcequota @ 05/08/25 14:42:50.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:42:50.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:42:50.944
  STEP: Counting existing ResourceQuota @ 05/08/25 14:42:50.949
  STEP: Creating a ResourceQuota @ 05/08/25 14:42:55.957
  STEP: Ensuring resource quota status is calculated @ 05/08/25 14:42:55.966
  I0508 14:42:57.968890 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9182" for this suite. @ 05/08/25 14:42:57.971
• [7.058 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 05/08/25 14:42:57.979
  I0508 14:42:57.979798 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename var-expansion @ 05/08/25 14:42:57.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:42:58.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:42:58.007
  STEP: creating the pod @ 05/08/25 14:42:58.016
  STEP: waiting for pod running @ 05/08/25 14:42:58.032
  STEP: creating a file in subpath @ 05/08/25 14:43:00.081
  I0508 14:43:00.125422 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9408 PodName:var-expansion-78a21cd0-986d-4265-b4dc-49fdd1750b69 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:43:00.125491 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:43:00.125578 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/var-expansion-9408/pods/var-expansion-78a21cd0-986d-4265-b4dc-49fdd1750b69/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0508 14:43:00.266438 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 05/08/25 14:43:00.266
  I0508 14:43:00.269038 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9408 PodName:var-expansion-78a21cd0-986d-4265-b4dc-49fdd1750b69 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 14:43:00.269070 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 14:43:00.269196 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/var-expansion-9408/pods/var-expansion-78a21cd0-986d-4265-b4dc-49fdd1750b69/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0508 14:43:00.337668 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 05/08/25 14:43:00.337
  I0508 14:43:00.857227 22 pod_client.go:173] Successfully updated pod "var-expansion-78a21cd0-986d-4265-b4dc-49fdd1750b69"
  STEP: waiting for annotated pod running @ 05/08/25 14:43:00.857
  STEP: deleting the pod gracefully @ 05/08/25 14:43:00.859
  I0508 14:43:00.860114 22 delete.go:62] Deleting pod "var-expansion-78a21cd0-986d-4265-b4dc-49fdd1750b69" in namespace "var-expansion-9408"
  I0508 14:43:00.874964 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-78a21cd0-986d-4265-b4dc-49fdd1750b69" to be fully deleted
  I0508 14:43:34.932067 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9408" for this suite. @ 05/08/25 14:43:34.934
• [36.963 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/08/25 14:43:34.943
  I0508 14:43:34.943181 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename replicaset @ 05/08/25 14:43:34.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:43:34.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:43:34.969
  STEP: Create a ReplicaSet @ 05/08/25 14:43:34.972
  STEP: Verify that the required pods have come up @ 05/08/25 14:43:34.997
  I0508 14:43:34.999242 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  I0508 14:43:40.051480 22 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/08/25 14:43:40.051
  I0508 14:43:40.053446 22 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/08/25 14:43:40.053
  STEP: DeleteCollection of the ReplicaSets @ 05/08/25 14:43:40.056
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/08/25 14:43:40.065
  I0508 14:43:40.069652 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7839" for this suite. @ 05/08/25 14:43:40.08
• [5.181 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 05/08/25 14:43:40.124
  I0508 14:43:40.124064 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 14:43:40.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:43:40.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:43:40.183
  STEP: Setting up server cert @ 05/08/25 14:43:40.253
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 14:43:41.312
  STEP: Deploying the webhook pod @ 05/08/25 14:43:41.32
  STEP: Wait for the deployment to be ready @ 05/08/25 14:43:41.343
  I0508 14:43:41.373661 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/08/25 14:43:43.403
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 14:43:43.441
  I0508 14:43:44.441358 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0508 14:43:44.444337 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2635-crds.webhook.example.com via the AdmissionRegistration API @ 05/08/25 14:43:44.954
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/08/25 14:43:45.009
  I0508 14:43:47.679266 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5166" for this suite. @ 05/08/25 14:43:47.682
  STEP: Destroying namespace "webhook-markers-8287" for this suite. @ 05/08/25 14:43:47.69
• [7.581 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/08/25 14:43:47.705
  I0508 14:43:47.705658 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename controllerrevisions @ 05/08/25 14:43:47.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:43:47.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:43:47.731
  STEP: Creating DaemonSet "e2e-gnl6p-daemon-set" @ 05/08/25 14:43:47.786
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/08/25 14:43:47.8
  I0508 14:43:47.901956 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-gnl6p-daemon-set: 0
  I0508 14:43:47.902089 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 14:43:48.816150 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-gnl6p-daemon-set: 0
  I0508 14:43:48.816215 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 14:43:49.808795 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-gnl6p-daemon-set: 2
  I0508 14:43:49.808835 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-gnl6p-daemon-set
  STEP: Confirm DaemonSet "e2e-gnl6p-daemon-set" successfully created with "daemonset-name=e2e-gnl6p-daemon-set" label @ 05/08/25 14:43:49.81
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-gnl6p-daemon-set" @ 05/08/25 14:43:49.814
  I0508 14:43:49.816558 22 controller_revision.go:162] Located ControllerRevision: "e2e-gnl6p-daemon-set-6d6bd77f"
  STEP: Patching ControllerRevision "e2e-gnl6p-daemon-set-6d6bd77f" @ 05/08/25 14:43:49.818
  I0508 14:43:49.827236 22 controller_revision.go:173] e2e-gnl6p-daemon-set-6d6bd77f has been patched
  STEP: Create a new ControllerRevision @ 05/08/25 14:43:49.827
  I0508 14:43:49.841587 22 controller_revision.go:191] Created ControllerRevision: e2e-gnl6p-daemon-set-79d9f88ff9
  STEP: Confirm that there are two ControllerRevisions @ 05/08/25 14:43:49.841
  I0508 14:43:49.841671 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0508 14:43:49.844097 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-gnl6p-daemon-set-6d6bd77f" @ 05/08/25 14:43:49.844
  STEP: Confirm that there is only one ControllerRevision @ 05/08/25 14:43:49.852
  I0508 14:43:49.852897 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0508 14:43:49.917157 22 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-gnl6p-daemon-set-79d9f88ff9" @ 05/08/25 14:43:49.919
  I0508 14:43:49.935010 22 controller_revision.go:220] e2e-gnl6p-daemon-set-79d9f88ff9 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/08/25 14:43:49.935
  I0508 14:43:49.947108      22 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 05/08/25 14:43:49.947
  I0508 14:43:49.947343 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0508 14:43:49.989307 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-gnl6p-daemon-set-79d9f88ff9=updated" @ 05/08/25 14:43:49.989
  STEP: Confirm that there is only one ControllerRevision @ 05/08/25 14:43:50.033
  I0508 14:43:50.034044 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0508 14:43:50.036265 22 controller_revision.go:265] Found 1 ControllerRevisions
  I0508 14:43:50.038116 22 controller_revision.go:246] ControllerRevision "e2e-gnl6p-daemon-set-7d97ccdf58" has revision 3
  STEP: Deleting DaemonSet "e2e-gnl6p-daemon-set" @ 05/08/25 14:43:50.04
  STEP: deleting DaemonSet.extensions e2e-gnl6p-daemon-set in namespace controllerrevisions-5088, will wait for the garbage collector to delete the pods @ 05/08/25 14:43:50.04
  I0508 14:43:50.107726 22 resources.go:139] Deleting DaemonSet.extensions e2e-gnl6p-daemon-set took: 13.87953ms
  I0508 14:43:50.208257 22 resources.go:163] Terminating DaemonSet.extensions e2e-gnl6p-daemon-set pods took: 100.528504ms
  I0508 14:43:52.211235 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-gnl6p-daemon-set: 0
  I0508 14:43:52.211304 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-gnl6p-daemon-set
  I0508 14:43:52.213363 22 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27946"},"items":null}

  I0508 14:43:52.215139 22 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27946"},"items":null}

  I0508 14:43:52.221065 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5088" for this suite. @ 05/08/25 14:43:52.223
• [4.527 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 05/08/25 14:43:52.233
  I0508 14:43:52.233073 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 14:43:52.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:43:52.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:43:52.253
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 14:43:52.261
  STEP: Saw pod success @ 05/08/25 14:43:56.292
  I0508 14:43:56.294713 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-6ff8991b-77c7-4c43-8426-8ad08f757af5 container client-container: <nil>
  STEP: delete the pod @ 05/08/25 14:43:56.299
  I0508 14:43:56.328479 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8499" for this suite. @ 05/08/25 14:43:56.331
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 05/08/25 14:43:56.346
  I0508 14:43:56.346565 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 14:43:56.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:43:56.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:43:56.373
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/08/25 14:43:56.376
  STEP: Saw pod success @ 05/08/25 14:44:00.414
  I0508 14:44:00.416657 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-390c2777-a834-40de-85df-a5a482a55783 container test-container: <nil>
  STEP: delete the pod @ 05/08/25 14:44:00.421
  I0508 14:44:00.450599 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5586" for this suite. @ 05/08/25 14:44:00.453
• [4.115 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 05/08/25 14:44:00.462
  I0508 14:44:00.462732 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubelet-test @ 05/08/25 14:44:00.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:44:00.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:44:00.485
  I0508 14:44:02.540087 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3333" for this suite. @ 05/08/25 14:44:02.544
• [2.092 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 05/08/25 14:44:02.555
  I0508 14:44:02.555140 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename field-validation @ 05/08/25 14:44:02.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:44:02.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:44:02.583
  I0508 14:44:02.587262 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  I0508 14:44:05.148954      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0508 14:44:05.149506      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0508 14:44:05.149848      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0508 14:44:05.150108      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0508 14:44:05.150411      22 warnings.go:110] "Warning: unknown field \"gamma\""
  I0508 14:44:05.691169 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4149" for this suite. @ 05/08/25 14:44:05.699
• [3.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/08/25 14:44:05.708
  I0508 14:44:05.708370 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename deployment @ 05/08/25 14:44:05.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:44:05.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:44:05.728
  I0508 14:44:05.736247 22 deployment.go:1664] Creating simple deployment test-new-deployment
  I0508 14:44:05.762684 22 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 05/08/25 14:44:07.771
  STEP: updating a scale subresource @ 05/08/25 14:44:07.773
  STEP: verifying the deployment Spec.Replicas was modified @ 05/08/25 14:44:07.79
  STEP: Patch a scale subresource @ 05/08/25 14:44:07.792
  I0508 14:44:07.855091 22 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4872",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92d25700-4973-4e8e-8176-5016bd20d0ee",
      ResourceVersion: (string) (len=5) "28130",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312245,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0508 14:44:07.876385 22 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4872",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31c1a71a-3a8b-4282-a7ab-ab2b43713447",
      ResourceVersion: (string) (len=5) "28133",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312245,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "92d25700-4973-4e8e-8176-5016bd20d0ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 32 64 32 35 37  30 30 2d 34 39 37 33 2d  |\"92d25700-4973-|
              00000120  34 65 38 65 2d 38 31 37  36 2d 35 30 31 36 62 64  |4e8e-8176-5016bd|
              00000130  32 30 64 30 65 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |20d0ee\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0508 14:44:07.884752 22 deployment.go:68] Pod "test-new-deployment-685b768f58-28w8p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-28w8p",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4872",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fd7607c-cb28-43a7-8c11-85b02d75c779",
      ResourceVersion: (string) (len=5) "28135",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312247,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "31c1a71a-3a8b-4282-a7ab-ab2b43713447",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 31  63 31 61 37 31 61 2d 33  |d\":\"31c1a71a-3|
              00000090  61 38 62 2d 34 32 38 32  2d 61 37 61 62 2d 61 62  |a8b-4282-a7ab-ab|
              000000a0  32 62 34 33 37 31 33 34  34 37 5c 22 7d 22 3a 7b  |2b43713447\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4fjgw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4fjgw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:44:07.886235 22 deployment.go:68] Pod "test-new-deployment-685b768f58-hnhst" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-hnhst",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4872",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ac947ab-2051-403f-a163-2cc734be9d4c",
      ResourceVersion: (string) (len=5) "28121",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312245,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6799f5edd3e154570db79f000fe4d3af6525cc0494f2f4c8c598c96f4d6b8ff3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.84/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.84/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "31c1a71a-3a8b-4282-a7ab-ab2b43713447",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 31  63 31 61 37 31 61 2d 33  |d\":\"31c1a71a-3|
              00000090  61 38 62 2d 34 32 38 32  2d 61 37 61 62 2d 61 62  |a8b-4282-a7ab-ab|
              000000a0  32 62 34 33 37 31 33 34  34 37 5c 22 7d 22 3a 7b  |2b43713447\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 38 34  5c 22 7d 22 3a 7b 22 2e  |.42.1.84\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cs567",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cs567",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) (len=10) "10.42.1.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312245,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882312246,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://56c396b10ce811d173fd0a74cb50cd0debbd4f36e8f0899e9ad397ec0be37ccc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cs567",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:44:07.888386 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4872" for this suite. @ 05/08/25 14:44:07.902
• [2.237 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 05/08/25 14:44:07.945
  I0508 14:44:07.945244 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename daemonsets @ 05/08/25 14:44:07.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:44:07.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:44:07.999
  STEP: Creating simple DaemonSet "daemon-set" @ 05/08/25 14:44:08.023
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/08/25 14:44:08.031
  I0508 14:44:08.135439 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 14:44:08.135477 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 14:44:09.039303 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 14:44:09.039463 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 14:44:10.064809 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0508 14:44:10.064849 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 14:44:11.037630 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0508 14:44:11.037667 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 05/08/25 14:44:11.039
  I0508 14:44:11.046035 22 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/08/25 14:44:11.046
  I0508 14:44:11.063142 22 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/08/25 14:44:11.063
  I0508 14:44:11.065696 22 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0508 14:44:11.066056 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0508 14:44:11.066454 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0508 14:44:11.066645 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0508 14:44:11.067033 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0508 14:44:11.067075 22 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-9851 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0508 14:44:11.067095 22 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/08/25 14:44:11.067
  STEP: watching for the daemon set status to be patched @ 05/08/25 14:44:11.076
  I0508 14:44:11.079070 22 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0508 14:44:11.079275 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0508 14:44:11.079529 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0508 14:44:11.079720 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0508 14:44:11.079909 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0508 14:44:11.080076 22 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-9851 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0508 14:44:11.080291 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0508 14:44:11.080336 22 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-9851 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0508 14:44:11.080379 22 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/08/25 14:44:11.091
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9851, will wait for the garbage collector to delete the pods @ 05/08/25 14:44:11.091
  I0508 14:44:11.153082 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.770557ms
  I0508 14:44:11.254244 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.158415ms
  I0508 14:44:13.158095 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 14:44:13.158138 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0508 14:44:13.160235 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28238"},"items":null}

  I0508 14:44:13.162224 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28238"},"items":null}

  I0508 14:44:13.183445 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9851" for this suite. @ 05/08/25 14:44:13.186
• [5.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:704
  STEP: Creating a kubernetes client @ 05/08/25 14:44:13.196
  I0508 14:44:13.196309 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename sched-pred @ 05/08/25 14:44:13.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:44:13.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:44:13.244
  I0508 14:44:13.249663 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0508 14:44:13.365755 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0508 14:44:13.369186 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-20-200.us-east-2.compute.internal before test
  I0508 14:44:13.377787 22 predicates.go:956] cloud-controller-manager-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:52 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.377951 22 predicates.go:958] 	Container cloud-controller-manager ready: true, restart count 0
  I0508 14:44:13.378048 22 predicates.go:956] etcd-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:24 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.378130 22 predicates.go:958] 	Container etcd ready: true, restart count 0
  I0508 14:44:13.378204 22 predicates.go:956] helm-install-rke2-canal-ftk2n from kube-system started at 2025-05-08 12:45:58 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.378280 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 14:44:13.378353 22 predicates.go:956] helm-install-rke2-coredns-lmmjk from kube-system started at 2025-05-08 12:45:58 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.378428 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 14:44:13.378503 22 predicates.go:956] helm-install-rke2-metrics-server-8m9m2 from kube-system started at 2025-05-08 12:46:24 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.378553 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 14:44:13.378632 22 predicates.go:956] helm-install-rke2-runtimeclasses-pcsjl from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.378709 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 14:44:13.378760 22 predicates.go:956] helm-install-rke2-snapshot-controller-77fsq from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.378837 22 predicates.go:958] 	Container helm ready: false, restart count 2
  I0508 14:44:13.378907 22 predicates.go:956] helm-install-rke2-snapshot-controller-crd-jsh9g from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.378967 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 14:44:13.379036 22 predicates.go:956] kube-apiserver-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:39 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.379086 22 predicates.go:958] 	Container kube-apiserver ready: true, restart count 0
  I0508 14:44:13.379159 22 predicates.go:956] kube-controller-manager-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:50 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.379221 22 predicates.go:958] 	Container kube-controller-manager ready: true, restart count 0
  I0508 14:44:13.379297 22 predicates.go:956] kube-proxy-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:24 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.379358 22 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0508 14:44:13.379428 22 predicates.go:956] kube-scheduler-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:50 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.379478 22 predicates.go:958] 	Container kube-scheduler ready: true, restart count 0
  I0508 14:44:13.379550 22 predicates.go:956] rke2-canal-9hk6c from kube-system started at 2025-05-08 12:46:07 +0000 UTC (2 container statuses recorded)
  I0508 14:44:13.379611 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0508 14:44:13.379670 22 predicates.go:958] 	Container kube-flannel ready: true, restart count 0
  I0508 14:44:13.379741 22 predicates.go:956] rke2-coredns-rke2-coredns-78c6cdfd9-p6ldk from kube-system started at 2025-05-08 12:46:24 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.379790 22 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0508 14:44:13.379861 22 predicates.go:956] rke2-coredns-rke2-coredns-autoscaler-6bb9778ffb-dqqh2 from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.380142 22 predicates.go:958] 	Container autoscaler ready: true, restart count 0
  I0508 14:44:13.380222 22 predicates.go:956] rke2-metrics-server-85479b695c-42rvh from kube-system started at 2025-05-08 12:46:44 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.380283 22 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0508 14:44:13.380355 22 predicates.go:956] rke2-snapshot-controller-696989ffdd-bpbd9 from kube-system started at 2025-05-08 12:47:01 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.380409 22 predicates.go:958] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0508 14:44:13.380484 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-e41e32d222f74fe8-8p4wr from sonobuoy started at 2025-05-08 14:10:29 +0000 UTC (2 container statuses recorded)
  I0508 14:44:13.380650 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0508 14:44:13.380714 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0508 14:44:13.380788 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-27-218.us-east-2.compute.internal before test
  I0508 14:44:13.385007 22 predicates.go:956] kube-proxy-ip-172-31-27-218.us-east-2.compute.internal from kube-system started at 2025-05-08 12:48:07 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.385043 22 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0508 14:44:13.385056 22 predicates.go:956] rke2-canal-rnbhm from kube-system started at 2025-05-08 12:48:07 +0000 UTC (2 container statuses recorded)
  I0508 14:44:13.385066 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0508 14:44:13.385075 22 predicates.go:958] 	Container kube-flannel ready: true, restart count 0
  I0508 14:44:13.385085 22 predicates.go:956] rke2-coredns-rke2-coredns-78c6cdfd9-q7lcz from kube-system started at 2025-05-08 12:48:42 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.385094 22 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0508 14:44:13.385104 22 predicates.go:956] busybox-readonly-fs7fc9bd0e-e420-4110-b197-6ea85971364e from kubelet-test-3333 started at 2025-05-08 14:44:00 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.385113 22 predicates.go:958] 	Container busybox-readonly-fs7fc9bd0e-e420-4110-b197-6ea85971364e ready: true, restart count 0
  I0508 14:44:13.385123 22 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-08 14:10:24 +0000 UTC (1 container statuses recorded)
  I0508 14:44:13.385132 22 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0508 14:44:13.385143 22 predicates.go:956] sonobuoy-e2e-job-f43826452bc6480c from sonobuoy started at 2025-05-08 14:10:29 +0000 UTC (2 container statuses recorded)
  I0508 14:44:13.385153 22 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0508 14:44:13.385164 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0508 14:44:13.385175 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-e41e32d222f74fe8-vfkbf from sonobuoy started at 2025-05-08 14:10:29 +0000 UTC (2 container statuses recorded)
  I0508 14:44:13.385238 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0508 14:44:13.385287 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/08/25 14:44:13.385
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/08/25 14:44:15.405
  STEP: Trying to apply a random label on the found node. @ 05/08/25 14:44:15.436
  STEP: verifying the node has the label kubernetes.io/e2e-3775f5a5-ce83-41fd-97b2-757c0b7f6bc3 95 @ 05/08/25 14:44:15.456
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/08/25 14:44:15.467
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.27.218 on the node which pod4 resides and expect not scheduled @ 05/08/25 14:44:17.492
  STEP: removing the label kubernetes.io/e2e-3775f5a5-ce83-41fd-97b2-757c0b7f6bc3 off the node ip-172-31-27-218.us-east-2.compute.internal @ 05/08/25 14:49:17.502
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-3775f5a5-ce83-41fd-97b2-757c0b7f6bc3 @ 05/08/25 14:49:17.522
  I0508 14:49:17.526865 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6442" for this suite. @ 05/08/25 14:49:17.533
• [304.347 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 05/08/25 14:49:17.553
  I0508 14:49:17.554168 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 14:49:17.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:49:17.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:49:17.595
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 05/08/25 14:49:17.598
  STEP: Awaiting for the job to fail as all indexes are failed @ 05/08/25 14:49:17.611
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 05/08/25 14:49:23.625
  I0508 14:49:23.627317 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7731" for this suite. @ 05/08/25 14:49:23.629
• [6.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/08/25 14:49:23.64
  I0508 14:49:23.640654 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename deployment @ 05/08/25 14:49:23.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:49:23.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:49:23.662
  I0508 14:49:23.670475 22 deployment.go:1215] Creating deployment "webserver-deployment"
  I0508 14:49:23.678677 22 deployment.go:1219] Waiting for observed generation 1
  I0508 14:49:25.720432 22 deployment.go:1224] Waiting for all required pods to come up
  I0508 14:49:25.732714 22 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/08/25 14:49:25.732
  I0508 14:49:29.923304 22 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0508 14:49:29.927359 22 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0508 14:49:29.937709 22 deployment.go:314] Updating deployment webserver-deployment
  I0508 14:49:29.937750 22 deployment.go:1243] Waiting for observed generation 2
  I0508 14:49:31.971595 22 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0508 14:49:32.004729 22 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0508 14:49:32.012005 22 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0508 14:49:32.077035 22 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0508 14:49:32.077079 22 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0508 14:49:32.102375 22 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0508 14:49:32.117528 22 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0508 14:49:32.117565 22 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0508 14:49:32.131305 22 deployment.go:314] Updating deployment webserver-deployment
  I0508 14:49:32.131350 22 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0508 14:49:32.144937 22 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0508 14:49:32.159037 22 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0508 14:49:32.234205 22 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52f5c5f4-fc6a-4b96-9a97-9810c37ad4b2",
      ResourceVersion: (string) (len=5) "29605",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0508 14:49:32.338093 22 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
      ResourceVersion: (string) (len=5) "29599",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312569,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "52f5c5f4-fc6a-4b96-9a97-9810c37ad4b2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 32 66 35 63 35  66 34 2d 66 63 36 61 2d  |\"52f5c5f4-fc6a-|
              00000120  34 62 39 36 2d 39 61 39  37 2d 39 38 31 30 63 33  |4b96-9a97-9810c3|
              00000130  37 61 64 34 62 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7ad4b2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0508 14:49:32.339423 22 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0508 14:49:32.339768 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
      ResourceVersion: (string) (len=5) "29597",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "52f5c5f4-fc6a-4b96-9a97-9810c37ad4b2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 32 66 35 63 35  66 34 2d 66 63 36 61 2d  |\"52f5c5f4-fc6a-|
              00000120  34 62 39 36 2d 39 61 39  37 2d 39 38 31 30 63 33  |4b96-9a97-9810c3|
              00000130  37 61 64 34 62 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7ad4b2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0508 14:49:32.449375 22 deployment.go:68] Pod "webserver-deployment-685b768f58-2679x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2679x",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9fff2533-5c22-4c4b-be2f-84d182961c78",
      ResourceVersion: (string) (len=5) "29641",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qm6bj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qm6bj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.451194 22 deployment.go:68] Pod "webserver-deployment-685b768f58-55zp5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-55zp5",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "609c940d-c43b-4d97-8370-814575134893",
      ResourceVersion: (string) (len=5) "29421",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cc6162b1ca2818ef6d488257c5a4a93fd520c798508e5e33a25957eaae087da9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.35/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.35/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 33 35  5c 22 7d 22 3a 7b 22 2e  |.42.0.35\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6ggz6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6ggz6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.200"
        }
      },
      PodIP: (string) (len=10) "10.42.0.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882312565,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1d13eba03d27c64a02ef2913772cb2f4549558d75490abd9a80b5bdcfd370fa7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6ggz6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.453501 22 deployment.go:68] Pod "webserver-deployment-685b768f58-5zkr5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5zkr5",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e2c0f15-b47c-4bec-946d-d3127f34f777",
      ResourceVersion: (string) (len=5) "29640",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7nzgl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7nzgl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7nzgl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.455828 22 deployment.go:68] Pod "webserver-deployment-685b768f58-6586l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6586l",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c831db4-bb2b-4536-9e84-55ee8c3e3781",
      ResourceVersion: (string) (len=5) "29408",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f1ec921e8ad2696663c8eab9b433326b53fc112670905af304e52a493de733c3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.91/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.91/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312565,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 39 31  5c 22 7d 22 3a 7b 22 2e  |.42.1.91\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tj2c4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tj2c4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312565,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312565,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312565,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) (len=10) "10.42.1.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882312565,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://52d7d118f2b6b01b8d61b415b7b54e07d9b8c103a8211738acadb9af303ae2c6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tj2c4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.458115 22 deployment.go:68] Pod "webserver-deployment-685b768f58-87st6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-87st6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e80aa66-05a5-4d89-9443-5025a8d7299d",
      ResourceVersion: (string) (len=5) "29425",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.90/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.90/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "222d6d357cedc9a81e5c9dabd63056e60b94d07175b2db26afbee8432b3d31cb"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 39 30  5c 22 7d 22 3a 7b 22 2e  |.42.1.90\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mzwzj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mzwzj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312565,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312565,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312565,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) (len=10) "10.42.1.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882312565,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7e3dacc95f862d16661eef74696c87c3b0995f761fc8eda20c199d80c9d13951",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mzwzj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.460681 22 deployment.go:68] Pod "webserver-deployment-685b768f58-chklz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-chklz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8b2bf90-5c12-4d23-965a-b0b1c1d64ee0",
      ResourceVersion: (string) (len=5) "29417",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "08a378d5a53fcff3a9ce9dff4a60e8d3a4396cb2f0331171032b9bc710daef69",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.92/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.92/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312565,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 39 32  5c 22 7d 22 3a 7b 22 2e  |.42.1.92\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b4jgw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b4jgw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312565,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312565,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312565,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) (len=10) "10.42.1.92",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.92"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882312565,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3465b8755a266303e556058848664795c30de08af9576925a8f95da2b032d6cf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b4jgw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.462849 22 deployment.go:68] Pod "webserver-deployment-685b768f58-d9dwj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-d9dwj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "351a6217-3e7c-40b2-8c6a-0e01c11f698c",
      ResourceVersion: (string) (len=5) "29629",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fb9lc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fb9lc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.464028 22 deployment.go:68] Pod "webserver-deployment-685b768f58-dvp8f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dvp8f",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7586a824-a397-4920-bb4d-b0033c9ec376",
      ResourceVersion: (string) (len=5) "29639",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fnztd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fnztd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.467591 22 deployment.go:68] Pod "webserver-deployment-685b768f58-hwqr5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-hwqr5",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c5fab96-59e4-4833-9480-26a6e703cd75",
      ResourceVersion: (string) (len=5) "29642",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xb8xr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xb8xr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.471163 22 deployment.go:68] Pod "webserver-deployment-685b768f58-jh7l8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jh7l8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a15eafc0-33fd-4906-a191-4d82fe8e96a2",
      ResourceVersion: (string) (len=5) "29630",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l5m4x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l5m4x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.477911 22 deployment.go:68] Pod "webserver-deployment-685b768f58-lqfkm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lqfkm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8697581f-764a-4b02-a9a9-17e549ab19d7",
      ResourceVersion: (string) (len=5) "29621",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vvpgw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vvpgw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.479248 22 deployment.go:68] Pod "webserver-deployment-685b768f58-m22mv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-m22mv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb4259fa-d18d-4658-94c5-fba0530177cf",
      ResourceVersion: (string) (len=5) "29470",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.34/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b2bb0f668563a13bef3426d3daec9cb6dbb2f9319ffadd394baeef826cd98159",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.34/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312568,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 33 34  5c 22 7d 22 3a 7b 22 2e  |.42.0.34\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h4frm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h4frm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.200"
        }
      },
      PodIP: (string) (len=10) "10.42.0.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882312567,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7827cbd8773e6b466f85598bc813892a473b4b034e4939a8e47eeb3a7f20c276",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h4frm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.484259 22 deployment.go:68] Pod "webserver-deployment-685b768f58-ncv5m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ncv5m",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f3b1b648-506b-4fa1-acb7-d70a3cfa557c",
      ResourceVersion: (string) (len=5) "29614",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fbgmh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fbgmh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.486954 22 deployment.go:68] Pod "webserver-deployment-685b768f58-npnn8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-npnn8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ebd84f9-d1eb-48d2-9f73-62b813519f17",
      ResourceVersion: (string) (len=5) "29465",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "05dc68c1ea5a45abd3b4b92a91e027be6225bb4d3f7fe16ec423c2bbeb88687e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.37/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.37/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 33 37  5c 22 7d 22 3a 7b 22 2e  |.42.0.37\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xwbs6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xwbs6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.200"
        }
      },
      PodIP: (string) (len=10) "10.42.0.37",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.37"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882312567,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d18365b66723024193426b5129c179a2c0fa9dabb32fb30fff9620064939d16b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xwbs6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.491114 22 deployment.go:68] Pod "webserver-deployment-685b768f58-qklm7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qklm7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d0cc4946-2223-4fe6-a529-bb7f380e71d2",
      ResourceVersion: (string) (len=5) "29431",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a79bbcf9c01b5a8f5c68104a7b30603d7ed7b57351f24a7658ab79ce8a5d2f2e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.94/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.94/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 39 34  5c 22 7d 22 3a 7b 22 2e  |.42.1.94\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qz9t4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qz9t4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) (len=10) "10.42.1.94",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.94"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882312565,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://280fe40cdc88846a95af0679664a0ae36fa83409859c2d22433cef3c79678ee8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qz9t4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.494644 22 deployment.go:68] Pod "webserver-deployment-685b768f58-r25ls" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-r25ls",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf53ab86-8f34-4b41-917d-55f248b607cc",
      ResourceVersion: (string) (len=5) "29644",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mb6lv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mb6lv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.495894 22 deployment.go:68] Pod "webserver-deployment-685b768f58-sxz6w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-sxz6w",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0c0a8d4-6169-4c16-b19f-058b2847abdf",
      ResourceVersion: (string) (len=5) "29647",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zclvz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zclvz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zclvz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.503455 22 deployment.go:68] Pod "webserver-deployment-685b768f58-wjwkz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wjwkz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35ddc5d3-b717-4d69-aff5-ce365be2120f",
      ResourceVersion: (string) (len=5) "29646",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-97m4r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-97m4r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.505273 22 deployment.go:68] Pod "webserver-deployment-685b768f58-wqhjt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wqhjt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93921c32-dd1c-4d24-9a9b-8beb47f88acf",
      ResourceVersion: (string) (len=5) "29617",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zrm7m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zrm7m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.506556 22 deployment.go:68] Pod "webserver-deployment-685b768f58-x8qj6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-x8qj6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd8fded4-34d2-4222-90d1-435276da1226",
      ResourceVersion: (string) (len=5) "29435",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "19ea9cba83b5d6d640ae0d1d46ed1760d23cc2748607b7f16f0a300eeb68d18d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.93/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.93/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52cfe6ce-aecb-4e58-9c9a-8bd416615a7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  63 66 65 36 63 65 2d 61  |d\":\"52cfe6ce-a|
              00000090  65 63 62 2d 34 65 35 38  2d 39 63 39 61 2d 38 62  |ecb-4e58-9c9a-8b|
              000000a0  64 34 31 36 36 31 35 61  37 66 5c 22 7d 22 3a 7b  |d416615a7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 39 33  5c 22 7d 22 3a 7b 22 2e  |.42.1.93\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ccjgl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ccjgl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) (len=10) "10.42.1.93",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.93"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882312565,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://928ffd7bb49bcd20a96b7f551e5c9381a269403ad55cbcbcafc350eea723b2bc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ccjgl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.508882 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-2hltc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-2hltc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e17a30e-1976-49fd-a275-d36af0c0b977",
      ResourceVersion: (string) (len=5) "29579",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312569,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "62c5f4a35c89511c28f8cfa526ad8bf43efe33a49576d2e5030d0e817e3cd51c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.95/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.95/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312569,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  35 36 63 30 30 33 2d 37  |d\":\"c856c003-7|
              00000090  66 38 66 2d 34 64 63 39  2d 38 38 35 30 2d 34 62  |f8f-4dc9-8850-4b|
              000000a0  37 61 31 37 63 33 31 66  34 31 5c 22 7d 22 3a 7b  |7a17c31f41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312571,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 39 35 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.95\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sxbdz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sxbdz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312571,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312569,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) (len=10) "10.42.1.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312570,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sxbdz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.510862 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-82xhh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-82xhh",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fbad39a-f19a-4858-a223-c214ee3f67ae",
      ResourceVersion: (string) (len=5) "29584",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312570,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c6a0530130f058e591f4272d86456187e9db34fbc8305cafa54a5a3556fd2e99",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.97/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.97/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  35 36 63 30 30 33 2d 37  |d\":\"c856c003-7|
              00000090  66 38 66 2d 34 64 63 39  2d 38 38 35 30 2d 34 62  |f8f-4dc9-8850-4b|
              000000a0  37 61 31 37 63 33 31 66  34 31 5c 22 7d 22 3a 7b  |7a17c31f41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312571,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 39 37 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.97\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2x445",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2x445",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312571,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) (len=10) "10.42.1.97",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.97"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312570,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2x445",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.515321 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9wfzg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9wfzg",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc4758a3-725a-4da9-b7dd-f8e4a4af424a",
      ResourceVersion: (string) (len=5) "29636",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  35 36 63 30 30 33 2d 37  |d\":\"c856c003-7|
              00000090  66 38 66 2d 34 64 63 39  2d 38 38 35 30 2d 34 62  |f8f-4dc9-8850-4b|
              000000a0  37 61 31 37 63 33 31 66  34 31 5c 22 7d 22 3a 7b  |7a17c31f41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-stvvk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-stvvk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.517644 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-gbfh4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-gbfh4",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be7f6878-ecec-49e9-9f49-c84dbf1df288",
      ResourceVersion: (string) (len=5) "29632",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  35 36 63 30 30 33 2d 37  |d\":\"c856c003-7|
              00000090  66 38 66 2d 34 64 63 39  2d 38 38 35 30 2d 34 62  |f8f-4dc9-8850-4b|
              000000a0  37 61 31 37 63 33 31 66  34 31 5c 22 7d 22 3a 7b  |7a17c31f41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9vwt6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9vwt6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.518823 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-hpnqj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-hpnqj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84e70dd8-e9ff-4c7a-b064-deb059b5ee2c",
      ResourceVersion: (string) (len=5) "29638",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  35 36 63 30 30 33 2d 37  |d\":\"c856c003-7|
              00000090  66 38 66 2d 34 64 63 39  2d 38 38 35 30 2d 34 62  |f8f-4dc9-8850-4b|
              000000a0  37 61 31 37 63 33 31 66  34 31 5c 22 7d 22 3a 7b  |7a17c31f41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6q6wf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6q6wf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.519963 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jbg2k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jbg2k",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6cf51375-04e3-40d8-8571-d1b647bbb0dc",
      ResourceVersion: (string) (len=5) "29643",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  35 36 63 30 30 33 2d 37  |d\":\"c856c003-7|
              00000090  66 38 66 2d 34 64 63 39  2d 38 38 35 30 2d 34 62  |f8f-4dc9-8850-4b|
              000000a0  37 61 31 37 63 33 31 66  34 31 5c 22 7d 22 3a 7b  |7a17c31f41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ck67w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ck67w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.521486 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-kvrjm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-kvrjm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa9355af-148c-4f50-89b0-a8cd59201d6f",
      ResourceVersion: (string) (len=5) "29582",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312569,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0f389c4e61773ca666004d9b0abace848d1870de20115c3abedbd5db8af17be9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.96/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.96/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312569,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  35 36 63 30 30 33 2d 37  |d\":\"c856c003-7|
              00000090  66 38 66 2d 34 64 63 39  2d 38 38 35 30 2d 34 62  |f8f-4dc9-8850-4b|
              000000a0  37 61 31 37 63 33 31 66  34 31 5c 22 7d 22 3a 7b  |7a17c31f41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312571,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 39 36 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.96\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bctb7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bctb7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312571,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) (len=10) "10.42.1.96",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.96"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312570,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bctb7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.524279 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-q74k5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-q74k5",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "493e3cb2-8c33-469b-800e-8c78fab347a4",
      ResourceVersion: (string) (len=5) "29650",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  35 36 63 30 30 33 2d 37  |d\":\"c856c003-7|
              00000090  66 38 66 2d 34 64 63 39  2d 38 38 35 30 2d 34 62  |f8f-4dc9-8850-4b|
              000000a0  37 61 31 37 63 33 31 66  34 31 5c 22 7d 22 3a 7b  |7a17c31f41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bngmk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bngmk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.529870 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-sprfv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-sprfv",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b2fb8bc-83c6-45c7-9e23-df24bc928ce1",
      ResourceVersion: (string) (len=5) "29653",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  35 36 63 30 30 33 2d 37  |d\":\"c856c003-7|
              00000090  66 38 66 2d 34 64 63 39  2d 38 38 35 30 2d 34 62  |f8f-4dc9-8850-4b|
              000000a0  37 61 31 37 63 33 31 66  34 31 5c 22 7d 22 3a 7b  |7a17c31f41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-66csg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-66csg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.531079 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vmgbr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vmgbr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6cf4881e-b1e5-4b08-a2c3-438e7d593eb4",
      ResourceVersion: (string) (len=5) "29637",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  35 36 63 30 30 33 2d 37  |d\":\"c856c003-7|
              00000090  66 38 66 2d 34 64 63 39  2d 38 38 35 30 2d 34 62  |f8f-4dc9-8850-4b|
              000000a0  37 61 31 37 63 33 31 66  34 31 5c 22 7d 22 3a 7b  |7a17c31f41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z9dvm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z9dvm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.532855 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vt9l2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vt9l2",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6acd678-6201-4150-a15a-8099d2c2745f",
      ResourceVersion: (string) (len=5) "29615",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  35 36 63 30 30 33 2d 37  |d\":\"c856c003-7|
              00000090  66 38 66 2d 34 64 63 39  2d 38 38 35 30 2d 34 62  |f8f-4dc9-8850-4b|
              000000a0  37 61 31 37 63 33 31 66  34 31 5c 22 7d 22 3a 7b  |7a17c31f41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xmbp6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xmbp6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.534383 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wc8cr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wc8cr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bbe8ad82-44ca-46ac-8ac6-a99e3d0d131d",
      ResourceVersion: (string) (len=5) "29595",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312570,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b5f80d8884c5baf2a99d8b0373b2778fccdbd2a352428a7d82586472598eda3c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.40/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.40/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  35 36 63 30 30 33 2d 37  |d\":\"c856c003-7|
              00000090  66 38 66 2d 34 64 63 39  2d 38 38 35 30 2d 34 62  |f8f-4dc9-8850-4b|
              000000a0  37 61 31 37 63 33 31 66  34 31 5c 22 7d 22 3a 7b  |7a17c31f41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 34 30 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.40\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7x29s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7x29s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312571,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.200"
        }
      },
      PodIP: (string) (len=10) "10.42.0.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312570,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7x29s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.538039 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-z474h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-z474h",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59bbd647-8547-41ba-9d18-3e7ffcdfb7a1",
      ResourceVersion: (string) (len=5) "29591",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312569,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cc9210ca282ce38775c306da0921761e678a0244ec439d5ae270b3dbddfc66a8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.39/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.39/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "c856c003-7f8f-4dc9-8850-4b7a17c31f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312569,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  35 36 63 30 30 33 2d 37  |d\":\"c856c003-7|
              00000090  66 38 66 2d 34 64 63 39  2d 38 38 35 30 2d 34 62  |f8f-4dc9-8850-4b|
              000000a0  37 61 31 37 63 33 31 66  34 31 5c 22 7d 22 3a 7b  |7a17c31f41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 33 39 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.39\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6cg9s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6cg9s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-200.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312571,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312569,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.200"
        }
      },
      PodIP: (string) (len=10) "10.42.0.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312570,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6cg9s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:49:32.539798 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-851" for this suite. @ 05/08/25 14:49:32.632
• [9.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/08/25 14:49:32.728
  I0508 14:49:32.728236 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename podtemplate @ 05/08/25 14:49:32.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:49:32.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:49:32.805
  STEP: Create set of pod templates @ 05/08/25 14:49:32.809
  I0508 14:49:32.911236 22 podtemplates.go:143] created test-podtemplate-1
  I0508 14:49:32.963573 22 podtemplates.go:143] created test-podtemplate-2
  I0508 14:49:33.157803 22 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/08/25 14:49:33.157
  STEP: delete collection of pod templates @ 05/08/25 14:49:33.363
  I0508 14:49:33.363206 22 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/08/25 14:49:34.238
  I0508 14:49:34.238440 22 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0508 14:49:34.283097 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1732" for this suite. @ 05/08/25 14:49:34.368
• [1.682 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 05/08/25 14:49:34.41
  I0508 14:49:34.410757 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/08/25 14:49:34.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:49:34.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:49:34.792
  STEP: create the container to handle the HTTPGet hook request. @ 05/08/25 14:49:34.955
  STEP: create the pod with lifecycle hook @ 05/08/25 14:49:45.442
  STEP: delete the pod with lifecycle hook @ 05/08/25 14:49:47.478
  STEP: check prestop hook @ 05/08/25 14:49:51.5
  I0508 14:49:51.513506 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5420" for this suite. @ 05/08/25 14:49:51.516
• [17.114 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 05/08/25 14:49:51.525
  I0508 14:49:51.525614 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pods @ 05/08/25 14:49:51.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:49:51.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:49:51.547
  STEP: creating the pod @ 05/08/25 14:49:51.553
  STEP: submitting the pod to kubernetes @ 05/08/25 14:49:51.553
  STEP: verifying QOS class is set on the pod @ 05/08/25 14:49:51.565
  I0508 14:49:51.568868 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1118" for this suite. @ 05/08/25 14:49:51.617
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 05/08/25 14:49:51.626
  I0508 14:49:51.626992 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 14:49:51.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:49:51.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:49:51.655
  STEP: Setting up server cert @ 05/08/25 14:49:51.691
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 14:49:52.342
  STEP: Deploying the webhook pod @ 05/08/25 14:49:52.349
  STEP: Wait for the deployment to be ready @ 05/08/25 14:49:52.379
  I0508 14:49:52.388271 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/08/25 14:49:54.395
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 14:49:54.424
  I0508 14:49:55.424770 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/08/25 14:49:55.427
  STEP: create a namespace for the webhook @ 05/08/25 14:49:55.454
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/08/25 14:49:55.472
  I0508 14:49:55.652622 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4029" for this suite. @ 05/08/25 14:49:55.672
  STEP: Destroying namespace "webhook-markers-447" for this suite. @ 05/08/25 14:49:55.688
  STEP: Destroying namespace "fail-closed-namespace-6652" for this suite. @ 05/08/25 14:49:55.697
• [4.079 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 05/08/25 14:49:55.707
  I0508 14:49:55.707039 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename resourcequota @ 05/08/25 14:49:55.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:49:55.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:49:55.738
  STEP: Creating resourceQuota "e2e-rq-status-6ldfm" @ 05/08/25 14:49:55.743
  I0508 14:49:55.753440 22 resource_quota.go:1106] Resource quota "e2e-rq-status-6ldfm" reports spec: hard cpu limit of 500m
  I0508 14:49:55.753480 22 resource_quota.go:1108] Resource quota "e2e-rq-status-6ldfm" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-6ldfm" /status @ 05/08/25 14:49:55.753
  STEP: Confirm /status for "e2e-rq-status-6ldfm" resourceQuota via watch @ 05/08/25 14:49:55.768
  I0508 14:49:55.769839 22 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-6ldfm" in namespace "resourcequota-2139" with hard status: v1.ResourceList(nil)
  I0508 14:49:55.769892 22 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-6ldfm" in namespace "resourcequota-2139" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0508 14:49:55.769906 22 resource_quota.go:1145] ResourceQuota "e2e-rq-status-6ldfm" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/08/25 14:49:55.772
  I0508 14:49:55.788202 22 resource_quota.go:1156] Resource quota "e2e-rq-status-6ldfm" reports spec: hard cpu limit of 1
  I0508 14:49:55.788394 22 resource_quota.go:1157] Resource quota "e2e-rq-status-6ldfm" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-6ldfm" /status @ 05/08/25 14:49:55.788
  STEP: Confirm /status for "e2e-rq-status-6ldfm" resourceQuota via watch @ 05/08/25 14:49:55.802
  I0508 14:49:55.804600 22 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-6ldfm" in namespace "resourcequota-2139" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0508 14:49:55.804864 22 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-6ldfm" in namespace "resourcequota-2139" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0508 14:49:55.804981 22 resource_quota.go:1189] ResourceQuota "e2e-rq-status-6ldfm" /status was patched
  STEP: Get "e2e-rq-status-6ldfm" /status @ 05/08/25 14:49:55.805
  I0508 14:49:55.809236 22 resource_quota.go:1200] Resourcequota "e2e-rq-status-6ldfm" reports status: hard cpu of 1
  I0508 14:49:55.809396 22 resource_quota.go:1202] Resourcequota "e2e-rq-status-6ldfm" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-6ldfm" /status before checking Spec is unchanged @ 05/08/25 14:49:55.812
  I0508 14:49:55.821650 22 resource_quota.go:1222] Resourcequota "e2e-rq-status-6ldfm" reports status: hard cpu of 2
  I0508 14:49:55.821802 22 resource_quota.go:1224] Resourcequota "e2e-rq-status-6ldfm" reports status: hard memory of 2Gi
  I0508 14:49:55.823282 22 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-6ldfm" in namespace "resourcequota-2139" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0508 14:49:55.825530 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6ldfm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6ldfm", GenerateName:"", Namespace:"resourcequota-2139", SelfLink:"", UID:"028e2e1c-d2e8-46f3-8940-4ce29c1e6085", ResourceVersion:"30195", Generation:0, CreationTimestamp:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6ldfm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bd7e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bd818), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bd848), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0508 14:50:00.836930 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6ldfm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6ldfm", GenerateName:"", Namespace:"resourcequota-2139", SelfLink:"", UID:"028e2e1c-d2e8-46f3-8940-4ce29c1e6085", ResourceVersion:"30195", Generation:0, CreationTimestamp:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6ldfm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d5038), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d5068), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d5098), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0508 14:50:05.827069 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6ldfm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6ldfm", GenerateName:"", Namespace:"resourcequota-2139", SelfLink:"", UID:"028e2e1c-d2e8-46f3-8940-4ce29c1e6085", ResourceVersion:"30195", Generation:0, CreationTimestamp:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6ldfm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d5188), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d51b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d5200), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0508 14:50:10.826316 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6ldfm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6ldfm", GenerateName:"", Namespace:"resourcequota-2139", SelfLink:"", UID:"028e2e1c-d2e8-46f3-8940-4ce29c1e6085", ResourceVersion:"30195", Generation:0, CreationTimestamp:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6ldfm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc060), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc0a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0508 14:50:15.828843 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6ldfm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6ldfm", GenerateName:"", Namespace:"resourcequota-2139", SelfLink:"", UID:"028e2e1c-d2e8-46f3-8940-4ce29c1e6085", ResourceVersion:"30195", Generation:0, CreationTimestamp:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6ldfm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc1c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc1f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc228), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0508 14:50:20.827043 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6ldfm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6ldfm", GenerateName:"", Namespace:"resourcequota-2139", SelfLink:"", UID:"028e2e1c-d2e8-46f3-8940-4ce29c1e6085", ResourceVersion:"30195", Generation:0, CreationTimestamp:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6ldfm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc330), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0508 14:50:25.826404 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6ldfm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6ldfm", GenerateName:"", Namespace:"resourcequota-2139", SelfLink:"", UID:"028e2e1c-d2e8-46f3-8940-4ce29c1e6085", ResourceVersion:"30195", Generation:0, CreationTimestamp:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6ldfm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc4e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc528), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc558), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0508 14:50:30.826831 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6ldfm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6ldfm", GenerateName:"", Namespace:"resourcequota-2139", SelfLink:"", UID:"028e2e1c-d2e8-46f3-8940-4ce29c1e6085", ResourceVersion:"30195", Generation:0, CreationTimestamp:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6ldfm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc6d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0508 14:50:35.827445 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6ldfm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6ldfm", GenerateName:"", Namespace:"resourcequota-2139", SelfLink:"", UID:"028e2e1c-d2e8-46f3-8940-4ce29c1e6085", ResourceVersion:"30195", Generation:0, CreationTimestamp:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6ldfm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d40d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d4108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d4138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0508 14:50:40.826839 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6ldfm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6ldfm", GenerateName:"", Namespace:"resourcequota-2139", SelfLink:"", UID:"028e2e1c-d2e8-46f3-8940-4ce29c1e6085", ResourceVersion:"30195", Generation:0, CreationTimestamp:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6ldfm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d4240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d4270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d42a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0508 14:50:45.827214 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6ldfm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6ldfm", GenerateName:"", Namespace:"resourcequota-2139", SelfLink:"", UID:"028e2e1c-d2e8-46f3-8940-4ce29c1e6085", ResourceVersion:"30195", Generation:0, CreationTimestamp:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6ldfm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc7e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc828), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0508 14:50:50.832930 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6ldfm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6ldfm", GenerateName:"", Namespace:"resourcequota-2139", SelfLink:"", UID:"028e2e1c-d2e8-46f3-8940-4ce29c1e6085", ResourceVersion:"30195", Generation:0, CreationTimestamp:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6ldfm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d4378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d43a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041d43d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0508 14:50:55.827176 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6ldfm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6ldfm", GenerateName:"", Namespace:"resourcequota-2139", SelfLink:"", UID:"028e2e1c-d2e8-46f3-8940-4ce29c1e6085", ResourceVersion:"30195", Generation:0, CreationTimestamp:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6ldfm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc990), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc9c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 14, 49, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050bc9f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0508 14:51:00.828201 22 resource_quota.go:1264] ResourceQuota "e2e-rq-status-6ldfm" Spec was unchanged and /status reset
  I0508 14:51:00.828334 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2139" for this suite. @ 05/08/25 14:51:00.831
• [65.134 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 05/08/25 14:51:00.841
  I0508 14:51:00.841253 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename resourcequota @ 05/08/25 14:51:00.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:51:00.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:51:00.869
  STEP: Discovering how many secrets are in namespace by default @ 05/08/25 14:51:00.873
  STEP: Counting existing ResourceQuota @ 05/08/25 14:51:05.875
  STEP: Creating a ResourceQuota @ 05/08/25 14:51:10.878
  STEP: Ensuring resource quota status is calculated @ 05/08/25 14:51:10.892
  STEP: Creating a Secret @ 05/08/25 14:51:12.896
  STEP: Ensuring resource quota status captures secret creation @ 05/08/25 14:51:12.918
  STEP: Deleting a secret @ 05/08/25 14:51:14.921
  STEP: Ensuring resource quota status released usage @ 05/08/25 14:51:14.929
  I0508 14:51:16.933862 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9847" for this suite. @ 05/08/25 14:51:16.936
• [16.105 seconds]
------------------------------
S
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 05/08/25 14:51:16.946
  I0508 14:51:16.946774 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 14:51:16.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:51:16.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:51:16.975
  I0508 14:51:16.980243      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 05/08/25 14:51:16.98
  I0508 14:51:16.988461      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 05/08/25 14:51:16.988
  I0508 14:51:16.989893      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 05/08/25 14:51:16.99
  I0508 14:51:16.992352      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 05/08/25 14:51:16.992
  I0508 14:51:17.001897      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 14:51:17.004756      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 05/08/25 14:51:17.005
  I0508 14:51:17.008330      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 05/08/25 14:51:17.008
  I0508 14:51:17.030947      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 14:51:17.032420      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 05/08/25 14:51:17.032
  I0508 14:51:17.034666      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 05/08/25 14:51:17.034
  I0508 14:51:17.044152      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 05/08/25 14:51:17.044
  I0508 14:51:17.045688      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 05/08/25 14:51:17.045
  I0508 14:51:17.047783      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 14:51:17.047915 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6016" for this suite. @ 05/08/25 14:51:17.05
• [0.112 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 05/08/25 14:51:17.059
  I0508 14:51:17.059885 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename cronjob @ 05/08/25 14:51:17.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:51:17.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:51:17.083
  STEP: Creating a ReplaceConcurrent cronjob @ 05/08/25 14:51:17.091
  STEP: Ensuring a job is scheduled @ 05/08/25 14:51:17.099
  STEP: Ensuring exactly one is scheduled @ 05/08/25 14:52:01.103
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/08/25 14:52:01.105
  STEP: Ensuring the job is replaced with a new one @ 05/08/25 14:52:01.109
  STEP: Removing cronjob @ 05/08/25 14:53:01.113
  I0508 14:53:01.121985 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-305" for this suite. @ 05/08/25 14:53:01.126
• [104.088 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/08/25 14:53:01.148
  I0508 14:53:01.148115 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename lease-test @ 05/08/25 14:53:01.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:53:01.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:53:01.213
  I0508 14:53:01.435927 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5334" for this suite. @ 05/08/25 14:53:01.448
• [0.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/08/25 14:53:01.485
  I0508 14:53:01.485591 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename endpointslice @ 05/08/25 14:53:01.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:53:01.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:53:01.542
  STEP: referencing a single matching pod @ 05/08/25 14:53:05.853
  I0508 14:53:05.858674      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 05/08/25 14:53:05.858
  I0508 14:53:05.862521      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/08/25 14:53:05.862
  I0508 14:53:05.866301      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 05/08/25 14:53:05.866
  I0508 14:53:05.893102 22 endpointslice.go:938] EndpointSlice for Service endpointslice-4866/example-named-port not found
  I0508 14:53:07.900760      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 14:53:07.901077 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4866" for this suite. @ 05/08/25 14:53:07.904
• [6.427 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/08/25 14:53:07.913
  I0508 14:53:07.913351 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/08/25 14:53:07.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:53:07.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:53:07.951
  I0508 14:53:07.954509 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  I0508 14:53:08.516177 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4879" for this suite. @ 05/08/25 14:53:08.53
• [0.636 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 05/08/25 14:53:08.549
  I0508 14:53:08.549180 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 14:53:08.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:53:08.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:53:08.573
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 14:53:08.586
  STEP: Saw pod success @ 05/08/25 14:53:12.617
  I0508 14:53:12.620017 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-74a7360d-ca24-4855-9f74-ceaefdebe4ac container client-container: <nil>
  STEP: delete the pod @ 05/08/25 14:53:12.632
  I0508 14:53:12.661093 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4001" for this suite. @ 05/08/25 14:53:12.663
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 05/08/25 14:53:12.672
  I0508 14:53:12.672115 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 14:53:12.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:53:12.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:53:12.713
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 05/08/25 14:53:12.715
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 05/08/25 14:53:12.729
  STEP: Ensure that the job reaches completions @ 05/08/25 14:53:18.747
  STEP: Verifying that the only appropriately index succeeded @ 05/08/25 14:53:18.75
  I0508 14:53:18.752354 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2586" for this suite. @ 05/08/25 14:53:18.754
• [6.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/08/25 14:53:18.764
  I0508 14:53:18.764386 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/08/25 14:53:18.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:53:18.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:53:18.784
  STEP: creating @ 05/08/25 14:53:18.792
  STEP: getting @ 05/08/25 14:53:18.843
  STEP: listing in namespace @ 05/08/25 14:53:18.845
  STEP: patching @ 05/08/25 14:53:18.855
  STEP: deleting @ 05/08/25 14:53:18.871
  I0508 14:53:18.890558 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-842" for this suite. @ 05/08/25 14:53:18.893
• [0.138 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 05/08/25 14:53:18.902
  I0508 14:53:18.902118 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename replication-controller @ 05/08/25 14:53:18.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:53:18.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:53:18.928
  STEP: Creating ReplicationController "e2e-rc-tksfb" @ 05/08/25 14:53:18.931
  I0508 14:53:18.939219 22 rc.go:795] Get Replication Controller "e2e-rc-tksfb" to confirm replicas
  I0508 14:53:19.940551 22 rc.go:795] Get Replication Controller "e2e-rc-tksfb" to confirm replicas
  I0508 14:53:19.947041 22 rc.go:804] Found 1 replicas for "e2e-rc-tksfb" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-tksfb" @ 05/08/25 14:53:19.947
  STEP: Updating a scale subresource @ 05/08/25 14:53:19.952
  STEP: Verifying replicas where modified for replication controller "e2e-rc-tksfb" @ 05/08/25 14:53:19.967
  I0508 14:53:19.967225 22 rc.go:795] Get Replication Controller "e2e-rc-tksfb" to confirm replicas
  I0508 14:53:20.967353 22 rc.go:795] Get Replication Controller "e2e-rc-tksfb" to confirm replicas
  I0508 14:53:20.969902 22 rc.go:804] Found 2 replicas for "e2e-rc-tksfb" replication controller
  I0508 14:53:20.970030 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7482" for this suite. @ 05/08/25 14:53:20.972
• [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 05/08/25 14:53:20.983
  I0508 14:53:20.983847 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename proxy @ 05/08/25 14:53:20.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:53:21.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:53:21.016
  I0508 14:53:21.021422 22 proxy.go:336] Creating pod...
  I0508 14:53:23.056766 22 proxy.go:360] Creating service...
  I0508 14:53:23.093325 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/pods/agnhost/proxy/some/path/with/DELETE
  I0508 14:53:23.101524 22 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0508 14:53:23.101571 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/pods/agnhost/proxy/some/path/with/GET
  I0508 14:53:23.113597 22 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0508 14:53:23.113648 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/pods/agnhost/proxy/some/path/with/HEAD
  I0508 14:53:23.115965 22 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0508 14:53:23.116014 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/pods/agnhost/proxy/some/path/with/OPTIONS
  I0508 14:53:23.118417 22 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0508 14:53:23.118458 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/pods/agnhost/proxy/some/path/with/PATCH
  I0508 14:53:23.120851 22 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0508 14:53:23.120884 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/pods/agnhost/proxy/some/path/with/POST
  I0508 14:53:23.123563 22 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0508 14:53:23.123596 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/pods/agnhost/proxy/some/path/with/PUT
  I0508 14:53:23.125651 22 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0508 14:53:23.125692 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/services/test-service/proxy/some/path/with/DELETE
  I0508 14:53:23.144087 22 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0508 14:53:23.144240 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/services/test-service/proxy/some/path/with/GET
  I0508 14:53:23.149355 22 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0508 14:53:23.149399 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/services/test-service/proxy/some/path/with/HEAD
  I0508 14:53:23.158158 22 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0508 14:53:23.158195 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/services/test-service/proxy/some/path/with/OPTIONS
  I0508 14:53:23.170118 22 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0508 14:53:23.170163 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/services/test-service/proxy/some/path/with/PATCH
  I0508 14:53:23.174286 22 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0508 14:53:23.174327 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/services/test-service/proxy/some/path/with/POST
  I0508 14:53:23.177712 22 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0508 14:53:23.177747 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1416/services/test-service/proxy/some/path/with/PUT
  I0508 14:53:23.181019 22 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0508 14:53:23.181186 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1416" for this suite. @ 05/08/25 14:53:23.184
• [2.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 05/08/25 14:53:23.193
  I0508 14:53:23.193205 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename secrets @ 05/08/25 14:53:23.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:53:23.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:53:23.222
  STEP: creating secret secrets-7816/secret-test-490d3544-7bed-4099-a2d2-cc9df6b1b872 @ 05/08/25 14:53:23.225
  STEP: Creating a pod to test consume secrets @ 05/08/25 14:53:23.233
  STEP: Saw pod success @ 05/08/25 14:53:27.258
  I0508 14:53:27.260478 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-configmaps-9efdfdca-2008-4eb6-a81b-12fc5b7806b5 container env-test: <nil>
  STEP: delete the pod @ 05/08/25 14:53:27.265
  I0508 14:53:27.304539 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7816" for this suite. @ 05/08/25 14:53:27.307
• [4.123 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 05/08/25 14:53:27.315
  I0508 14:53:27.315906 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename gc @ 05/08/25 14:53:27.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:53:27.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:53:27.352
  STEP: create the rc1 @ 05/08/25 14:53:27.407
  STEP: create the rc2 @ 05/08/25 14:53:27.422
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/08/25 14:53:33.569
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/08/25 14:53:41.151
  STEP: wait for the rc to be deleted @ 05/08/25 14:53:41.315
  I0508 14:53:46.461370 22 garbage_collector.go:770] 68 pods remaining
  I0508 14:53:46.461409 22 garbage_collector.go:777] 68 pods has nil DeletionTimestamp
  I0508 14:53:46.461419 22 garbage_collector.go:778] 
  STEP: Gathering metrics @ 05/08/25 14:53:51.376
  I0508 14:53:53.544414 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0508 14:53:53.544828 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2hkj6" in namespace "gc-3456"
  I0508 14:53:53.775400 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2sn7j" in namespace "gc-3456"
  I0508 14:53:54.058619 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-489d4" in namespace "gc-3456"
  I0508 14:53:54.382488 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4crkq" in namespace "gc-3456"
  I0508 14:53:54.617331 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4dqsz" in namespace "gc-3456"
  I0508 14:53:54.773368 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4dx4s" in namespace "gc-3456"
  I0508 14:53:54.916706 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4nhs9" in namespace "gc-3456"
  I0508 14:53:55.202533 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-55s7m" in namespace "gc-3456"
  I0508 14:53:55.390457 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5cv7p" in namespace "gc-3456"
  I0508 14:53:55.572593 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5qhmj" in namespace "gc-3456"
  I0508 14:53:55.736857 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5x7m7" in namespace "gc-3456"
  I0508 14:53:55.938569 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-67ksh" in namespace "gc-3456"
  I0508 14:53:56.152732 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6b7zq" in namespace "gc-3456"
  I0508 14:53:56.344210 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6fdcz" in namespace "gc-3456"
  I0508 14:53:56.528281 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6qft2" in namespace "gc-3456"
  I0508 14:53:56.722389 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7ldxr" in namespace "gc-3456"
  I0508 14:53:56.904981 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7vb4f" in namespace "gc-3456"
  I0508 14:53:57.113359 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-85whv" in namespace "gc-3456"
  I0508 14:53:57.325059 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-86427" in namespace "gc-3456"
  I0508 14:53:57.488813 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8b7hs" in namespace "gc-3456"
  I0508 14:53:57.672007 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8l4hg" in namespace "gc-3456"
  I0508 14:53:58.014487 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8qcw5" in namespace "gc-3456"
  I0508 14:53:58.262497 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8xf8v" in namespace "gc-3456"
  I0508 14:53:58.435199 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-95qv4" in namespace "gc-3456"
  I0508 14:53:58.610337 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-974gp" in namespace "gc-3456"
  I0508 14:53:59.362495 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9w67d" in namespace "gc-3456"
  I0508 14:53:59.702860 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b2qg6" in namespace "gc-3456"
  I0508 14:53:59.950974 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b4hhq" in namespace "gc-3456"
  I0508 14:54:00.303178 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b9w4h" in namespace "gc-3456"
  I0508 14:54:00.524323 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bctm8" in namespace "gc-3456"
  I0508 14:54:00.696728 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bljvq" in namespace "gc-3456"
  I0508 14:54:00.907107 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bwdsv" in namespace "gc-3456"
  I0508 14:54:01.150478 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cbhtg" in namespace "gc-3456"
  I0508 14:54:01.478299 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cdkqh" in namespace "gc-3456"
  I0508 14:54:01.742866 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cw97r" in namespace "gc-3456"
  I0508 14:54:01.983796 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d86pc" in namespace "gc-3456"
  I0508 14:54:02.260674 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dbtbh" in namespace "gc-3456"
  I0508 14:54:02.467765 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dc9lz" in namespace "gc-3456"
  I0508 14:54:03.058376 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dggxs" in namespace "gc-3456"
  I0508 14:54:03.178150 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dhqqf" in namespace "gc-3456"
  I0508 14:54:03.429671 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fbc6t" in namespace "gc-3456"
  I0508 14:54:03.749769 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fc6n5" in namespace "gc-3456"
  I0508 14:54:03.982964 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fhs44" in namespace "gc-3456"
  I0508 14:54:04.128222 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fmd96" in namespace "gc-3456"
  I0508 14:54:04.315325 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fwfvj" in namespace "gc-3456"
  I0508 14:54:04.467570 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gnqlw" in namespace "gc-3456"
  I0508 14:54:04.637815 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gr9tf" in namespace "gc-3456"
  I0508 14:54:04.862666 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gzfb7" in namespace "gc-3456"
  I0508 14:54:04.997274 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gzvlb" in namespace "gc-3456"
  I0508 14:54:05.187127 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h79xk" in namespace "gc-3456"
  I0508 14:54:05.436569 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3456" for this suite. @ 05/08/25 14:54:05.443
• [38.236 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/08/25 14:54:05.553
  I0508 14:54:05.553305 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename endpointslice @ 05/08/25 14:54:05.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:54:05.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:54:05.631
  STEP: getting /apis @ 05/08/25 14:54:05.637
  STEP: getting /apis/discovery.k8s.io @ 05/08/25 14:54:05.654
  STEP: getting /apis/discovery.k8s.iov1 @ 05/08/25 14:54:05.662
  STEP: creating @ 05/08/25 14:54:05.665
  STEP: getting @ 05/08/25 14:54:05.999
  STEP: listing @ 05/08/25 14:54:06.222
  STEP: watching @ 05/08/25 14:54:06.225
  I0508 14:54:06.225357 22 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 05/08/25 14:54:06.227
  STEP: cluster-wide watching @ 05/08/25 14:54:06.24
  I0508 14:54:06.240720 22 endpointslice.go:459] starting watch
  STEP: patching @ 05/08/25 14:54:06.243
  STEP: updating @ 05/08/25 14:54:06.64
  I0508 14:54:06.664993 22 endpointslice.go:482] waiting for watch events with expected annotations
  I0508 14:54:06.665167 22 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 05/08/25 14:54:06.665
  STEP: deleting a collection @ 05/08/25 14:54:06.732
  I0508 14:54:06.834684 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2382" for this suite. @ 05/08/25 14:54:06.839
• [1.316 seconds]
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/08/25 14:54:06.868
  I0508 14:54:06.868966 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename deployment @ 05/08/25 14:54:06.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:54:06.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:54:06.992
  I0508 14:54:06.999380 22 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0508 14:54:07.026999 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0508 14:54:12.072860 22 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/08/25 14:54:12.072
  I0508 14:54:16.297055 22 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0508 14:54:16.427086 22 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0508 14:54:16.514510 22 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0508 14:54:18.664453 22 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0508 14:54:18.689373 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 54, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 54, 16, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 14, 54, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 14, 54, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-6ff565599d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 14:54:20.696479 22 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0508 14:54:20.773489 22 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3996",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4adeb67-2222-4309-8c7e-524ae7ca807b",
      ResourceVersion: (string) (len=5) "32831",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312856,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312856,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312859,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312856,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312856,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312859,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312856,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0508 14:54:20.834559 22 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3996",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28f0972a-1115-4e10-96b9-8752bb143f5c",
      ResourceVersion: (string) (len=5) "32815",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312856,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "f4adeb67-2222-4309-8c7e-524ae7ca807b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312856,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 34 61 64 65 62  36 37 2d 32 32 32 32 2d  |\"f4adeb67-2222-|
              00000120  34 33 30 39 2d 38 63 37  65 2d 35 32 34 61 65 37  |4309-8c7e-524ae7|
              00000130  63 61 38 30 37 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ca807b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312859,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0508 14:54:20.835532 22 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0508 14:54:20.835863 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3996",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3dfb6cf2-d12f-4bbf-8cf4-6ffe77e9012d",
      ResourceVersion: (string) (len=5) "32829",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "f4adeb67-2222-4309-8c7e-524ae7ca807b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312859,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 66 34 61 64 65 62 36  |"uid\":\"f4adeb6|
              000000b0  37 2d 32 32 32 32 2d 34  33 30 39 2d 38 63 37 65  |7-2222-4309-8c7e|
              000000c0  2d 35 32 34 61 65 37 63  61 38 30 37 62 5c 22 7d  |-524ae7ca807b\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312859,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0508 14:54:20.997350 22 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-k2n5t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-k2n5t",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-3996",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa0e9693-50b2-4323-b223-c83c5603570f",
      ResourceVersion: (string) (len=5) "32813",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312856,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.168/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d49088c615e22f12043a1ce7184a4345dc7ea4990dafc0b5490493546d12fe96",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.168/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "28f0972a-1115-4e10-96b9-8752bb143f5c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312856,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  66 30 39 37 32 61 2d 31  |d\":\"28f0972a-1|
              00000090  31 31 35 2d 34 65 31 30  2d 39 36 62 39 2d 38 37  |115-4e10-96b9-87|
              000000a0  35 32 62 62 31 34 33 66  35 63 5c 22 7d 22 3a 7b  |52bb143f5c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312857,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 36  38 5c 22 7d 22 3a 7b 22  |.42.1.168\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-79tcl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-79tcl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312857,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882312856,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) (len=11) "10.42.1.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882312857,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882312858,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://78654c1ca66e9bbd785f7c1408126fa75f0723b845eb3ee70839382bae289690",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-79tcl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 14:54:21.001810 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3996" for this suite. @ 05/08/25 14:54:21.048
• [14.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 05/08/25 14:54:21.173
  I0508 14:54:21.173563 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 14:54:21.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:54:21.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:54:21.339
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/08/25 14:54:21.347
  STEP: Saw pod success @ 05/08/25 14:54:25.647
  I0508 14:54:25.649289 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-4b1b60cd-86e1-451f-bfcd-9e516dbb1ab1 container test-container: <nil>
  STEP: delete the pod @ 05/08/25 14:54:25.699
  I0508 14:54:25.872981 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6692" for this suite. @ 05/08/25 14:54:25.892
• [4.909 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 05/08/25 14:54:26.082
  I0508 14:54:26.082576 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 14:54:26.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:54:26.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:54:26.249
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 14:54:26.258
  STEP: Saw pod success @ 05/08/25 14:54:30.662
  I0508 14:54:30.664400 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-4853bd76-1910-4eb5-ac1d-c1f416568689 container client-container: <nil>
  STEP: delete the pod @ 05/08/25 14:54:30.711
  I0508 14:54:31.016546 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3619" for this suite. @ 05/08/25 14:54:31.02
• [5.136 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 05/08/25 14:54:31.219
  I0508 14:54:31.220064 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 14:54:31.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:54:31.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:54:31.416
  STEP: creating all guestbook components @ 05/08/25 14:54:31.419
  I0508 14:54:31.419471 22 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0508 14:54:31.420424 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5945 create -f -'
  I0508 14:54:31.771565 22 builder.go:146] stderr: ""
  I0508 14:54:31.771610 22 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0508 14:54:31.771655 22 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0508 14:54:31.771726 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5945 create -f -'
  I0508 14:54:31.977359 22 builder.go:146] stderr: ""
  I0508 14:54:31.977400 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0508 14:54:31.977439 22 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0508 14:54:31.977517 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5945 create -f -'
  I0508 14:54:32.336179 22 builder.go:146] stderr: ""
  I0508 14:54:32.336218 22 builder.go:147] stdout: "service/frontend created\n"
  I0508 14:54:32.336270 22 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0508 14:54:32.336403 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5945 create -f -'
  I0508 14:54:32.571645 22 builder.go:146] stderr: ""
  I0508 14:54:32.571681 22 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0508 14:54:32.571736 22 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0508 14:54:32.571857 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5945 create -f -'
  I0508 14:54:32.707039 22 builder.go:146] stderr: ""
  I0508 14:54:32.707089 22 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0508 14:54:32.707142 22 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0508 14:54:32.707302 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5945 create -f -'
  I0508 14:54:32.930372 22 builder.go:146] stderr: ""
  I0508 14:54:32.930424 22 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/08/25 14:54:32.93
  I0508 14:54:32.930459 22 kubectl.go:2275] Waiting for all frontend pods to be Running.
  I0508 14:54:47.984573 22 kubectl.go:2279] Waiting for frontend to serve content.
  I0508 14:54:48.047782 22 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0508 14:54:48.057602 22 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/08/25 14:54:48.062
  I0508 14:54:48.062326 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5945 delete --grace-period=0 --force -f -'
  I0508 14:54:48.372159 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0508 14:54:48.372201 22 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/08/25 14:54:48.372
  I0508 14:54:48.372297 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5945 delete --grace-period=0 --force -f -'
  I0508 14:54:48.937854 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0508 14:54:48.937906 22 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/08/25 14:54:48.937
  I0508 14:54:48.938008 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5945 delete --grace-period=0 --force -f -'
  I0508 14:54:49.458208 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0508 14:54:49.458249 22 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/08/25 14:54:49.458
  I0508 14:54:49.458640 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5945 delete --grace-period=0 --force -f -'
  I0508 14:54:49.646186 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0508 14:54:49.646227 22 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/08/25 14:54:49.646
  I0508 14:54:49.646337 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5945 delete --grace-period=0 --force -f -'
  I0508 14:54:49.904418 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0508 14:54:49.904456 22 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/08/25 14:54:49.904
  I0508 14:54:49.904619 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5945 delete --grace-period=0 --force -f -'
  I0508 14:54:50.126476 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0508 14:54:50.126522 22 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0508 14:54:50.126644 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5945" for this suite. @ 05/08/25 14:54:50.265
• [19.082 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 05/08/25 14:54:50.302
  I0508 14:54:50.302651 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename security-context-test @ 05/08/25 14:54:50.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:54:50.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:54:50.509
  I0508 14:54:55.010117 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5037" for this suite. @ 05/08/25 14:54:55.013
• [4.746 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 05/08/25 14:54:55.048
  I0508 14:54:55.048796 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 14:54:55.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:54:55.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:54:55.225
  STEP: Creating a suspended job @ 05/08/25 14:54:55.285
  STEP: Patching the Job @ 05/08/25 14:54:55.349
  STEP: Watching for Job to be patched @ 05/08/25 14:54:55.574
  I0508 14:54:55.576090 22 job.go:1369] Event ADDED observed for Job e2e-t9j8m in namespace job-9864 with labels: map[e2e-job-label:e2e-t9j8m] and annotations: map[]
  I0508 14:54:55.576131 22 job.go:1369] Event MODIFIED observed for Job e2e-t9j8m in namespace job-9864 with labels: map[e2e-job-label:e2e-t9j8m] and annotations: map[]
  I0508 14:54:55.576177 22 job.go:1372] Event MODIFIED found for Job e2e-t9j8m in namespace job-9864 with labels: map[e2e-job-label:e2e-t9j8m e2e-t9j8m:patched] and annotations: map[]
  STEP: Updating the job @ 05/08/25 14:54:55.576
  STEP: Watching for Job to be updated @ 05/08/25 14:54:55.693
  I0508 14:54:55.761923 22 job.go:1372] Event MODIFIED found for Job e2e-t9j8m in namespace job-9864 with labels: map[e2e-job-label:e2e-t9j8m e2e-t9j8m:patched] and annotations: map[updated:true]
  I0508 14:54:55.761979 22 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/08/25 14:54:55.762
  I0508 14:54:55.766036 22 job.go:1247] Job: e2e-t9j8m as labels: map[e2e-job-label:e2e-t9j8m e2e-t9j8m:patched]
  STEP: Waiting for job to complete @ 05/08/25 14:54:55.766
  STEP: Delete a job collection with a labelselector @ 05/08/25 14:55:08.455
  STEP: Watching for Job to be deleted @ 05/08/25 14:55:08.631
  I0508 14:55:08.635802 22 job.go:1369] Event MODIFIED observed for Job e2e-t9j8m in namespace job-9864 with labels: map[e2e-job-label:e2e-t9j8m e2e-t9j8m:patched] and annotations: map[updated:true]
  I0508 14:55:08.636154 22 job.go:1369] Event MODIFIED observed for Job e2e-t9j8m in namespace job-9864 with labels: map[e2e-job-label:e2e-t9j8m e2e-t9j8m:patched] and annotations: map[updated:true]
  I0508 14:55:08.636230 22 job.go:1369] Event MODIFIED observed for Job e2e-t9j8m in namespace job-9864 with labels: map[e2e-job-label:e2e-t9j8m e2e-t9j8m:patched] and annotations: map[updated:true]
  I0508 14:55:08.636470 22 job.go:1369] Event MODIFIED observed for Job e2e-t9j8m in namespace job-9864 with labels: map[e2e-job-label:e2e-t9j8m e2e-t9j8m:patched] and annotations: map[updated:true]
  I0508 14:55:08.636647 22 job.go:1369] Event MODIFIED observed for Job e2e-t9j8m in namespace job-9864 with labels: map[e2e-job-label:e2e-t9j8m e2e-t9j8m:patched] and annotations: map[updated:true]
  I0508 14:55:08.636676 22 job.go:1372] Event DELETED found for Job e2e-t9j8m in namespace job-9864 with labels: map[e2e-job-label:e2e-t9j8m e2e-t9j8m:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/08/25 14:55:08.636
  I0508 14:55:08.639371 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9864" for this suite. @ 05/08/25 14:55:08.647
• [13.769 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/08/25 14:55:08.818
  I0508 14:55:08.818224 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 14:55:08.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:55:09.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:55:09.075
  STEP: Creating projection with secret that has name projected-secret-test-862a93d2-c366-4100-818b-06f20916dc24 @ 05/08/25 14:55:09.085
  STEP: Creating a pod to test consume secrets @ 05/08/25 14:55:09.223
  STEP: Saw pod success @ 05/08/25 14:55:13.288
  I0508 14:55:13.290308 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-projected-secrets-a37d05fa-da43-4682-aa91-4914d05877e1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 14:55:13.295
  I0508 14:55:13.342313 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5771" for this suite. @ 05/08/25 14:55:13.349
• [4.541 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 05/08/25 14:55:13.36
  I0508 14:55:13.360108 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename dns @ 05/08/25 14:55:13.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:55:13.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:55:13.398
  STEP: Creating a test externalName service @ 05/08/25 14:55:13.401
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6320.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-6320.svc.cluster.local; sleep 1; done
   @ 05/08/25 14:55:13.409
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6320.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6320.svc.cluster.local; sleep 1; done
   @ 05/08/25 14:55:13.41
  STEP: creating a pod to probe DNS @ 05/08/25 14:55:13.41
  STEP: submitting the pod to kubernetes @ 05/08/25 14:55:13.41
  STEP: retrieving the pod @ 05/08/25 14:55:23.471
  STEP: looking for the results for each expected name from probers @ 05/08/25 14:55:23.473
  I0508 14:55:23.482452 22 dns_common.go:571] DNS probes using dns-test-ffc300cf-8309-4cc6-b072-363493db641a succeeded

  STEP: changing the externalName to bar.example.com @ 05/08/25 14:55:23.482
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6320.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-6320.svc.cluster.local; sleep 1; done
   @ 05/08/25 14:55:23.497
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6320.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6320.svc.cluster.local; sleep 1; done
   @ 05/08/25 14:55:23.498
  STEP: creating a second pod to probe DNS @ 05/08/25 14:55:23.498
  STEP: submitting the pod to kubernetes @ 05/08/25 14:55:23.498
  STEP: retrieving the pod @ 05/08/25 14:55:27.518
  STEP: looking for the results for each expected name from probers @ 05/08/25 14:55:27.521
  I0508 14:55:27.528048 22 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-6320.svc.cluster.local from pod  dns-6320/dns-test-710d98b4-5920-4d4d-bd81-8c4e244fd628 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0508 14:55:27.531075 22 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-6320.svc.cluster.local from pod  dns-6320/dns-test-710d98b4-5920-4d4d-bd81-8c4e244fd628 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0508 14:55:27.531305 22 dns_common.go:506] Lookups using dns-6320/dns-test-710d98b4-5920-4d4d-bd81-8c4e244fd628 failed for: [agnhost_udp@dns-test-service-3.dns-6320.svc.cluster.local jessie_udp@dns-test-service-3.dns-6320.svc.cluster.local]

  I0508 14:55:27.550320 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 14:55:27.555077 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 14:55:27.560551 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0508 14:55:32.524916 22 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-6320.svc.cluster.local from pod  dns-6320/dns-test-710d98b4-5920-4d4d-bd81-8c4e244fd628 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0508 14:55:32.527798 22 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-6320.svc.cluster.local from pod  dns-6320/dns-test-710d98b4-5920-4d4d-bd81-8c4e244fd628 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0508 14:55:32.527988 22 dns_common.go:506] Lookups using dns-6320/dns-test-710d98b4-5920-4d4d-bd81-8c4e244fd628 failed for: [agnhost_udp@dns-test-service-3.dns-6320.svc.cluster.local jessie_udp@dns-test-service-3.dns-6320.svc.cluster.local]

  I0508 14:55:32.532937 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 14:55:32.539092 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 14:55:32.545489 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0508 14:55:37.528740 22 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-6320.svc.cluster.local from pod  dns-6320/dns-test-710d98b4-5920-4d4d-bd81-8c4e244fd628 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0508 14:55:37.533987 22 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-6320.svc.cluster.local from pod  dns-6320/dns-test-710d98b4-5920-4d4d-bd81-8c4e244fd628 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0508 14:55:37.534229 22 dns_common.go:506] Lookups using dns-6320/dns-test-710d98b4-5920-4d4d-bd81-8c4e244fd628 failed for: [agnhost_udp@dns-test-service-3.dns-6320.svc.cluster.local jessie_udp@dns-test-service-3.dns-6320.svc.cluster.local]

  I0508 14:55:37.540715 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 14:55:37.546310 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 14:55:37.554074 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0508 14:55:42.526672 22 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-6320.svc.cluster.local from pod  dns-6320/dns-test-710d98b4-5920-4d4d-bd81-8c4e244fd628 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0508 14:55:42.529627 22 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-6320.svc.cluster.local from pod  dns-6320/dns-test-710d98b4-5920-4d4d-bd81-8c4e244fd628 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0508 14:55:42.529890 22 dns_common.go:506] Lookups using dns-6320/dns-test-710d98b4-5920-4d4d-bd81-8c4e244fd628 failed for: [agnhost_udp@dns-test-service-3.dns-6320.svc.cluster.local jessie_udp@dns-test-service-3.dns-6320.svc.cluster.local]

  I0508 14:55:42.534369 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 14:55:42.538929 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 14:55:42.543131 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0508 14:55:47.529198 22 dns_common.go:571] DNS probes using dns-test-710d98b4-5920-4d4d-bd81-8c4e244fd628 succeeded

  STEP: changing the service to type=ClusterIP @ 05/08/25 14:55:47.529
  I0508 14:55:47.593196      22 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6320.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-6320.svc.cluster.local; sleep 1; done
   @ 05/08/25 14:55:47.593
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6320.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6320.svc.cluster.local; sleep 1; done
   @ 05/08/25 14:55:47.593
  STEP: creating a third pod to probe DNS @ 05/08/25 14:55:47.593
  STEP: submitting the pod to kubernetes @ 05/08/25 14:55:47.609
  STEP: retrieving the pod @ 05/08/25 14:55:55.661
  STEP: looking for the results for each expected name from probers @ 05/08/25 14:55:55.664
  I0508 14:55:55.673191 22 dns_common.go:571] DNS probes using dns-test-251a3e8b-a1d1-4165-9eaa-e652c67b45ae succeeded

  STEP: deleting the pod @ 05/08/25 14:55:55.673
  STEP: deleting the pod @ 05/08/25 14:55:55.703
  STEP: deleting the pod @ 05/08/25 14:55:55.749
  STEP: deleting the test externalName service @ 05/08/25 14:55:55.78
  I0508 14:55:55.835925 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6320" for this suite. @ 05/08/25 14:55:55.841
• [42.488 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/08/25 14:55:55.86
  I0508 14:55:55.862764 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename watch @ 05/08/25 14:55:55.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:55:55.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:55:55.896
  STEP: creating a watch on configmaps with label A @ 05/08/25 14:55:55.899
  STEP: creating a watch on configmaps with label B @ 05/08/25 14:55:55.901
  STEP: creating a watch on configmaps with label A or B @ 05/08/25 14:55:55.902
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/08/25 14:55:55.903
  I0508 14:55:55.916697 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7827  2d674379-100a-42db-8d0b-e99326001d43 33898 0 2025-05-08 14:55:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-08 14:55:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 14:55:55.916863 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7827  2d674379-100a-42db-8d0b-e99326001d43 33898 0 2025-05-08 14:55:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-08 14:55:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/08/25 14:55:55.916
  I0508 14:55:55.930133 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7827  2d674379-100a-42db-8d0b-e99326001d43 33899 0 2025-05-08 14:55:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-08 14:55:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 14:55:55.930257 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7827  2d674379-100a-42db-8d0b-e99326001d43 33899 0 2025-05-08 14:55:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-08 14:55:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/08/25 14:55:55.93
  I0508 14:55:55.941137 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7827  2d674379-100a-42db-8d0b-e99326001d43 33900 0 2025-05-08 14:55:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-08 14:55:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 14:55:55.941414 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7827  2d674379-100a-42db-8d0b-e99326001d43 33900 0 2025-05-08 14:55:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-08 14:55:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/08/25 14:55:55.941
  I0508 14:55:55.947120 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7827  2d674379-100a-42db-8d0b-e99326001d43 33901 0 2025-05-08 14:55:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-08 14:55:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 14:55:55.947352 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7827  2d674379-100a-42db-8d0b-e99326001d43 33901 0 2025-05-08 14:55:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-08 14:55:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/08/25 14:55:55.947
  I0508 14:55:55.957800 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7827  dadda786-2f15-4ddc-a582-a659cd92229a 33902 0 2025-05-08 14:55:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-08 14:55:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 14:55:55.958114 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7827  dadda786-2f15-4ddc-a582-a659cd92229a 33902 0 2025-05-08 14:55:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-08 14:55:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/08/25 14:56:05.958
  I0508 14:56:05.967020 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7827  dadda786-2f15-4ddc-a582-a659cd92229a 33974 0 2025-05-08 14:55:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-08 14:55:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 14:56:05.967073 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7827  dadda786-2f15-4ddc-a582-a659cd92229a 33974 0 2025-05-08 14:55:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-08 14:55:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 14:56:15.967410 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7827" for this suite. @ 05/08/25 14:56:15.971
• [20.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/08/25 14:56:15.98
  I0508 14:56:15.980879 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename certificates @ 05/08/25 14:56:15.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:56:16.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:56:16.009
  STEP: getting /apis @ 05/08/25 14:56:16.786
  STEP: getting /apis/certificates.k8s.io @ 05/08/25 14:56:16.79
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/08/25 14:56:16.791
  STEP: creating @ 05/08/25 14:56:16.792
  STEP: getting @ 05/08/25 14:56:16.865
  STEP: listing @ 05/08/25 14:56:16.867
  STEP: watching @ 05/08/25 14:56:16.868
  I0508 14:56:16.868980 22 certificates.go:316] starting watch
  STEP: patching @ 05/08/25 14:56:16.87
  STEP: updating @ 05/08/25 14:56:16.896
  I0508 14:56:16.904945 22 certificates.go:332] waiting for watch events with expected annotations
  I0508 14:56:16.905115 22 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 05/08/25 14:56:16.905
  STEP: patching /approval @ 05/08/25 14:56:16.907
  STEP: updating /approval @ 05/08/25 14:56:16.921
  STEP: getting /status @ 05/08/25 14:56:16.935
  STEP: patching /status @ 05/08/25 14:56:16.938
  STEP: updating /status @ 05/08/25 14:56:16.953
  STEP: deleting @ 05/08/25 14:56:16.977
  STEP: deleting a collection @ 05/08/25 14:56:16.988
  I0508 14:56:17.012870 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2033" for this suite. @ 05/08/25 14:56:17.015
• [1.042 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 05/08/25 14:56:17.023
  I0508 14:56:17.023401 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 14:56:17.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:56:17.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:56:17.056
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/08/25 14:56:17.059
  STEP: Saw pod success @ 05/08/25 14:56:21.078
  I0508 14:56:21.081277 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-be6d249f-d57b-4fe0-91b3-4b4598f87994 container test-container: <nil>
  STEP: delete the pod @ 05/08/25 14:56:21.086
  I0508 14:56:21.110981 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4331" for this suite. @ 05/08/25 14:56:21.113
• [4.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 05/08/25 14:56:21.121
  I0508 14:56:21.121960 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename crd-selectable-fields @ 05/08/25 14:56:21.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:56:21.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:56:21.178
  STEP: Setting up server cert @ 05/08/25 14:56:21.181
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/08/25 14:56:21.449
  STEP: Deploying the custom resource conversion webhook pod @ 05/08/25 14:56:21.458
  STEP: Wait for the deployment to be ready @ 05/08/25 14:56:21.487
  I0508 14:56:21.512996 22 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/08/25 14:56:23.52
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 14:56:23.548
  I0508 14:56:24.549721 22 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 05/08/25 14:56:24.553
  I0508 14:56:24.553218 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Creating a custom resource conversion webhook @ 05/08/25 14:56:25.076
  STEP: Watching with field selectors @ 05/08/25 14:56:27.122
  STEP: Registering informers with field selectors @ 05/08/25 14:56:27.127
  STEP: Creating custom resources @ 05/08/25 14:56:27.128
  STEP: Listing v2 custom resources with field selector host=host1 @ 05/08/25 14:56:27.16
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 05/08/25 14:56:27.162
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 05/08/25 14:56:27.164
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 05/08/25 14:56:27.166
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 05/08/25 14:56:27.168
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 05/08/25 14:56:27.173
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 05/08/25 14:56:27.173
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 05/08/25 14:56:27.174
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 05/08/25 14:56:27.174
  STEP: Deleting one custom resources to ensure that deletions are observed @ 05/08/25 14:56:27.174
  STEP: Updating one custom resources to ensure that deletions are observed @ 05/08/25 14:56:27.203
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 05/08/25 14:56:27.218
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 05/08/25 14:56:27.221
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 05/08/25 14:56:27.222
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 05/08/25 14:56:27.227
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 05/08/25 14:56:27.228
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 05/08/25 14:56:27.228
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 05/08/25 14:56:27.228
  I0508 14:56:27.843689 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-1343" for this suite. @ 05/08/25 14:56:27.847
• [6.749 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 05/08/25 14:56:27.871
  I0508 14:56:27.871061 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 14:56:27.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:56:27.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:56:27.904
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 14:56:27.907
  STEP: Saw pod success @ 05/08/25 14:56:31.924
  I0508 14:56:31.926985 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-f482dff0-38a5-46db-a423-0dd71bc9bd0b container client-container: <nil>
  STEP: delete the pod @ 05/08/25 14:56:31.932
  I0508 14:56:31.955499 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6826" for this suite. @ 05/08/25 14:56:31.958
• [4.095 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/08/25 14:56:31.967
  I0508 14:56:31.967048 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename discovery @ 05/08/25 14:56:31.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:56:31.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:56:31.998
  STEP: Setting up server cert @ 05/08/25 14:56:32.004
  STEP: Requesting APIResourceList from "/api/v1" @ 05/08/25 14:56:32.747
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/08/25 14:56:32.749
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/08/25 14:56:32.751
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/08/25 14:56:32.752
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/08/25 14:56:32.753
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/08/25 14:56:32.755
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/08/25 14:56:32.756
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/08/25 14:56:32.757
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/08/25 14:56:32.758
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/08/25 14:56:32.759
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/08/25 14:56:32.76
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/08/25 14:56:32.761
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/08/25 14:56:32.762
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/08/25 14:56:32.763
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/08/25 14:56:32.764
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/08/25 14:56:32.766
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/08/25 14:56:32.768
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/08/25 14:56:32.769
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/08/25 14:56:32.77
  I0508 14:56:32.771103 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9729" for this suite. @ 05/08/25 14:56:32.773
• [0.821 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/08/25 14:56:32.788
  I0508 14:56:32.788443 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename sysctl @ 05/08/25 14:56:32.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:56:32.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:56:32.816
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/08/25 14:56:32.818
  I0508 14:56:32.822936 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-815" for this suite. @ 05/08/25 14:56:32.874
• [0.096 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 05/08/25 14:56:32.884
  I0508 14:56:32.884418 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 14:56:32.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:56:32.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:56:32.911
  STEP: Creating a pod to test downward api env vars @ 05/08/25 14:56:32.924
  STEP: Saw pod success @ 05/08/25 14:56:36.953
  I0508 14:56:36.955195 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downward-api-4d3c677e-51b8-4a95-a461-c6c8b51451e1 container dapi-container: <nil>
  STEP: delete the pod @ 05/08/25 14:56:36.96
  I0508 14:56:36.989212 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8510" for this suite. @ 05/08/25 14:56:36.992
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 05/08/25 14:56:37.012
  I0508 14:56:37.012055 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 14:56:37.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:56:37.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:56:37.036
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 14:56:37.039
  STEP: Saw pod success @ 05/08/25 14:56:41.079
  I0508 14:56:41.082044 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-a8c21166-b514-415c-896f-4ccc89a8ea3a container client-container: <nil>
  STEP: delete the pod @ 05/08/25 14:56:41.086
  I0508 14:56:41.121675 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-312" for this suite. @ 05/08/25 14:56:41.124
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 05/08/25 14:56:41.134
  I0508 14:56:41.134484 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 14:56:41.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:56:41.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:56:41.168
  STEP: validating cluster-info @ 05/08/25 14:56:41.17
  I0508 14:56:41.171013 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9650 cluster-info'
  I0508 14:56:41.266934 22 builder.go:146] stderr: ""
  I0508 14:56:41.266979 22 builder.go:147] stdout: "Kubernetes control plane is running at https://10.43.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0508 14:56:41.267187 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9650" for this suite. @ 05/08/25 14:56:41.269
• [0.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:215
  STEP: Creating a kubernetes client @ 05/08/25 14:56:41.278
  I0508 14:56:41.278703 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename sched-preemption @ 05/08/25 14:56:41.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:56:41.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:56:41.31
  I0508 14:56:41.343093 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0508 14:57:41.348184 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/08/25 14:57:41.35
  STEP: Adding a custom resource @ 05/08/25 14:57:41.35
  I0508 14:57:41.396454 22 preemption.go:256] Created pod: pod0-0-sched-preemption-low-priority
  I0508 14:57:41.405452 22 preemption.go:256] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 05/08/25 14:57:41.405
  I0508 14:57:41.442949 22 preemption.go:256] Created pod: pod1-0-sched-preemption-medium-priority
  I0508 14:57:41.470518 22 preemption.go:256] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/08/25 14:57:41.47
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/08/25 14:57:43.5
  STEP: Removing a custom resource @ 05/08/25 14:57:47.656
  STEP: Removing a custom resource @ 05/08/25 14:57:47.679
  I0508 14:57:47.704080 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4271" for this suite. @ 05/08/25 14:57:47.707
• [66.443 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 05/08/25 14:57:47.722
  I0508 14:57:47.722447 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename resourcequota @ 05/08/25 14:57:47.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:57:47.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:57:47.749
  STEP: Counting existing ResourceQuota @ 05/08/25 14:57:47.752
  STEP: Creating a ResourceQuota @ 05/08/25 14:57:52.804
  STEP: Ensuring resource quota status is calculated @ 05/08/25 14:57:52.825
  STEP: Creating a Pod that fits quota @ 05/08/25 14:57:54.828
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/08/25 14:57:54.873
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/08/25 14:57:56.888
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/08/25 14:57:56.891
  STEP: Ensuring a pod cannot update its resource requirements @ 05/08/25 14:57:56.894
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/08/25 14:57:56.897
  STEP: Deleting the pod @ 05/08/25 14:57:58.9
  STEP: Ensuring resource quota status released the pod usage @ 05/08/25 14:57:58.936
  I0508 14:58:00.939188 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4440" for this suite. @ 05/08/25 14:58:00.941
• [13.244 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 05/08/25 14:58:00.966
  I0508 14:58:00.966427 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename var-expansion @ 05/08/25 14:58:00.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:58:00.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:58:01
  STEP: Creating a pod to test substitution in volume subpath @ 05/08/25 14:58:01.004
  STEP: Saw pod success @ 05/08/25 14:58:05.024
  I0508 14:58:05.027084 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod var-expansion-dacbeecc-a16e-4954-b814-0f1d4a1efa34 container dapi-container: <nil>
  STEP: delete the pod @ 05/08/25 14:58:05.032
  I0508 14:58:05.070737 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6451" for this suite. @ 05/08/25 14:58:05.073
• [4.115 seconds]
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/08/25 14:58:05.081
  I0508 14:58:05.081927 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 14:58:05.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:58:05.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:58:05.102
  STEP: Creating secret with name projected-secret-test-79ff5b8e-206d-4c23-895c-50642e901fc6 @ 05/08/25 14:58:05.109
  STEP: Creating a pod to test consume secrets @ 05/08/25 14:58:05.117
  STEP: Saw pod success @ 05/08/25 14:58:09.137
  I0508 14:58:09.139028 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-projected-secrets-9c17e19a-72e2-4fea-8e37-b905d320e822 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 14:58:09.143
  I0508 14:58:09.172802 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7331" for this suite. @ 05/08/25 14:58:09.176
• [4.112 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 05/08/25 14:58:09.194
  I0508 14:58:09.194136 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename secrets @ 05/08/25 14:58:09.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:58:09.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:58:09.227
  STEP: Creating projection with secret that has name secret-emptykey-test-42ac549b-68b8-437f-952c-a7a67da13ef8 @ 05/08/25 14:58:09.229
  I0508 14:58:09.231571 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4234" for this suite. @ 05/08/25 14:58:09.276
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/08/25 14:58:09.286
  I0508 14:58:09.286067 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 14:58:09.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:58:09.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:58:09.316
  STEP: Creating a pod to test downward api env vars @ 05/08/25 14:58:09.324
  STEP: Saw pod success @ 05/08/25 14:58:13.358
  I0508 14:58:13.360715 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downward-api-7702d1e4-cc88-42d9-bc51-16545c88543d container dapi-container: <nil>
  STEP: delete the pod @ 05/08/25 14:58:13.368
  I0508 14:58:13.398840 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3073" for this suite. @ 05/08/25 14:58:13.401
• [4.124 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 05/08/25 14:58:13.41
  I0508 14:58:13.410128 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 14:58:13.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:58:13.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:58:13.437
  STEP: Creating a pod to test downward api env vars @ 05/08/25 14:58:13.44
  STEP: Saw pod success @ 05/08/25 14:58:17.463
  I0508 14:58:17.465167 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downward-api-a68333d9-0c4d-4302-932e-06fa3386b248 container dapi-container: <nil>
  STEP: delete the pod @ 05/08/25 14:58:17.471
  I0508 14:58:17.507632 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1316" for this suite. @ 05/08/25 14:58:17.51
• [4.108 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 05/08/25 14:58:17.518
  I0508 14:58:17.518893 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 14:58:17.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:58:17.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:58:17.541
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-7263 @ 05/08/25 14:58:17.544
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/08/25 14:58:17.599
  STEP: creating service externalsvc in namespace services-7263 @ 05/08/25 14:58:17.6
  I0508 14:58:17.669659 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the NodePort service to type=ExternalName @ 05/08/25 14:58:19.678
  I0508 14:58:19.726336 22 resource.go:361] Creating new exec pod
  I0508 14:58:21.759399 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-7263 exec execpodz8zbs -- /bin/sh -x -c nslookup nodeport-service.services-7263.svc.cluster.local'
  I0508 14:58:21.946455 22 builder.go:146] stderr: "+ nslookup nodeport-service.services-7263.svc.cluster.local\n"
  I0508 14:58:21.946498 22 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-7263.svc.cluster.local\tcanonical name = externalsvc.services-7263.svc.cluster.local.\nName:\texternalsvc.services-7263.svc.cluster.local\nAddress: 10.43.214.254\n\n"
  I0508 14:58:22.068337 22 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0508 14:58:22.092593 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7263" for this suite. @ 05/08/25 14:58:22.107
• [4.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 05/08/25 14:58:22.126
  I0508 14:58:22.126263 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename field-validation @ 05/08/25 14:58:22.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:58:22.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:58:22.147
  I0508 14:58:22.150676 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  I0508 14:58:24.693061      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0508 14:58:24.693088      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0508 14:58:24.693097      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0508 14:58:24.693105      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0508 14:58:24.693113      22 warnings.go:110] "Warning: unknown field \"gamma\""
  I0508 14:58:25.251385 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3927" for this suite. @ 05/08/25 14:58:25.253
• [3.135 seconds]
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/08/25 14:58:25.261
  I0508 14:58:25.261772 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename events @ 05/08/25 14:58:25.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:58:25.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:58:25.3
  STEP: Create set of events @ 05/08/25 14:58:25.303
  STEP: get a list of Events with a label in the current namespace @ 05/08/25 14:58:25.328
  STEP: delete a list of events @ 05/08/25 14:58:25.33
  I0508 14:58:25.330119 22 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/08/25 14:58:25.365
  I0508 14:58:25.368049 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6734" for this suite. @ 05/08/25 14:58:25.371
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 05/08/25 14:58:25.385
  I0508 14:58:25.385277 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename gc @ 05/08/25 14:58:25.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:58:25.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:58:25.412
  STEP: create the deployment @ 05/08/25 14:58:25.415
  I0508 14:58:25.429252      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/08/25 14:58:25.429
  STEP: delete the deployment @ 05/08/25 14:58:25.437
  STEP: wait for all rs to be garbage collected @ 05/08/25 14:58:25.49
  STEP: expected 0 rs, got 1 rs @ 05/08/25 14:58:25.549
  STEP: expected 0 pods, got 2 pods @ 05/08/25 14:58:25.575
  STEP: Gathering metrics @ 05/08/25 14:58:25.998
  I0508 14:58:26.094403 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0508 14:58:26.094778 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9229" for this suite. @ 05/08/25 14:58:26.097
• [0.721 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 05/08/25 14:58:26.106
  I0508 14:58:26.106307 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-probe @ 05/08/25 14:58:26.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 14:58:26.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 14:58:26.143
  STEP: Creating pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744 @ 05/08/25 14:58:26.147
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/08/25 14:58:28.171
  I0508 14:58:28.173292 22 container_probe.go:1748] Initial restart count of pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 is 0
  I0508 14:58:28.175148 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:30.178003 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:32.181472 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:34.184438 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:36.188011 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:38.191382 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:40.195920 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:42.198939 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:44.201314 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:46.204866 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:48.207406 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:50.210888 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:52.213587 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:54.216533 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:56.219885 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:58:58.223339 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:00.226455 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:02.231326 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:04.234414 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:06.240912 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:08.243850 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:10.247221 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:12.250238 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:14.253549 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:16.256346 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:18.259047 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:20.263019 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:22.267161 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:24.270735 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:26.273951 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:28.277342 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:30.280602 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:32.283899 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:34.286715 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:36.290067 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:38.292792 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:40.296069 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:42.299223 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:44.302543 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:46.305089 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:48.307548 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:50.310727 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:52.313591 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:54.316594 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:56.320216 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 14:59:58.323155 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:00.326728 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:02.341191 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:04.348460 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:06.351815 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:08.354489 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:10.358296 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:12.362202 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:14.365125 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:16.367895 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:18.371234 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:20.373688 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:22.377634 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:24.380311 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:26.383877 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:28.387647 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:30.390963 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:32.394644 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:34.397326 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:36.399998 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:38.403164 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:40.406411 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:42.412392 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:44.507676 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:46.512342 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:48.515186 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:50.518329 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:52.521387 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:54.524922 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:56.527430 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:00:58.530337 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:00.533734 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:02.537980 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:04.541170 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:06.544115 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:08.546811 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:10.550422 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:12.554949 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:14.559839 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:16.563096 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:18.567976 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:20.570723 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:22.576087 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:24.582088 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:26.584830 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:28.587421 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:30.590955 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:32.594285 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:34.598190 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:36.600783 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:38.604960 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:40.607789 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:42.611687 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:44.614771 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:46.618388 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:48.621238 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:50.624911 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:52.627856 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:54.630670 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:56.633324 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:01:58.636645 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:00.639322 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:02.642343 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:04.645857 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:06.648711 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:08.652114 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:10.655771 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:12.659127 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:14.661638 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:16.664193 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:18.667914 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:20.671050 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:22.674357 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:24.676824 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  I0508 15:02:26.680245 22 container_probe.go:1758] Get pod test-webserver-4ecec59e-40a8-48f7-9e0e-0b424fc17180 in namespace container-probe-3744
  STEP: deleting the pod @ 05/08/25 15:02:28.68
  I0508 15:02:28.713147 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3744" for this suite. @ 05/08/25 15:02:28.724
• [242.628 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 05/08/25 15:02:28.734
  I0508 15:02:28.734275 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:02:28.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:02:28.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:02:28.756
  STEP: Setting up server cert @ 05/08/25 15:02:28.8
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:02:29.635
  STEP: Deploying the webhook pod @ 05/08/25 15:02:29.643
  STEP: Wait for the deployment to be ready @ 05/08/25 15:02:29.669
  I0508 15:02:29.674411 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/08/25 15:02:31.681
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:02:31.71
  I0508 15:02:32.711087 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/08/25 15:02:32.714
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/08/25 15:02:32.737
  I0508 15:02:32.737910 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  I0508 15:02:32.867287 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-664" for this suite. @ 05/08/25 15:02:32.873
  STEP: Destroying namespace "webhook-markers-2950" for this suite. @ 05/08/25 15:02:32.887
• [4.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 05/08/25 15:02:32.907
  I0508 15:02:32.907853 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 15:02:32.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:02:32.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:02:32.94
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 15:02:32.942
  STEP: Saw pod success @ 05/08/25 15:02:36.966
  I0508 15:02:36.968344 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-8565143c-724a-4d29-ae27-5e5bea3b9863 container client-container: <nil>
  STEP: delete the pod @ 05/08/25 15:02:36.987
  I0508 15:02:37.026405 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3263" for this suite. @ 05/08/25 15:02:37.029
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 05/08/25 15:02:37.037
  I0508 15:02:37.037823 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:02:37.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:02:37.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:02:37.059
  STEP: Creating configMap with name projected-configmap-test-volume-b60ddc8c-cfcf-4863-9a0f-55b0c05f03e8 @ 05/08/25 15:02:37.061
  STEP: Creating a pod to test consume configMaps @ 05/08/25 15:02:37.075
  STEP: Saw pod success @ 05/08/25 15:02:41.098
  I0508 15:02:41.100475 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-projected-configmaps-1358d339-d147-4b93-819d-00f8609c1df6 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 15:02:41.117
  I0508 15:02:41.146252 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1940" for this suite. @ 05/08/25 15:02:41.148
• [4.121 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 05/08/25 15:02:41.159
  I0508 15:02:41.159034 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 15:02:41.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:02:41.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:02:41.191
  STEP: creating service in namespace services-6929 @ 05/08/25 15:02:41.195
  STEP: creating service affinity-clusterip-transition in namespace services-6929 @ 05/08/25 15:02:41.195
  I0508 15:02:41.260405 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0508 15:02:43.272041 22 resource.go:361] Creating new exec pod
  I0508 15:02:45.292765 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6929 exec execpod-affinityfxc7p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0508 15:02:45.470229 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.43.118.247) 80 port [tcp/http] succeeded!\n"
  I0508 15:02:45.470282 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:02:45.470366 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6929 exec execpod-affinityfxc7p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.118.247 80'
  I0508 15:02:45.657750 22 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.118.247 80\nConnection to 10.43.118.247 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0508 15:02:45.657805 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:02:45.678571 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6929 exec execpod-affinityfxc7p -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/ ; done'
  I0508 15:02:46.061696 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n"
  I0508 15:02:46.061750 22 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-5b2sd\naffinity-clusterip-transition-5cffb65545-s7zgs\naffinity-clusterip-transition-5cffb65545-s7zgs\naffinity-clusterip-transition-5cffb65545-5b2sd\naffinity-clusterip-transition-5cffb65545-s7zgs\naffinity-clusterip-transition-5cffb65545-5b2sd\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-s7zgs\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-5b2sd\naffinity-clusterip-transition-5cffb65545-s7zgs\naffinity-clusterip-transition-5cffb65545-s7zgs\naffinity-clusterip-transition-5cffb65545-s7zgs\naffinity-clusterip-transition-5cffb65545-5b2sd\naffinity-clusterip-transition-5cffb65545-s7zgs"
  I0508 15:02:46.061772 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.061786 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5b2sd
  I0508 15:02:46.061798 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-s7zgs
  I0508 15:02:46.061948 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-s7zgs
  I0508 15:02:46.061965 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5b2sd
  I0508 15:02:46.062070 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-s7zgs
  I0508 15:02:46.062088 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5b2sd
  I0508 15:02:46.062190 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.062205 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-s7zgs
  I0508 15:02:46.062217 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.062225 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5b2sd
  I0508 15:02:46.062242 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-s7zgs
  I0508 15:02:46.062254 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-s7zgs
  I0508 15:02:46.062263 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-s7zgs
  I0508 15:02:46.062270 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5b2sd
  I0508 15:02:46.062278 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-s7zgs
  I0508 15:02:46.073445 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6929 exec execpod-affinityfxc7p -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/ ; done'
  I0508 15:02:46.272443 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.118.247:80/\n"
  I0508 15:02:46.272487 22 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c\naffinity-clusterip-transition-5cffb65545-j8t7c"
  I0508 15:02:46.272517 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.272720 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.272797 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.272807 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.272817 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.272825 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.272899 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.272907 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.272915 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.272926 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.272942 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.272978 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.272987 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.273047 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.273059 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.273066 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-j8t7c
  I0508 15:02:46.273130 22 service.go:4352] Cleaning up the exec pod
  I0508 15:02:46.402763 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6929" for this suite. @ 05/08/25 15:02:46.42
• [5.297 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 05/08/25 15:02:46.456
  I0508 15:02:46.456402 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:02:46.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:02:46.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:02:46.491
  STEP: Setting up server cert @ 05/08/25 15:02:46.54
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:02:47.087
  STEP: Deploying the webhook pod @ 05/08/25 15:02:47.096
  STEP: Wait for the deployment to be ready @ 05/08/25 15:02:47.123
  I0508 15:02:47.132193 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/08/25 15:02:49.139
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:02:49.167
  I0508 15:02:50.167484 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/08/25 15:02:50.17
  I0508 15:02:50.300224 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1371" for this suite. @ 05/08/25 15:02:50.303
  STEP: Destroying namespace "webhook-markers-2089" for this suite. @ 05/08/25 15:02:50.321
• [3.887 seconds]
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/08/25 15:02:50.343
  I0508 15:02:50.343664 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename cronjob @ 05/08/25 15:02:50.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:02:50.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:02:50.374
  STEP: Creating a cronjob @ 05/08/25 15:02:50.377
  STEP: Ensuring more than one job is running at a time @ 05/08/25 15:02:50.386
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/08/25 15:04:00.39
  STEP: Removing cronjob @ 05/08/25 15:04:00.394
  I0508 15:04:00.403299 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8431" for this suite. @ 05/08/25 15:04:00.407
• [70.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 05/08/25 15:04:00.423
  I0508 15:04:00.423107 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename dns @ 05/08/25 15:04:00.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:04:00.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:04:00.469
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8197.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-8197.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 05/08/25 15:04:00.471
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8197.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8197.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/08/25 15:04:00.471
  STEP: creating a pod to probe /etc/hosts @ 05/08/25 15:04:00.471
  STEP: submitting the pod to kubernetes @ 05/08/25 15:04:00.471
  STEP: retrieving the pod @ 05/08/25 15:04:04.51
  STEP: looking for the results for each expected name from probers @ 05/08/25 15:04:04.512
  I0508 15:04:04.537245 22 dns_common.go:546] DNS probes using dns-8197/dns-test-79a9b276-3e58-4d9b-8318-fff4f9783f70 succeeded

  STEP: deleting the pod @ 05/08/25 15:04:04.537
  I0508 15:04:04.567475 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8197" for this suite. @ 05/08/25 15:04:04.573
• [4.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 05/08/25 15:04:04.585
  I0508 15:04:04.585138 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pv @ 05/08/25 15:04:04.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:04:04.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:04:04.619
  STEP: Creating initial PV and PVC @ 05/08/25 15:04:04.622
  I0508 15:04:04.622399 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2345" @ 05/08/25 15:04:04.655
  STEP: Listing PVCs in namespace "pv-2345" @ 05/08/25 15:04:04.675
  STEP: Patching the PV "pv-2345-48s8f" @ 05/08/25 15:04:04.677
  STEP: Patching the PVC "pvc-x2n6w" @ 05/08/25 15:04:04.691
  STEP: Getting PV "pv-2345-48s8f" @ 05/08/25 15:04:04.702
  STEP: Getting PVC "pvc-x2n6w" @ 05/08/25 15:04:04.706
  STEP: Deleting PVC "pvc-x2n6w" @ 05/08/25 15:04:04.712
  STEP: Confirm deletion of PVC "pvc-x2n6w" @ 05/08/25 15:04:04.731
  STEP: Deleting PV "pv-2345-48s8f" @ 05/08/25 15:04:06.739
  STEP: Confirm deletion of PV "pv-2345-48s8f" @ 05/08/25 15:04:06.754
  STEP: Recreating another PV & PVC @ 05/08/25 15:04:08.76
  I0508 15:04:08.760714 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-2345-qt5kq" @ 05/08/25 15:04:08.79
  STEP: Updating the PVC "pvc-hj84w" @ 05/08/25 15:04:08.828
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-hj84w=updated" @ 05/08/25 15:04:08.847
  STEP: Deleting PVC "pvc-hj84w" via DeleteCollection @ 05/08/25 15:04:08.85
  STEP: Confirm deletion of PVC "pvc-hj84w" @ 05/08/25 15:04:08.88
  STEP: Deleting PV "pv-2345-qt5kq" via DeleteCollection @ 05/08/25 15:04:10.906
  STEP: Confirm deletion of PV "pv-2345-qt5kq" @ 05/08/25 15:04:10.918
  I0508 15:04:12.925727 22 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0508 15:04:12.925762 22 pv.go:205] Deleting PersistentVolumeClaim "pvc-hj84w"
  I0508 15:04:12.927881 22 pv.go:193] Deleting PersistentVolume "pv-2345-qt5kq"
  I0508 15:04:12.930028 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2345" for this suite. @ 05/08/25 15:04:12.932
• [8.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 05/08/25 15:04:12.95
  I0508 15:04:12.950565 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename field-validation @ 05/08/25 15:04:12.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:04:12.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:04:12.983
  I0508 15:04:12.985678 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  I0508 15:04:16.069723 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7615" for this suite. @ 05/08/25 15:04:16.072
• [3.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 05/08/25 15:04:16.081
  I0508 15:04:16.081742 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename resourcequota @ 05/08/25 15:04:16.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:04:16.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:04:16.103
  STEP: Counting existing ResourceQuota @ 05/08/25 15:04:16.111
  STEP: Creating a ResourceQuota @ 05/08/25 15:04:21.113
  STEP: Ensuring resource quota status is calculated @ 05/08/25 15:04:21.127
  STEP: Creating a Service @ 05/08/25 15:04:23.129
  STEP: Creating a NodePort Service @ 05/08/25 15:04:23.184
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/08/25 15:04:23.233
  STEP: Ensuring resource quota status captures service creation @ 05/08/25 15:04:23.3
  STEP: Deleting Services @ 05/08/25 15:04:25.303
  STEP: Ensuring resource quota status released usage @ 05/08/25 15:04:25.414
  I0508 15:04:27.417838 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5096" for this suite. @ 05/08/25 15:04:27.42
• [11.347 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 05/08/25 15:04:27.428
  I0508 15:04:27.428974 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 15:04:27.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:04:27.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:04:27.459
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/08/25 15:04:27.467
  STEP: Saw pod success @ 05/08/25 15:04:31.487
  I0508 15:04:31.489470 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-b749a824-98fb-4767-9aed-545516ae27e3 container test-container: <nil>
  STEP: delete the pod @ 05/08/25 15:04:31.501
  I0508 15:04:31.530460 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8044" for this suite. @ 05/08/25 15:04:31.533
• [4.123 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 05/08/25 15:04:31.552
  I0508 15:04:31.552279 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/08/25 15:04:31.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:04:31.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:04:31.58
  I0508 15:04:31.582976 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/08/25 15:04:32.95
  I0508 15:04:32.950890 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-8729 --namespace=crd-publish-openapi-8729 create -f -'
  I0508 15:04:33.042381 22 builder.go:146] stderr: ""
  I0508 15:04:33.042434 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3432-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0508 15:04:33.042646 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-8729 --namespace=crd-publish-openapi-8729 delete e2e-test-crd-publish-openapi-3432-crds test-cr'
  I0508 15:04:33.127135 22 builder.go:146] stderr: ""
  I0508 15:04:33.127175 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3432-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0508 15:04:33.127218 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-8729 --namespace=crd-publish-openapi-8729 apply -f -'
  I0508 15:04:33.203953 22 builder.go:146] stderr: ""
  I0508 15:04:33.203994 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3432-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0508 15:04:33.204038 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-8729 --namespace=crd-publish-openapi-8729 delete e2e-test-crd-publish-openapi-3432-crds test-cr'
  I0508 15:04:33.272639 22 builder.go:146] stderr: ""
  I0508 15:04:33.272680 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3432-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/08/25 15:04:33.272
  I0508 15:04:33.272873 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-8729 explain e2e-test-crd-publish-openapi-3432-crds'
  I0508 15:04:33.334270 22 builder.go:146] stderr: ""
  I0508 15:04:33.334323 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-3432-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0508 15:04:34.815971 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8729" for this suite. @ 05/08/25 15:04:34.821
• [3.278 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/08/25 15:04:34.83
  I0508 15:04:34.830494 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pods @ 05/08/25 15:04:34.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:04:34.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:04:34.853
  STEP: creating the pod @ 05/08/25 15:04:34.855
  STEP: submitting the pod to kubernetes @ 05/08/25 15:04:34.855
  I0508 15:04:34.871891      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: verifying the pod is in kubernetes @ 05/08/25 15:04:36.89
  STEP: updating the pod @ 05/08/25 15:04:36.895
  I0508 15:04:37.415695 22 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-497b5f32-f3da-4c8c-9d68-3450629430e2"
  I0508 15:04:41.425193 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1731" for this suite. @ 05/08/25 15:04:41.428
• [6.606 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 05/08/25 15:04:41.437
  I0508 15:04:41.437317 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:04:41.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:04:41.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:04:41.463
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 15:04:41.465
  STEP: Saw pod success @ 05/08/25 15:04:45.491
  I0508 15:04:45.493482 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-436f7a58-764b-4c9b-b447-eb9fbe5651a1 container client-container: <nil>
  STEP: delete the pod @ 05/08/25 15:04:45.498
  I0508 15:04:45.539134 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2705" for this suite. @ 05/08/25 15:04:45.541
• [4.113 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 05/08/25 15:04:45.55
  I0508 15:04:45.550371 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 15:04:45.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:04:45.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:04:45.577
  STEP: Creating the pod @ 05/08/25 15:04:45.58
  I0508 15:04:48.138151 22 pod_client.go:173] Successfully updated pod "labelsupdateb992f1af-2965-4237-bac3-56138f36b093"
  I0508 15:04:52.156779 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5965" for this suite. @ 05/08/25 15:04:52.159
• [6.623 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 05/08/25 15:04:52.173
  I0508 15:04:52.173896 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename containers @ 05/08/25 15:04:52.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:04:52.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:04:52.204
  I0508 15:04:54.236654 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4272" for this suite. @ 05/08/25 15:04:54.239
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/08/25 15:04:54.254
  I0508 15:04:54.254361 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:04:54.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:04:54.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:04:54.282
  STEP: Creating projection with secret that has name projected-secret-test-map-ff8974c2-6850-47e0-970f-b53e9c8c80d8 @ 05/08/25 15:04:54.285
  STEP: Creating a pod to test consume secrets @ 05/08/25 15:04:54.293
  STEP: Saw pod success @ 05/08/25 15:04:58.316
  I0508 15:04:58.318234 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-projected-secrets-40bdc6da-50e7-4d8e-8933-36928f02f18d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 15:04:58.323
  I0508 15:04:58.356939 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4799" for this suite. @ 05/08/25 15:04:58.37
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 05/08/25 15:04:58.385
  I0508 15:04:58.385695 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename dns @ 05/08/25 15:04:58.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:04:58.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:04:58.423
  STEP: Creating a test headless service @ 05/08/25 15:04:58.425
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2440.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-2440.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 05/08/25 15:04:58.434
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2440.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2440.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/08/25 15:04:58.434
  STEP: creating a pod to probe DNS @ 05/08/25 15:04:58.434
  STEP: submitting the pod to kubernetes @ 05/08/25 15:04:58.434
  STEP: retrieving the pod @ 05/08/25 15:05:02.481
  STEP: looking for the results for each expected name from probers @ 05/08/25 15:05:02.483
  I0508 15:05:02.502843 22 dns_common.go:546] DNS probes using dns-2440/dns-test-f09b1977-0994-467c-b6df-8a4f19023cac succeeded

  STEP: deleting the pod @ 05/08/25 15:05:02.503
  STEP: deleting the test headless service @ 05/08/25 15:05:02.534
  I0508 15:05:02.562855 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2440" for this suite. @ 05/08/25 15:05:02.571
• [4.215 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 05/08/25 15:05:02.601
  I0508 15:05:02.601813 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:05:02.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:05:02.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:05:02.628
  STEP: Setting up server cert @ 05/08/25 15:05:02.67
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:05:03.738
  STEP: Deploying the webhook pod @ 05/08/25 15:05:03.747
  STEP: Wait for the deployment to be ready @ 05/08/25 15:05:03.773
  I0508 15:05:03.789463 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/08/25 15:05:05.795
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:05:05.829
  I0508 15:05:06.830063 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0508 15:05:06.833277 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9645-crds.webhook.example.com via the AdmissionRegistration API @ 05/08/25 15:05:07.355
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/08/25 15:05:07.388
  I0508 15:05:10.116123 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8016" for this suite. @ 05/08/25 15:05:10.118
  STEP: Destroying namespace "webhook-markers-2210" for this suite. @ 05/08/25 15:05:10.135
• [7.548 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 05/08/25 15:05:10.149
  I0508 15:05:10.149826 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename disruption @ 05/08/25 15:05:10.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:05:10.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:05:10.171
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/08/25 15:05:10.175
  STEP: Waiting for the pdb to be processed @ 05/08/25 15:05:10.182
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/08/25 15:05:10.21
  STEP: Waiting for all pods to be running @ 05/08/25 15:05:10.21
  I0508 15:05:10.216787 22 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 05/08/25 15:05:12.213
  STEP: Updating the pdb to allow a pod to be evicted @ 05/08/25 15:05:12.22
  STEP: Waiting for the pdb to be processed @ 05/08/25 15:05:12.23
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/08/25 15:05:12.238
  STEP: Waiting for all pods to be running @ 05/08/25 15:05:12.238
  STEP: Waiting for the pdb to observed all healthy pods @ 05/08/25 15:05:12.314
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/08/25 15:05:12.364
  STEP: Waiting for the pdb to be processed @ 05/08/25 15:05:12.423
  STEP: Waiting for all pods to be running @ 05/08/25 15:05:12.451
  I0508 15:05:12.453916 22 disruption.go:691] running pods: 2 < 3
  STEP: locating a running pod @ 05/08/25 15:05:14.455
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/08/25 15:05:14.461
  STEP: Waiting for the pdb to be deleted @ 05/08/25 15:05:14.468
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/08/25 15:05:14.471
  STEP: Waiting for all pods to be running @ 05/08/25 15:05:14.471
  I0508 15:05:14.595556 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8873" for this suite. @ 05/08/25 15:05:14.601
• [4.464 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 05/08/25 15:05:14.615
  I0508 15:05:14.615165 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 15:05:14.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:05:14.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:05:14.673
  STEP: creating service in namespace services-6086 @ 05/08/25 15:05:14.677
  STEP: creating service affinity-nodeport in namespace services-6086 @ 05/08/25 15:05:14.677
  I0508 15:05:14.746434 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0508 15:05:16.749625 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 15, 5, 14, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 5, 14, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 5, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 5, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-85dffb5fc7\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0508 15:05:18.761195 22 resource.go:361] Creating new exec pod
  I0508 15:05:20.779175 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6086 exec execpod-affinity8n695 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0508 15:05:20.912567 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.43.240.101) 80 port [tcp/http] succeeded!\n"
  I0508 15:05:20.912624 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:05:20.912855 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6086 exec execpod-affinity8n695 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.240.101 80'
  I0508 15:05:21.051460 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.240.101 80\nConnection to 10.43.240.101 80 port [tcp/http] succeeded!\n"
  I0508 15:05:21.051517 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:05:21.051587 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6086 exec execpod-affinity8n695 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.200 30425'
  I0508 15:05:21.184802 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.200 30425\nConnection to 172.31.20.200 30425 port [tcp/*] succeeded!\n"
  I0508 15:05:21.184847 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:05:21.185059 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6086 exec execpod-affinity8n695 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.27.218 30425'
  I0508 15:05:21.390509 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.27.218 30425\nConnection to 172.31.27.218 30425 port [tcp/*] succeeded!\n"
  I0508 15:05:21.390561 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:05:21.390639 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6086 exec execpod-affinity8n695 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/ ; done'
  I0508 15:05:21.623726 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:30425/\n"
  I0508 15:05:21.623781 22 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m\naffinity-nodeport-85dffb5fc7-s6x6m"
  I0508 15:05:21.623799 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.623812 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.623824 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.623836 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.623847 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.623857 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.623868 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.623879 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.623890 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.623900 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.623911 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.624119 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.624138 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.624149 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.624161 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.624173 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-s6x6m
  I0508 15:05:21.624407 22 service.go:4352] Cleaning up the exec pod
  I0508 15:05:21.780916 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6086" for this suite. @ 05/08/25 15:05:21.793
• [7.195 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 05/08/25 15:05:21.81
  I0508 15:05:21.810291 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename disruption @ 05/08/25 15:05:21.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:05:21.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:05:21.835
  STEP: Creating a kubernetes client @ 05/08/25 15:05:21.838
  I0508 15:05:21.838107 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename disruption-2 @ 05/08/25 15:05:21.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:05:21.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:05:21.872
  STEP: Waiting for the pdb to be processed @ 05/08/25 15:05:21.882
  STEP: Waiting for the pdb to be processed @ 05/08/25 15:05:21.912
  STEP: Waiting for the pdb to be processed @ 05/08/25 15:05:21.943
  STEP: listing a collection of PDBs across all namespaces @ 05/08/25 15:05:21.955
  STEP: listing a collection of PDBs in namespace disruption-4103 @ 05/08/25 15:05:21.963
  STEP: deleting a collection of PDBs @ 05/08/25 15:05:22.062
  STEP: Waiting for the PDB collection to be deleted @ 05/08/25 15:05:22.079
  I0508 15:05:22.081125 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-682" for this suite. @ 05/08/25 15:05:22.083
  I0508 15:05:22.092269 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4103" for this suite. @ 05/08/25 15:05:22.184
• [0.383 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 05/08/25 15:05:22.193
  I0508 15:05:22.193966 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 15:05:22.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:05:22.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:05:22.215
  STEP: Creating configMap with name cm-test-opt-del-e83224c4-5514-4e1f-8521-4d2d6509ac80 @ 05/08/25 15:05:22.285
  STEP: Creating configMap with name cm-test-opt-upd-87912c95-8217-4f0d-94fc-2ab56570b338 @ 05/08/25 15:05:22.299
  STEP: Creating the pod @ 05/08/25 15:05:22.307
  STEP: Deleting configmap cm-test-opt-del-e83224c4-5514-4e1f-8521-4d2d6509ac80 @ 05/08/25 15:05:24.346
  STEP: Updating configmap cm-test-opt-upd-87912c95-8217-4f0d-94fc-2ab56570b338 @ 05/08/25 15:05:24.354
  STEP: Creating configMap with name cm-test-opt-create-6bbdbb3c-7322-447c-96c2-222b806c3d67 @ 05/08/25 15:05:24.368
  STEP: waiting to observe update in volume @ 05/08/25 15:05:24.376
  I0508 15:05:26.394947 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9135" for this suite. @ 05/08/25 15:05:26.397
• [4.212 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 05/08/25 15:05:26.406
  I0508 15:05:26.406613 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:05:26.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:05:26.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:05:26.433
  STEP: Setting up server cert @ 05/08/25 15:05:26.47
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:05:26.817
  STEP: Deploying the webhook pod @ 05/08/25 15:05:26.823
  STEP: Wait for the deployment to be ready @ 05/08/25 15:05:26.858
  I0508 15:05:26.878349 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/08/25 15:05:28.884
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:05:28.924
  I0508 15:05:29.924368 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/08/25 15:05:29.926
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/08/25 15:05:29.953
  STEP: Creating a dummy validating-webhook-configuration object @ 05/08/25 15:05:29.976
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/08/25 15:05:29.992
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/08/25 15:05:30
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/08/25 15:05:30.017
  I0508 15:05:30.161072 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7349" for this suite. @ 05/08/25 15:05:30.167
  STEP: Destroying namespace "webhook-markers-3493" for this suite. @ 05/08/25 15:05:30.182
• [3.788 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/08/25 15:05:30.194
  I0508 15:05:30.194548 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pod-network-test @ 05/08/25 15:05:30.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:05:30.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:05:30.223
  STEP: Performing setup for networking test in namespace pod-network-test-4583 @ 05/08/25 15:05:30.225
  STEP: creating a selector @ 05/08/25 15:05:30.226
  STEP: Creating the service pods in kubernetes @ 05/08/25 15:05:30.226
  I0508 15:05:30.226267 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/08/25 15:05:44.405
  I0508 15:05:46.440874 22 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0508 15:05:46.440911 22 networking.go:42] Breadth first check of 10.42.0.110 on host 172.31.20.200...
  I0508 15:05:46.442645 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.224:9080/dial?request=hostname&protocol=udp&host=10.42.0.110&port=8081&tries=1'] Namespace:pod-network-test-4583 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 15:05:46.442678 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 15:05:46.442925 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4583/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.224%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.110%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0508 15:05:46.510534 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 15:05:46.510645 22 utils.go:355] Waiting for responses: map[]
  I0508 15:05:46.510721 22 utils.go:359] reached 10.42.0.110 after 0/1 tries
  I0508 15:05:46.510830 22 networking.go:42] Breadth first check of 10.42.1.223 on host 172.31.27.218...
  I0508 15:05:46.513305 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.224:9080/dial?request=hostname&protocol=udp&host=10.42.1.223&port=8081&tries=1'] Namespace:pod-network-test-4583 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 15:05:46.513332 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 15:05:46.513388 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4583/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.224%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.223%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0508 15:05:46.580593 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 15:05:46.580732 22 utils.go:355] Waiting for responses: map[]
  I0508 15:05:46.580811 22 utils.go:359] reached 10.42.1.223 after 0/1 tries
  I0508 15:05:46.580874 22 networking.go:53] Going to retry 0 out of 2 pods....
  I0508 15:05:46.581023 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4583" for this suite. @ 05/08/25 15:05:46.583
• [16.399 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 05/08/25 15:05:46.593
  I0508 15:05:46.593661 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-probe @ 05/08/25 15:05:46.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:05:46.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:05:46.615
  I0508 15:06:46.642184 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2448" for this suite. @ 05/08/25 15:06:46.645
• [60.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 05/08/25 15:06:46.655
  I0508 15:06:46.655320 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubelet-test @ 05/08/25 15:06:46.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:06:46.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:06:46.685
  I0508 15:06:50.716982 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1829" for this suite. @ 05/08/25 15:06:50.719
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 05/08/25 15:06:50.729
  I0508 15:06:50.729535 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 15:06:50.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:06:50.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:06:50.757
  STEP: creating Agnhost RC @ 05/08/25 15:06:50.759
  I0508 15:06:50.759646 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5893 create -f -'
  I0508 15:06:50.895433 22 builder.go:146] stderr: ""
  I0508 15:06:50.895482 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/08/25 15:06:50.895
  I0508 15:06:51.906319 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0508 15:06:51.906360 22 framework.go:733] Found 0 / 1
  I0508 15:06:52.904958 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0508 15:06:52.905010 22 framework.go:733] Found 1 / 1
  I0508 15:06:52.905043 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/08/25 15:06:52.905
  I0508 15:06:52.907306 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0508 15:06:52.907337 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0508 15:06:52.907396 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5893 patch pod agnhost-primary-8b42j -p {"metadata":{"annotations":{"x":"y"}}}'
  I0508 15:06:53.004757 22 builder.go:146] stderr: ""
  I0508 15:06:53.004802 22 builder.go:147] stdout: "pod/agnhost-primary-8b42j patched\n"
  STEP: checking annotations @ 05/08/25 15:06:53.004
  I0508 15:06:53.010967 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0508 15:06:53.011007 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0508 15:06:53.011121 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5893" for this suite. @ 05/08/25 15:06:53.013
• [2.293 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 05/08/25 15:06:53.022
  I0508 15:06:53.022358 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename svcaccounts @ 05/08/25 15:06:53.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:06:53.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:06:53.054
  STEP: Creating a Serviceaccount "e2e-sa-wmvqt" in namespace "svcaccounts-7213" @ 05/08/25 15:06:53.057
  STEP: Creating a ServiceaccountToken "e2e-sa-wmvqt" in namespace "svcaccounts-7213" @ 05/08/25 15:06:53.065
  STEP: Creating a TokenReview for "e2e-sa-wmvqt" in namespace "svcaccounts-7213" @ 05/08/25 15:06:53.068
  I0508 15:06:53.070914 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7213" for this suite. @ 05/08/25 15:06:53.121
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/08/25 15:06:53.131
  I0508 15:06:53.131327 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename crd-watch @ 05/08/25 15:06:53.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:06:53.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:06:53.166
  I0508 15:06:53.169724 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Creating first CR  @ 05/08/25 15:06:55.709
  I0508 15:06:55.721406 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-08T15:06:55Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-08T15:06:55Z]] name:name1 resourceVersion:37997 uid:d06cd1a2-80ab-4f67-99e2-3698814340b5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 05/08/25 15:07:05.722
  I0508 15:07:05.731337 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-08T15:07:05Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-08T15:07:05Z]] name:name2 resourceVersion:38068 uid:02c8c91b-34ce-4a87-ad9f-40115b65227d] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 05/08/25 15:07:15.733
  I0508 15:07:15.742086 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-08T15:06:55Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-08T15:07:15Z]] name:name1 resourceVersion:38100 uid:d06cd1a2-80ab-4f67-99e2-3698814340b5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 05/08/25 15:07:25.743
  I0508 15:07:25.752826 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-08T15:07:05Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-08T15:07:25Z]] name:name2 resourceVersion:38132 uid:02c8c91b-34ce-4a87-ad9f-40115b65227d] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 05/08/25 15:07:35.754
  I0508 15:07:35.764259 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-08T15:06:55Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-08T15:07:15Z]] name:name1 resourceVersion:38164 uid:d06cd1a2-80ab-4f67-99e2-3698814340b5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 05/08/25 15:07:45.765
  I0508 15:07:45.774453 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-08T15:07:05Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-08T15:07:25Z]] name:name2 resourceVersion:38196 uid:02c8c91b-34ce-4a87-ad9f-40115b65227d] num:map[num1:9223372036854775807 num2:1000000]]}
  I0508 15:07:56.288005 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-5397" for this suite. @ 05/08/25 15:07:56.29
• [63.174 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/08/25 15:07:56.305
  I0508 15:07:56.305534 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:07:56.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:07:56.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:07:56.332
  STEP: Creating secret with name s-test-opt-del-b6170606-c2f7-4cc8-909b-8896d38e4e37 @ 05/08/25 15:07:56.391
  STEP: Creating secret with name s-test-opt-upd-cee9ca99-6886-49bd-a602-66d20346f72b @ 05/08/25 15:07:56.4
  STEP: Creating the pod @ 05/08/25 15:07:56.408
  STEP: Deleting secret s-test-opt-del-b6170606-c2f7-4cc8-909b-8896d38e4e37 @ 05/08/25 15:07:58.454
  STEP: Updating secret s-test-opt-upd-cee9ca99-6886-49bd-a602-66d20346f72b @ 05/08/25 15:07:58.463
  STEP: Creating secret with name s-test-opt-create-0d21abc2-8bec-4076-b516-764275840d9c @ 05/08/25 15:07:58.472
  STEP: waiting to observe update in volume @ 05/08/25 15:07:58.48
  I0508 15:08:02.511116 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7379" for this suite. @ 05/08/25 15:08:02.515
• [6.221 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 05/08/25 15:08:02.528
  I0508 15:08:02.528144 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename replication-controller @ 05/08/25 15:08:02.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:08:02.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:08:02.603
  I0508 15:08:02.608201 22 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/08/25 15:08:03.642
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/08/25 15:08:03.66
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/08/25 15:08:04.667
  I0508 15:08:04.678366 22 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/08/25 15:08:04.678
  I0508 15:08:05.686692 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7573" for this suite. @ 05/08/25 15:08:05.689
• [3.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 05/08/25 15:08:05.704
  I0508 15:08:05.705014 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename secrets @ 05/08/25 15:08:05.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:08:05.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:08:05.728
  STEP: Creating secret with name secret-test-aa8c5289-b04b-4b17-840a-fc98853135d1 @ 05/08/25 15:08:05.731
  STEP: Creating a pod to test consume secrets @ 05/08/25 15:08:05.75
  STEP: Saw pod success @ 05/08/25 15:08:09.781
  I0508 15:08:09.783516 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-secrets-469b2d49-5b8e-4c32-8338-686d8c56d337 container secret-env-test: <nil>
  STEP: delete the pod @ 05/08/25 15:08:09.788
  I0508 15:08:09.815978 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3766" for this suite. @ 05/08/25 15:08:09.818
• [4.121 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/08/25 15:08:09.826
  I0508 15:08:09.826406 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename init-container @ 05/08/25 15:08:09.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:08:09.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:08:09.854
  STEP: creating the pod @ 05/08/25 15:08:09.857
  I0508 15:08:09.857638 22 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0508 15:08:14.662196 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4073" for this suite. @ 05/08/25 15:08:14.668
• [4.858 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 05/08/25 15:08:14.685
  I0508 15:08:14.685301 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 15:08:14.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:08:14.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:08:14.706
  STEP: creating service endpoint-test2 in namespace services-5673 @ 05/08/25 15:08:14.709
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5673 to expose endpoints map[] @ 05/08/25 15:08:14.742
  I0508 15:08:14.759109      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:08:14.762699 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5673 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5673 @ 05/08/25 15:08:14.763
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5673 to expose endpoints map[pod1:[80]] @ 05/08/25 15:08:16.792
  I0508 15:08:16.796004      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:08:16.798464 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5673 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/08/25 15:08:16.798
  I0508 15:08:16.798858 22 resource.go:361] Creating new exec pod
  I0508 15:08:18.820719 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-5673 exec execpodg5lgq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0508 15:08:18.954392 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.244.219) 80 port [tcp/http] succeeded!\n"
  I0508 15:08:18.954437 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:08:18.954507 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-5673 exec execpodg5lgq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.244.219 80'
  I0508 15:08:19.079871 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.244.219 80\nConnection to 10.43.244.219 80 port [tcp/http] succeeded!\n"
  I0508 15:08:19.079916 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5673 @ 05/08/25 15:08:19.079
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5673 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/08/25 15:08:21.101
  I0508 15:08:21.106995      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:08:21.109916 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5673 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/08/25 15:08:21.109
  I0508 15:08:21.111648 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-5673 exec execpodg5lgq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0508 15:08:21.243225 22 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostNameConnection to endpoint-test2 (10.43.244.219) 80 port [tcp/http] succeeded!\n\n"
  I0508 15:08:21.243278 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:08:21.243349 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-5673 exec execpodg5lgq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.244.219 80'
  I0508 15:08:21.375581 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.244.219 80\nConnection to 10.43.244.219 80 port [tcp/http] succeeded!\n"
  I0508 15:08:21.375644 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5673 @ 05/08/25 15:08:21.375
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5673 to expose endpoints map[pod2:[80]] @ 05/08/25 15:08:21.4
  I0508 15:08:21.422016      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:08:21.428669 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5673 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/08/25 15:08:21.428
  I0508 15:08:21.435761 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-5673 exec execpodg5lgq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0508 15:08:21.631607 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.244.219) 80 port [tcp/http] succeeded!\n"
  I0508 15:08:21.631658 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:08:21.631739 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-5673 exec execpodg5lgq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.244.219 80'
  I0508 15:08:21.824255 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.244.219 80\nConnection to 10.43.244.219 80 port [tcp/http] succeeded!\n"
  I0508 15:08:21.824304 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5673 @ 05/08/25 15:08:21.824
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5673 to expose endpoints map[] @ 05/08/25 15:08:21.863
  I0508 15:08:21.877658      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:08:21.882530 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5673 exposes endpoints map[]
  I0508 15:08:21.939571 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5673" for this suite. @ 05/08/25 15:08:21.943
• [7.278 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 05/08/25 15:08:21.963
  I0508 15:08:21.963749 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:08:21.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:08:21.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:08:21.985
  STEP: Creating configMap with name projected-configmap-test-volume-6720dc69-5ee9-4b3b-a765-1562c9a00b41 @ 05/08/25 15:08:21.992
  STEP: Creating a pod to test consume configMaps @ 05/08/25 15:08:22.001
  STEP: Saw pod success @ 05/08/25 15:08:26.023
  I0508 15:08:26.025940 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-projected-configmaps-dd376ca4-6363-4935-beb0-19c13b0fbb1a container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 15:08:26.03
  I0508 15:08:26.055594 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5233" for this suite. @ 05/08/25 15:08:26.058
• [4.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/08/25 15:08:26.072
  I0508 15:08:26.072398 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename chunking @ 05/08/25 15:08:26.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:08:26.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:08:26.098
  STEP: creating a large number of resources @ 05/08/25 15:08:26.101
  STEP: retrieving those results in paged fashion several times @ 05/08/25 15:08:43.787
  I0508 15:08:43.827717 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0508 15:08:43.876973 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0508 15:08:43.926451 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0508 15:08:43.976684 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0508 15:08:44.027042 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0508 15:08:44.076279 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0508 15:08:44.126509 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0508 15:08:44.176825 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0508 15:08:44.225868 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0508 15:08:44.277031 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0508 15:08:44.326322 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0508 15:08:44.376416 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0508 15:08:44.426955 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0508 15:08:44.476218 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0508 15:08:44.526599 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0508 15:08:44.577516 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0508 15:08:44.626840 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0508 15:08:44.675944 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0508 15:08:44.725919 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0508 15:08:44.776026 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0508 15:08:44.826273 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0508 15:08:44.876587 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0508 15:08:44.926714 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0508 15:08:44.976850 22 chunking.go:98] Retrieved 9/17 results with rv 39083 and continue 
  I0508 15:08:45.027160 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0508 15:08:45.076845 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0508 15:08:45.126995 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0508 15:08:45.176011 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0508 15:08:45.226373 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0508 15:08:45.276666 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0508 15:08:45.326692 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0508 15:08:45.377170 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0508 15:08:45.426273 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0508 15:08:45.476383 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0508 15:08:45.527055 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0508 15:08:45.576455 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0508 15:08:45.627044 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0508 15:08:45.683016 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0508 15:08:45.726269 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0508 15:08:45.776431 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0508 15:08:45.826644 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0508 15:08:45.876309 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0508 15:08:45.926466 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0508 15:08:45.976928 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0508 15:08:46.026223 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0508 15:08:46.076456 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0508 15:08:46.126677 22 chunking.go:98] Retrieved 17/17 results with rv 39083 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0508 15:08:46.176462 22 chunking.go:98] Retrieved 9/17 results with rv 39083 and continue 
  I0508 15:08:46.227361 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0508 15:08:46.276972 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0508 15:08:46.326472 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0508 15:08:46.376839 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0508 15:08:46.427094 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0508 15:08:46.476862 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0508 15:08:46.527266 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0508 15:08:46.576777 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0508 15:08:46.627113 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0508 15:08:46.676425 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0508 15:08:46.726816 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0508 15:08:46.779143 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0508 15:08:46.826484 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0508 15:08:46.877277 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0508 15:08:46.926407 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0508 15:08:46.976931 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0508 15:08:47.027310 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0508 15:08:47.076521 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0508 15:08:47.126885 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0508 15:08:47.176113 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0508 15:08:47.226191 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0508 15:08:47.278017 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0508 15:08:47.326475 22 chunking.go:98] Retrieved 17/17 results with rv 39088 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzkwODgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0508 15:08:47.376130 22 chunking.go:98] Retrieved 9/17 results with rv 39088 and continue 
  STEP: retrieving those results all at once @ 05/08/25 15:08:47.376
  I0508 15:08:47.436748 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1636" for this suite. @ 05/08/25 15:08:47.477
• [21.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 05/08/25 15:08:47.534
  I0508 15:08:47.534423 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename svcaccounts @ 05/08/25 15:08:47.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:08:47.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:08:47.567
  STEP: Creating a pod to test service account token:  @ 05/08/25 15:08:47.569
  STEP: Saw pod success @ 05/08/25 15:08:51.605
  I0508 15:08:51.608017 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod test-pod-9d63c378-96a9-4e49-aa91-42a811f1504a container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 15:08:51.612
  I0508 15:08:51.648596 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7208" for this suite. @ 05/08/25 15:08:51.651
• [4.125 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/08/25 15:08:51.659
  I0508 15:08:51.659887 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename svc-latency @ 05/08/25 15:08:51.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:08:51.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:08:51.692
  I0508 15:08:51.694586 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  I0508 15:08:51.712972 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0508 15:08:53.722245      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:08:53.723477      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:08:53.855141 22 service_latency.go:351] Created: latency-svc-pw75q
  I0508 15:08:53.878683 22 service_latency.go:358] Got endpoints: latency-svc-pw75q [56.788213ms]
  I0508 15:08:53.942506 22 service_latency.go:351] Created: latency-svc-q75zf
  I0508 15:08:53.962230 22 service_latency.go:358] Got endpoints: latency-svc-q75zf [81.509459ms]
  I0508 15:08:53.969646 22 service_latency.go:351] Created: latency-svc-5nph4
  I0508 15:08:53.983343 22 service_latency.go:358] Got endpoints: latency-svc-5nph4 [102.359351ms]
  I0508 15:08:53.993734 22 service_latency.go:351] Created: latency-svc-fgcnd
  I0508 15:08:54.021546 22 service_latency.go:358] Got endpoints: latency-svc-fgcnd [140.338503ms]
  I0508 15:08:54.031378 22 service_latency.go:351] Created: latency-svc-ww7rt
  I0508 15:08:54.050699 22 service_latency.go:358] Got endpoints: latency-svc-ww7rt [169.390379ms]
  I0508 15:08:54.055757 22 service_latency.go:351] Created: latency-svc-g9rd8
  I0508 15:08:54.071526 22 service_latency.go:358] Got endpoints: latency-svc-g9rd8 [190.120834ms]
  I0508 15:08:54.082104 22 service_latency.go:351] Created: latency-svc-d7c6c
  I0508 15:08:54.101333 22 service_latency.go:358] Got endpoints: latency-svc-d7c6c [220.223996ms]
  I0508 15:08:54.105928 22 service_latency.go:351] Created: latency-svc-jg69r
  I0508 15:08:54.127159 22 service_latency.go:358] Got endpoints: latency-svc-jg69r [245.651318ms]
  I0508 15:08:54.157336 22 service_latency.go:351] Created: latency-svc-smphl
  I0508 15:08:54.177783 22 service_latency.go:358] Got endpoints: latency-svc-smphl [296.175153ms]
  I0508 15:08:54.443659 22 service_latency.go:351] Created: latency-svc-twx8h
  I0508 15:08:54.462907 22 service_latency.go:351] Created: latency-svc-ckg5s
  I0508 15:08:54.463268 22 service_latency.go:351] Created: latency-svc-9kszt
  I0508 15:08:54.463357 22 service_latency.go:351] Created: latency-svc-t54sg
  I0508 15:08:54.463390 22 service_latency.go:351] Created: latency-svc-l4rkb
  I0508 15:08:54.463438 22 service_latency.go:351] Created: latency-svc-js6mw
  I0508 15:08:54.463465 22 service_latency.go:351] Created: latency-svc-cz5v4
  I0508 15:08:54.467133 22 service_latency.go:358] Got endpoints: latency-svc-twx8h [585.424945ms]
  I0508 15:08:54.468905 22 service_latency.go:351] Created: latency-svc-8w2ks
  I0508 15:08:54.469250 22 service_latency.go:351] Created: latency-svc-kpsg6
  I0508 15:08:54.469295 22 service_latency.go:351] Created: latency-svc-5zpkk
  I0508 15:08:54.469324 22 service_latency.go:351] Created: latency-svc-5b8d4
  I0508 15:08:54.469355 22 service_latency.go:351] Created: latency-svc-96qns
  I0508 15:08:54.469379 22 service_latency.go:351] Created: latency-svc-zhvxj
  I0508 15:08:54.469401 22 service_latency.go:351] Created: latency-svc-7w9kl
  I0508 15:08:54.469447 22 service_latency.go:351] Created: latency-svc-vt8z6
  I0508 15:08:54.505787 22 service_latency.go:358] Got endpoints: latency-svc-ckg5s [543.478457ms]
  I0508 15:08:54.521590 22 service_latency.go:358] Got endpoints: latency-svc-js6mw [639.791215ms]
  I0508 15:08:54.521603 22 service_latency.go:358] Got endpoints: latency-svc-t54sg [343.680378ms]
  I0508 15:08:54.521623 22 service_latency.go:358] Got endpoints: latency-svc-9kszt [639.722221ms]
  I0508 15:08:54.521588 22 service_latency.go:358] Got endpoints: latency-svc-l4rkb [499.881981ms]
  I0508 15:08:54.537307 22 service_latency.go:358] Got endpoints: latency-svc-cz5v4 [465.606494ms]
  I0508 15:08:54.553551 22 service_latency.go:358] Got endpoints: latency-svc-5zpkk [452.040591ms]
  I0508 15:08:54.553586 22 service_latency.go:358] Got endpoints: latency-svc-kpsg6 [671.600764ms]
  I0508 15:08:54.573360 22 service_latency.go:358] Got endpoints: latency-svc-5b8d4 [522.403714ms]
  I0508 15:08:54.573745 22 service_latency.go:358] Got endpoints: latency-svc-zhvxj [446.540323ms]
  I0508 15:08:54.573820 22 service_latency.go:358] Got endpoints: latency-svc-96qns [691.734311ms]
  I0508 15:08:54.578137 22 service_latency.go:351] Created: latency-svc-szfxw
  I0508 15:08:54.584280 22 service_latency.go:358] Got endpoints: latency-svc-7w9kl [600.747253ms]
  I0508 15:08:54.584567 22 service_latency.go:358] Got endpoints: latency-svc-vt8z6 [702.388224ms]
  I0508 15:08:54.614494 22 service_latency.go:358] Got endpoints: latency-svc-8w2ks [732.221382ms]
  I0508 15:08:54.614621 22 service_latency.go:358] Got endpoints: latency-svc-szfxw [147.305335ms]
  I0508 15:08:54.646048 22 service_latency.go:351] Created: latency-svc-97tpk
  I0508 15:08:54.667198 22 service_latency.go:358] Got endpoints: latency-svc-97tpk [161.362513ms]
  I0508 15:08:54.908099 22 service_latency.go:351] Created: latency-svc-gkhrr
  I0508 15:08:54.908106 22 service_latency.go:351] Created: latency-svc-shhsg
  I0508 15:08:54.923423 22 service_latency.go:351] Created: latency-svc-mjz99
  I0508 15:08:54.923778 22 service_latency.go:351] Created: latency-svc-cdfch
  I0508 15:08:54.923818 22 service_latency.go:351] Created: latency-svc-2g864
  I0508 15:08:54.923972 22 service_latency.go:351] Created: latency-svc-cws72
  I0508 15:08:54.924414 22 service_latency.go:351] Created: latency-svc-hzdbm
  I0508 15:08:54.924449 22 service_latency.go:351] Created: latency-svc-bv82k
  I0508 15:08:54.924480 22 service_latency.go:351] Created: latency-svc-4z2fp
  I0508 15:08:54.924539 22 service_latency.go:351] Created: latency-svc-827mf
  I0508 15:08:54.924680 22 service_latency.go:351] Created: latency-svc-dr79m
  I0508 15:08:54.924713 22 service_latency.go:351] Created: latency-svc-qnp55
  I0508 15:08:54.924802 22 service_latency.go:351] Created: latency-svc-ggjwx
  I0508 15:08:54.924831 22 service_latency.go:351] Created: latency-svc-dxl9x
  I0508 15:08:54.924848 22 service_latency.go:351] Created: latency-svc-8ppck
  I0508 15:08:54.948432 22 service_latency.go:358] Got endpoints: latency-svc-cdfch [426.760688ms]
  I0508 15:08:54.948846 22 service_latency.go:358] Got endpoints: latency-svc-gkhrr [374.741489ms]
  I0508 15:08:54.948442 22 service_latency.go:358] Got endpoints: latency-svc-cws72 [333.721996ms]
  I0508 15:08:54.948461 22 service_latency.go:358] Got endpoints: latency-svc-dr79m [394.793306ms]
  I0508 15:08:54.948961 22 service_latency.go:358] Got endpoints: latency-svc-2g864 [395.086774ms]
  I0508 15:08:54.971207 22 service_latency.go:358] Got endpoints: latency-svc-bv82k [397.313572ms]
  I0508 15:08:54.971220 22 service_latency.go:358] Got endpoints: latency-svc-qnp55 [386.284904ms]
  I0508 15:08:54.971239 22 service_latency.go:358] Got endpoints: latency-svc-hzdbm [449.110803ms]
  I0508 15:08:54.971248 22 service_latency.go:358] Got endpoints: latency-svc-mjz99 [397.754544ms]
  I0508 15:08:54.971255 22 service_latency.go:358] Got endpoints: latency-svc-ggjwx [303.942042ms]
  I0508 15:08:54.993606 22 service_latency.go:358] Got endpoints: latency-svc-4z2fp [407.997827ms]
  I0508 15:08:55.004061 22 service_latency.go:358] Got endpoints: latency-svc-dxl9x [466.617901ms]
  I0508 15:08:55.004143 22 service_latency.go:358] Got endpoints: latency-svc-827mf [389.020136ms]
  I0508 15:08:55.004179 22 service_latency.go:358] Got endpoints: latency-svc-8ppck [482.158087ms]
  I0508 15:08:55.004187 22 service_latency.go:358] Got endpoints: latency-svc-shhsg [482.280508ms]
  I0508 15:08:55.062713 22 service_latency.go:351] Created: latency-svc-fvh48
  I0508 15:08:55.086990 22 service_latency.go:351] Created: latency-svc-4slt8
  I0508 15:08:55.087313 22 service_latency.go:358] Got endpoints: latency-svc-fvh48 [138.589975ms]
  I0508 15:08:55.113957 22 service_latency.go:351] Created: latency-svc-2dnnt
  I0508 15:08:55.115581 22 service_latency.go:358] Got endpoints: latency-svc-4slt8 [166.536993ms]
  I0508 15:08:55.143899 22 service_latency.go:358] Got endpoints: latency-svc-2dnnt [194.676012ms]
  I0508 15:08:55.154397 22 service_latency.go:351] Created: latency-svc-trktx
  I0508 15:08:55.222322 22 service_latency.go:358] Got endpoints: latency-svc-trktx [272.83925ms]
  I0508 15:08:55.248135 22 service_latency.go:351] Created: latency-svc-sc9xh
  I0508 15:08:55.272999 22 service_latency.go:358] Got endpoints: latency-svc-sc9xh [323.438926ms]
  I0508 15:08:55.273432 22 service_latency.go:351] Created: latency-svc-qvz9g
  I0508 15:08:55.294867 22 service_latency.go:358] Got endpoints: latency-svc-qvz9g [323.558034ms]
  I0508 15:08:55.358534 22 service_latency.go:351] Created: latency-svc-2lwt5
  I0508 15:08:55.381882 22 service_latency.go:351] Created: latency-svc-5bxxv
  I0508 15:08:55.391821 22 service_latency.go:358] Got endpoints: latency-svc-2lwt5 [419.871603ms]
  I0508 15:08:55.405166 22 service_latency.go:358] Got endpoints: latency-svc-5bxxv [433.620342ms]
  I0508 15:08:55.441178 22 service_latency.go:351] Created: latency-svc-cdxb8
  I0508 15:08:55.497165 22 service_latency.go:351] Created: latency-svc-5nvl2
  I0508 15:08:55.497751 22 service_latency.go:358] Got endpoints: latency-svc-cdxb8 [526.067212ms]
  I0508 15:08:55.519683 22 service_latency.go:358] Got endpoints: latency-svc-5nvl2 [547.863507ms]
  I0508 15:08:55.532839 22 service_latency.go:351] Created: latency-svc-7wcw2
  I0508 15:08:55.561089 22 service_latency.go:358] Got endpoints: latency-svc-7wcw2 [567.438004ms]
  I0508 15:08:55.566108 22 service_latency.go:351] Created: latency-svc-j4b9g
  I0508 15:08:55.631043 22 service_latency.go:358] Got endpoints: latency-svc-j4b9g [626.715808ms]
  I0508 15:08:55.646265 22 service_latency.go:351] Created: latency-svc-s8qvc
  I0508 15:08:55.677802 22 service_latency.go:358] Got endpoints: latency-svc-s8qvc [672.979641ms]
  I0508 15:08:55.687011 22 service_latency.go:351] Created: latency-svc-gnc4k
  I0508 15:08:55.705131 22 service_latency.go:358] Got endpoints: latency-svc-gnc4k [700.864616ms]
  I0508 15:08:55.705590 22 service_latency.go:351] Created: latency-svc-n9dt7
  I0508 15:08:55.715731 22 service_latency.go:358] Got endpoints: latency-svc-n9dt7 [710.564065ms]
  I0508 15:08:55.783605 22 service_latency.go:351] Created: latency-svc-m24fw
  I0508 15:08:55.794942 22 service_latency.go:358] Got endpoints: latency-svc-m24fw [707.593632ms]
  I0508 15:08:55.831622 22 service_latency.go:351] Created: latency-svc-j9mld
  I0508 15:08:55.872824 22 service_latency.go:358] Got endpoints: latency-svc-j9mld [757.089364ms]
  I0508 15:08:55.873158 22 service_latency.go:351] Created: latency-svc-hvd9n
  I0508 15:08:55.938348 22 service_latency.go:351] Created: latency-svc-jjvld
  I0508 15:08:55.940139 22 service_latency.go:358] Got endpoints: latency-svc-hvd9n [796.193476ms]
  I0508 15:08:55.965088 22 service_latency.go:358] Got endpoints: latency-svc-jjvld [742.725464ms]
  I0508 15:08:55.977551 22 service_latency.go:351] Created: latency-svc-z4mzf
  I0508 15:08:56.001503 22 service_latency.go:351] Created: latency-svc-6thpz
  I0508 15:08:56.002487 22 service_latency.go:358] Got endpoints: latency-svc-z4mzf [729.43715ms]
  I0508 15:08:56.025810 22 service_latency.go:358] Got endpoints: latency-svc-6thpz [730.895398ms]
  I0508 15:08:56.033111 22 service_latency.go:351] Created: latency-svc-tjfzf
  I0508 15:08:56.105759 22 service_latency.go:358] Got endpoints: latency-svc-tjfzf [713.886421ms]
  I0508 15:08:56.121161 22 service_latency.go:351] Created: latency-svc-cnl7p
  I0508 15:08:56.165274 22 service_latency.go:351] Created: latency-svc-2774t
  I0508 15:08:56.165675 22 service_latency.go:358] Got endpoints: latency-svc-cnl7p [760.439996ms]
  I0508 15:08:56.182732 22 service_latency.go:358] Got endpoints: latency-svc-2774t [684.786823ms]
  I0508 15:08:56.186687 22 service_latency.go:351] Created: latency-svc-bzpvj
  I0508 15:08:56.268581 22 service_latency.go:351] Created: latency-svc-rhvxk
  I0508 15:08:56.271733 22 service_latency.go:358] Got endpoints: latency-svc-bzpvj [752.002541ms]
  I0508 15:08:56.286328 22 service_latency.go:358] Got endpoints: latency-svc-rhvxk [724.956731ms]
  I0508 15:08:56.290421 22 service_latency.go:351] Created: latency-svc-jzc8d
  I0508 15:08:56.311246 22 service_latency.go:358] Got endpoints: latency-svc-jzc8d [679.848842ms]
  I0508 15:08:56.336012 22 service_latency.go:351] Created: latency-svc-tcnfs
  I0508 15:08:56.350698 22 service_latency.go:358] Got endpoints: latency-svc-tcnfs [672.831161ms]
  I0508 15:08:56.423151 22 service_latency.go:351] Created: latency-svc-knr52
  I0508 15:08:56.446622 22 service_latency.go:358] Got endpoints: latency-svc-knr52 [741.442269ms]
  I0508 15:08:56.451756 22 service_latency.go:351] Created: latency-svc-mwjfn
  I0508 15:08:56.479070 22 service_latency.go:358] Got endpoints: latency-svc-mwjfn [763.285151ms]
  I0508 15:08:56.480239 22 service_latency.go:351] Created: latency-svc-gh5lj
  I0508 15:08:56.512186 22 service_latency.go:358] Got endpoints: latency-svc-gh5lj [717.067077ms]
  I0508 15:08:56.517888 22 service_latency.go:351] Created: latency-svc-6nq9s
  I0508 15:08:56.581850 22 service_latency.go:358] Got endpoints: latency-svc-6nq9s [708.97889ms]
  I0508 15:08:56.605522 22 service_latency.go:351] Created: latency-svc-lpnkz
  I0508 15:08:56.616645 22 service_latency.go:351] Created: latency-svc-rvgq9
  I0508 15:08:56.630999 22 service_latency.go:358] Got endpoints: latency-svc-lpnkz [690.824021ms]
  I0508 15:08:56.651702 22 service_latency.go:358] Got endpoints: latency-svc-rvgq9 [686.553341ms]
  I0508 15:08:56.670821 22 service_latency.go:351] Created: latency-svc-2qkwz
  I0508 15:08:56.735726 22 service_latency.go:358] Got endpoints: latency-svc-2qkwz [732.728595ms]
  I0508 15:08:56.741869 22 service_latency.go:351] Created: latency-svc-kllf4
  I0508 15:08:56.771658 22 service_latency.go:358] Got endpoints: latency-svc-kllf4 [745.797378ms]
  I0508 15:08:56.788759 22 service_latency.go:351] Created: latency-svc-xx276
  I0508 15:08:56.814715 22 service_latency.go:358] Got endpoints: latency-svc-xx276 [708.271232ms]
  I0508 15:08:56.878913 22 service_latency.go:351] Created: latency-svc-67zdn
  I0508 15:08:56.895403 22 service_latency.go:358] Got endpoints: latency-svc-67zdn [729.692125ms]
  I0508 15:08:56.909210 22 service_latency.go:351] Created: latency-svc-qgdjl
  I0508 15:08:56.924745 22 service_latency.go:358] Got endpoints: latency-svc-qgdjl [741.873612ms]
  I0508 15:08:56.926065 22 service_latency.go:351] Created: latency-svc-b4kb7
  I0508 15:08:56.965730 22 service_latency.go:358] Got endpoints: latency-svc-b4kb7 [693.953656ms]
  I0508 15:08:57.016852 22 service_latency.go:351] Created: latency-svc-ww4n9
  I0508 15:08:57.036640 22 service_latency.go:358] Got endpoints: latency-svc-ww4n9 [750.262925ms]
  I0508 15:08:57.051262 22 service_latency.go:351] Created: latency-svc-kgbxh
  I0508 15:08:57.080020 22 service_latency.go:351] Created: latency-svc-64p77
  I0508 15:08:57.083133 22 service_latency.go:358] Got endpoints: latency-svc-kgbxh [771.836235ms]
  I0508 15:08:57.093252 22 service_latency.go:358] Got endpoints: latency-svc-64p77 [742.432445ms]
  I0508 15:08:57.101316 22 service_latency.go:351] Created: latency-svc-gbczj
  I0508 15:08:57.181434 22 service_latency.go:358] Got endpoints: latency-svc-gbczj [734.116881ms]
  I0508 15:08:57.192024 22 service_latency.go:351] Created: latency-svc-gj4fd
  I0508 15:08:57.212868 22 service_latency.go:358] Got endpoints: latency-svc-gj4fd [733.231623ms]
  I0508 15:08:57.230297 22 service_latency.go:351] Created: latency-svc-jrsjp
  I0508 15:08:57.246618 22 service_latency.go:358] Got endpoints: latency-svc-jrsjp [734.224006ms]
  I0508 15:08:57.280916 22 service_latency.go:351] Created: latency-svc-zsqtz
  I0508 15:08:57.342976 22 service_latency.go:358] Got endpoints: latency-svc-zsqtz [761.08352ms]
  I0508 15:08:57.359615 22 service_latency.go:351] Created: latency-svc-l6wpp
  I0508 15:08:57.368608 22 service_latency.go:358] Got endpoints: latency-svc-l6wpp [737.544168ms]
  I0508 15:08:57.405718 22 service_latency.go:351] Created: latency-svc-9f66x
  I0508 15:08:57.428905 22 service_latency.go:358] Got endpoints: latency-svc-9f66x [777.141736ms]
  I0508 15:08:57.487300 22 service_latency.go:351] Created: latency-svc-78ch8
  I0508 15:08:57.516911 22 service_latency.go:358] Got endpoints: latency-svc-78ch8 [781.13573ms]
  I0508 15:08:57.517663 22 service_latency.go:351] Created: latency-svc-spx8c
  I0508 15:08:57.538216 22 service_latency.go:358] Got endpoints: latency-svc-spx8c [766.504902ms]
  I0508 15:08:57.550530 22 service_latency.go:351] Created: latency-svc-k9l5t
  I0508 15:08:57.580866 22 service_latency.go:358] Got endpoints: latency-svc-k9l5t [765.841579ms]
  I0508 15:08:57.651028 22 service_latency.go:351] Created: latency-svc-7ms2s
  I0508 15:08:57.674040 22 service_latency.go:351] Created: latency-svc-wzppx
  I0508 15:08:57.676766 22 service_latency.go:358] Got endpoints: latency-svc-7ms2s [781.317994ms]
  I0508 15:08:57.684559 22 service_latency.go:358] Got endpoints: latency-svc-wzppx [759.761157ms]
  I0508 15:08:58.125066 22 service_latency.go:351] Created: latency-svc-ftmjw
  I0508 15:08:58.133668 22 service_latency.go:351] Created: latency-svc-xnpm9
  I0508 15:08:58.149139 22 service_latency.go:351] Created: latency-svc-9gk58
  I0508 15:08:58.149269 22 service_latency.go:351] Created: latency-svc-p59lj
  I0508 15:08:58.149303 22 service_latency.go:351] Created: latency-svc-cjmkn
  I0508 15:08:58.149360 22 service_latency.go:351] Created: latency-svc-4g7kq
  I0508 15:08:58.149401 22 service_latency.go:351] Created: latency-svc-nlw92
  I0508 15:08:58.149545 22 service_latency.go:351] Created: latency-svc-hfpch
  I0508 15:08:58.149743 22 service_latency.go:351] Created: latency-svc-qv286
  I0508 15:08:58.149830 22 service_latency.go:351] Created: latency-svc-9cszc
  I0508 15:08:58.149962 22 service_latency.go:351] Created: latency-svc-46dwg
  I0508 15:08:58.150082 22 service_latency.go:351] Created: latency-svc-zhbl6
  I0508 15:08:58.150144 22 service_latency.go:351] Created: latency-svc-xlmrx
  I0508 15:08:58.150229 22 service_latency.go:351] Created: latency-svc-m8tt6
  I0508 15:08:58.149160 22 service_latency.go:351] Created: latency-svc-fqvw2
  I0508 15:08:58.152834 22 service_latency.go:358] Got endpoints: latency-svc-ftmjw [905.395134ms]
  I0508 15:08:58.175203 22 service_latency.go:358] Got endpoints: latency-svc-p59lj [745.43532ms]
  I0508 15:08:58.175236 22 service_latency.go:358] Got endpoints: latency-svc-cjmkn [594.115984ms]
  I0508 15:08:58.175252 22 service_latency.go:358] Got endpoints: latency-svc-4g7kq [1.081303566s]
  I0508 15:08:58.175281 22 service_latency.go:358] Got endpoints: latency-svc-xnpm9 [993.802563ms]
  I0508 15:08:58.175302 22 service_latency.go:358] Got endpoints: latency-svc-9gk58 [498.395949ms]
  I0508 15:08:58.233642 22 service_latency.go:358] Got endpoints: latency-svc-nlw92 [695.380896ms]
  I0508 15:08:58.234010 22 service_latency.go:358] Got endpoints: latency-svc-zhbl6 [715.9647ms]
  I0508 15:08:58.233692 22 service_latency.go:358] Got endpoints: latency-svc-9cszc [1.020768511s]
  I0508 15:08:58.233712 22 service_latency.go:358] Got endpoints: latency-svc-qv286 [1.267921403s]
  I0508 15:08:58.234333 22 service_latency.go:358] Got endpoints: latency-svc-hfpch [865.680927ms]
  I0508 15:08:58.268086 22 service_latency.go:358] Got endpoints: latency-svc-46dwg [925.066091ms]
  I0508 15:08:58.268308 22 service_latency.go:358] Got endpoints: latency-svc-m8tt6 [1.231626832s]
  I0508 15:08:58.268642 22 service_latency.go:358] Got endpoints: latency-svc-fqvw2 [1.185444554s]
  I0508 15:08:58.268868 22 service_latency.go:358] Got endpoints: latency-svc-xlmrx [584.266363ms]
  I0508 15:08:58.274543 22 service_latency.go:351] Created: latency-svc-rxfh4
  I0508 15:08:58.290731 22 service_latency.go:358] Got endpoints: latency-svc-rxfh4 [137.479853ms]
  I0508 15:08:58.296074 22 service_latency.go:351] Created: latency-svc-cj7ps
  I0508 15:08:58.325472 22 service_latency.go:351] Created: latency-svc-k6srb
  I0508 15:08:58.327433 22 service_latency.go:358] Got endpoints: latency-svc-cj7ps [152.033277ms]
  I0508 15:08:58.393282 22 service_latency.go:358] Got endpoints: latency-svc-k6srb [217.773066ms]
  I0508 15:08:58.409522 22 service_latency.go:351] Created: latency-svc-zms5s
  I0508 15:08:58.421352 22 service_latency.go:358] Got endpoints: latency-svc-zms5s [245.019815ms]
  I0508 15:08:58.452252 22 service_latency.go:351] Created: latency-svc-mlp2q
  I0508 15:08:58.467356 22 service_latency.go:358] Got endpoints: latency-svc-mlp2q [291.511804ms]
  I0508 15:08:58.486483 22 service_latency.go:351] Created: latency-svc-d24jn
  I0508 15:08:58.535949 22 service_latency.go:358] Got endpoints: latency-svc-d24jn [359.912044ms]
  I0508 15:08:58.545917 22 service_latency.go:351] Created: latency-svc-hcckf
  I0508 15:08:58.560032 22 service_latency.go:358] Got endpoints: latency-svc-hcckf [326.029469ms]
  I0508 15:08:58.567221 22 service_latency.go:351] Created: latency-svc-gn7qp
  I0508 15:08:58.604261 22 service_latency.go:358] Got endpoints: latency-svc-gn7qp [369.258998ms]
  I0508 15:08:58.605205 22 service_latency.go:351] Created: latency-svc-4z4nl
  I0508 15:08:58.617691 22 service_latency.go:358] Got endpoints: latency-svc-4z4nl [383.301274ms]
  I0508 15:08:58.629209 22 service_latency.go:351] Created: latency-svc-2tqwd
  I0508 15:08:58.691600 22 service_latency.go:358] Got endpoints: latency-svc-2tqwd [457.012324ms]
  I0508 15:08:58.709342 22 service_latency.go:351] Created: latency-svc-lpxb7
  I0508 15:08:58.730629 22 service_latency.go:358] Got endpoints: latency-svc-lpxb7 [495.674771ms]
  I0508 15:08:58.747925 22 service_latency.go:351] Created: latency-svc-m2rbh
  I0508 15:08:58.760489 22 service_latency.go:358] Got endpoints: latency-svc-m2rbh [492.357732ms]
  I0508 15:08:58.825609 22 service_latency.go:351] Created: latency-svc-6g96k
  I0508 15:08:58.846067 22 service_latency.go:358] Got endpoints: latency-svc-6g96k [577.069798ms]
  I0508 15:08:58.852099 22 service_latency.go:351] Created: latency-svc-pcl62
  I0508 15:08:58.875054 22 service_latency.go:351] Created: latency-svc-lxv27
  I0508 15:08:58.877059 22 service_latency.go:358] Got endpoints: latency-svc-pcl62 [608.525263ms]
  I0508 15:08:58.893569 22 service_latency.go:358] Got endpoints: latency-svc-lxv27 [624.728991ms]
  I0508 15:08:58.909497 22 service_latency.go:351] Created: latency-svc-vmvgw
  I0508 15:08:58.973871 22 service_latency.go:358] Got endpoints: latency-svc-vmvgw [683.046666ms]
  I0508 15:08:58.976167 22 service_latency.go:351] Created: latency-svc-n2jwh
  I0508 15:08:59.012616 22 service_latency.go:351] Created: latency-svc-dcctx
  I0508 15:08:59.014350 22 service_latency.go:358] Got endpoints: latency-svc-n2jwh [686.87475ms]
  I0508 15:08:59.025020 22 service_latency.go:358] Got endpoints: latency-svc-dcctx [631.626623ms]
  I0508 15:08:59.033636 22 service_latency.go:351] Created: latency-svc-fcwbh
  I0508 15:08:59.125104 22 service_latency.go:358] Got endpoints: latency-svc-fcwbh [703.691494ms]
  I0508 15:08:59.129905 22 service_latency.go:351] Created: latency-svc-vpvqj
  I0508 15:08:59.139940 22 service_latency.go:358] Got endpoints: latency-svc-vpvqj [672.541228ms]
  I0508 15:08:59.159009 22 service_latency.go:351] Created: latency-svc-8pbpl
  I0508 15:08:59.180511 22 service_latency.go:358] Got endpoints: latency-svc-8pbpl [644.500409ms]
  I0508 15:08:59.210909 22 service_latency.go:351] Created: latency-svc-bmmb5
  I0508 15:08:59.277548 22 service_latency.go:351] Created: latency-svc-5rm96
  I0508 15:08:59.281080 22 service_latency.go:358] Got endpoints: latency-svc-bmmb5 [721.00291ms]
  I0508 15:08:59.301130 22 service_latency.go:358] Got endpoints: latency-svc-5rm96 [696.819488ms]
  I0508 15:08:59.316112 22 service_latency.go:351] Created: latency-svc-nbk7s
  I0508 15:08:59.332009 22 service_latency.go:351] Created: latency-svc-nlft5
  I0508 15:08:59.340300 22 service_latency.go:358] Got endpoints: latency-svc-nbk7s [722.459287ms]
  I0508 15:08:59.359190 22 service_latency.go:358] Got endpoints: latency-svc-nlft5 [667.528165ms]
  I0508 15:08:59.373776 22 service_latency.go:351] Created: latency-svc-7fm56
  I0508 15:08:59.428005 22 service_latency.go:358] Got endpoints: latency-svc-7fm56 [697.329643ms]
  I0508 15:08:59.463591 22 service_latency.go:351] Created: latency-svc-q8twq
  I0508 15:08:59.503481 22 service_latency.go:358] Got endpoints: latency-svc-q8twq [742.881499ms]
  I0508 15:08:59.565382 22 service_latency.go:351] Created: latency-svc-82fw7
  I0508 15:08:59.580217 22 service_latency.go:351] Created: latency-svc-2nxgh
  I0508 15:08:59.589597 22 service_latency.go:358] Got endpoints: latency-svc-82fw7 [743.475271ms]
  I0508 15:08:59.608458 22 service_latency.go:351] Created: latency-svc-nr9qk
  I0508 15:08:59.619513 22 service_latency.go:358] Got endpoints: latency-svc-2nxgh [742.416211ms]
  I0508 15:08:59.641320 22 service_latency.go:358] Got endpoints: latency-svc-nr9qk [747.692795ms]
  I0508 15:08:59.643962 22 service_latency.go:351] Created: latency-svc-lcnh9
  I0508 15:08:59.645281 22 service_latency.go:351] Created: latency-svc-2tsnw
  I0508 15:08:59.712316 22 service_latency.go:351] Created: latency-svc-2dqgg
  I0508 15:08:59.714032 22 service_latency.go:358] Got endpoints: latency-svc-lcnh9 [699.643556ms]
  I0508 15:08:59.714178 22 service_latency.go:358] Got endpoints: latency-svc-2tsnw [740.063897ms]
  I0508 15:08:59.739012 22 service_latency.go:358] Got endpoints: latency-svc-2dqgg [713.938885ms]
  I0508 15:08:59.774166 22 service_latency.go:351] Created: latency-svc-6pqwn
  I0508 15:08:59.792979 22 service_latency.go:358] Got endpoints: latency-svc-6pqwn [667.830321ms]
  I0508 15:08:59.804309 22 service_latency.go:351] Created: latency-svc-tvwnw
  I0508 15:08:59.855093 22 service_latency.go:358] Got endpoints: latency-svc-tvwnw [715.072692ms]
  I0508 15:08:59.872671 22 service_latency.go:351] Created: latency-svc-cp4ww
  I0508 15:08:59.895262 22 service_latency.go:358] Got endpoints: latency-svc-cp4ww [714.326646ms]
  I0508 15:08:59.903056 22 service_latency.go:351] Created: latency-svc-487l9
  I0508 15:08:59.933593 22 service_latency.go:351] Created: latency-svc-l4dqr
  I0508 15:08:59.934505 22 service_latency.go:358] Got endpoints: latency-svc-487l9 [653.231241ms]
  I0508 15:09:00.060174 22 service_latency.go:358] Got endpoints: latency-svc-l4dqr [758.987828ms]
  I0508 15:09:00.418532 22 service_latency.go:351] Created: latency-svc-5mprc
  I0508 15:09:00.432403 22 service_latency.go:351] Created: latency-svc-d7wsl
  I0508 15:09:00.433163 22 service_latency.go:351] Created: latency-svc-nxzdv
  I0508 15:09:00.441513 22 service_latency.go:351] Created: latency-svc-g9cw6
  I0508 15:09:00.441513 22 service_latency.go:351] Created: latency-svc-vst94
  I0508 15:09:00.441585 22 service_latency.go:351] Created: latency-svc-hswsj
  I0508 15:09:00.441748 22 service_latency.go:351] Created: latency-svc-2wp4b
  I0508 15:09:00.441834 22 service_latency.go:351] Created: latency-svc-7xxnp
  I0508 15:09:00.441970 22 service_latency.go:351] Created: latency-svc-v4hkk
  I0508 15:09:00.458729 22 service_latency.go:358] Got endpoints: latency-svc-5mprc [817.356911ms]
  I0508 15:09:00.459508 22 service_latency.go:351] Created: latency-svc-drvpb
  I0508 15:09:00.459397 22 service_latency.go:351] Created: latency-svc-t5ss5
  I0508 15:09:00.459429 22 service_latency.go:351] Created: latency-svc-sw69l
  I0508 15:09:00.459448 22 service_latency.go:351] Created: latency-svc-gzls8
  I0508 15:09:00.459438 22 service_latency.go:351] Created: latency-svc-vzvvb
  I0508 15:09:00.459464 22 service_latency.go:351] Created: latency-svc-8xw54
  I0508 15:09:00.468060 22 service_latency.go:358] Got endpoints: latency-svc-d7wsl [1.108356018s]
  I0508 15:09:00.468104 22 service_latency.go:358] Got endpoints: latency-svc-nxzdv [753.23149ms]
  I0508 15:09:00.468225 22 service_latency.go:358] Got endpoints: latency-svc-v4hkk [675.20373ms]
  I0508 15:09:00.468296 22 service_latency.go:358] Got endpoints: latency-svc-2wp4b [753.952984ms]
  I0508 15:09:00.479649 22 service_latency.go:358] Got endpoints: latency-svc-hswsj [740.119537ms]
  I0508 15:09:00.535203 22 service_latency.go:358] Got endpoints: latency-svc-8xw54 [600.653398ms]
  I0508 15:09:00.535237 22 service_latency.go:358] Got endpoints: latency-svc-vst94 [915.675698ms]
  I0508 15:09:00.535634 22 service_latency.go:358] Got endpoints: latency-svc-g9cw6 [680.492253ms]
  I0508 15:09:00.535801 22 service_latency.go:358] Got endpoints: latency-svc-7xxnp [1.195462717s]
  I0508 15:09:00.548130 22 service_latency.go:358] Got endpoints: latency-svc-drvpb [1.044269493s]
  I0508 15:09:00.556837 22 service_latency.go:358] Got endpoints: latency-svc-t5ss5 [966.738227ms]
  I0508 15:09:00.579463 22 service_latency.go:358] Got endpoints: latency-svc-sw69l [684.151365ms]
  I0508 15:09:00.589151 22 service_latency.go:351] Created: latency-svc-6m45l
  I0508 15:09:00.608678 22 service_latency.go:358] Got endpoints: latency-svc-gzls8 [548.065076ms]
  I0508 15:09:00.697834 22 service_latency.go:358] Got endpoints: latency-svc-vzvvb [1.26959282s]
  I0508 15:09:00.730597 22 service_latency.go:358] Got endpoints: latency-svc-6m45l [270.960745ms]
  I0508 15:09:01.036046 22 service_latency.go:351] Created: latency-svc-xp267
  I0508 15:09:01.046501 22 service_latency.go:351] Created: latency-svc-bl4lp
  I0508 15:09:01.050880 22 service_latency.go:358] Got endpoints: latency-svc-xp267 [582.553611ms]
  I0508 15:09:01.064820 22 service_latency.go:351] Created: latency-svc-k78g4
  I0508 15:09:01.064892 22 service_latency.go:351] Created: latency-svc-gdhzj
  I0508 15:09:01.064920 22 service_latency.go:351] Created: latency-svc-bp8jv
  I0508 15:09:01.065757 22 service_latency.go:351] Created: latency-svc-p7tsr
  I0508 15:09:01.065988 22 service_latency.go:351] Created: latency-svc-nwg7w
  I0508 15:09:01.066045 22 service_latency.go:351] Created: latency-svc-46975
  I0508 15:09:01.066069 22 service_latency.go:351] Created: latency-svc-xb7vw
  I0508 15:09:01.066607 22 service_latency.go:351] Created: latency-svc-hwkh9
  I0508 15:09:01.066646 22 service_latency.go:351] Created: latency-svc-ppsdr
  I0508 15:09:01.067038 22 service_latency.go:351] Created: latency-svc-qcbxs
  I0508 15:09:01.067309 22 service_latency.go:351] Created: latency-svc-9jntm
  I0508 15:09:01.067345 22 service_latency.go:351] Created: latency-svc-d8ptc
  I0508 15:09:01.067669 22 service_latency.go:351] Created: latency-svc-vmcz8
  I0508 15:09:01.073958 22 service_latency.go:358] Got endpoints: latency-svc-bl4lp [517.074295ms]
  I0508 15:09:01.093595 22 service_latency.go:358] Got endpoints: latency-svc-bp8jv [395.709265ms]
  I0508 15:09:01.093634 22 service_latency.go:358] Got endpoints: latency-svc-xb7vw [625.502496ms]
  I0508 15:09:01.093750 22 service_latency.go:358] Got endpoints: latency-svc-gdhzj [558.501352ms]
  I0508 15:09:01.093822 22 service_latency.go:358] Got endpoints: latency-svc-46975 [558.563015ms]
  I0508 15:09:01.171607 22 service_latency.go:358] Got endpoints: latency-svc-qcbxs [440.962064ms]
  I0508 15:09:01.201445 22 service_latency.go:358] Got endpoints: latency-svc-ppsdr [733.188162ms]
  I0508 15:09:01.201773 22 service_latency.go:358] Got endpoints: latency-svc-nwg7w [665.933356ms]
  I0508 15:09:01.214710 22 service_latency.go:358] Got endpoints: latency-svc-p7tsr [605.545438ms]
  I0508 15:09:01.244063 22 service_latency.go:351] Created: latency-svc-cx77l
  I0508 15:09:01.343660 22 service_latency.go:358] Got endpoints: latency-svc-9jntm [795.484897ms]
  I0508 15:09:01.343660 22 service_latency.go:358] Got endpoints: latency-svc-k78g4 [764.147835ms]
  I0508 15:09:01.349042 22 service_latency.go:351] Created: latency-svc-wgkch
  I0508 15:09:01.377056 22 service_latency.go:358] Got endpoints: latency-svc-d8ptc [896.988772ms]
  I0508 15:09:01.379214 22 service_latency.go:351] Created: latency-svc-pbtn8
  I0508 15:09:01.415349 22 service_latency.go:351] Created: latency-svc-zrz4q
  I0508 15:09:01.418549 22 service_latency.go:358] Got endpoints: latency-svc-vmcz8 [950.441476ms]
  I0508 15:09:01.482275 22 service_latency.go:351] Created: latency-svc-bdzxx
  I0508 15:09:01.504620 22 service_latency.go:358] Got endpoints: latency-svc-hwkh9 [968.930445ms]
  I0508 15:09:01.567032 22 service_latency.go:358] Got endpoints: latency-svc-cx77l [515.897254ms]
  I0508 15:09:01.576019 22 service_latency.go:351] Created: latency-svc-9xkwz
  I0508 15:09:01.603963 22 service_latency.go:358] Got endpoints: latency-svc-wgkch [529.96207ms]
  I0508 15:09:01.641323 22 service_latency.go:358] Got endpoints: latency-svc-pbtn8 [547.651122ms]
  I0508 15:09:01.642144 22 service_latency.go:351] Created: latency-svc-nd74v
  I0508 15:09:01.692965 22 service_latency.go:358] Got endpoints: latency-svc-zrz4q [599.181243ms]
  I0508 15:09:01.707753 22 service_latency.go:358] Got endpoints: latency-svc-bdzxx [613.914727ms]
  I0508 15:09:01.710723 22 service_latency.go:351] Created: latency-svc-wkzx5
  I0508 15:09:01.728124 22 service_latency.go:351] Created: latency-svc-vt9m7
  I0508 15:09:01.781629 22 service_latency.go:358] Got endpoints: latency-svc-9xkwz [687.985859ms]
  I0508 15:09:01.795639 22 service_latency.go:351] Created: latency-svc-5rnwb
  I0508 15:09:01.850346 22 service_latency.go:358] Got endpoints: latency-svc-nd74v [678.603304ms]
  I0508 15:09:01.868998 22 service_latency.go:351] Created: latency-svc-kddcw
  I0508 15:09:01.892970 22 service_latency.go:358] Got endpoints: latency-svc-wkzx5 [691.472941ms]
  I0508 15:09:01.918373 22 service_latency.go:351] Created: latency-svc-g68hg
  I0508 15:09:01.918976 22 service_latency.go:358] Got endpoints: latency-svc-vt9m7 [717.178061ms]
  I0508 15:09:01.936319 22 service_latency.go:351] Created: latency-svc-4htfj
  I0508 15:09:01.971962 22 service_latency.go:358] Got endpoints: latency-svc-5rnwb [756.866178ms]
  I0508 15:09:02.003413 22 service_latency.go:351] Created: latency-svc-cmt2k
  I0508 15:09:02.021292 22 service_latency.go:358] Got endpoints: latency-svc-kddcw [677.570092ms]
  I0508 15:09:02.029617 22 service_latency.go:351] Created: latency-svc-tzqhb
  I0508 15:09:02.052259 22 service_latency.go:351] Created: latency-svc-8lsh2
  I0508 15:09:02.097243 22 service_latency.go:358] Got endpoints: latency-svc-g68hg [748.302589ms]
  I0508 15:09:02.115341 22 service_latency.go:358] Got endpoints: latency-svc-4htfj [738.230606ms]
  I0508 15:09:02.125802 22 service_latency.go:351] Created: latency-svc-zdjgt
  I0508 15:09:02.146915 22 service_latency.go:351] Created: latency-svc-fkctw
  I0508 15:09:02.160659 22 service_latency.go:358] Got endpoints: latency-svc-cmt2k [740.376151ms]
  I0508 15:09:02.177013 22 service_latency.go:351] Created: latency-svc-zw8xr
  I0508 15:09:02.240378 22 service_latency.go:358] Got endpoints: latency-svc-tzqhb [735.126385ms]
  I0508 15:09:02.241055 22 service_latency.go:351] Created: latency-svc-5w8sr
  I0508 15:09:02.276023 22 service_latency.go:351] Created: latency-svc-vdg7x
  I0508 15:09:02.278733 22 service_latency.go:358] Got endpoints: latency-svc-8lsh2 [711.63735ms]
  I0508 15:09:02.287054 22 service_latency.go:351] Created: latency-svc-gdvx6
  I0508 15:09:02.309932 22 service_latency.go:358] Got endpoints: latency-svc-zdjgt [705.919934ms]
  I0508 15:09:02.357515 22 service_latency.go:358] Got endpoints: latency-svc-fkctw [715.656496ms]
  I0508 15:09:02.416381 22 service_latency.go:358] Got endpoints: latency-svc-zw8xr [723.336032ms]
  I0508 15:09:02.451951 22 service_latency.go:358] Got endpoints: latency-svc-5w8sr [744.149269ms]
  I0508 15:09:02.512358 22 service_latency.go:358] Got endpoints: latency-svc-vdg7x [730.67935ms]
  I0508 15:09:02.566167 22 service_latency.go:358] Got endpoints: latency-svc-gdvx6 [715.720611ms]
  I0508 15:09:02.566421 22 service_latency.go:114] Latencies: [81.509459ms 102.359351ms 137.479853ms 138.589975ms 140.338503ms 147.305335ms 152.033277ms 161.362513ms 166.536993ms 169.390379ms 190.120834ms 194.676012ms 217.773066ms 220.223996ms 245.019815ms 245.651318ms 270.960745ms 272.83925ms 291.511804ms 296.175153ms 303.942042ms 323.438926ms 323.558034ms 326.029469ms 333.721996ms 343.680378ms 359.912044ms 369.258998ms 374.741489ms 383.301274ms 386.284904ms 389.020136ms 394.793306ms 395.086774ms 395.709265ms 397.313572ms 397.754544ms 407.997827ms 419.871603ms 426.760688ms 433.620342ms 440.962064ms 446.540323ms 449.110803ms 452.040591ms 457.012324ms 465.606494ms 466.617901ms 482.158087ms 482.280508ms 492.357732ms 495.674771ms 498.395949ms 499.881981ms 515.897254ms 517.074295ms 522.403714ms 526.067212ms 529.96207ms 543.478457ms 547.651122ms 547.863507ms 548.065076ms 558.501352ms 558.563015ms 567.438004ms 577.069798ms 582.553611ms 584.266363ms 585.424945ms 594.115984ms 599.181243ms 600.653398ms 600.747253ms 605.545438ms 608.525263ms 613.914727ms 624.728991ms 625.502496ms 626.715808ms 631.626623ms 639.722221ms 639.791215ms 644.500409ms 653.231241ms 665.933356ms 667.528165ms 667.830321ms 671.600764ms 672.541228ms 672.831161ms 672.979641ms 675.20373ms 677.570092ms 678.603304ms 679.848842ms 680.492253ms 683.046666ms 684.151365ms 684.786823ms 686.553341ms 686.87475ms 687.985859ms 690.824021ms 691.472941ms 691.734311ms 693.953656ms 695.380896ms 696.819488ms 697.329643ms 699.643556ms 700.864616ms 702.388224ms 703.691494ms 705.919934ms 707.593632ms 708.271232ms 708.97889ms 710.564065ms 711.63735ms 713.886421ms 713.938885ms 714.326646ms 715.072692ms 715.656496ms 715.720611ms 715.9647ms 717.067077ms 717.178061ms 721.00291ms 722.459287ms 723.336032ms 724.956731ms 729.43715ms 729.692125ms 730.67935ms 730.895398ms 732.221382ms 732.728595ms 733.188162ms 733.231623ms 734.116881ms 734.224006ms 735.126385ms 737.544168ms 738.230606ms 740.063897ms 740.119537ms 740.376151ms 741.442269ms 741.873612ms 742.416211ms 742.432445ms 742.725464ms 742.881499ms 743.475271ms 744.149269ms 745.43532ms 745.797378ms 747.692795ms 748.302589ms 750.262925ms 752.002541ms 753.23149ms 753.952984ms 756.866178ms 757.089364ms 758.987828ms 759.761157ms 760.439996ms 761.08352ms 763.285151ms 764.147835ms 765.841579ms 766.504902ms 771.836235ms 777.141736ms 781.13573ms 781.317994ms 795.484897ms 796.193476ms 817.356911ms 865.680927ms 896.988772ms 905.395134ms 915.675698ms 925.066091ms 950.441476ms 966.738227ms 968.930445ms 993.802563ms 1.020768511s 1.044269493s 1.081303566s 1.108356018s 1.185444554s 1.195462717s 1.231626832s 1.267921403s 1.26959282s]
  I0508 15:09:02.566449 22 service_latency.go:118] 50 %ile: 686.553341ms
  I0508 15:09:02.566506 22 service_latency.go:119] 90 %ile: 796.193476ms
  I0508 15:09:02.566529 22 service_latency.go:120] 99 %ile: 1.267921403s
  I0508 15:09:02.566639 22 service_latency.go:121] Total sample count: 200
  I0508 15:09:02.566848 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7747" for this suite. @ 05/08/25 15:09:02.593
• [10.943 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/08/25 15:09:02.604
  I0508 15:09:02.604905 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/08/25 15:09:02.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:09:02.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:09:02.63
  STEP: mirroring a new custom Endpoint @ 05/08/25 15:09:02.68
  I0508 15:09:02.696162      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:09:02.705124 22 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 05/08/25 15:09:04.708
  I0508 15:09:04.716559      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 05/08/25 15:09:04.724
  I0508 15:09:04.733358      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:09:04.744770 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-4728" for this suite. @ 05/08/25 15:09:04.749
• [2.160 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 05/08/25 15:09:04.765
  I0508 15:09:04.765797 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 15:09:04.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:09:04.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:09:04.791
  STEP: Creating Indexed job @ 05/08/25 15:09:04.794
  STEP: Ensuring job reaches completions @ 05/08/25 15:09:04.807
  STEP: Ensuring pods with index for job exist @ 05/08/25 15:09:14.859
  I0508 15:09:14.870314 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-64" for this suite. @ 05/08/25 15:09:14.878
• [10.137 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 05/08/25 15:09:14.902
  I0508 15:09:14.902682 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 15:09:14.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:09:14.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:09:14.94
  STEP: Creating configMap with name configmap-test-volume-map-9594e008-9626-471b-bae8-40a2b89a9fd0 @ 05/08/25 15:09:14.942
  STEP: Creating a pod to test consume configMaps @ 05/08/25 15:09:14.951
  STEP: Saw pod success @ 05/08/25 15:09:19.027
  I0508 15:09:19.038927 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-configmaps-3f06d32d-4297-443e-bc6f-4fe2bcdbf950 container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 15:09:19.044
  I0508 15:09:19.114987 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8701" for this suite. @ 05/08/25 15:09:19.123
• [4.234 seconds]
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 05/08/25 15:09:19.137
  I0508 15:09:19.137239 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pods @ 05/08/25 15:09:19.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:09:19.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:09:19.178
  STEP: Create a pod @ 05/08/25 15:09:19.18
  STEP: patching /status @ 05/08/25 15:09:21.22
  I0508 15:09:21.237050 22 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0508 15:09:21.237318 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-665" for this suite. @ 05/08/25 15:09:21.24
• [2.114 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/08/25 15:09:21.251
  I0508 15:09:21.251826 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename daemonsets @ 05/08/25 15:09:21.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:09:21.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:09:21.296
  I0508 15:09:21.345562 22 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/08/25 15:09:21.353
  I0508 15:09:21.459155 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:09:21.459196 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 15:09:22.360610 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:09:22.360660 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 15:09:23.359671 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0508 15:09:23.359706 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/08/25 15:09:23.366
  STEP: Check that daemon pods images are updated. @ 05/08/25 15:09:23.466
  I0508 15:09:23.468790 22 daemon_set.go:1193] Wrong image for pod: daemon-set-6qbkc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0508 15:09:24.469407 22 daemon_set.go:1193] Wrong image for pod: daemon-set-6qbkc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0508 15:09:25.476991 22 daemon_set.go:1193] Wrong image for pod: daemon-set-6qbkc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0508 15:09:26.468447 22 daemon_set.go:1193] Wrong image for pod: daemon-set-6qbkc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0508 15:09:26.468522 22 daemon_set.go:1198] Pod daemon-set-w864l is not available
  I0508 15:09:28.469009 22 daemon_set.go:1198] Pod daemon-set-8cjdt is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/08/25 15:09:28.471
  I0508 15:09:28.475880 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0508 15:09:28.476001 22 fixtures.go:131] Node ip-172-31-27-218.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0508 15:09:29.481415 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0508 15:09:29.481458 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/08/25 15:09:29.491
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4443, will wait for the garbage collector to delete the pods @ 05/08/25 15:09:29.491
  I0508 15:09:29.552846 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.06635ms
  I0508 15:09:29.653654 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.810197ms
  I0508 15:09:31.756911 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:09:31.756949 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0508 15:09:31.759148 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42296"},"items":null}

  I0508 15:09:31.761027 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42296"},"items":null}

  I0508 15:09:31.767607 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4443" for this suite. @ 05/08/25 15:09:31.769
• [10.526 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/08/25 15:09:31.778
  I0508 15:09:31.778369 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename watch @ 05/08/25 15:09:31.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:09:31.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:09:31.811
  STEP: creating a watch on configmaps @ 05/08/25 15:09:31.817
  STEP: creating a new configmap @ 05/08/25 15:09:31.822
  STEP: modifying the configmap once @ 05/08/25 15:09:31.833
  STEP: closing the watch once it receives two notifications @ 05/08/25 15:09:31.846
  I0508 15:09:31.846513 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4404  f95066da-7019-4e7b-88f7-1272ce90dd5a 42303 0 2025-05-08 15:09:31 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-08 15:09:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 15:09:31.846800 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4404  f95066da-7019-4e7b-88f7-1272ce90dd5a 42304 0 2025-05-08 15:09:31 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-08 15:09:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/08/25 15:09:31.846
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/08/25 15:09:31.856
  STEP: deleting the configmap @ 05/08/25 15:09:31.857
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/08/25 15:09:31.881
  I0508 15:09:31.881603 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4404  f95066da-7019-4e7b-88f7-1272ce90dd5a 42305 0 2025-05-08 15:09:31 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-08 15:09:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 15:09:31.881754 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4404  f95066da-7019-4e7b-88f7-1272ce90dd5a 42306 0 2025-05-08 15:09:31 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-08 15:09:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 15:09:31.881870 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4404" for this suite. @ 05/08/25 15:09:31.885
• [0.121 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 05/08/25 15:09:31.899
  I0508 15:09:31.899585 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename replication-controller @ 05/08/25 15:09:31.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:09:31.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:09:31.925
  STEP: creating a ReplicationController @ 05/08/25 15:09:31.93
  STEP: waiting for RC to be added @ 05/08/25 15:09:31.944
  STEP: waiting for available Replicas @ 05/08/25 15:09:31.944
  STEP: patching ReplicationController @ 05/08/25 15:09:33.636
  STEP: waiting for RC to be modified @ 05/08/25 15:09:33.647
  STEP: patching ReplicationController status @ 05/08/25 15:09:33.647
  STEP: waiting for RC to be modified @ 05/08/25 15:09:33.661
  STEP: waiting for available Replicas @ 05/08/25 15:09:33.661
  STEP: fetching ReplicationController status @ 05/08/25 15:09:33.67
  STEP: patching ReplicationController scale @ 05/08/25 15:09:33.672
  STEP: waiting for RC to be modified @ 05/08/25 15:09:33.692
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/08/25 15:09:33.692
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/08/25 15:09:35.202
  STEP: updating ReplicationController status @ 05/08/25 15:09:35.204
  STEP: waiting for RC to be modified @ 05/08/25 15:09:35.23
  STEP: listing all ReplicationControllers @ 05/08/25 15:09:35.23
  STEP: checking that ReplicationController has expected values @ 05/08/25 15:09:35.234
  STEP: deleting ReplicationControllers by collection @ 05/08/25 15:09:35.234
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/08/25 15:09:35.27
  I0508 15:09:35.349026 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0508 15:09:35.349337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9363" for this suite. @ 05/08/25 15:09:35.351
• [3.460 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 05/08/25 15:09:35.36
  I0508 15:09:35.360365 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:09:35.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:09:35.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:09:35.381
  STEP: Setting up server cert @ 05/08/25 15:09:35.415
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:09:36.066
  STEP: Deploying the webhook pod @ 05/08/25 15:09:36.074
  STEP: Wait for the deployment to be ready @ 05/08/25 15:09:36.114
  I0508 15:09:36.123909 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0508 15:09:36.350253      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:37.350464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:09:38.13
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:09:38.162
  E0508 15:09:38.350502      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:09:39.164067 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/08/25 15:09:39.317
  STEP: Creating a configMap that should be mutated @ 05/08/25 15:09:39.331
  E0508 15:09:39.350696      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the collection of validation webhooks @ 05/08/25 15:09:39.375
  STEP: Creating a configMap that should not be mutated @ 05/08/25 15:09:39.482
  I0508 15:09:39.609576 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3182" for this suite. @ 05/08/25 15:09:39.615
  STEP: Destroying namespace "webhook-markers-7615" for this suite. @ 05/08/25 15:09:39.644
• [4.292 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 05/08/25 15:09:39.653
  I0508 15:09:39.653583 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename taint-single-pod @ 05/08/25 15:09:39.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:09:39.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:09:39.673
  I0508 15:09:39.680998 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0508 15:09:40.350856      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:41.351112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:42.352001      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:43.352125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:44.352183      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:45.352492      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:46.352679      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:47.352821      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:48.352967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:49.353779      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:50.353852      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:51.353987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:52.354981      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:53.355088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:54.355685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:55.355769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:56.356091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:57.356228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:58.356328      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:09:59.357378      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:00.357552      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:01.357686      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:02.358687      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:03.359069      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:04.360035      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:05.360186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:06.360334      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:07.360427      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:08.360592      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:09.360704      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:10.361758      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:11.362071      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:12.362709      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:13.362955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:14.363763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:15.363958      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:16.364795      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:17.365733      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:18.365753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:19.365867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:20.366756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:21.366977      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:22.368103      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:23.368286      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:24.368421      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:25.368655      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:26.368688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:27.369768      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:28.370785      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:29.370984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:30.372048      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:31.372274      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:32.372900      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:33.373901      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:34.374241      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:35.374889      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:36.375028      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:37.375858      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:38.376586      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:39.376669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:10:39.682114 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0508 15:10:39.684915 22 taints.go:144] Starting informer...
  STEP: Starting pod... @ 05/08/25 15:10:39.684
  I0508 15:10:39.903742 22 taints.go:294] Pod is running on ip-172-31-27-218.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/08/25 15:10:39.903
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/08/25 15:10:39.924
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/08/25 15:10:39.93
  I0508 15:10:39.930463 22 taints.go:313] Pod wasn't evicted. Proceeding
  I0508 15:10:39.930582 22 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/08/25 15:10:39.961
  STEP: Waiting some time to make sure that toleration time passed. @ 05/08/25 15:10:39.97
  E0508 15:10:40.380727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:41.381776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:42.381914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:43.382001      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:44.382148      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:45.382275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:46.382374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:47.382512      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:48.382609      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:49.382818      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:50.383540      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:51.383786      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:52.384060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:53.384367      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:54.385293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:55.385397      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:56.385525      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:57.385711      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:58.386410      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:10:59.387381      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:00.387568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:01.387845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:02.387871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:03.388033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:04.388169      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:05.388250      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:06.388451      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:07.388667      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:08.389764      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:09.389878      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:10.389974      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:11.390110      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:12.390526      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:13.390699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:14.390999      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:15.391217      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:16.391355      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:17.391566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:18.391786      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:19.391948      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:20.392166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:21.392383      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:22.392618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:23.392671      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:24.392808      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:25.393044      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:26.393281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:27.393479      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:28.393800      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:29.394772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:30.395005      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:31.395322      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:32.395396      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:33.395936      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:34.396183      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:35.396390      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:36.396622      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:37.396646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:38.396765      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:39.396885      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:40.397770      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:41.397870      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:42.397955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:43.398002      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:44.398727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:45.399572      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:46.399693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:47.400382      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:48.400077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:49.400224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:50.400410      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:51.400443      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:52.400592      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:53.400651      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:54.401664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:11:54.971306 22 taints.go:329] Pod wasn't evicted. Test successful
  I0508 15:11:54.971509 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3134" for this suite. @ 05/08/25 15:11:54.974
• [135.329 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 05/08/25 15:11:54.982
  I0508 15:11:54.982267 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename csinodes @ 05/08/25 15:11:54.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:11:55.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:11:55.009
  STEP: Creating initial csiNode "e2e-csinode-ddrpb" @ 05/08/25 15:11:55.011
  STEP: Getting initial csiNode "e2e-csinode-ddrpb" @ 05/08/25 15:11:55.019
  STEP: Patching initial csiNode: "e2e-csinode-ddrpb" @ 05/08/25 15:11:55.021
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-ddrpb=patched" @ 05/08/25 15:11:55.03
  STEP: Delete initial csiNode: "e2e-csinode-ddrpb" @ 05/08/25 15:11:55.032
  STEP: Confirm deletion of csiNode "e2e-csinode-ddrpb" @ 05/08/25 15:11:55.039
  STEP: Creating replacement csiNode "e2e-csinode-9wj2j" @ 05/08/25 15:11:55.042
  STEP: Getting replacement csiNode "e2e-csinode-9wj2j" @ 05/08/25 15:11:55.049
  STEP: Updating replacement csiNode "e2e-csinode-9wj2j" @ 05/08/25 15:11:55.051
  STEP: DeleteCollection of CSINodes with "e2e-csinode-9wj2j=updated" label @ 05/08/25 15:11:55.061
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-9wj2j=updated" @ 05/08/25 15:11:55.075
  I0508 15:11:55.077799 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-9760" for this suite. @ 05/08/25 15:11:55.08
• [0.115 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 05/08/25 15:11:55.097
  I0508 15:11:55.097395 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 15:11:55.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:11:55.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:11:55.123
  I0508 15:11:55.127876 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9902" for this suite. @ 05/08/25 15:11:55.187
• [0.099 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 05/08/25 15:11:55.196
  I0508 15:11:55.196166 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename security-context @ 05/08/25 15:11:55.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:11:55.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:11:55.223
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/08/25 15:11:55.226
  E0508 15:11:55.402064      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:56.402158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:57.403046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:11:58.403149      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:11:59.244
  I0508 15:11:59.246239 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod security-context-23e825b0-1ac2-49e2-aac4-0dc9dd0c2221 container test-container: <nil>
  STEP: delete the pod @ 05/08/25 15:11:59.257
  I0508 15:11:59.281224 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2476" for this suite. @ 05/08/25 15:11:59.284
• [4.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 05/08/25 15:11:59.292
  I0508 15:11:59.292775 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename dns @ 05/08/25 15:11:59.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:11:59.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:11:59.324
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/08/25 15:11:59.326
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/08/25 15:11:59.326
  STEP: creating a pod to probe DNS @ 05/08/25 15:11:59.326
  STEP: submitting the pod to kubernetes @ 05/08/25 15:11:59.326
  E0508 15:11:59.403980      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:00.407135      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/08/25 15:12:01.359
  STEP: looking for the results for each expected name from probers @ 05/08/25 15:12:01.37
  E0508 15:12:01.407313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:12:01.434150 22 dns_common.go:546] DNS probes using dns-1453/dns-test-94878ac2-002b-4bb5-8989-5e6b60e4f462 succeeded

  STEP: deleting the pod @ 05/08/25 15:12:01.435
  I0508 15:12:01.515854 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1453" for this suite. @ 05/08/25 15:12:01.528
• [2.249 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/08/25 15:12:01.542
  I0508 15:12:01.542109 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename cronjob @ 05/08/25 15:12:01.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:12:01.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:12:01.612
  STEP: Creating a ForbidConcurrent cronjob @ 05/08/25 15:12:01.62
  STEP: Ensuring a job is scheduled @ 05/08/25 15:12:01.645
  E0508 15:12:02.407395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:03.407482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:04.408116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:05.408253      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:06.408676      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:07.408755      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:08.409641      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:09.409811      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:10.410023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:11.410063      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:12.410206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:13.410298      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:14.411432      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:15.411512      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:16.411693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:17.411807      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:18.412741      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:19.412983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:20.413145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:21.413254      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:22.413435      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:23.413713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:24.414618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:25.414821      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:26.414839      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:27.414960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:28.415815      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:29.416015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:30.416118      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:31.416219      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:32.416554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:33.416717      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:34.417717      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:35.417862      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:36.418183      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:37.418297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:38.418536      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:39.418722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:40.418909      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:41.419023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:42.419443      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:43.419546      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:44.420142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:45.420379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:46.420673      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:47.420809      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:48.420948      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:49.421771      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:50.421887      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:51.421994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:52.422578      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:53.422707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:54.423057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:55.423316      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:56.423737      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:57.423843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:58.423976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:12:59.424211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:00.424364      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:01.424466      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/08/25 15:13:01.68
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/08/25 15:13:01.699
  STEP: Ensuring no more jobs are scheduled @ 05/08/25 15:13:01.731
  STEP: Removing cronjob @ 05/08/25 15:13:01.756
  I0508 15:13:01.781107 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7318" for this suite. @ 05/08/25 15:13:01.8
• [60.286 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 05/08/25 15:13:01.828
  I0508 15:13:01.828590 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename cronjob @ 05/08/25 15:13:01.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:13:01.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:13:01.959
  STEP: Creating a cronjob @ 05/08/25 15:13:01.996
  STEP: creating @ 05/08/25 15:13:01.996
  STEP: getting @ 05/08/25 15:13:02.034
  STEP: listing @ 05/08/25 15:13:02.047
  STEP: watching @ 05/08/25 15:13:02.057
  I0508 15:13:02.058016 22 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 05/08/25 15:13:02.063
  STEP: cluster-wide watching @ 05/08/25 15:13:02.076
  I0508 15:13:02.076718 22 cronjob.go:407] starting watch
  STEP: patching @ 05/08/25 15:13:02.083
  STEP: updating @ 05/08/25 15:13:02.114
  I0508 15:13:02.160206 22 cronjob.go:431] waiting for watch events with expected annotations
  I0508 15:13:02.160456 22 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 05/08/25 15:13:02.16
  STEP: updating /status @ 05/08/25 15:13:02.185
  STEP: get /status @ 05/08/25 15:13:02.218
  STEP: deleting @ 05/08/25 15:13:02.224
  STEP: deleting a collection @ 05/08/25 15:13:02.289
  I0508 15:13:02.334188 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8244" for this suite. @ 05/08/25 15:13:02.364
• [0.560 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 05/08/25 15:13:02.389
  I0508 15:13:02.389521 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 15:13:02.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:13:02.424
  E0508 15:13:02.424701      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:13:02.438
  STEP: Creating a job @ 05/08/25 15:13:02.447
  STEP: Ensuring active pods == parallelism @ 05/08/25 15:13:02.457
  E0508 15:13:03.425121      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:04.425289      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 05/08/25 15:13:04.465
  I0508 15:13:04.986346 22 pod_client.go:173] Successfully updated pod "adopt-release-bxccm"
  STEP: Checking that the Job readopts the Pod @ 05/08/25 15:13:04.988
  E0508 15:13:05.425362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:06.425501      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 05/08/25 15:13:07.007
  E0508 15:13:07.426190      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:13:07.526518 22 pod_client.go:173] Successfully updated pod "adopt-release-bxccm"
  STEP: Checking that the Job releases the Pod @ 05/08/25 15:13:07.526
  E0508 15:13:08.426266      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:09.426913      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:13:09.533562 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2722" for this suite. @ 05/08/25 15:13:09.536
• [7.156 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 05/08/25 15:13:09.545
  I0508 15:13:09.545858 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename gc @ 05/08/25 15:13:09.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:13:09.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:13:09.574
  STEP: create the rc @ 05/08/25 15:13:09.637
  I0508 15:13:09.646375      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0508 15:13:10.426986      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:11.427788      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:12.427935      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:13.428045      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:14.428756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:15.428811      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/08/25 15:13:15.699
  STEP: wait for the rc to be deleted @ 05/08/25 15:13:15.808
  E0508 15:13:16.432710      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:13:17.018197 22 garbage_collector.go:678] 80 pods remaining
  I0508 15:13:17.018642 22 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0508 15:13:17.027498 22 garbage_collector.go:686] 
  E0508 15:13:17.438523      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:13:18.438246 22 garbage_collector.go:678] 68 pods remaining
  I0508 15:13:18.438289 22 garbage_collector.go:685] 65 pods has nil DeletionTimestamp
  I0508 15:13:18.438312 22 garbage_collector.go:686] 
  E0508 15:13:18.444785      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:13:19.288238 22 garbage_collector.go:678] 57 pods remaining
  I0508 15:13:19.288403 22 garbage_collector.go:685] 55 pods has nil DeletionTimestamp
  I0508 15:13:19.288474 22 garbage_collector.go:686] 
  E0508 15:13:19.446872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:13:20.080068 22 garbage_collector.go:678] 44 pods remaining
  I0508 15:13:20.080230 22 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0508 15:13:20.080308 22 garbage_collector.go:686] 
  E0508 15:13:20.456114      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:13:21.250966 22 garbage_collector.go:678] 31 pods remaining
  I0508 15:13:21.251011 22 garbage_collector.go:685] 26 pods has nil DeletionTimestamp
  I0508 15:13:21.251024 22 garbage_collector.go:686] 
  E0508 15:13:21.457204      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:13:22.135702 22 garbage_collector.go:678] 16 pods remaining
  I0508 15:13:22.135845 22 garbage_collector.go:685] 14 pods has nil DeletionTimestamp
  I0508 15:13:22.135922 22 garbage_collector.go:686] 
  E0508 15:13:22.457337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:13:23.144966 22 garbage_collector.go:678] 2 pods remaining
  I0508 15:13:23.145149 22 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0508 15:13:23.145230 22 garbage_collector.go:686] 
  E0508 15:13:23.460277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/08/25 15:13:23.862
  I0508 15:13:24.213146 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0508 15:13:24.213386 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8418" for this suite. @ 05/08/25 15:13:24.237
• [14.740 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 05/08/25 15:13:24.286
  I0508 15:13:24.286196 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:13:24.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:13:24.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:13:24.322
  STEP: Creating configMap with name projected-configmap-test-volume-map-81dc9af8-8bbc-449f-8e1e-8b25a01b6e6c @ 05/08/25 15:13:24.325
  STEP: Creating a pod to test consume configMaps @ 05/08/25 15:13:24.409
  E0508 15:13:24.461352      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:25.471661      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:26.466859      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:27.467719      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:28.477056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:29.478331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:30.478527      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:31.478516      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:32.480722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:33.481055      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:34.481178      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:35.484713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:36.490935      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:37.492745      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:38.493725      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:39.494767      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:40.494830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:41.495889      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:42.496232      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:43.496669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:44.497744      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:45.498339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:46.498376      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:13:47.088
  I0508 15:13:47.091073 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-projected-configmaps-8eb917ae-710a-4b80-ad32-338331e64731 container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 15:13:47.12
  I0508 15:13:47.160634 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3753" for this suite. @ 05/08/25 15:13:47.165
• [22.895 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 05/08/25 15:13:47.181
  I0508 15:13:47.181300 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename svcaccounts @ 05/08/25 15:13:47.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:13:47.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:13:47.233
  E0508 15:13:47.498980      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:48.499091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 05/08/25 15:13:49.29
  I0508 15:13:49.290902 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4028 pod-service-account-6c17f6ad-d06c-4c11-b896-d7f2ac7526d2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/08/25 15:13:49.419
  I0508 15:13:49.419476 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4028 pod-service-account-6c17f6ad-d06c-4c11-b896-d7f2ac7526d2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  E0508 15:13:49.500162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 05/08/25 15:13:49.588
  I0508 15:13:49.588709 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4028 pod-service-account-6c17f6ad-d06c-4c11-b896-d7f2ac7526d2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0508 15:13:49.745097 22 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-4028"
  I0508 15:13:49.747666 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4028" for this suite. @ 05/08/25 15:13:49.751
• [2.580 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 05/08/25 15:13:49.761
  I0508 15:13:49.761393 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 15:13:49.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:13:49.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:13:49.812
  STEP: Creating configMap with name configmap-test-volume-2bc29c8d-8000-4fbf-8f88-d6ce0ee62b38 @ 05/08/25 15:13:49.817
  STEP: Creating a pod to test consume configMaps @ 05/08/25 15:13:49.828
  E0508 15:13:50.500655      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:51.500798      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:52.501831      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:53.501935      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:13:53.868
  I0508 15:13:53.870157 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-configmaps-01b18a61-6378-474d-90b7-92f079972704 container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 15:13:53.874
  I0508 15:13:53.905593 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-994" for this suite. @ 05/08/25 15:13:53.908
• [4.160 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 05/08/25 15:13:53.927
  I0508 15:13:53.927152 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename resourcequota @ 05/08/25 15:13:53.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:13:53.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:13:53.948
  E0508 15:13:54.502576      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:55.503271      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:56.503659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:57.504640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:58.505194      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:13:59.505326      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:00.505744      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:01.505883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:02.507066      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:03.507179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:04.507780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:05.508759      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:06.508917      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:07.508964      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:08.509090      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:09.509806      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:10.509923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/08/25 15:14:10.953
  E0508 15:14:11.510510      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:12.511427      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:13.512385      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:14.513023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:15.513157      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/08/25 15:14:15.957
  STEP: Ensuring resource quota status is calculated @ 05/08/25 15:14:15.966
  E0508 15:14:16.513949      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:17.514072      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 05/08/25 15:14:17.968
  STEP: Ensuring resource quota status captures configMap creation @ 05/08/25 15:14:17.991
  E0508 15:14:18.515091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:19.516152      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 05/08/25 15:14:19.994
  STEP: Ensuring resource quota status released usage @ 05/08/25 15:14:20.003
  E0508 15:14:20.517070      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:21.517184      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:22.007496 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3457" for this suite. @ 05/08/25 15:14:22.01
• [28.093 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 05/08/25 15:14:22.02
  I0508 15:14:22.020385 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-probe @ 05/08/25 15:14:22.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:14:22.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:14:22.055
  STEP: Creating pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396 @ 05/08/25 15:14:22.058
  E0508 15:14:22.517814      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:23.518137      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/08/25 15:14:24.078
  I0508 15:14:24.080714 22 container_probe.go:1748] Initial restart count of pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 is 0
  I0508 15:14:24.082473 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:24.518401      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:25.518514      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:26.085429 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:26.518962      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:27.519045      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:28.088003 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:28.519482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:29.519667      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:30.090429 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:30.519914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:31.520035      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:32.094106 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:32.520674      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:33.520776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:34.096747 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:34.521212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:35.521332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:36.100596 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:36.522101      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:37.522207      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:38.103197 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:38.522628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:39.523041      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:40.105848 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:40.523148      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:41.523275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:42.109517 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:42.524071      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:43.524216      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:44.112458 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:44.524951      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:45.525038      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:46.115091 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:46.525506      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:47.525604      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:48.118468 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:48.525905      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:49.526098      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:50.121238 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:50.526791      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:51.526926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:52.124418 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:52.527871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:53.528090      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:54.127534 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:54.528987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:55.529721      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:56.130946 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:56.530483      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:57.530585      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:14:58.134294 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:14:58.530704      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:14:59.530918      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:00.138520 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:00.531914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:01.532191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:02.166480 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:02.532615      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:03.532849      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:04.169121 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:04.533666      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:05.533901      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:06.171958 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:06.534489      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:07.535491      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:08.174496 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:08.535877      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:09.536072      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:10.177113 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:10.536659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:11.537752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:12.180028 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:12.538497      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:13.538732      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:14.183074 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:14.539555      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:15.539788      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:16.185773 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:16.539924      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:17.540028      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:18.189482 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:18.540897      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:19.541742      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:20.192881 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:20.542461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:21.542587      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:22.195837 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:22.543365      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:23.543563      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:24.199048 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:24.544519      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:25.544748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:26.202094 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:26.545549      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:27.545700      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:28.204735 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:28.546139      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:29.546338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:30.207239 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:30.546476      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:31.546567      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:32.210732 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:32.547152      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:33.547345      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:34.213678 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:34.548160      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:35.548280      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:36.216328 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:36.548793      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:37.548902      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:38.219202 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:38.549618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:39.549799      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:40.221571 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:40.549957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:41.550083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:42.224654 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:42.551014      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:43.551138      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:44.279987 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:44.551359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:45.551436      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:46.282794 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:46.551847      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:47.551968      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:48.285555 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:48.552076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:49.552465      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:50.289075 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:50.552441      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:51.552597      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:52.291950 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:52.553337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:53.553593      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:54.295689 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:54.554107      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:55.554404      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:56.303597 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:56.554309      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:57.555098      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:15:58.306061 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:15:58.555399      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:15:59.556068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:00.309022 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:00.556174      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:01.556319      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:02.313113 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:02.556467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:03.556661      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:04.315741 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:04.557062      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:05.557735      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:06.318259 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:06.558635      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:07.558911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:08.320808 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:08.559107      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:09.559281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:10.324332 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:10.559388      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:11.559594      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:12.328148 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:12.560475      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:13.560663      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:14.330581 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:14.560778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:15.561762      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:16.333775 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:16.562153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:17.562305      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:18.339980 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:18.563307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:19.563473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:20.342521 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:20.563841      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:21.564070      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:22.345410 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:22.564710      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:23.564918      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:24.348138 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:24.565500      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:25.566261      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:26.351572 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:26.566940      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:27.567170      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:28.354055 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:28.567338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:29.567426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:30.356974 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:30.568267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:31.568550      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:32.359659 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:32.568989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:33.569121      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:34.362045 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:34.569302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:35.569722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:36.369527 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:36.570899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:37.570954      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:38.372154 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:38.571394      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:39.571532      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:40.374562 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:40.571861      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:41.572078      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:42.377607 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:42.572864      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:43.573005      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:44.380552 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:44.573777      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:45.574080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:46.383174 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:46.574414      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:47.574640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:48.385802 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:48.575158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:49.575294      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:50.388556 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:50.575858      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:51.576306      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:52.392687 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:52.577018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:53.577727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:54.395938 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:54.578251      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:55.578457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:56.398232 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:56.579539      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:57.579687      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:16:58.400840 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:16:58.580090      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:16:59.580307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:00.403282 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:00.580577      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:01.580795      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:02.406280 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:02.581630      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:03.582370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:04.409624 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:04.582924      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:05.583091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:06.413315 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:06.583857      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:07.584070      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:08.416158 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:08.584374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:09.584538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:10.418918 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:10.585250      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:11.585404      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:12.422020 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:12.586436      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:13.586570      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:14.425122 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:14.587426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:15.587574      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:16.428154 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:16.588146      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:17.588273      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:18.430857 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:18.589075      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:19.589197      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:20.433385 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:20.589749      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:21.589964      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:22.436206 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:22.590499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:23.590744      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:24.439140 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:24.591594      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:25.591701      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:26.441542 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:26.591813      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:27.591993      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:28.444060 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:28.592408      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:29.592663      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:30.446695 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:30.592952      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:31.593215      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:32.449283 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:32.593782      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:33.593930      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:34.451832 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:34.593984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:35.594140      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:36.454175 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:36.594481      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:37.594600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:38.456743 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:38.594940      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:39.595859      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:40.460043 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:40.596258      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:41.596373      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:42.462683 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:42.596890      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:43.597766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:44.465002 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:44.598284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:45.598481      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:46.467580 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:46.598861      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:47.599000      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:48.470058 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:48.599150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:49.599228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:50.473372 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:50.599573      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:51.600325      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:52.476876 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:52.601090      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:53.601301      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:54.480085 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:54.602263      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:55.602641      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:56.482496 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:56.602762      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:57.602937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:17:58.485235 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:17:58.603440      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:17:59.604550      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:00.487608 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:18:00.604827      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:01.605046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:02.493901 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:18:02.606534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:03.606516      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:04.497171 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:18:04.607358      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:05.607487      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:06.499853 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:18:06.608146      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:07.608273      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:08.502130 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:18:08.608291      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:09.608468      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:10.505087 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:18:10.608594      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:11.608645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:12.508002 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:18:12.609229      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:13.609782      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:14.512015 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:18:14.610261      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:15.610487      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:16.514376 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:18:16.611578      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:17.611753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:18.517112 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:18:18.612313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:19.612454      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:20.519613 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:18:20.612804      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:21.613032      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:22.522634 22 container_probe.go:1758] Get pod busybox-253cea07-c71b-46ff-934e-6f39dee3b284 in namespace container-probe-4396
  E0508 15:18:22.613832      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:23.614058      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/08/25 15:18:24.523
  I0508 15:18:24.548685 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4396" for this suite. @ 05/08/25 15:18:24.555
• [242.552 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 05/08/25 15:18:24.572
  I0508 15:18:24.572461 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/08/25 15:18:24.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:18:24.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:18:24.596
  STEP: getting /apis @ 05/08/25 15:18:24.613
  E0508 15:18:24.614817      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting /apis/admissionregistration.k8s.io @ 05/08/25 15:18:24.617
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/08/25 15:18:24.618
  STEP: creating @ 05/08/25 15:18:24.619
  STEP: getting @ 05/08/25 15:18:24.656
  STEP: listing @ 05/08/25 15:18:24.66
  STEP: watching @ 05/08/25 15:18:24.677
  I0508 15:18:24.677737 22 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 05/08/25 15:18:24.678
  STEP: updating @ 05/08/25 15:18:24.711
  I0508 15:18:24.781494 22 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0508 15:18:24.781633 22 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I0508 15:18:24.781761 22 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 05/08/25 15:18:24.781
  STEP: patching /status @ 05/08/25 15:18:24.785
  STEP: updating /status @ 05/08/25 15:18:24.794
  STEP: deleting @ 05/08/25 15:18:24.812
  STEP: deleting a collection @ 05/08/25 15:18:24.831
  I0508 15:18:24.861375 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9216" for this suite. @ 05/08/25 15:18:24.863
• [0.300 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 05/08/25 15:18:24.872
  I0508 15:18:24.872888 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 15:18:24.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:18:24.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:18:24.894
  STEP: creating service in namespace services-7281 @ 05/08/25 15:18:24.896
  STEP: creating service affinity-clusterip in namespace services-7281 @ 05/08/25 15:18:24.896
  I0508 15:18:24.968839 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0508 15:18:25.614967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:26.616822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:26.985988 22 resource.go:361] Creating new exec pod
  E0508 15:18:27.616936      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:28.617738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:29.009083 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-7281 exec execpod-affinityc4qdz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0508 15:18:29.137150 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.43.203.87) 80 port [tcp/http] succeeded!\n"
  I0508 15:18:29.137249 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:18:29.137333 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-7281 exec execpod-affinityc4qdz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.203.87 80'
  I0508 15:18:29.263977 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.203.87 80\nConnection to 10.43.203.87 80 port [tcp/http] succeeded!\n"
  I0508 15:18:29.264028 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:18:29.264096 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-7281 exec execpod-affinityc4qdz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/ ; done'
  I0508 15:18:29.476096 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.203.87:80/\n"
  I0508 15:18:29.476147 22 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs\naffinity-clusterip-6dd57cf8dc-wqjrs"
  I0508 15:18:29.476168 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476182 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476193 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476411 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476491 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476530 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476544 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476555 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476566 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476575 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476585 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476595 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476605 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476615 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476625 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476635 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-wqjrs
  I0508 15:18:29.476705 22 service.go:4352] Cleaning up the exec pod
  I0508 15:18:29.601458 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0508 15:18:29.625609      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-7281" for this suite. @ 05/08/25 15:18:29.63
• [4.794 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 05/08/25 15:18:29.667
  I0508 15:18:29.667510 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:18:29.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:18:29.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:18:29.693
  STEP: Setting up server cert @ 05/08/25 15:18:29.719
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:18:30.328
  STEP: Deploying the webhook pod @ 05/08/25 15:18:30.338
  STEP: Wait for the deployment to be ready @ 05/08/25 15:18:30.361
  I0508 15:18:30.375528 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0508 15:18:30.625646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:31.628670      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:18:32.39
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:18:32.421
  E0508 15:18:32.629135      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:33.421866 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0508 15:18:33.424883 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:18:33.629631      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9196-crds.webhook.example.com via the AdmissionRegistration API @ 05/08/25 15:18:33.936
  STEP: Creating a custom resource while v1 is storage version @ 05/08/25 15:18:33.959
  E0508 15:18:34.629746      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:35.629894      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/08/25 15:18:35.989
  STEP: Patching the custom resource while v2 is storage version @ 05/08/25 15:18:36.018
  E0508 15:18:36.630569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:36.688308 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7809" for this suite. @ 05/08/25 15:18:36.691
  STEP: Destroying namespace "webhook-markers-2648" for this suite. @ 05/08/25 15:18:36.705
• [7.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 05/08/25 15:18:36.715
  I0508 15:18:36.715148 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 15:18:36.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:18:36.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:18:36.738
  STEP: Creating configMap with name configmap-test-volume-89d1be65-0640-4745-a0b0-cbfb08267821 @ 05/08/25 15:18:36.741
  STEP: Creating a pod to test consume configMaps @ 05/08/25 15:18:36.755
  E0508 15:18:37.630673      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:38.631049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:39.631814      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:40.631936      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:18:40.774
  I0508 15:18:40.776813 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-configmaps-4c68fb96-7ca0-4986-910d-45c886cc74e5 container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 15:18:40.788
  I0508 15:18:40.818049 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3279" for this suite. @ 05/08/25 15:18:40.82
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/08/25 15:18:40.829
  I0508 15:18:40.829721 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename secrets @ 05/08/25 15:18:40.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:18:40.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:18:40.85
  STEP: Creating secret with name secret-test-37661c21-b33d-4b82-b8c5-761b5f74359e @ 05/08/25 15:18:40.857
  STEP: Creating a pod to test consume secrets @ 05/08/25 15:18:40.866
  E0508 15:18:41.632462      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:42.632706      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:43.633769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:44.634854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:18:44.885
  I0508 15:18:44.887552 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-secrets-a7273ba8-8770-4dee-b4c9-fad8299d6844 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 15:18:44.892
  I0508 15:18:44.914313 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7005" for this suite. @ 05/08/25 15:18:44.916
• [4.095 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/08/25 15:18:44.925
  I0508 15:18:44.925659 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename daemonsets @ 05/08/25 15:18:44.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:18:44.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:18:44.945
  I0508 15:18:45.024731 22 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/08/25 15:18:45.032
  I0508 15:18:45.035183 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:18:45.035219 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/08/25 15:18:45.035
  I0508 15:18:45.144654 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:18:45.144693 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:18:45.635153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:46.146355 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:18:46.146397 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:18:46.635867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:47.141948 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0508 15:18:47.141987 22 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/08/25 15:18:47.143
  I0508 15:18:47.197142 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:18:47.197301 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/08/25 15:18:47.197
  I0508 15:18:47.243547 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:18:47.243585 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:18:47.636002      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:48.225551 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:18:48.225597 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:18:48.637028      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:49.224751 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:18:49.224784 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:18:49.637125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:50.224700 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:18:50.224739 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:18:50.638169      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:51.224548 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0508 15:18:51.224587 22 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/08/25 15:18:51.229
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5194, will wait for the garbage collector to delete the pods @ 05/08/25 15:18:51.229
  I0508 15:18:51.291144 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.073191ms
  I0508 15:18:51.391946 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.799277ms
  E0508 15:18:51.638849      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:52.639366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:53.640163      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:54.095047 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:18:54.095084 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0508 15:18:54.097122 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45852"},"items":null}

  I0508 15:18:54.098652 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45852"},"items":null}

  I0508 15:18:54.125558 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5194" for this suite. @ 05/08/25 15:18:54.132
• [9.216 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/08/25 15:18:54.141
  I0508 15:18:54.141815 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename secrets @ 05/08/25 15:18:54.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:18:54.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:18:54.179
  STEP: Creating secret with name s-test-opt-del-4b7c42f0-b203-43fa-be4b-7abd4b8c4998 @ 05/08/25 15:18:54.202
  STEP: Creating secret with name s-test-opt-upd-dd15ba8c-b93d-4164-91ce-5fd01ebc62a1 @ 05/08/25 15:18:54.211
  STEP: Creating the pod @ 05/08/25 15:18:54.219
  E0508 15:18:54.640712      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:55.641748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-4b7c42f0-b203-43fa-be4b-7abd4b8c4998 @ 05/08/25 15:18:56.255
  STEP: Updating secret s-test-opt-upd-dd15ba8c-b93d-4164-91ce-5fd01ebc62a1 @ 05/08/25 15:18:56.263
  STEP: Creating secret with name s-test-opt-create-77fdb917-6604-41f4-9382-af81d6da2682 @ 05/08/25 15:18:56.272
  STEP: waiting to observe update in volume @ 05/08/25 15:18:56.28
  E0508 15:18:56.642554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:57.642794      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:18:58.298670 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3354" for this suite. @ 05/08/25 15:18:58.301
• [4.168 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 05/08/25 15:18:58.31
  I0508 15:18:58.310475 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename containers @ 05/08/25 15:18:58.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:18:58.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:18:58.329
  STEP: Creating a pod to test override all @ 05/08/25 15:18:58.332
  E0508 15:18:58.642898      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:18:59.643055      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:00.643670      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:01.643835      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:19:02.37
  I0508 15:19:02.375634 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod client-containers-5045e9ce-0e0e-4088-ad91-fd713c024cc6 container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 15:19:02.381
  I0508 15:19:02.424737 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9112" for this suite. @ 05/08/25 15:19:02.428
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 05/08/25 15:19:02.444
  I0508 15:19:02.444457 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename field-validation @ 05/08/25 15:19:02.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:19:02.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:19:02.483
  STEP: apply creating a deployment @ 05/08/25 15:19:02.486
  I0508 15:19:02.496286 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2895" for this suite. @ 05/08/25 15:19:02.534
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 05/08/25 15:19:02.552
  I0508 15:19:02.552964 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:19:02.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:19:02.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:19:02.587
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-180e19f9-eca8-482c-aac2-dd9282820d30 @ 05/08/25 15:19:02.629
  E0508 15:19:02.644224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating the pod @ 05/08/25 15:19:02.646
  E0508 15:19:03.644677      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:04.644976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-180e19f9-eca8-482c-aac2-dd9282820d30 @ 05/08/25 15:19:04.688
  STEP: waiting to observe update in volume @ 05/08/25 15:19:04.696
  E0508 15:19:05.645042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:06.645287      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:19:06.706667 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1236" for this suite. @ 05/08/25 15:19:06.709
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 05/08/25 15:19:06.723
  I0508 15:19:06.723938 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/08/25 15:19:06.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:19:06.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:19:06.75
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/08/25 15:19:06.752
  I0508 15:19:06.753046 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:19:07.645503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:19:08.309430 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:19:08.645627      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:09.645775      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:10.646543      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:11.646959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:12.647811      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:13.650758      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:19:13.800487 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6954" for this suite. @ 05/08/25 15:19:13.805
• [7.090 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 05/08/25 15:19:13.814
  I0508 15:19:13.814330 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 15:19:13.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:19:13.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:19:13.84
  STEP: create deployment with httpd image @ 05/08/25 15:19:13.843
  I0508 15:19:13.843379 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-7489 create -f -'
  I0508 15:19:14.005631 22 builder.go:146] stderr: ""
  I0508 15:19:14.005679 22 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/08/25 15:19:14.005
  I0508 15:19:14.005771 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-7489 diff -f -'
  I0508 15:19:14.258707 22 builder.go:135] rc: 1
  I0508 15:19:14.258919 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-7489 delete -f -'
  I0508 15:19:14.343622 22 builder.go:146] stderr: ""
  I0508 15:19:14.343676 22 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0508 15:19:14.343799 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7489" for this suite. @ 05/08/25 15:19:14.348
• [0.542 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/08/25 15:19:14.356
  I0508 15:19:14.356799 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename init-container @ 05/08/25 15:19:14.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:19:14.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:19:14.384
  STEP: creating the pod @ 05/08/25 15:19:14.387
  I0508 15:19:14.387816 22 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0508 15:19:14.652712      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:15.653181      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:16.653298      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:17.653418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:19:18.089943 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1341" for this suite. @ 05/08/25 15:19:18.093
• [3.746 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 05/08/25 15:19:18.102
  I0508 15:19:18.102484 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 15:19:18.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:19:18.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:19:18.139
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4657 @ 05/08/25 15:19:18.142
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/08/25 15:19:18.172
  STEP: creating service externalsvc in namespace services-4657 @ 05/08/25 15:19:18.172
  I0508 15:19:18.245506 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0508 15:19:18.653731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:19.653860      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 05/08/25 15:19:20.255
  I0508 15:19:20.290359 22 resource.go:361] Creating new exec pod
  E0508 15:19:20.654718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:21.655076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:19:22.318095 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-4657 exec execpodhqmmh -- /bin/sh -x -c nslookup clusterip-service.services-4657.svc.cluster.local'
  I0508 15:19:22.484010 22 builder.go:146] stderr: "+ nslookup clusterip-service.services-4657.svc.cluster.local\n"
  I0508 15:19:22.484057 22 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-4657.svc.cluster.local\tcanonical name = externalsvc.services-4657.svc.cluster.local.\nName:\texternalsvc.services-4657.svc.cluster.local\nAddress: 10.43.198.74\n\n"
  I0508 15:19:22.587431 22 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0508 15:19:22.625022 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4657" for this suite. @ 05/08/25 15:19:22.631
• [4.550 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 05/08/25 15:19:22.652
  I0508 15:19:22.652546 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 15:19:22.653
  E0508 15:19:22.655055      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:19:22.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:19:22.71
  STEP: Creating configMap configmap-9590/configmap-test-39a4e375-9cc9-42ae-bd36-78fdb612fe0c @ 05/08/25 15:19:22.713
  STEP: Creating a pod to test consume configMaps @ 05/08/25 15:19:22.735
  E0508 15:19:23.655231      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:24.655350      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:25.655434      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:26.655549      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:19:26.785
  I0508 15:19:26.787008 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-configmaps-316d4b91-c2fa-4840-b63a-28b48a403b9c container env-test: <nil>
  STEP: delete the pod @ 05/08/25 15:19:26.791
  I0508 15:19:26.818063 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9590" for this suite. @ 05/08/25 15:19:26.821
• [4.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 05/08/25 15:19:26.831
  I0508 15:19:26.831935 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename servicecidr @ 05/08/25 15:19:26.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:19:26.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:19:26.852
  STEP: creating @ 05/08/25 15:19:26.86
  STEP: patching @ 05/08/25 15:19:26.875
  STEP: updating @ 05/08/25 15:19:26.884
  STEP: getting @ 05/08/25 15:19:26.894
  STEP: listing @ 05/08/25 15:19:26.896
  STEP: watching @ 05/08/25 15:19:26.897
  STEP: deleting @ 05/08/25 15:19:26.898
  STEP: deleting a collection @ 05/08/25 15:19:26.907
  I0508 15:19:26.928059 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-7639" for this suite. @ 05/08/25 15:19:26.93
• [0.113 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 05/08/25 15:19:26.945
  I0508 15:19:26.945575 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/08/25 15:19:26.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:19:26.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:19:26.966
  STEP: getting /apis @ 05/08/25 15:19:26.983
  STEP: getting /apis/admissionregistration.k8s.io @ 05/08/25 15:19:26.987
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/08/25 15:19:26.988
  STEP: creating @ 05/08/25 15:19:26.989
  STEP: getting @ 05/08/25 15:19:27.03
  STEP: listing @ 05/08/25 15:19:27.033
  STEP: watching @ 05/08/25 15:19:27.035
  I0508 15:19:27.035063 22 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 05/08/25 15:19:27.036
  STEP: updating @ 05/08/25 15:19:27.044
  I0508 15:19:27.060085 22 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 05/08/25 15:19:27.06
  STEP: deleting a collection @ 05/08/25 15:19:27.071
  I0508 15:19:27.090722 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9946" for this suite. @ 05/08/25 15:19:27.093
• [0.160 seconds]
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 05/08/25 15:19:27.106
  I0508 15:19:27.106104 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 15:19:27.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:19:27.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:19:27.133
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 15:19:27.144
  E0508 15:19:27.655660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:28.655749      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:29.655847      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:30.655966      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:19:31.176
  I0508 15:19:31.177983 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-f9238195-cc83-4117-9588-83357c70015d container client-container: <nil>
  STEP: delete the pod @ 05/08/25 15:19:31.183
  I0508 15:19:31.226984 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-502" for this suite. @ 05/08/25 15:19:31.229
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 05/08/25 15:19:31.238
  I0508 15:19:31.238327 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/08/25 15:19:31.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:19:31.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:19:31.264
  STEP: Creating 50 configmaps @ 05/08/25 15:19:31.267
  E0508 15:19:31.656348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 05/08/25 15:19:31.781
  I0508 15:19:31.800697 22 resource.go:81] Pod name wrapped-volume-race-0a523058-1bc6-4936-9578-c4fa342758c4: Found 0 pods out of 5
  E0508 15:19:32.656646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:33.656760      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:34.657776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:35.658005      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:36.658238      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:19:36.805957 22 resource.go:81] Pod name wrapped-volume-race-0a523058-1bc6-4936-9578-c4fa342758c4: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/08/25 15:19:36.806
  STEP: Creating RC which spawns configmap-volume pods @ 05/08/25 15:19:36.834
  I0508 15:19:36.870146 22 resource.go:81] Pod name wrapped-volume-race-7fb23e93-95a4-4ce1-b7ba-b32e102ffd98: Found 1 pods out of 5
  E0508 15:19:37.658980      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:38.659364      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:39.659587      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:40.659742      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:41.659878      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:19:41.875995 22 resource.go:81] Pod name wrapped-volume-race-7fb23e93-95a4-4ce1-b7ba-b32e102ffd98: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/08/25 15:19:41.876
  STEP: Creating RC which spawns configmap-volume pods @ 05/08/25 15:19:41.893
  I0508 15:19:41.926029 22 resource.go:81] Pod name wrapped-volume-race-b7fb38b9-a413-433b-b099-1eeb62950e81: Found 1 pods out of 5
  E0508 15:19:42.660620      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:43.660716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:44.660786      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:45.661745      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:46.661930      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:19:46.941653 22 resource.go:81] Pod name wrapped-volume-race-b7fb38b9-a413-433b-b099-1eeb62950e81: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/08/25 15:19:46.941
  STEP: deleting ReplicationController wrapped-volume-race-b7fb38b9-a413-433b-b099-1eeb62950e81 in namespace emptydir-wrapper-8807, will wait for the garbage collector to delete the pods @ 05/08/25 15:19:46.953
  I0508 15:19:47.022532 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-b7fb38b9-a413-433b-b099-1eeb62950e81 took: 16.368761ms
  I0508 15:19:47.123176 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-b7fb38b9-a413-433b-b099-1eeb62950e81 pods took: 100.63619ms
  E0508 15:19:47.662861      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:48.663481      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:49.664566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:50.665461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:51.665537      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:52.665592      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-7fb23e93-95a4-4ce1-b7ba-b32e102ffd98 in namespace emptydir-wrapper-8807, will wait for the garbage collector to delete the pods @ 05/08/25 15:19:53.424
  I0508 15:19:53.485790 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-7fb23e93-95a4-4ce1-b7ba-b32e102ffd98 took: 8.849568ms
  I0508 15:19:53.586471 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-7fb23e93-95a4-4ce1-b7ba-b32e102ffd98 pods took: 100.675796ms
  E0508 15:19:53.665680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:54.666018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:55.666088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-0a523058-1bc6-4936-9578-c4fa342758c4 in namespace emptydir-wrapper-8807, will wait for the garbage collector to delete the pods @ 05/08/25 15:19:55.887
  I0508 15:19:55.949103 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-0a523058-1bc6-4936-9578-c4fa342758c4 took: 8.99118ms
  I0508 15:19:56.049473 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-0a523058-1bc6-4936-9578-c4fa342758c4 pods took: 100.36661ms
  E0508 15:19:56.667111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:57.667395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:19:58.668003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 05/08/25 15:19:58.85
  I0508 15:19:59.351323 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8807" for this suite. @ 05/08/25 15:19:59.353
• [28.130 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/08/25 15:19:59.368
  I0508 15:19:59.368962 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename server-version @ 05/08/25 15:19:59.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:19:59.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:19:59.405
  STEP: Request ServerVersion @ 05/08/25 15:19:59.408
  STEP: Confirm major version @ 05/08/25 15:19:59.409
  I0508 15:19:59.409057 22 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 05/08/25 15:19:59.409
  I0508 15:19:59.409115 22 server_version.go:58] cleanMinorVersion: 33
  I0508 15:19:59.409131 22 server_version.go:62] Minor version: 33
  I0508 15:19:59.409288 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-528" for this suite. @ 05/08/25 15:19:59.454
• [0.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 05/08/25 15:19:59.463
  I0508 15:19:59.463170 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 15:19:59.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:19:59.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:19:59.493
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/08/25 15:19:59.496
  E0508 15:19:59.668764      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:00.669772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:01.670462      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:02.670628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:20:03.528
  I0508 15:20:03.530081 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-8e8dc07e-a878-43a5-8426-22005b7a702d container test-container: <nil>
  STEP: delete the pod @ 05/08/25 15:20:03.534
  I0508 15:20:03.557710 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6214" for this suite. @ 05/08/25 15:20:03.56
• [4.106 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/08/25 15:20:03.569
  I0508 15:20:03.569909 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename proxy @ 05/08/25 15:20:03.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:20:03.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:20:03.603
  STEP: starting an echo server on multiple ports @ 05/08/25 15:20:03.639
  I0508 15:20:03.667419 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0508 15:20:03.671625      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:04.672189      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:05.672946      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:20:05.678511      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:20:05.678599 22 proxy.go:273] setup took 2.072790571s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/08/25 15:20:05.678
  I0508 15:20:05.709374 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 30.52104ms)
  I0508 15:20:05.717329 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 38.295867ms)
  I0508 15:20:05.717696 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 38.647123ms)
  I0508 15:20:05.717896 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 38.921249ms)
  I0508 15:20:05.720799 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 42.112119ms)
  I0508 15:20:05.724428 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 45.336101ms)
  I0508 15:20:05.725979 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 46.734224ms)
  I0508 15:20:05.741129 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 62.18905ms)
  I0508 15:20:05.741128 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 62.215377ms)
  I0508 15:20:05.741217 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 62.146443ms)
  I0508 15:20:05.741458 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 62.501297ms)
  I0508 15:20:05.741773 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 62.551623ms)
  I0508 15:20:05.743751 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 64.608229ms)
  I0508 15:20:05.743823 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 64.814639ms)
  I0508 15:20:05.743848 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 64.740296ms)
  I0508 15:20:05.743864 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 64.693305ms)
  I0508 15:20:05.753203 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 8.997894ms)
  I0508 15:20:05.753595 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 9.411ms)
  I0508 15:20:05.753595 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 9.324215ms)
  I0508 15:20:05.754129 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 9.83909ms)
  I0508 15:20:05.754323 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 9.785133ms)
  I0508 15:20:05.754582 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 10.467781ms)
  I0508 15:20:05.754643 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 10.616509ms)
  I0508 15:20:05.754662 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 10.336064ms)
  I0508 15:20:05.754705 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 10.458804ms)
  I0508 15:20:05.756768 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 12.691808ms)
  I0508 15:20:05.756821 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 12.687302ms)
  I0508 15:20:05.756868 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 12.923105ms)
  I0508 15:20:05.757672 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 13.440948ms)
  I0508 15:20:05.758451 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 14.295803ms)
  I0508 15:20:05.758494 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 14.153497ms)
  I0508 15:20:05.758521 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 14.215951ms)
  I0508 15:20:05.766214 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 7.044513ms)
  I0508 15:20:05.766276 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 7.591739ms)
  I0508 15:20:05.766501 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 7.302649ms)
  I0508 15:20:05.766560 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 7.663199ms)
  I0508 15:20:05.766581 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 7.468783ms)
  I0508 15:20:05.766600 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 7.462928ms)
  I0508 15:20:05.766622 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 7.653255ms)
  I0508 15:20:05.766645 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 7.58716ms)
  I0508 15:20:05.769303 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 10.746743ms)
  I0508 15:20:05.769356 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 10.530089ms)
  I0508 15:20:05.769388 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 10.308361ms)
  I0508 15:20:05.769411 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 10.473034ms)
  I0508 15:20:05.771465 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 12.434742ms)
  I0508 15:20:05.771517 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 12.627897ms)
  I0508 15:20:05.771536 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 12.544432ms)
  I0508 15:20:05.771554 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 12.32939ms)
  I0508 15:20:05.780859 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 8.414026ms)
  I0508 15:20:05.781205 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 8.370473ms)
  I0508 15:20:05.781297 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 8.116621ms)
  I0508 15:20:05.781386 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 9.496228ms)
  I0508 15:20:05.781475 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 9.187045ms)
  I0508 15:20:05.781558 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 8.438041ms)
  I0508 15:20:05.781635 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 9.294878ms)
  I0508 15:20:05.781726 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 8.658219ms)
  I0508 15:20:05.781851 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 8.913297ms)
  I0508 15:20:05.781940 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 8.702696ms)
  I0508 15:20:05.783548 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 11.520405ms)
  I0508 15:20:05.783672 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 10.657805ms)
  I0508 15:20:05.783903 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 12.177741ms)
  I0508 15:20:05.784298 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 10.978844ms)
  I0508 15:20:05.784434 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 12.312789ms)
  I0508 15:20:05.784583 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 12.375961ms)
  I0508 15:20:05.811689 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 26.516492ms)
  I0508 15:20:05.812011 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 26.323449ms)
  I0508 15:20:05.812040 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 26.991846ms)
  I0508 15:20:05.812070 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 26.792064ms)
  I0508 15:20:05.812103 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 26.882106ms)
  I0508 15:20:05.812126 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 26.502096ms)
  I0508 15:20:05.812143 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 27.033404ms)
  I0508 15:20:05.812170 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 26.774511ms)
  I0508 15:20:05.812189 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 26.723825ms)
  I0508 15:20:05.812240 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 26.672934ms)
  I0508 15:20:05.812265 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 26.748312ms)
  I0508 15:20:05.812287 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 27.422445ms)
  I0508 15:20:05.812310 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 26.969988ms)
  I0508 15:20:05.812325 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 26.58779ms)
  I0508 15:20:05.812348 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 27.389503ms)
  I0508 15:20:05.812377 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 27.656751ms)
  I0508 15:20:05.825667 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 11.082695ms)
  I0508 15:20:05.825714 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 10.88516ms)
  I0508 15:20:05.825736 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 11.32758ms)
  I0508 15:20:05.829420 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 14.941015ms)
  I0508 15:20:05.829922 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 15.364754ms)
  I0508 15:20:05.830271 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 16.03741ms)
  I0508 15:20:05.830598 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 16.62184ms)
  I0508 15:20:05.831245 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 16.959115ms)
  I0508 15:20:05.831556 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 17.208028ms)
  I0508 15:20:05.831817 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 17.703308ms)
  I0508 15:20:05.832130 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 17.499945ms)
  I0508 15:20:05.832395 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 18.223378ms)
  I0508 15:20:05.832721 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 18.900874ms)
  I0508 15:20:05.832980 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 19.182921ms)
  I0508 15:20:05.833346 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 19.296295ms)
  I0508 15:20:05.833616 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 18.932223ms)
  I0508 15:20:05.840672 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 6.519648ms)
  I0508 15:20:05.841108 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 7.03997ms)
  I0508 15:20:05.844179 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 9.807655ms)
  I0508 15:20:05.848614 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 14.307405ms)
  I0508 15:20:05.844491 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 9.852122ms)
  I0508 15:20:05.851076 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 16.406205ms)
  I0508 15:20:05.851132 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 16.647224ms)
  I0508 15:20:05.851173 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 16.625804ms)
  I0508 15:20:05.851468 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 17.585333ms)
  I0508 15:20:05.851516 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 17.286749ms)
  I0508 15:20:05.851554 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 16.825356ms)
  I0508 15:20:05.851948 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 17.074932ms)
  I0508 15:20:05.852015 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 17.110616ms)
  I0508 15:20:05.852039 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 17.435577ms)
  I0508 15:20:05.854362 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 19.802034ms)
  I0508 15:20:05.854399 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 19.704678ms)
  I0508 15:20:05.866696 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 11.675437ms)
  I0508 15:20:05.867549 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 12.835646ms)
  I0508 15:20:05.867903 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 12.858196ms)
  I0508 15:20:05.868231 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 13.027837ms)
  I0508 15:20:05.868794 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 13.826148ms)
  I0508 15:20:05.869065 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 13.889921ms)
  I0508 15:20:05.869129 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 13.985116ms)
  I0508 15:20:05.869146 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 14.22955ms)
  I0508 15:20:05.869163 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 14.086556ms)
  I0508 15:20:05.873169 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 18.506356ms)
  I0508 15:20:05.873570 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 19.110194ms)
  I0508 15:20:05.873624 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 18.356105ms)
  I0508 15:20:05.873641 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 18.407443ms)
  I0508 15:20:05.873656 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 18.355164ms)
  I0508 15:20:05.873683 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 18.57329ms)
  I0508 15:20:05.873707 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 19.127579ms)
  I0508 15:20:05.881821 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 5.181732ms)
  I0508 15:20:05.882410 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 6.157424ms)
  I0508 15:20:05.882437 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 5.86255ms)
  I0508 15:20:05.882462 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 6.122968ms)
  I0508 15:20:05.882538 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 6.348359ms)
  I0508 15:20:05.882558 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 5.867511ms)
  I0508 15:20:05.882581 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 6.067129ms)
  I0508 15:20:05.882620 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 6.943292ms)
  I0508 15:20:05.882638 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 6.595758ms)
  I0508 15:20:05.891768 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 15.668917ms)
  I0508 15:20:05.891786 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 14.985897ms)
  I0508 15:20:05.891806 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 15.957743ms)
  I0508 15:20:05.891819 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 15.895703ms)
  I0508 15:20:05.891833 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 15.846859ms)
  I0508 15:20:05.892138 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 15.69907ms)
  I0508 15:20:05.891766 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 15.013427ms)
  I0508 15:20:05.897555 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 4.195574ms)
  I0508 15:20:05.897941 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 4.787095ms)
  I0508 15:20:05.903057 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 9.395954ms)
  I0508 15:20:05.903190 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 9.497394ms)
  I0508 15:20:05.903332 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 9.514319ms)
  I0508 15:20:05.905392 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 11.991646ms)
  I0508 15:20:05.905486 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 11.682835ms)
  I0508 15:20:05.905521 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 11.99897ms)
  I0508 15:20:05.905573 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 12.018517ms)
  I0508 15:20:05.905601 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 11.989815ms)
  I0508 15:20:05.905728 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 11.993977ms)
  I0508 15:20:05.905758 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 12.463794ms)
  I0508 15:20:05.905798 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 12.369274ms)
  I0508 15:20:05.905816 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 12.336862ms)
  I0508 15:20:05.905892 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 12.775375ms)
  I0508 15:20:05.905840 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 11.972319ms)
  I0508 15:20:05.917167 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 11.191167ms)
  I0508 15:20:05.917153 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 10.775473ms)
  I0508 15:20:05.917582 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 11.060948ms)
  I0508 15:20:05.917687 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 11.105508ms)
  I0508 15:20:05.917922 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 11.294205ms)
  I0508 15:20:05.918003 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 11.024239ms)
  I0508 15:20:05.918043 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 11.885481ms)
  I0508 15:20:05.918059 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 11.835938ms)
  I0508 15:20:05.918110 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 11.409833ms)
  I0508 15:20:05.918955 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 12.463587ms)
  I0508 15:20:05.920556 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 14.277381ms)
  I0508 15:20:05.920572 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 13.521865ms)
  I0508 15:20:05.920627 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 13.707768ms)
  I0508 15:20:05.921077 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 14.746231ms)
  I0508 15:20:05.921194 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 15.177696ms)
  I0508 15:20:05.922046 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 15.615686ms)
  I0508 15:20:05.934714 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 12.171928ms)
  I0508 15:20:05.935445 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 12.558111ms)
  I0508 15:20:05.935432 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 12.512837ms)
  I0508 15:20:05.935585 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 12.545279ms)
  I0508 15:20:05.935614 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 13.302268ms)
  I0508 15:20:05.935869 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 13.037578ms)
  I0508 15:20:05.936213 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 13.200709ms)
  I0508 15:20:05.936235 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 13.518302ms)
  I0508 15:20:05.936309 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 13.367124ms)
  I0508 15:20:05.936536 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 14.153937ms)
  I0508 15:20:05.944120 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 21.527249ms)
  I0508 15:20:05.944363 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 21.382425ms)
  I0508 15:20:05.944129 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 21.638137ms)
  I0508 15:20:05.947276 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 25.082282ms)
  I0508 15:20:05.947352 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 24.706387ms)
  I0508 15:20:05.947449 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 25.006588ms)
  I0508 15:20:05.956389 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 8.539011ms)
  I0508 15:20:05.960020 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 12.216262ms)
  I0508 15:20:05.960117 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 12.228323ms)
  I0508 15:20:05.960168 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 12.178435ms)
  I0508 15:20:05.960222 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 12.401256ms)
  I0508 15:20:05.960414 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 12.810373ms)
  I0508 15:20:05.960546 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 12.681942ms)
  I0508 15:20:05.962555 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 15.003731ms)
  I0508 15:20:05.963727 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 15.802701ms)
  I0508 15:20:05.964647 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 16.740319ms)
  I0508 15:20:05.964667 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 16.929754ms)
  I0508 15:20:05.965365 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 17.676523ms)
  I0508 15:20:05.965712 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 17.741535ms)
  I0508 15:20:05.966063 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 18.295616ms)
  I0508 15:20:05.966115 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 18.167283ms)
  I0508 15:20:05.965796 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 18.058776ms)
  I0508 15:20:05.976231 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 9.571155ms)
  I0508 15:20:05.976239 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 9.713497ms)
  I0508 15:20:05.976667 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 9.825214ms)
  I0508 15:20:05.976752 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 10.057723ms)
  I0508 15:20:05.976892 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 10.678624ms)
  I0508 15:20:05.978882 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 12.2734ms)
  I0508 15:20:05.978896 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 12.306205ms)
  I0508 15:20:05.979259 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 12.806918ms)
  I0508 15:20:05.979341 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 12.770639ms)
  I0508 15:20:05.979447 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 13.027349ms)
  I0508 15:20:05.979495 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 12.795636ms)
  I0508 15:20:05.981568 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 14.891508ms)
  I0508 15:20:05.981885 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 15.381573ms)
  I0508 15:20:05.981974 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 15.730231ms)
  I0508 15:20:05.982439 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 15.95917ms)
  I0508 15:20:05.982658 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 16.112617ms)
  I0508 15:20:05.990568 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 7.677265ms)
  I0508 15:20:05.991426 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 7.914506ms)
  I0508 15:20:05.991712 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 8.257696ms)
  I0508 15:20:05.991888 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 8.480462ms)
  I0508 15:20:05.992106 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 8.797161ms)
  I0508 15:20:05.992237 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 8.972776ms)
  I0508 15:20:05.993495 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 10.439008ms)
  I0508 15:20:05.993530 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 10.345546ms)
  I0508 15:20:05.993552 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 10.185626ms)
  I0508 15:20:05.993565 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 10.566724ms)
  I0508 15:20:05.993577 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 10.483065ms)
  I0508 15:20:05.993636 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 10.496429ms)
  I0508 15:20:05.995361 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 11.811731ms)
  I0508 15:20:05.995519 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 12.009167ms)
  I0508 15:20:05.995583 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 11.998712ms)
  I0508 15:20:05.995680 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 12.454993ms)
  I0508 15:20:06.003328 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 7.389661ms)
  I0508 15:20:06.003397 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 7.684639ms)
  I0508 15:20:06.004335 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 7.979529ms)
  I0508 15:20:06.006497 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 10.609742ms)
  I0508 15:20:06.006525 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 10.13416ms)
  I0508 15:20:06.006542 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 10.453661ms)
  I0508 15:20:06.006583 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 10.414878ms)
  I0508 15:20:06.006602 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 10.330495ms)
  I0508 15:20:06.006614 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 10.306703ms)
  I0508 15:20:06.006623 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 10.496515ms)
  I0508 15:20:06.007114 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 11.097763ms)
  I0508 15:20:06.007400 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 11.134089ms)
  I0508 15:20:06.007780 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 11.799478ms)
  I0508 15:20:06.007859 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 11.80278ms)
  I0508 15:20:06.008471 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 12.734109ms)
  I0508 15:20:06.008481 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 12.24134ms)
  I0508 15:20:06.016713 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 7.594302ms)
  I0508 15:20:06.018932 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 10.07277ms)
  I0508 15:20:06.019006 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 10.420334ms)
  I0508 15:20:06.021075 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 12.332536ms)
  I0508 15:20:06.021353 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 12.365994ms)
  I0508 15:20:06.021374 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 12.354979ms)
  I0508 15:20:06.021386 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 12.164119ms)
  I0508 15:20:06.021397 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 12.141268ms)
  I0508 15:20:06.021406 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 12.325546ms)
  I0508 15:20:06.021414 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 12.614682ms)
  I0508 15:20:06.021463 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 12.581624ms)
  I0508 15:20:06.021476 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 12.288219ms)
  I0508 15:20:06.021792 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 12.74022ms)
  I0508 15:20:06.023441 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 14.292041ms)
  I0508 15:20:06.023498 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 14.578152ms)
  I0508 15:20:06.023592 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 14.640516ms)
  I0508 15:20:06.032005 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 7.448374ms)
  I0508 15:20:06.032013 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 7.414637ms)
  I0508 15:20:06.034291 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 9.532958ms)
  I0508 15:20:06.034575 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 9.91281ms)
  I0508 15:20:06.034597 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 10.509136ms)
  I0508 15:20:06.034964 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 10.279823ms)
  I0508 15:20:06.036212 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 11.88166ms)
  I0508 15:20:06.036209 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 11.474151ms)
  I0508 15:20:06.036234 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 11.857071ms)
  I0508 15:20:06.036461 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 12.039558ms)
  I0508 15:20:06.036520 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 11.867557ms)
  I0508 15:20:06.036613 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 12.051238ms)
  I0508 15:20:06.037815 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 13.023487ms)
  I0508 15:20:06.037849 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 13.140341ms)
  I0508 15:20:06.038264 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 14.034609ms)
  I0508 15:20:06.038418 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 13.93326ms)
  I0508 15:20:06.048973 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 9.915766ms)
  I0508 15:20:06.049218 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 10.091599ms)
  I0508 15:20:06.049234 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 9.993651ms)
  I0508 15:20:06.049631 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 10.265658ms)
  I0508 15:20:06.049639 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 10.746548ms)
  I0508 15:20:06.049762 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 10.442205ms)
  I0508 15:20:06.049774 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 11.208402ms)
  I0508 15:20:06.049813 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 11.128638ms)
  I0508 15:20:06.049822 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 10.657987ms)
  I0508 15:20:06.049831 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 10.625781ms)
  I0508 15:20:06.051073 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 12.057611ms)
  I0508 15:20:06.051479 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 12.712944ms)
  I0508 15:20:06.051494 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 12.207512ms)
  I0508 15:20:06.051729 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 12.884961ms)
  I0508 15:20:06.051748 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 12.774013ms)
  I0508 15:20:06.051827 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 12.892241ms)
  I0508 15:20:06.061471 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 9.138803ms)
  I0508 15:20:06.061544 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:1080/proxy/... (200; 9.079788ms)
  I0508 15:20:06.061583 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:1080/proxy/rewri... (200; 9.050731ms)
  I0508 15:20:06.061665 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:460/proxy/: tls baz (200; 9.538402ms)
  I0508 15:20:06.061689 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:160/proxy/: foo (200; 9.619495ms)
  I0508 15:20:06.061709 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 9.225229ms)
  I0508 15:20:06.061732 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:443/proxy/... (200; 9.35704ms)
  I0508 15:20:06.062595 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/pods/https:proxy-service-g22cg-699b56b766-f66h7:462/proxy/: tls qux (200; 10.305685ms)
  I0508 15:20:06.063141 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/: <a href="/api/v1/namespaces/proxy-2530/pods/proxy-service-g22cg-699b56b766-f66h7/proxy/rewriteme"... (200; 10.723922ms)
  I0508 15:20:06.063208 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/pods/http:proxy-service-g22cg-699b56b766-f66h7:162/proxy/: bar (200; 10.956751ms)
  I0508 15:20:06.063285 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname2/proxy/: bar (200; 10.976414ms)
  I0508 15:20:06.063638 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname2/proxy/: bar (200; 11.413829ms)
  I0508 15:20:06.063830 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname2/proxy/: tls qux (200; 11.478204ms)
  I0508 15:20:06.063856 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/services/http:proxy-service-g22cg:portname1/proxy/: foo (200; 11.462177ms)
  I0508 15:20:06.064151 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/services/https:proxy-service-g22cg:tlsportname1/proxy/: tls baz (200; 11.70706ms)
  I0508 15:20:06.064158 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2530/services/proxy-service-g22cg:portname1/proxy/: foo (200; 11.960755ms)
  I0508 15:20:06.078042 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2530" for this suite. @ 05/08/25 15:20:06.081
• [2.525 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 05/08/25 15:20:06.096
  I0508 15:20:06.096296 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 15:20:06.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:20:06.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:20:06.138
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/08/25 15:20:06.14
  E0508 15:20:06.673162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:07.673265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:08.673830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:09.674738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:20:10.165
  I0508 15:20:10.167459 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-1d34d3b0-e5fb-496e-98b9-bcd276df0ff7 container test-container: <nil>
  STEP: delete the pod @ 05/08/25 15:20:10.175
  I0508 15:20:10.210566 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1521" for this suite. @ 05/08/25 15:20:10.213
• [4.125 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 05/08/25 15:20:10.222
  I0508 15:20:10.222514 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:20:10.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:20:10.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:20:10.249
  STEP: Creating configMap with name projected-configmap-test-volume-map-0c933fac-6053-4979-8c78-6b8b87c5e343 @ 05/08/25 15:20:10.252
  STEP: Creating a pod to test consume configMaps @ 05/08/25 15:20:10.265
  E0508 15:20:10.675391      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:11.675515      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:12.675558      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:13.675664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:20:14.284
  I0508 15:20:14.285924 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-projected-configmaps-6a439847-1c43-4d04-aeae-a95ae4804020 container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 15:20:14.29
  I0508 15:20:14.330048 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8154" for this suite. @ 05/08/25 15:20:14.332
• [4.118 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 05/08/25 15:20:14.341
  I0508 15:20:14.341412 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 15:20:14.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:20:14.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:20:14.361
  STEP: Creating a job @ 05/08/25 15:20:14.373
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/08/25 15:20:14.381
  E0508 15:20:14.676675      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:15.676738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 05/08/25 15:20:16.387
  STEP: updating /status @ 05/08/25 15:20:16.403
  STEP: get /status @ 05/08/25 15:20:16.41
  I0508 15:20:16.412595 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7225" for this suite. @ 05/08/25 15:20:16.415
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/08/25 15:20:16.425
  I0508 15:20:16.425610 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename podtemplate @ 05/08/25 15:20:16.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:20:16.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:20:16.447
  STEP: Create a pod template @ 05/08/25 15:20:16.454
  STEP: Replace a pod template @ 05/08/25 15:20:16.5
  I0508 15:20:16.513595 22 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0508 15:20:16.513795 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5137" for this suite. @ 05/08/25 15:20:16.516
• [0.106 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 05/08/25 15:20:16.531
  I0508 15:20:16.531648 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename runtimeclass @ 05/08/25 15:20:16.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:20:16.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:20:16.555
  I0508 15:20:16.620762 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6077" for this suite. @ 05/08/25 15:20:16.631
• [0.108 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 05/08/25 15:20:16.639
  I0508 15:20:16.639959 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:20:16.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:20:16.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:20:16.672
  E0508 15:20:16.677847      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 05/08/25 15:20:16.722
  E0508 15:20:17.677984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:20:18.19
  STEP: Deploying the webhook pod @ 05/08/25 15:20:18.198
  STEP: Wait for the deployment to be ready @ 05/08/25 15:20:18.219
  I0508 15:20:18.237002 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0508 15:20:18.678936      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:19.679184      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:20:20.243840 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 15, 20, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 20, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 20, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 20, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0508 15:20:20.679302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:21.679804      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:20:22.247
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:20:22.275
  E0508 15:20:22.680884      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:20:23.276581 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/08/25 15:20:23.279
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/08/25 15:20:23.279
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/08/25 15:20:23.302
  E0508 15:20:23.681049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/08/25 15:20:24.321
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/08/25 15:20:24.321
  E0508 15:20:24.681201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 05/08/25 15:20:25.375
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/08/25 15:20:25.376
  E0508 15:20:25.682263      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:26.682435      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:27.682564      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:28.682830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:29.683000      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/08/25 15:20:30.432
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/08/25 15:20:30.432
  E0508 15:20:30.683078      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:31.683176      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:32.683307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:33.683473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:34.683605      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:20:35.640465 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5177" for this suite. @ 05/08/25 15:20:35.652
  STEP: Destroying namespace "webhook-markers-627" for this suite. @ 05/08/25 15:20:35.666
• [19.046 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 05/08/25 15:20:35.686
  I0508 15:20:35.687190 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:20:35.687560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 15:20:35.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:20:35.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:20:35.714
  STEP: Starting the proxy @ 05/08/25 15:20:35.724
  I0508 15:20:35.725330 22 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-2427 proxy --unix-socket=/tmp/kubectl-proxy-unix2271655499/test'
  STEP: retrieving proxy /api/ output @ 05/08/25 15:20:35.81
  I0508 15:20:35.811653 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2427" for this suite. @ 05/08/25 15:20:35.815
• [0.138 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 05/08/25 15:20:35.824
  I0508 15:20:35.824956 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/08/25 15:20:35.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:20:35.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:20:35.86
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/08/25 15:20:35.864
  I0508 15:20:35.865119 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:20:36.688166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:37.689240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:38.690061      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:39.690131      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:40.690278      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/08/25 15:20:41.293
  I0508 15:20:41.293916 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:20:41.690971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:42.691495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:20:42.912674 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:20:43.692319      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:44.693401      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:45.694225      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:46.694998      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:47.695177      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:20:48.147855 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5392" for this suite. @ 05/08/25 15:20:48.153
• [12.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/08/25 15:20:48.162
  I0508 15:20:48.162716 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename subjectreview @ 05/08/25 15:20:48.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:20:48.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:20:48.198
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8421" @ 05/08/25 15:20:48.2
  I0508 15:20:48.208819 22 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-8421:e2e"
  I0508 15:20:48.208859 22 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8421"}
  I0508 15:20:48.208867 22 subjectreviews.go:71] saUID: "faa850e0-b1ae-4554-bbea-8a20f976378a"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8421:e2e" @ 05/08/25 15:20:48.208
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8421:e2e" @ 05/08/25 15:20:48.209
  I0508 15:20:48.211874 22 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8421:e2e" api 'list' configmaps in "subjectreview-8421" namespace @ 05/08/25 15:20:48.211
  I0508 15:20:48.213396 22 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8421:e2e" @ 05/08/25 15:20:48.213
  I0508 15:20:48.215673 22 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0508 15:20:48.215701 22 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0508 15:20:48.215946 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8421" for this suite. @ 05/08/25 15:20:48.253
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 05/08/25 15:20:48.27
  I0508 15:20:48.270128 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 15:20:48.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:20:48.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:20:48.293
  STEP: Creating a job @ 05/08/25 15:20:48.3
  STEP: Ensuring job reaches completions @ 05/08/25 15:20:48.308
  E0508 15:20:48.695226      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:49.695345      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:50.695896      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:51.696267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:52.697338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:53.697453      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:54.698268      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:55.698362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:56.699443      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:57.700674      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:58.701357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:20:59.701552      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:00.355700 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7882" for this suite. @ 05/08/25 15:21:00.359
• [12.104 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 05/08/25 15:21:00.374
  I0508 15:21:00.374912 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 15:21:00.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:21:00.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:21:00.396
  STEP: Creating configMap that has name configmap-test-emptyKey-5a35d022-1f5e-4274-87c9-2b45a1fb8dc1 @ 05/08/25 15:21:00.407
  I0508 15:21:00.409980 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8056" for this suite. @ 05/08/25 15:21:00.459
• [0.098 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 05/08/25 15:21:00.473
  I0508 15:21:00.473745 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename replication-controller @ 05/08/25 15:21:00.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:21:00.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:21:00.499
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/08/25 15:21:00.502
  E0508 15:21:00.702146      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:01.702669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 05/08/25 15:21:02.539
  STEP: Then the orphan pod is adopted @ 05/08/25 15:21:02.547
  E0508 15:21:02.703008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:03.553657 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6092" for this suite. @ 05/08/25 15:21:03.556
• [3.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/08/25 15:21:03.569
  I0508 15:21:03.569579 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/08/25 15:21:03.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:21:03.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:21:03.607
  STEP: Creating two CSIDrivers @ 05/08/25 15:21:03.609
  STEP: Getting "inline-driver-257c40c2-93b3-4bf8-818d-f0cb7bad2dd4" & "inline-driver-f13ca462-6f7e-4b50-948c-3e44e5bda03b" @ 05/08/25 15:21:03.663
  STEP: Patching the CSIDriver "inline-driver-f13ca462-6f7e-4b50-948c-3e44e5bda03b" @ 05/08/25 15:21:03.666
  STEP: Updating the CSIDriver "inline-driver-f13ca462-6f7e-4b50-948c-3e44e5bda03b" @ 05/08/25 15:21:03.676
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-6323" @ 05/08/25 15:21:03.686
  STEP: Deleting CSIDriver "inline-driver-257c40c2-93b3-4bf8-818d-f0cb7bad2dd4" @ 05/08/25 15:21:03.688
  E0508 15:21:03.703074      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Confirm deletion of CSIDriver "inline-driver-257c40c2-93b3-4bf8-818d-f0cb7bad2dd4" @ 05/08/25 15:21:03.707
  STEP: Deleting CSIDriver "inline-driver-f13ca462-6f7e-4b50-948c-3e44e5bda03b" via DeleteCollection @ 05/08/25 15:21:03.709
  STEP: Confirm deletion of CSIDriver "inline-driver-f13ca462-6f7e-4b50-948c-3e44e5bda03b" @ 05/08/25 15:21:03.718
  I0508 15:21:03.720865 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6323" for this suite. @ 05/08/25 15:21:03.723
• [0.168 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 05/08/25 15:21:03.738
  I0508 15:21:03.738303 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename daemonsets @ 05/08/25 15:21:03.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:21:03.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:21:03.764
  STEP: Creating simple DaemonSet "daemon-set" @ 05/08/25 15:21:03.845
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/08/25 15:21:03.853
  I0508 15:21:03.953641 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:21:03.953679 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:21:04.703140      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:04.861067 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:21:04.863224 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:21:05.704162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:05.884938 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0508 15:21:05.884976 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/08/25 15:21:05.891
  STEP: DeleteCollection of the DaemonSets @ 05/08/25 15:21:05.898
  STEP: Verify that ReplicaSets have been deleted @ 05/08/25 15:21:06.011
  I0508 15:21:06.020696 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47670"},"items":null}

  I0508 15:21:06.032681 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47671"},"items":[{"metadata":{"name":"daemon-set-9kxxl","generateName":"daemon-set-","namespace":"daemonsets-6561","uid":"6a533a7f-f7a0-4cee-9ea9-4476ecb08e2c","resourceVersion":"47638","generation":1,"creationTimestamp":"2025-05-08T15:21:03Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"6cd23265318006dc0f197dee61539a448a866b846d55333a315ee86bb331d53b","cni.projectcalico.org/podIP":"10.42.1.81/32","cni.projectcalico.org/podIPs":"10.42.1.81/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"7b961528-4010-483a-8f81-95a9cbbd28ad","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-05-08T15:21:03Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7b961528-4010-483a-8f81-95a9cbbd28ad\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-05-08T15:21:04Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-05-08T15:21:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.81\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5q7js","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5q7js","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-27-218.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-27-218.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-08T15:21:05Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-08T15:21:03Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-08T15:21:05Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-08T15:21:05Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-08T15:21:03Z"}],"hostIP":"172.31.27.218","hostIPs":[{"ip":"172.31.27.218"}],"podIP":"10.42.1.81","podIPs":[{"ip":"10.42.1.81"}],"startTime":"2025-05-08T15:21:03Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-05-08T15:21:04Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3dd3df803bae8726722d8a70332fcd0b88133ea6c3ee2ce67e5a848852fd70ba","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-5q7js","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qjblr","generateName":"daemon-set-","namespace":"daemonsets-6561","uid":"3da1cfc3-d3b8-41a6-b042-a56044006917","resourceVersion":"47652","generation":1,"creationTimestamp":"2025-05-08T15:21:03Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"05f933963961b8a9776e3e38125886a4f72593f064cf18b8e089d05c1df1ab2a","cni.projectcalico.org/podIP":"10.42.0.172/32","cni.projectcalico.org/podIPs":"10.42.0.172/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"7b961528-4010-483a-8f81-95a9cbbd28ad","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-05-08T15:21:03Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7b961528-4010-483a-8f81-95a9cbbd28ad\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-05-08T15:21:04Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-05-08T15:21:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.172\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-kw7x7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-kw7x7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-20-200.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-20-200.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-08T15:21:05Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-08T15:21:03Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-08T15:21:05Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-08T15:21:05Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-08T15:21:03Z"}],"hostIP":"172.31.20.200","hostIPs":[{"ip":"172.31.20.200"}],"podIP":"10.42.0.172","podIPs":[{"ip":"10.42.0.172"}],"startTime":"2025-05-08T15:21:03Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-05-08T15:21:04Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://d0eeb03e089a629633053f994216e78452b6ce14f6b62a7cff7f3f30f190c3d8","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-kw7x7","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}}]}

  I0508 15:21:06.065238 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6561" for this suite. @ 05/08/25 15:21:06.067
• [2.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 05/08/25 15:21:06.09
  I0508 15:21:06.090396 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 15:21:06.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:21:06.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:21:06.112
  STEP: Creating configMap with name configmap-test-upd-d91dfa9c-afe3-4196-b4e3-2e342c78650b @ 05/08/25 15:21:06.153
  STEP: Creating the pod @ 05/08/25 15:21:06.167
  E0508 15:21:06.704743      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:07.704901      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-d91dfa9c-afe3-4196-b4e3-2e342c78650b @ 05/08/25 15:21:08.195
  STEP: waiting to observe update in volume @ 05/08/25 15:21:08.204
  E0508 15:21:08.705150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:09.706109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:10.229438 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-748" for this suite. @ 05/08/25 15:21:10.232
• [4.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 05/08/25 15:21:10.241
  I0508 15:21:10.241539 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename resourcequota @ 05/08/25 15:21:10.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:21:10.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:21:10.263
  STEP: Counting existing ResourceQuota @ 05/08/25 15:21:10.266
  E0508 15:21:10.706414      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:11.707403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:12.708145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:13.708274      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:14.708588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/08/25 15:21:15.272
  STEP: Ensuring resource quota status is calculated @ 05/08/25 15:21:15.289
  E0508 15:21:15.709332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:16.709796      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 05/08/25 15:21:17.291
  STEP: Ensuring resource quota status captures replication controller creation @ 05/08/25 15:21:17.323
  E0508 15:21:17.710833      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:18.710900      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 05/08/25 15:21:19.326
  STEP: Ensuring resource quota status released usage @ 05/08/25 15:21:19.334
  E0508 15:21:19.711839      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:20.712025      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:21.337065 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1934" for this suite. @ 05/08/25 15:21:21.339
• [11.107 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 05/08/25 15:21:21.349
  I0508 15:21:21.349529 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/08/25 15:21:21.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:21:21.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:21:21.376
  STEP: creating a policy with variables @ 05/08/25 15:21:21.388
  STEP: waiting until the marker is denied @ 05/08/25 15:21:21.425
  STEP: testing a replicated Deployment to be allowed @ 05/08/25 15:21:21.537
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/08/25 15:21:21.567
  E0508 15:21:21.712222      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:21.716780 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3697" for this suite. @ 05/08/25 15:21:21.726
• [0.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 05/08/25 15:21:21.746
  I0508 15:21:21.746474 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:21:21.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:21:21.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:21:21.781
  STEP: Setting up server cert @ 05/08/25 15:21:21.823
  E0508 15:21:22.712434      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:21:22.738
  STEP: Deploying the webhook pod @ 05/08/25 15:21:22.746
  STEP: Wait for the deployment to be ready @ 05/08/25 15:21:22.775
  I0508 15:21:22.785478 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0508 15:21:23.713503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:24.713639      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:24.791892 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 15, 21, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 21, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 21, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 21, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0508 15:21:25.713797      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:26.713906      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:21:26.795
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:21:26.846
  E0508 15:21:27.714901      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:27.847166 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/08/25 15:21:27.85
  STEP: create the configmap with a random name @ 05/08/25 15:21:27.877
  STEP: verify the configmap is mutated @ 05/08/25 15:21:27.902
  STEP: create the configmap with 'skip-me' name @ 05/08/25 15:21:27.902
  I0508 15:21:28.022295 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1590" for this suite. @ 05/08/25 15:21:28.036
  STEP: Destroying namespace "webhook-markers-2895" for this suite. @ 05/08/25 15:21:28.053
• [6.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/08/25 15:21:28.069
  I0508 15:21:28.069068 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename apf @ 05/08/25 15:21:28.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:21:28.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:21:28.092
  STEP: getting /apis @ 05/08/25 15:21:28.105
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/08/25 15:21:28.109
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/08/25 15:21:28.11
  STEP: creating @ 05/08/25 15:21:28.111
  STEP: getting @ 05/08/25 15:21:28.136
  STEP: listing @ 05/08/25 15:21:28.138
  STEP: watching @ 05/08/25 15:21:28.14
  I0508 15:21:28.140937 22 flowcontrol.go:620] starting watch
  STEP: patching @ 05/08/25 15:21:28.142
  STEP: updating @ 05/08/25 15:21:28.156
  I0508 15:21:28.165938 22 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 05/08/25 15:21:28.166
  STEP: patching /status @ 05/08/25 15:21:28.168
  STEP: updating /status @ 05/08/25 15:21:28.177
  STEP: deleting @ 05/08/25 15:21:28.188
  STEP: deleting a collection @ 05/08/25 15:21:28.2
  I0508 15:21:28.228798 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7889" for this suite. @ 05/08/25 15:21:28.231
• [0.171 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 05/08/25 15:21:28.242
  I0508 15:21:28.242045 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pv @ 05/08/25 15:21:28.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:21:28.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:21:28.268
  STEP: Creating initial PV and PVC @ 05/08/25 15:21:28.27
  I0508 15:21:28.270413 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1768" @ 05/08/25 15:21:28.3
  STEP: Listing PVCs in namespace "pv-1768" @ 05/08/25 15:21:28.304
  STEP: Reading "pvc-m6cg2" Status @ 05/08/25 15:21:28.306
  STEP: Reading "pv-1768-8qlnq" Status @ 05/08/25 15:21:28.309
  STEP: Patching "pvc-m6cg2" Status @ 05/08/25 15:21:28.312
  STEP: Patching "pv-1768-8qlnq" Status @ 05/08/25 15:21:28.328
  STEP: Updating "pvc-m6cg2" Status @ 05/08/25 15:21:28.342
  STEP: Updating "pv-1768-8qlnq" Status @ 05/08/25 15:21:28.357
  I0508 15:21:28.378266 22 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0508 15:21:28.378298 22 pv.go:205] Deleting PersistentVolumeClaim "pvc-m6cg2"
  I0508 15:21:28.421096 22 pv.go:193] Deleting PersistentVolume "pv-1768-8qlnq"
  I0508 15:21:28.439161 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1768" for this suite. @ 05/08/25 15:21:28.447
• [0.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 05/08/25 15:21:28.462
  I0508 15:21:28.462507 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-probe @ 05/08/25 15:21:28.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:21:28.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:21:28.497
  STEP: Creating pod liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 in namespace container-probe-2336 @ 05/08/25 15:21:28.5
  E0508 15:21:28.715232      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:29.716202      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/08/25 15:21:30.535
  I0508 15:21:30.540311 22 container_probe.go:1748] Initial restart count of pod liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 is 0
  I0508 15:21:30.542536 22 container_probe.go:1758] Get pod liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 in namespace container-probe-2336
  E0508 15:21:30.716863      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:31.716972      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:32.549328 22 container_probe.go:1758] Get pod liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 in namespace container-probe-2336
  E0508 15:21:32.717582      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:33.717702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:34.561458 22 container_probe.go:1758] Get pod liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 in namespace container-probe-2336
  E0508 15:21:34.718819      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:35.719039      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:36.564395 22 container_probe.go:1758] Get pod liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 in namespace container-probe-2336
  E0508 15:21:36.719722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:37.719863      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:38.566747 22 container_probe.go:1758] Get pod liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 in namespace container-probe-2336
  E0508 15:21:38.719992      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:39.720153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:40.569581 22 container_probe.go:1758] Get pod liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 in namespace container-probe-2336
  E0508 15:21:40.720834      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:41.720948      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:42.572310 22 container_probe.go:1758] Get pod liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 in namespace container-probe-2336
  E0508 15:21:42.721566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:43.721685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:44.575203 22 container_probe.go:1758] Get pod liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 in namespace container-probe-2336
  E0508 15:21:44.722476      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:45.722619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:46.580419 22 container_probe.go:1758] Get pod liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 in namespace container-probe-2336
  E0508 15:21:46.723685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:47.723931      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:48.584283 22 container_probe.go:1758] Get pod liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 in namespace container-probe-2336
  E0508 15:21:48.724572      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:49.724680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:21:50.587364 22 container_probe.go:1758] Get pod liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 in namespace container-probe-2336
  I0508 15:21:50.587403 22 container_probe.go:1762] Restart count of pod container-probe-2336/liveness-19145448-a2f5-4cb8-8478-bcdf4ff614a1 is now 1 (20.046725736s elapsed)
  STEP: deleting the pod @ 05/08/25 15:21:50.587
  I0508 15:21:50.617892 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2336" for this suite. @ 05/08/25 15:21:50.621
• [22.175 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/08/25 15:21:50.638
  I0508 15:21:50.638427 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pods @ 05/08/25 15:21:50.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:21:50.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:21:50.67
  E0508 15:21:50.724925      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:51.725013      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:52.725913      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:53.726405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:54.726723      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:55.726857      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:56.726969      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:21:56.781
  I0508 15:21:56.783263 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod client-envvars-54c9be37-8bd0-4b30-86b0-13a609611d8a container env3cont: <nil>
  STEP: delete the pod @ 05/08/25 15:21:56.788
  I0508 15:21:56.817092 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5333" for this suite. @ 05/08/25 15:21:56.819
• [6.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/08/25 15:21:56.829
  I0508 15:21:56.829196 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename replicaset @ 05/08/25 15:21:56.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:21:56.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:21:56.856
  I0508 15:21:56.867773 22 replica_set.go:192] Creating ReplicaSet my-hostname-basic-925ae025-5fff-48b6-82b9-99954202d3a1
  I0508 15:21:56.880080 22 resource.go:81] Pod name my-hostname-basic-925ae025-5fff-48b6-82b9-99954202d3a1: Found 0 pods out of 1
  E0508 15:21:57.727285      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:58.727528      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:21:59.727769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:00.727874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:01.728383      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:01.901721 22 resource.go:81] Pod name my-hostname-basic-925ae025-5fff-48b6-82b9-99954202d3a1: Found 1 pods out of 1
  I0508 15:22:01.901764 22 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-925ae025-5fff-48b6-82b9-99954202d3a1" is running
  I0508 15:22:01.920817 22 replica_set.go:221] Pod "my-hostname-basic-925ae025-5fff-48b6-82b9-99954202d3a1-nq9hq" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-08 15:21:58 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-08 15:21:56 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-08 15:21:58 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-08 15:21:58 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-08 15:21:56 +0000 UTC Reason: Message:}])
  I0508 15:22:01.920930 22 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/08/25 15:22:01.92
  I0508 15:22:02.024675 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9703" for this suite. @ 05/08/25 15:22:02.028
• [5.217 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 05/08/25 15:22:02.052
  I0508 15:22:02.052237 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl-logs @ 05/08/25 15:22:02.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:22:02.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:22:02.088
  STEP: creating a pod @ 05/08/25 15:22:02.092
  I0508 15:22:02.092285 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-logs-9523 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0508 15:22:02.235230 22 builder.go:146] stderr: ""
  I0508 15:22:02.235276 22 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/08/25 15:22:02.235
  I0508 15:22:02.235403 22 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0508 15:22:02.728777      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:03.728895      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:04.243020 22 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/08/25 15:22:04.243
  I0508 15:22:04.243109 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-logs-9523 logs logs-generator logs-generator'
  I0508 15:22:04.307212 22 builder.go:146] stderr: ""
  I0508 15:22:04.307277 22 builder.go:147] stdout: "I0508 15:22:03.314068       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/nlh9 451\nI0508 15:22:03.514499       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/p2ht 541\nI0508 15:22:03.715108       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/lzr 452\nI0508 15:22:03.914464       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/46s4 317\nI0508 15:22:04.114882       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/xbq 374\n"
  E0508 15:22:04.729732      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:05.729945      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:06.307562 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-logs-9523 logs logs-generator logs-generator'
  I0508 15:22:06.393855 22 builder.go:146] stderr: ""
  I0508 15:22:06.393911 22 builder.go:147] stdout: "I0508 15:22:03.314068       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/nlh9 451\nI0508 15:22:03.514499       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/p2ht 541\nI0508 15:22:03.715108       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/lzr 452\nI0508 15:22:03.914464       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/46s4 317\nI0508 15:22:04.114882       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/xbq 374\nI0508 15:22:04.314155       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/wvd 336\nI0508 15:22:04.514477       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/xdfl 247\nI0508 15:22:04.714860       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/2ht4 285\nI0508 15:22:04.914150       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/8mp 452\nI0508 15:22:05.114477       1 logs_generator.go:76] 9 POST /api/v1/namespaces/kube-system/pods/7lmd 409\nI0508 15:22:05.314643       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/pfh 584\nI0508 15:22:05.515066       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/7pvv 392\nI0508 15:22:05.714487       1 logs_generator.go:76] 12 POST /api/v1/namespaces/default/pods/jpf 214\nI0508 15:22:05.914642       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/kjr 502\nI0508 15:22:06.115005       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/txcl 581\nI0508 15:22:06.314126       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/p78w 256\n"
  STEP: limiting log lines @ 05/08/25 15:22:06.393
  I0508 15:22:06.393981 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-logs-9523 logs logs-generator logs-generator --tail=1'
  I0508 15:22:06.459793 22 builder.go:146] stderr: ""
  I0508 15:22:06.459836 22 builder.go:147] stdout: "I0508 15:22:06.314126       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/p78w 256\n"
  I0508 15:22:06.459851 22 logs.go:180] got output "I0508 15:22:06.314126       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/p78w 256\n"
  STEP: limiting log bytes @ 05/08/25 15:22:06.459
  I0508 15:22:06.459931 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-logs-9523 logs logs-generator logs-generator --limit-bytes=1'
  I0508 15:22:06.527262 22 builder.go:146] stderr: ""
  I0508 15:22:06.527309 22 builder.go:147] stdout: "I"
  I0508 15:22:06.527319 22 logs.go:186] got output "I"
  STEP: exposing timestamps @ 05/08/25 15:22:06.527
  I0508 15:22:06.527390 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-logs-9523 logs logs-generator logs-generator --tail=1 --timestamps'
  I0508 15:22:06.594045 22 builder.go:146] stderr: ""
  I0508 15:22:06.594097 22 builder.go:147] stdout: "2025-05-08T15:22:06.514677979Z I0508 15:22:06.514568       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/dsf 436\n"
  I0508 15:22:06.594112 22 logs.go:192] got output "2025-05-08T15:22:06.514677979Z I0508 15:22:06.514568       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/dsf 436\n"
  STEP: restricting to a time range @ 05/08/25 15:22:06.594
  E0508 15:22:06.730076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:07.730381      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:08.730531      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:09.095094 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-logs-9523 logs logs-generator logs-generator --since=1s'
  I0508 15:22:09.168254 22 builder.go:146] stderr: ""
  I0508 15:22:09.168300 22 builder.go:147] stdout: "I0508 15:22:08.314556       1 logs_generator.go:76] 25 POST /api/v1/namespaces/ns/pods/q9hg 269\nI0508 15:22:08.514882       1 logs_generator.go:76] 26 POST /api/v1/namespaces/default/pods/vcm 357\nI0508 15:22:08.714192       1 logs_generator.go:76] 27 POST /api/v1/namespaces/default/pods/jtpx 303\nI0508 15:22:08.914505       1 logs_generator.go:76] 28 PUT /api/v1/namespaces/default/pods/7ls 273\nI0508 15:22:09.114911       1 logs_generator.go:76] 29 POST /api/v1/namespaces/ns/pods/9kxl 541\n"
  I0508 15:22:09.168342 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-logs-9523 logs logs-generator logs-generator --since=24h'
  I0508 15:22:09.237121 22 builder.go:146] stderr: ""
  I0508 15:22:09.237192 22 builder.go:147] stdout: "I0508 15:22:03.314068       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/nlh9 451\nI0508 15:22:03.514499       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/p2ht 541\nI0508 15:22:03.715108       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/lzr 452\nI0508 15:22:03.914464       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/46s4 317\nI0508 15:22:04.114882       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/xbq 374\nI0508 15:22:04.314155       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/wvd 336\nI0508 15:22:04.514477       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/xdfl 247\nI0508 15:22:04.714860       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/2ht4 285\nI0508 15:22:04.914150       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/8mp 452\nI0508 15:22:05.114477       1 logs_generator.go:76] 9 POST /api/v1/namespaces/kube-system/pods/7lmd 409\nI0508 15:22:05.314643       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/pfh 584\nI0508 15:22:05.515066       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/7pvv 392\nI0508 15:22:05.714487       1 logs_generator.go:76] 12 POST /api/v1/namespaces/default/pods/jpf 214\nI0508 15:22:05.914642       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/kjr 502\nI0508 15:22:06.115005       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/txcl 581\nI0508 15:22:06.314126       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/p78w 256\nI0508 15:22:06.514568       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/dsf 436\nI0508 15:22:06.714906       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/kw9 261\nI0508 15:22:06.914171       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/jq7t 303\nI0508 15:22:07.114419       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/b2m 379\nI0508 15:22:07.314852       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/hmg 513\nI0508 15:22:07.514160       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/n4wg 206\nI0508 15:22:07.714542       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/ns/pods/bdv 383\nI0508 15:22:07.914920       1 logs_generator.go:76] 23 POST /api/v1/namespaces/default/pods/mvcm 225\nI0508 15:22:08.114224       1 logs_generator.go:76] 24 PUT /api/v1/namespaces/default/pods/btw 323\nI0508 15:22:08.314556       1 logs_generator.go:76] 25 POST /api/v1/namespaces/ns/pods/q9hg 269\nI0508 15:22:08.514882       1 logs_generator.go:76] 26 POST /api/v1/namespaces/default/pods/vcm 357\nI0508 15:22:08.714192       1 logs_generator.go:76] 27 POST /api/v1/namespaces/default/pods/jtpx 303\nI0508 15:22:08.914505       1 logs_generator.go:76] 28 PUT /api/v1/namespaces/default/pods/7ls 273\nI0508 15:22:09.114911       1 logs_generator.go:76] 29 POST /api/v1/namespaces/ns/pods/9kxl 541\n"
  I0508 15:22:09.237390 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-logs-9523 delete pod logs-generator'
  E0508 15:22:09.731414      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:10.717804 22 builder.go:146] stderr: ""
  I0508 15:22:10.717844 22 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0508 15:22:10.717965 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9523" for this suite. @ 05/08/25 15:22:10.72
• [8.682 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 05/08/25 15:22:10.729
  I0508 15:22:10.729416 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-probe @ 05/08/25 15:22:10.731
  E0508 15:22:10.731534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:22:10.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:22:10.76
  STEP: Creating pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445 @ 05/08/25 15:22:10.764
  E0508 15:22:11.731676      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:12.731808      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/08/25 15:22:12.798
  I0508 15:22:12.800944 22 container_probe.go:1748] Initial restart count of pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 is 0
  I0508 15:22:12.803213 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:13.732182      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:14.732421      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:14.805721 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:15.732596      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:16.732904      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:16.813168 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:17.733008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:18.733088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:18.816566 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:19.733780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:20.734017      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:20.820000 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:21.734171      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:22.734267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:22.822917 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:23.734375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:24.734463      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:24.825905 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:25.734712      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:26.734858      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:26.834899 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:27.735738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:28.735830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:28.837295 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:29.735980      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:30.736079      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:30.840947 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:31.736664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:32.736779      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:32.844847 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:33.737854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:34.738218      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:34.847693 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:35.738328      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:36.738516      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:36.851227 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:37.738685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:38.738890      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:38.855811 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:39.739029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:40.739115      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:40.865104 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:41.739269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:42.739392      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:42.868179 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:43.739527      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:44.739660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:44.872094 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:45.739809      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:46.739950      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:46.880552 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:47.740099      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:48.740309      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:48.884183 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:49.740711      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:50.740818      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:50.887359 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:51.740956      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:52.741120      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:52.891001 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:53.741239      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:54.741391      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:54.894015 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:55.741516      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:56.741617      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:56.897386 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:57.741778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:22:58.742010      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:22:58.900048 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:22:59.742959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:00.743159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:00.902646 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:01.743371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:02.743590      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:02.905755 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:03.744641      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:04.744663      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:04.909201 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:05.744939      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:06.745066      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:06.913086 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:07.745921      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:08.746040      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:08.915857 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:09.746878      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:10.746997      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:10.918425 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:11.747101      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:12.747263      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:12.922027 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:13.747908      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:14.748095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:14.924637 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:15.748251      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:16.748348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:16.927797 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:17.748656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:18.749742      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:18.930470 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:19.749964      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:20.750197      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:20.933708 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:21.750357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:22.750674      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:22.936573 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:23.751481      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:24.751659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:24.938901 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:25.751774      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:26.751928      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:26.941509 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:27.752372      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:28.752658      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:28.944793 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:29.753770      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:30.753879      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:30.947840 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:31.754101      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:32.754236      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:32.950906 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:33.754775      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:34.754999      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:34.953380 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:35.755187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:36.756163      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:36.956809 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:37.756648      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:38.756766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:38.959515 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:39.757718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:40.757993      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:40.962833 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:41.758105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:42.758306      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:42.966091 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:43.759027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:44.759165      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:44.968669 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:45.759531      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:46.759789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:46.971160 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:47.760307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:48.760645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:48.974257 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:49.760763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:50.761760      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:50.977413 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:51.761874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:52.762834      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:52.980747 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:53.762914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:54.763027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:54.983768 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:55.763559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:56.763671      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:56.986136 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:57.763983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:23:58.764719      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:23:58.989372 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:23:59.764828      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:00.764995      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:00.992729 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:01.766053      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:02.766196      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:02.996364 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:03.767196      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:04.767319      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:04.998847 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:05.767457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:06.767684      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:07.002477 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:07.767810      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:08.767944      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:09.005844 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:09.768680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:10.768785      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:11.008575 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:11.768920      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:12.769748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:13.011762 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:13.770693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:14.770926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:15.014567 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:15.772358      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:16.772534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:17.017230 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:17.772666      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:18.772884      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:19.021241 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:19.773037      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:20.773252      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:21.023810 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:21.773643      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:22.773853      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:23.026816 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:23.774307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:24.774526      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:25.030206 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:25.776663      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:26.776757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:27.033390 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:27.776875      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:28.777718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:29.036320 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:29.778129      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:30.778327      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:31.039228 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:31.778449      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:32.778638      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:33.042572 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:33.779541      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:34.779731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:35.045658 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:35.780126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:36.780275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:37.049105 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:37.780876      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:38.781854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:39.052812 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:39.782612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:40.782916      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:41.055974 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:41.783832      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:42.783989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:43.058995 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:43.784841      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:44.784937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:45.061764 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:45.785511      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:46.785597      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:47.064876 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:47.786310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:48.786883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:49.067664 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:49.787019      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:50.787216      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:51.071179 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:51.787339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:52.787522      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:53.078471 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:53.787990      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:54.788100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:55.081765 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:55.788397      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:56.788658      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:57.084517 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:57.789720      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:24:58.790850      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:24:59.087685 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:24:59.791478      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:00.792306      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:01.092464 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:01.795284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:02.794346      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:03.095424 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:03.794405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:04.795247      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:05.097898 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:05.795343      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:06.795479      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:07.101552 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:07.796368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:08.796835      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:09.104569 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:09.797018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:10.797750      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:11.107504 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:11.798210      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:12.798393      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:13.110221 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:13.798883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:14.799077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:15.113260 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:15.799987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:16.800168      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:17.115810 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:17.800558      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:18.800739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:19.118254 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:19.800923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:20.801756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:21.121334 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:21.801913      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:22.802101      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:23.124949 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:23.802867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:24.803171      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:25.137414 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:25.804219      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:26.804321      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:27.140049 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:27.804661      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:28.804850      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:29.142605 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:29.805007      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:30.805736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:31.145383 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:31.805862      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:32.806035      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:33.149272 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:33.806952      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:34.807047      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:35.151910 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:35.807733      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:36.807769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:37.154377 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:37.807895      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:38.808820      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:39.157525 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:39.808945      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:40.809056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:41.161121 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:41.809748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:42.810128      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:43.164139 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:43.810945      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:44.811145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:45.168101 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:45.811884      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:46.811967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:47.170599 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:47.812307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:48.812837      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:49.173424 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:49.813000      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:50.813721      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:51.176789 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:51.814558      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:52.814878      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:53.179916 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:53.815790      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:54.815984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:55.182493 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:55.816112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:56.816653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:57.185329 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:57.816687      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:25:58.816753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:25:59.188437 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:25:59.817739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:00.817997      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:26:01.192259 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:26:01.819019      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:02.819142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:26:03.195646 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:26:03.819560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:04.819690      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:26:05.198283 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:26:05.819830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:06.819942      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:26:07.201953 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:26:07.820062      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:08.820849      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:26:09.204580 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:26:09.820926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:10.821059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:26:11.208098 22 container_probe.go:1758] Get pod liveness-2fdedb8d-84a3-468c-bcf1-106837fe09e0 in namespace container-probe-8445
  E0508 15:26:11.821173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:12.821302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/08/25 15:26:13.208
  I0508 15:26:13.243100 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8445" for this suite. @ 05/08/25 15:26:13.255
• [242.535 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/08/25 15:26:13.264
  I0508 15:26:13.264853 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename secrets @ 05/08/25 15:26:13.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:26:13.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:26:13.297
  STEP: Creating secret with name secret-test-079ed099-3c82-40e0-a485-8ca0c9134b81 @ 05/08/25 15:26:13.3
  STEP: Creating a pod to test consume secrets @ 05/08/25 15:26:13.316
  E0508 15:26:13.821778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:14.821935      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:15.822476      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:16.822622      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:26:17.342
  I0508 15:26:17.344812 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-secrets-3b2ce0b8-ca67-4a46-b5a8-9cc6575127ea container secret-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 15:26:17.359
  I0508 15:26:17.388953 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6486" for this suite. @ 05/08/25 15:26:17.391
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/08/25 15:26:17.407
  I0508 15:26:17.407458 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename daemonsets @ 05/08/25 15:26:17.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:26:17.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:26:17.433
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/08/25 15:26:17.495
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/08/25 15:26:17.504
  I0508 15:26:17.621927 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:26:17.621965 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:26:17.823369      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:26:18.578716 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:26:18.578966 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:26:18.824131      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:26:19.509527 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0508 15:26:19.509711 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:26:19.824946      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:26:20.521407 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0508 15:26:20.521443 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/08/25 15:26:20.523
  I0508 15:26:20.667134 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0508 15:26:20.667202 22 fixtures.go:131] Node ip-172-31-27-218.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:26:20.825422      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:26:21.654225 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0508 15:26:21.654390 22 fixtures.go:131] Node ip-172-31-27-218.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:26:21.825899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:26:22.686229 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0508 15:26:22.686270 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/08/25 15:26:22.686
  STEP: Deleting DaemonSet "daemon-set" @ 05/08/25 15:26:22.698
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4212, will wait for the garbage collector to delete the pods @ 05/08/25 15:26:22.698
  I0508 15:26:22.767093 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 15.721164ms
  E0508 15:26:22.826914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:26:22.868037 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.932487ms
  E0508 15:26:23.827185      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:24.828085      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:26:25.171365 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:26:25.171405 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0508 15:26:25.173283 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"49210"},"items":null}

  I0508 15:26:25.174831 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"49210"},"items":null}

  I0508 15:26:25.180588 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4212" for this suite. @ 05/08/25 15:26:25.182
• [7.783 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 05/08/25 15:26:25.19
  I0508 15:26:25.190596 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename gc @ 05/08/25 15:26:25.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:26:25.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:26:25.215
  STEP: create the rc @ 05/08/25 15:26:25.277
  I0508 15:26:25.285588      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0508 15:26:25.828892      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:26.828967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:27.829555      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:28.830244      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:29.831392      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:30.832129      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/08/25 15:26:31.401
  STEP: wait for the rc to be deleted @ 05/08/25 15:26:31.586
  E0508 15:26:31.833160      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:32.833600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:33.835492      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:34.835583      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:35.848886      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/08/25 15:26:36.72
  E0508 15:26:36.849551      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:37.852639      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:38.852872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:39.853726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:40.853896      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:41.854111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:42.854321      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:43.855012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:44.855963      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:45.856737      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:46.856840      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:47.856955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:48.857830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:49.858213      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:50.858331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:51.858524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:52.859914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:53.860894      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:54.861016      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:55.861801      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:56.861912      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:57.862007      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:58.862918      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:26:59.863053      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:00.863683      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:01.863868      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:02.864083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:03.864932      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:04.865015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:05.865813      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:06.866370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/08/25 15:27:06.871
  I0508 15:27:07.776578 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0508 15:27:07.776688 22 delete.go:95] Deleting pod "simpletest.rc-2cj8r" in namespace "gc-8437"
  E0508 15:27:07.866901      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:27:08.604087 22 delete.go:95] Deleting pod "simpletest.rc-2khxj" in namespace "gc-8437"
  E0508 15:27:08.867622      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:27:09.186353 22 delete.go:95] Deleting pod "simpletest.rc-42bk8" in namespace "gc-8437"
  E0508 15:27:09.868129      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:27:10.098753 22 delete.go:95] Deleting pod "simpletest.rc-45kk8" in namespace "gc-8437"
  I0508 15:27:10.199169 22 delete.go:95] Deleting pod "simpletest.rc-4hsnv" in namespace "gc-8437"
  I0508 15:27:10.262326 22 delete.go:95] Deleting pod "simpletest.rc-4q64n" in namespace "gc-8437"
  I0508 15:27:10.358099 22 delete.go:95] Deleting pod "simpletest.rc-55rvh" in namespace "gc-8437"
  I0508 15:27:10.414716 22 delete.go:95] Deleting pod "simpletest.rc-5kstj" in namespace "gc-8437"
  I0508 15:27:10.501768 22 delete.go:95] Deleting pod "simpletest.rc-674c5" in namespace "gc-8437"
  I0508 15:27:10.630993 22 delete.go:95] Deleting pod "simpletest.rc-695wh" in namespace "gc-8437"
  I0508 15:27:10.720779 22 delete.go:95] Deleting pod "simpletest.rc-6gdxd" in namespace "gc-8437"
  I0508 15:27:10.807083 22 delete.go:95] Deleting pod "simpletest.rc-6wwtt" in namespace "gc-8437"
  E0508 15:27:10.868700      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:27:10.914030 22 delete.go:95] Deleting pod "simpletest.rc-6zgx2" in namespace "gc-8437"
  I0508 15:27:10.975749 22 delete.go:95] Deleting pod "simpletest.rc-7sc6z" in namespace "gc-8437"
  I0508 15:27:11.036412 22 delete.go:95] Deleting pod "simpletest.rc-88bkm" in namespace "gc-8437"
  I0508 15:27:11.145126 22 delete.go:95] Deleting pod "simpletest.rc-8cjmr" in namespace "gc-8437"
  I0508 15:27:11.233779 22 delete.go:95] Deleting pod "simpletest.rc-8cnvk" in namespace "gc-8437"
  I0508 15:27:11.267698 22 delete.go:95] Deleting pod "simpletest.rc-8gqsh" in namespace "gc-8437"
  I0508 15:27:11.327407 22 delete.go:95] Deleting pod "simpletest.rc-8hq7w" in namespace "gc-8437"
  I0508 15:27:11.368725 22 delete.go:95] Deleting pod "simpletest.rc-8pvng" in namespace "gc-8437"
  I0508 15:27:11.442107 22 delete.go:95] Deleting pod "simpletest.rc-8vqbk" in namespace "gc-8437"
  I0508 15:27:11.488720 22 delete.go:95] Deleting pod "simpletest.rc-9884n" in namespace "gc-8437"
  I0508 15:27:11.573663 22 delete.go:95] Deleting pod "simpletest.rc-9bhwx" in namespace "gc-8437"
  I0508 15:27:11.644285 22 delete.go:95] Deleting pod "simpletest.rc-9f2r5" in namespace "gc-8437"
  I0508 15:27:11.722381 22 delete.go:95] Deleting pod "simpletest.rc-9tslw" in namespace "gc-8437"
  I0508 15:27:11.806000 22 delete.go:95] Deleting pod "simpletest.rc-9wddm" in namespace "gc-8437"
  E0508 15:27:11.868728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:27:11.868872 22 delete.go:95] Deleting pod "simpletest.rc-b58c2" in namespace "gc-8437"
  I0508 15:27:11.954922 22 delete.go:95] Deleting pod "simpletest.rc-b8ks4" in namespace "gc-8437"
  I0508 15:27:12.022338 22 delete.go:95] Deleting pod "simpletest.rc-b9wd8" in namespace "gc-8437"
  I0508 15:27:12.071330 22 delete.go:95] Deleting pod "simpletest.rc-bbrpw" in namespace "gc-8437"
  I0508 15:27:12.171197 22 delete.go:95] Deleting pod "simpletest.rc-bc87z" in namespace "gc-8437"
  I0508 15:27:12.272347 22 delete.go:95] Deleting pod "simpletest.rc-bfh97" in namespace "gc-8437"
  I0508 15:27:12.378259 22 delete.go:95] Deleting pod "simpletest.rc-bprdr" in namespace "gc-8437"
  I0508 15:27:12.443659 22 delete.go:95] Deleting pod "simpletest.rc-bvzbk" in namespace "gc-8437"
  I0508 15:27:12.514861 22 delete.go:95] Deleting pod "simpletest.rc-c7kd6" in namespace "gc-8437"
  I0508 15:27:12.663112 22 delete.go:95] Deleting pod "simpletest.rc-c7v2m" in namespace "gc-8437"
  I0508 15:27:12.704589 22 delete.go:95] Deleting pod "simpletest.rc-cqs8h" in namespace "gc-8437"
  I0508 15:27:12.748269 22 delete.go:95] Deleting pod "simpletest.rc-cskr5" in namespace "gc-8437"
  I0508 15:27:12.820731 22 delete.go:95] Deleting pod "simpletest.rc-d68s8" in namespace "gc-8437"
  E0508 15:27:12.871873      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:27:12.936700 22 delete.go:95] Deleting pod "simpletest.rc-d6dx6" in namespace "gc-8437"
  I0508 15:27:12.980792 22 delete.go:95] Deleting pod "simpletest.rc-dkjcz" in namespace "gc-8437"
  I0508 15:27:13.008760 22 delete.go:95] Deleting pod "simpletest.rc-dsr8m" in namespace "gc-8437"
  I0508 15:27:13.060857 22 delete.go:95] Deleting pod "simpletest.rc-dswj4" in namespace "gc-8437"
  I0508 15:27:13.143728 22 delete.go:95] Deleting pod "simpletest.rc-f7n7g" in namespace "gc-8437"
  I0508 15:27:13.225085 22 delete.go:95] Deleting pod "simpletest.rc-fdf8j" in namespace "gc-8437"
  I0508 15:27:13.339905 22 delete.go:95] Deleting pod "simpletest.rc-fhhkn" in namespace "gc-8437"
  I0508 15:27:13.416724 22 delete.go:95] Deleting pod "simpletest.rc-fjw6j" in namespace "gc-8437"
  I0508 15:27:13.461550 22 delete.go:95] Deleting pod "simpletest.rc-fzsxv" in namespace "gc-8437"
  I0508 15:27:13.495377 22 delete.go:95] Deleting pod "simpletest.rc-g6gw9" in namespace "gc-8437"
  I0508 15:27:13.575825 22 delete.go:95] Deleting pod "simpletest.rc-g9hmc" in namespace "gc-8437"
  I0508 15:27:13.666562 22 delete.go:95] Deleting pod "simpletest.rc-gpp2q" in namespace "gc-8437"
  I0508 15:27:13.708737 22 delete.go:95] Deleting pod "simpletest.rc-gvq7p" in namespace "gc-8437"
  I0508 15:27:13.755001 22 delete.go:95] Deleting pod "simpletest.rc-h2hxh" in namespace "gc-8437"
  I0508 15:27:13.828267 22 delete.go:95] Deleting pod "simpletest.rc-h2prd" in namespace "gc-8437"
  I0508 15:27:13.866077 22 delete.go:95] Deleting pod "simpletest.rc-h77kq" in namespace "gc-8437"
  E0508 15:27:13.872688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:27:13.907034 22 delete.go:95] Deleting pod "simpletest.rc-hpv68" in namespace "gc-8437"
  I0508 15:27:13.958863 22 delete.go:95] Deleting pod "simpletest.rc-hs4br" in namespace "gc-8437"
  I0508 15:27:14.014414 22 delete.go:95] Deleting pod "simpletest.rc-hwnlp" in namespace "gc-8437"
  I0508 15:27:14.050720 22 delete.go:95] Deleting pod "simpletest.rc-j6gwn" in namespace "gc-8437"
  I0508 15:27:14.116856 22 delete.go:95] Deleting pod "simpletest.rc-jnbnz" in namespace "gc-8437"
  I0508 15:27:14.172634 22 delete.go:95] Deleting pod "simpletest.rc-jw9dr" in namespace "gc-8437"
  I0508 15:27:14.295353 22 delete.go:95] Deleting pod "simpletest.rc-kgl87" in namespace "gc-8437"
  I0508 15:27:14.369272 22 delete.go:95] Deleting pod "simpletest.rc-kpdvv" in namespace "gc-8437"
  I0508 15:27:14.409698 22 delete.go:95] Deleting pod "simpletest.rc-l62bl" in namespace "gc-8437"
  I0508 15:27:14.456554 22 delete.go:95] Deleting pod "simpletest.rc-l6lj2" in namespace "gc-8437"
  I0508 15:27:14.502274 22 delete.go:95] Deleting pod "simpletest.rc-lb6pq" in namespace "gc-8437"
  I0508 15:27:14.588012 22 delete.go:95] Deleting pod "simpletest.rc-lz5t8" in namespace "gc-8437"
  I0508 15:27:14.660426 22 delete.go:95] Deleting pod "simpletest.rc-mhmmg" in namespace "gc-8437"
  I0508 15:27:14.694746 22 delete.go:95] Deleting pod "simpletest.rc-mtwhv" in namespace "gc-8437"
  I0508 15:27:14.738314 22 delete.go:95] Deleting pod "simpletest.rc-n2q42" in namespace "gc-8437"
  I0508 15:27:14.785238 22 delete.go:95] Deleting pod "simpletest.rc-n4ljx" in namespace "gc-8437"
  I0508 15:27:14.811265 22 delete.go:95] Deleting pod "simpletest.rc-nmqw8" in namespace "gc-8437"
  I0508 15:27:14.862919 22 delete.go:95] Deleting pod "simpletest.rc-nvxrp" in namespace "gc-8437"
  E0508 15:27:14.873265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:27:14.960108 22 delete.go:95] Deleting pod "simpletest.rc-nz2xf" in namespace "gc-8437"
  I0508 15:27:14.994413 22 delete.go:95] Deleting pod "simpletest.rc-p9fls" in namespace "gc-8437"
  I0508 15:27:15.030384 22 delete.go:95] Deleting pod "simpletest.rc-pmqcj" in namespace "gc-8437"
  I0508 15:27:15.100993 22 delete.go:95] Deleting pod "simpletest.rc-qjs9t" in namespace "gc-8437"
  I0508 15:27:15.195087 22 delete.go:95] Deleting pod "simpletest.rc-qjwnq" in namespace "gc-8437"
  I0508 15:27:15.243312 22 delete.go:95] Deleting pod "simpletest.rc-qxqpn" in namespace "gc-8437"
  I0508 15:27:15.317136 22 delete.go:95] Deleting pod "simpletest.rc-rkfzk" in namespace "gc-8437"
  I0508 15:27:15.438859 22 delete.go:95] Deleting pod "simpletest.rc-rz8cv" in namespace "gc-8437"
  I0508 15:27:15.496352 22 delete.go:95] Deleting pod "simpletest.rc-sxbg5" in namespace "gc-8437"
  I0508 15:27:15.543147 22 delete.go:95] Deleting pod "simpletest.rc-sxncd" in namespace "gc-8437"
  I0508 15:27:15.619353 22 delete.go:95] Deleting pod "simpletest.rc-tbmjp" in namespace "gc-8437"
  I0508 15:27:15.691058 22 delete.go:95] Deleting pod "simpletest.rc-tq8k7" in namespace "gc-8437"
  I0508 15:27:15.750344 22 delete.go:95] Deleting pod "simpletest.rc-ts8kg" in namespace "gc-8437"
  I0508 15:27:15.822999 22 delete.go:95] Deleting pod "simpletest.rc-tzfc9" in namespace "gc-8437"
  I0508 15:27:15.865247 22 delete.go:95] Deleting pod "simpletest.rc-vg8xq" in namespace "gc-8437"
  E0508 15:27:15.874239      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:27:15.898777 22 delete.go:95] Deleting pod "simpletest.rc-vqpxp" in namespace "gc-8437"
  I0508 15:27:15.968478 22 delete.go:95] Deleting pod "simpletest.rc-vvs97" in namespace "gc-8437"
  I0508 15:27:16.000834 22 delete.go:95] Deleting pod "simpletest.rc-wm56q" in namespace "gc-8437"
  I0508 15:27:16.049072 22 delete.go:95] Deleting pod "simpletest.rc-wpdxp" in namespace "gc-8437"
  I0508 15:27:16.099335 22 delete.go:95] Deleting pod "simpletest.rc-wqps7" in namespace "gc-8437"
  I0508 15:27:16.155938 22 delete.go:95] Deleting pod "simpletest.rc-wrj7p" in namespace "gc-8437"
  I0508 15:27:16.214670 22 delete.go:95] Deleting pod "simpletest.rc-wzvm5" in namespace "gc-8437"
  I0508 15:27:16.287349 22 delete.go:95] Deleting pod "simpletest.rc-x9xz4" in namespace "gc-8437"
  I0508 15:27:16.315793 22 delete.go:95] Deleting pod "simpletest.rc-z8prb" in namespace "gc-8437"
  I0508 15:27:16.380924 22 delete.go:95] Deleting pod "simpletest.rc-zc6gf" in namespace "gc-8437"
  I0508 15:27:16.421126 22 delete.go:95] Deleting pod "simpletest.rc-zf8kj" in namespace "gc-8437"
  I0508 15:27:16.475839 22 delete.go:95] Deleting pod "simpletest.rc-zzmsp" in namespace "gc-8437"
  I0508 15:27:16.529528 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8437" for this suite. @ 05/08/25 15:27:16.541
• [51.373 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 05/08/25 15:27:16.564
  I0508 15:27:16.564342 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename runtimeclass @ 05/08/25 15:27:16.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:27:16.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:27:16.716
  STEP: getting /apis @ 05/08/25 15:27:16.731
  STEP: getting /apis/node.k8s.io @ 05/08/25 15:27:16.737
  STEP: getting /apis/node.k8s.io/v1 @ 05/08/25 15:27:16.766
  STEP: creating @ 05/08/25 15:27:16.768
  E0508 15:27:16.874338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: watching @ 05/08/25 15:27:16.874
  I0508 15:27:16.874763 22 runtimeclass.go:278] starting watch
  STEP: getting @ 05/08/25 15:27:16.924
  STEP: listing @ 05/08/25 15:27:16.957
  STEP: patching @ 05/08/25 15:27:16.968
  STEP: updating @ 05/08/25 15:27:16.986
  I0508 15:27:17.018605 22 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 05/08/25 15:27:17.018
  STEP: deleting a collection @ 05/08/25 15:27:17.185
  I0508 15:27:17.320626 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6988" for this suite. @ 05/08/25 15:27:17.396
• [0.865 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 05/08/25 15:27:17.447
  I0508 15:27:17.447240 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename namespaces @ 05/08/25 15:27:17.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:27:17.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:27:17.53
  STEP: creating a Namespace @ 05/08/25 15:27:17.548
  STEP: patching the Namespace @ 05/08/25 15:27:17.627
  STEP: get the Namespace and ensuring it has the label @ 05/08/25 15:27:17.668
  I0508 15:27:17.678737 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7347" for this suite. @ 05/08/25 15:27:17.685
  STEP: Destroying namespace "nspatchtest-1901d655-c2a7-47a5-84aa-205978c67c22-4760" for this suite. @ 05/08/25 15:27:17.723
• [0.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 05/08/25 15:27:17.749
  I0508 15:27:17.749728 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 15:27:17.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:27:17.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:27:17.807
  STEP: Creating a pod to test downward api env vars @ 05/08/25 15:27:17.82
  E0508 15:27:17.875241      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:18.875805      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:19.876155      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:20.877246      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:21.884690      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:22.892380      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:23.894062      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:24.894792      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:25.896700      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:26.905509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:27.906727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:28.906824      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:29.907542      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:30.907619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:31.908106      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:27:31.92
  I0508 15:27:31.926344 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downward-api-4ddc63d5-c10e-4d19-9d04-c70900030117 container dapi-container: <nil>
  STEP: delete the pod @ 05/08/25 15:27:31.939
  I0508 15:27:31.991760 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8967" for this suite. @ 05/08/25 15:27:32.003
• [14.279 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 05/08/25 15:27:32.028
  I0508 15:27:32.028982 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 15:27:32.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:27:32.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:27:32.077
  STEP: Creating configMap with name configmap-test-upd-8f19a33f-1449-4899-8e16-27d832d646f1 @ 05/08/25 15:27:32.125
  STEP: Creating the pod @ 05/08/25 15:27:32.162
  E0508 15:27:32.908904      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:33.909831      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 05/08/25 15:27:34.206
  STEP: Waiting for pod with binary data @ 05/08/25 15:27:34.21
  I0508 15:27:34.215042 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9341" for this suite. @ 05/08/25 15:27:34.217
• [2.231 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/08/25 15:27:34.26
  I0508 15:27:34.260043 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-runtime @ 05/08/25 15:27:34.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:27:34.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:27:34.372
  STEP: create the container @ 05/08/25 15:27:34.399
  I0508 15:27:34.521842      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 05/08/25 15:27:34.522
  E0508 15:27:34.910587      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:35.911529      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:36.912520      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/08/25 15:27:37.537
  STEP: the container should be terminated @ 05/08/25 15:27:37.539
  STEP: the termination message should be set @ 05/08/25 15:27:37.539
  I0508 15:27:37.539825 22 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/08/25 15:27:37.539
  I0508 15:27:37.569991 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5503" for this suite. @ 05/08/25 15:27:37.572
• [3.323 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/08/25 15:27:37.583
  I0508 15:27:37.583345 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename subpath @ 05/08/25 15:27:37.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:27:37.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:27:37.622
  STEP: Setting up data @ 05/08/25 15:27:37.626
  STEP: Creating pod pod-subpath-test-configmap-jhlb @ 05/08/25 15:27:37.648
  STEP: Creating a pod to test atomic-volume-subpath @ 05/08/25 15:27:37.648
  E0508 15:27:37.912667      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:38.912930      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:39.913795      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:40.913914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:41.914543      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:42.914817      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:43.914817      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:44.914918      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:45.915846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:46.916076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:47.916872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:48.917950      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:49.918060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:50.918148      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:51.918627      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:52.918753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:53.919677      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:54.919770      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:55.920337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:56.920399      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:57.921447      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:58.921955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:27:59.922318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:00.922511      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:28:01.764
  I0508 15:28:01.770036 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-subpath-test-configmap-jhlb container test-container-subpath-configmap-jhlb: <nil>
  STEP: delete the pod @ 05/08/25 15:28:01.784
  STEP: Deleting pod pod-subpath-test-configmap-jhlb @ 05/08/25 15:28:01.911
  I0508 15:28:01.911237 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-jhlb" in namespace "subpath-5012"
  I0508 15:28:01.914304 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5012" for this suite. @ 05/08/25 15:28:01.921
  E0508 15:28:01.929482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
• [24.369 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/08/25 15:28:01.952
  I0508 15:28:01.952451 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/08/25 15:28:01.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:28:02.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:28:02.045
  I0508 15:28:02.059034 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:28:02.924849      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:03.924902      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:04.925568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:28:05.197575 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3899" for this suite. @ 05/08/25 15:28:05.2
• [3.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/08/25 15:28:05.209
  I0508 15:28:05.209668 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename subpath @ 05/08/25 15:28:05.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:28:05.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:28:05.241
  STEP: Setting up data @ 05/08/25 15:28:05.245
  STEP: Creating pod pod-subpath-test-secret-5f44 @ 05/08/25 15:28:05.263
  STEP: Creating a pod to test atomic-volume-subpath @ 05/08/25 15:28:05.263
  E0508 15:28:05.925691      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:06.925803      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:07.926373      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:08.926843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:09.927066      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:10.927259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:11.928081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:12.928295      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:13.928876      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:14.929741      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:15.929891      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:16.930124      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:17.930861      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:18.931013      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:19.931098      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:20.931193      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:21.931345      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:22.931623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:23.932010      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:24.932141      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:25.933212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:26.933819      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:27.934885      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:28.934950      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:28:29.336
  I0508 15:28:29.338919 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-subpath-test-secret-5f44 container test-container-subpath-secret-5f44: <nil>
  STEP: delete the pod @ 05/08/25 15:28:29.344
  STEP: Deleting pod pod-subpath-test-secret-5f44 @ 05/08/25 15:28:29.369
  I0508 15:28:29.369553 22 delete.go:62] Deleting pod "pod-subpath-test-secret-5f44" in namespace "subpath-7560"
  I0508 15:28:29.372079 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7560" for this suite. @ 05/08/25 15:28:29.374
• [24.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/08/25 15:28:29.382
  I0508 15:28:29.382893 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:28:29.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:28:29.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:28:29.405
  STEP: Creating projection with secret that has name projected-secret-test-f46ad514-e407-433a-8332-d389e540457e @ 05/08/25 15:28:29.412
  STEP: Creating a pod to test consume secrets @ 05/08/25 15:28:29.421
  E0508 15:28:29.935656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:30.935783      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:31.936370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:32.936583      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:28:33.455
  I0508 15:28:33.457654 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-projected-secrets-9c264401-9d81-40dc-bdde-936c6ce6bf45 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 15:28:33.466
  I0508 15:28:33.496143 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1430" for this suite. @ 05/08/25 15:28:33.498
• [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 05/08/25 15:28:33.517
  I0508 15:28:33.518194 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 15:28:33.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:28:33.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:28:33.541
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/08/25 15:28:33.543
  E0508 15:28:33.936733      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:34.937718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:35.938832      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:36.938931      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:28:37.574
  I0508 15:28:37.577159 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-ef19fcb3-7116-46d8-bccc-1d8305b3b20e container test-container: <nil>
  STEP: delete the pod @ 05/08/25 15:28:37.581
  I0508 15:28:37.606680 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3115" for this suite. @ 05/08/25 15:28:37.61
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 05/08/25 15:28:37.635
  I0508 15:28:37.635345 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/08/25 15:28:37.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:28:37.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:28:37.663
  STEP: create the container to handle the HTTPGet hook request. @ 05/08/25 15:28:37.711
  E0508 15:28:37.939250      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:38.939944      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:39.940656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:40.940734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/08/25 15:28:41.731
  E0508 15:28:41.941337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:42.944685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/08/25 15:28:43.747
  STEP: delete the pod with lifecycle hook @ 05/08/25 15:28:43.757
  E0508 15:28:43.945174      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:44.945276      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:45.956323      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:46.956756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:28:47.781758 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4755" for this suite. @ 05/08/25 15:28:47.784
• [10.163 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 05/08/25 15:28:47.799
  I0508 15:28:47.799568 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:28:47.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:28:47.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:28:47.831
  STEP: Setting up server cert @ 05/08/25 15:28:47.873
  E0508 15:28:47.957431      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:28:48.264
  STEP: Deploying the webhook pod @ 05/08/25 15:28:48.272
  STEP: Wait for the deployment to be ready @ 05/08/25 15:28:48.295
  I0508 15:28:48.310109 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0508 15:28:48.958303      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:49.958420      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:28:50.333204 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 15, 28, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 28, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 28, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 28, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0508 15:28:50.958961      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:51.959166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:28:52.335
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:28:52.384
  E0508 15:28:52.959326      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:28:53.386542 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/08/25 15:28:53.389
  STEP: verifying the mutating webhook match conditions @ 05/08/25 15:28:53.404
  STEP: updating the mutating webhook match conditions @ 05/08/25 15:28:53.407
  STEP: verifying the mutating webhook match conditions @ 05/08/25 15:28:53.424
  I0508 15:28:53.561169 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6691" for this suite. @ 05/08/25 15:28:53.564
  STEP: Destroying namespace "webhook-markers-1430" for this suite. @ 05/08/25 15:28:53.587
• [5.807 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/08/25 15:28:53.608
  I0508 15:28:53.608907 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename watch @ 05/08/25 15:28:53.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:28:53.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:28:53.642
  STEP: creating a watch on configmaps with a certain label @ 05/08/25 15:28:53.645
  STEP: creating a new configmap @ 05/08/25 15:28:53.646
  STEP: modifying the configmap once @ 05/08/25 15:28:53.665
  STEP: changing the label value of the configmap @ 05/08/25 15:28:53.677
  STEP: Expecting to observe a delete notification for the watched object @ 05/08/25 15:28:53.69
  I0508 15:28:53.691126 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1093  de125b26-a769-4447-b50a-cc546f363c35 51869 0 2025-05-08 15:28:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-08 15:28:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 15:28:53.691371 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1093  de125b26-a769-4447-b50a-cc546f363c35 51870 0 2025-05-08 15:28:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-08 15:28:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 15:28:53.691529 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1093  de125b26-a769-4447-b50a-cc546f363c35 51871 0 2025-05-08 15:28:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-08 15:28:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/08/25 15:28:53.691
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/08/25 15:28:53.701
  E0508 15:28:53.959630      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:54.959754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:55.959906      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:56.960022      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:57.960158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:58.961001      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:28:59.961086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:00.961727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:01.962073      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:02.962097      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 05/08/25 15:29:03.702
  STEP: modifying the configmap a third time @ 05/08/25 15:29:03.712
  STEP: deleting the configmap @ 05/08/25 15:29:03.722
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/08/25 15:29:03.741
  I0508 15:29:03.742043 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1093  de125b26-a769-4447-b50a-cc546f363c35 51918 0 2025-05-08 15:28:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-08 15:29:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 15:29:03.742226 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1093  de125b26-a769-4447-b50a-cc546f363c35 51919 0 2025-05-08 15:28:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-08 15:29:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 15:29:03.742307 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1093  de125b26-a769-4447-b50a-cc546f363c35 51920 0 2025-05-08 15:28:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-08 15:29:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 15:29:03.742429 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1093" for this suite. @ 05/08/25 15:29:03.745
• [10.145 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/08/25 15:29:03.754
  I0508 15:29:03.754879 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename secrets @ 05/08/25 15:29:03.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:29:03.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:29:03.837
  STEP: Creating secret with name secret-test-map-f5c9fe76-d8b3-41f6-ba08-634a40f6e560 @ 05/08/25 15:29:03.84
  STEP: Creating a pod to test consume secrets @ 05/08/25 15:29:03.848
  E0508 15:29:03.962520      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:04.962638      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:05.963057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:06.963190      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:29:07.878
  I0508 15:29:07.881147 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-secrets-37aafe37-11b9-48f2-802d-bfcd682afecd container secret-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 15:29:07.886
  I0508 15:29:07.914420 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9114" for this suite. @ 05/08/25 15:29:07.917
• [4.178 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/08/25 15:29:07.932
  I0508 15:29:07.932421 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-runtime @ 05/08/25 15:29:07.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:29:07.956
  E0508 15:29:07.963902      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:29:07.966
  STEP: create the container @ 05/08/25 15:29:07.969
  I0508 15:29:07.978909      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 05/08/25 15:29:07.979
  E0508 15:29:08.964292      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:09.964406      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:10.964696      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/08/25 15:29:10.99
  STEP: the container should be terminated @ 05/08/25 15:29:10.992
  STEP: the termination message should be set @ 05/08/25 15:29:10.992
  I0508 15:29:10.992871 22 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/08/25 15:29:10.992
  I0508 15:29:11.015484 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-788" for this suite. @ 05/08/25 15:29:11.017
• [3.093 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 05/08/25 15:29:11.026
  I0508 15:29:11.026456 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:29:11.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:29:11.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:29:11.057
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 15:29:11.06
  E0508 15:29:11.964965      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:12.965041      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:13.965729      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:14.965869      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:29:15.078
  I0508 15:29:15.080915 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-ab59964f-5694-400f-9011-fbfc87ab82d9 container client-container: <nil>
  STEP: delete the pod @ 05/08/25 15:29:15.085
  I0508 15:29:15.108634 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6419" for this suite. @ 05/08/25 15:29:15.111
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 05/08/25 15:29:15.12
  I0508 15:29:15.120115 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename gc @ 05/08/25 15:29:15.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:29:15.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:29:15.153
  STEP: create the rc @ 05/08/25 15:29:15.155
  I0508 15:29:15.163704      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0508 15:29:15.965946      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:16.966088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:17.966198      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:18.966883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:19.966983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/08/25 15:29:20.166
  STEP: wait for all pods to be garbage collected @ 05/08/25 15:29:20.175
  E0508 15:29:20.967148      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:21.967367      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:22.967591      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:23.967717      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:24.967820      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/08/25 15:29:25.182
  I0508 15:29:25.242201 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0508 15:29:25.242687 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1154" for this suite. @ 05/08/25 15:29:25.245
• [10.133 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/08/25 15:29:25.253
  I0508 15:29:25.253563 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename replicaset @ 05/08/25 15:29:25.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:29:25.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:29:25.288
  STEP: Create a Replicaset @ 05/08/25 15:29:25.292
  STEP: Verify that the required pods have come up. @ 05/08/25 15:29:25.301
  I0508 15:29:25.305208 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0508 15:29:25.968685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:26.969761      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:27.970048      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:28.970935      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:29.971144      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:29:30.363717 22 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/08/25 15:29:30.363
  STEP: Getting /status @ 05/08/25 15:29:30.363
  I0508 15:29:30.366514 22 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/08/25 15:29:30.366
  I0508 15:29:30.380924 22 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/08/25 15:29:30.38
  I0508 15:29:30.383063 22 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0508 15:29:30.383272 22 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0508 15:29:30.383515 22 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0508 15:29:30.383686 22 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0508 15:29:30.383723 22 replica_set.go:688] Found replicaset test-rs in namespace replicaset-1082 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0508 15:29:30.383741 22 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/08/25 15:29:30.383
  I0508 15:29:30.383784 22 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0508 15:29:30.400397 22 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/08/25 15:29:30.4
  I0508 15:29:30.402832 22 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0508 15:29:30.402980 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0508 15:29:30.403227 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0508 15:29:30.403511 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0508 15:29:30.403556 22 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-1082 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0508 15:29:30.403779 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0508 15:29:30.403836 22 replica_set.go:724] Found replicaset test-rs in namespace replicaset-1082 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0508 15:29:30.403854 22 replica_set.go:735] Replicaset test-rs has a patched status
  I0508 15:29:30.404059 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1082" for this suite. @ 05/08/25 15:29:30.415
• [5.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/08/25 15:29:30.44
  I0508 15:29:30.440996 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pods @ 05/08/25 15:29:30.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:29:30.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:29:30.468
  I0508 15:29:30.470912 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: creating the pod @ 05/08/25 15:29:30.471
  STEP: submitting the pod to kubernetes @ 05/08/25 15:29:30.471
  E0508 15:29:30.971282      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:31.971381      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:29:32.663838 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8502" for this suite. @ 05/08/25 15:29:32.666
• [2.234 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 05/08/25 15:29:32.675
  I0508 15:29:32.675891 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:29:32.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:29:32.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:29:32.702
  STEP: Setting up server cert @ 05/08/25 15:29:32.736
  E0508 15:29:32.971979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:29:33.153
  STEP: Deploying the webhook pod @ 05/08/25 15:29:33.168
  STEP: Wait for the deployment to be ready @ 05/08/25 15:29:33.191
  I0508 15:29:33.205310 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0508 15:29:33.973055      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:34.973289      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:29:35.212
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:29:35.239
  E0508 15:29:35.974376      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:29:36.239668 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/08/25 15:29:36.242
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/08/25 15:29:36.243
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/08/25 15:29:36.244
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/08/25 15:29:36.244
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/08/25 15:29:36.244
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/08/25 15:29:36.245
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/08/25 15:29:36.245
  I0508 15:29:36.337823 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4330" for this suite. @ 05/08/25 15:29:36.34
  STEP: Destroying namespace "webhook-markers-1501" for this suite. @ 05/08/25 15:29:36.365
• [3.715 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/08/25 15:29:36.391
  I0508 15:29:36.391599 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename events @ 05/08/25 15:29:36.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:29:36.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:29:36.418
  STEP: Create set of events @ 05/08/25 15:29:36.427
  I0508 15:29:36.434521 22 core_events.go:198] created test-event-1
  I0508 15:29:36.442474 22 core_events.go:198] created test-event-2
  I0508 15:29:36.450282 22 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/08/25 15:29:36.45
  STEP: delete collection of events @ 05/08/25 15:29:36.455
  I0508 15:29:36.455758 22 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/08/25 15:29:36.495
  I0508 15:29:36.495572 22 core_events.go:230] requesting list of events to confirm quantity
  I0508 15:29:36.497596 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9153" for this suite. @ 05/08/25 15:29:36.5
• [0.117 seconds]
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/08/25 15:29:36.508
  I0508 15:29:36.508693 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename apf @ 05/08/25 15:29:36.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:29:36.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:29:36.535
  STEP: getting /apis @ 05/08/25 15:29:36.537
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/08/25 15:29:36.54
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/08/25 15:29:36.541
  STEP: creating @ 05/08/25 15:29:36.542
  STEP: getting @ 05/08/25 15:29:36.57
  STEP: listing @ 05/08/25 15:29:36.572
  STEP: watching @ 05/08/25 15:29:36.574
  I0508 15:29:36.574595 22 flowcontrol.go:394] starting watch
  STEP: patching @ 05/08/25 15:29:36.575
  STEP: updating @ 05/08/25 15:29:36.588
  I0508 15:29:36.636118 22 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 05/08/25 15:29:36.636
  STEP: patching /status @ 05/08/25 15:29:36.638
  STEP: updating /status @ 05/08/25 15:29:36.648
  STEP: deleting @ 05/08/25 15:29:36.664
  STEP: deleting a collection @ 05/08/25 15:29:36.702
  I0508 15:29:36.723368 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3182" for this suite. @ 05/08/25 15:29:36.725
• [0.226 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/08/25 15:29:36.734
  I0508 15:29:36.734308 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pod-network-test @ 05/08/25 15:29:36.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:29:36.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:29:36.754
  STEP: Performing setup for networking test in namespace pod-network-test-1120 @ 05/08/25 15:29:36.762
  STEP: creating a selector @ 05/08/25 15:29:36.762
  STEP: Creating the service pods in kubernetes @ 05/08/25 15:29:36.762
  I0508 15:29:36.762574 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0508 15:29:36.974499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:37.974660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:38.975569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:39.975644      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:40.976244      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:41.976489      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:42.977348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:43.977976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:44.978329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:45.978457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:46.979473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:47.979716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:48.980167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:49.980293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/08/25 15:29:50.901
  E0508 15:29:50.980342      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:51.980433      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:29:52.935011 22 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0508 15:29:52.935047 22 networking.go:42] Breadth first check of 10.42.0.226 on host 172.31.20.200...
  I0508 15:29:52.937326 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.160:9080/dial?request=hostname&protocol=http&host=10.42.0.226&port=8083&tries=1'] Namespace:pod-network-test-1120 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 15:29:52.937360 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 15:29:52.937414 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1120/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.160%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.226%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  E0508 15:29:52.980672      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:29:53.006440 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 15:29:53.006504 22 utils.go:355] Waiting for responses: map[]
  I0508 15:29:53.006519 22 utils.go:359] reached 10.42.0.226 after 0/1 tries
  I0508 15:29:53.006533 22 networking.go:42] Breadth first check of 10.42.1.159 on host 172.31.27.218...
  I0508 15:29:53.008922 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.160:9080/dial?request=hostname&protocol=http&host=10.42.1.159&port=8083&tries=1'] Namespace:pod-network-test-1120 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 15:29:53.008949 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 15:29:53.009028 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1120/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.160%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.159%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0508 15:29:53.112943 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 15:29:53.113000 22 utils.go:355] Waiting for responses: map[]
  I0508 15:29:53.113051 22 utils.go:359] reached 10.42.1.159 after 0/1 tries
  I0508 15:29:53.113072 22 networking.go:53] Going to retry 0 out of 2 pods....
  I0508 15:29:53.113197 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1120" for this suite. @ 05/08/25 15:29:53.115
• [16.390 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:935
  STEP: Creating a kubernetes client @ 05/08/25 15:29:53.124
  I0508 15:29:53.125017 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename sched-preemption @ 05/08/25 15:29:53.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:29:53.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:29:53.182
  I0508 15:29:53.207889 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0508 15:29:53.981012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:54.981158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:55.981746      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:56.981916      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:57.982054      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:58.982998      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:29:59.984006      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:00.984290      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:01.984412      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:02.984482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:03.984583      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:04.984672      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:05.984861      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:06.985144      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:07.985244      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:08.986029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:09.986086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:10.986285      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:11.987273      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:12.987415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:13.987915      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:14.988128      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:15.988671      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:16.989766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:17.989936      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:18.990969      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:19.991677      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:20.991888      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:21.992028      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:22.992230      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:23.992541      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:24.992651      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:25.992810      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:26.992961      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:27.993987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:28.995022      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:29.996014      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:30.996358      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:31.996640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:32.996773      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:33.997715      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:34.997971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:35.998033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:36.998135      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:37.998173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:38.999017      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:39.999088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:40.999287      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:42.000310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:43.000547      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:44.000671      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:45.002999      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:46.003175      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:47.003395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:48.004371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:49.005026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:50.005485      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:51.005937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:52.005990      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:53.006183      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:30:53.211591 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/08/25 15:30:53.213
  I0508 15:30:53.214032 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/08/25 15:30:53.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:30:53.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:30:53.244
  I0508 15:30:53.290252 22 preemption.go:941] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0508 15:30:53.292708 22 preemption.go:947] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 05/08/25 15:30:53.37
  STEP: Removing a custom resource @ 05/08/25 15:30:53.378
  I0508 15:30:53.385917 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4685" for this suite. @ 05/08/25 15:30:53.388
  I0508 15:30:53.396193 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2120" for this suite. @ 05/08/25 15:30:53.489
• [60.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/08/25 15:30:53.498
  I0508 15:30:53.498240 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename runtimeclass @ 05/08/25 15:30:53.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:30:53.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:30:53.524
  I0508 15:30:53.532603 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8077" for this suite. @ 05/08/25 15:30:53.589
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 05/08/25 15:30:53.599
  I0508 15:30:53.599190 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 15:30:53.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:30:53.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:30:53.63
  STEP: Creating a pod to test downward api env vars @ 05/08/25 15:30:53.633
  E0508 15:30:54.006457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:55.006864      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:56.007818      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:57.007909      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:30:57.655
  I0508 15:30:57.657242 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downward-api-8430a8b6-d99d-4b42-936b-4b5db0a8e5f6 container dapi-container: <nil>
  STEP: delete the pod @ 05/08/25 15:30:57.667
  I0508 15:30:57.701839 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4361" for this suite. @ 05/08/25 15:30:57.704
• [4.114 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/08/25 15:30:57.713
  I0508 15:30:57.714031 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename init-container @ 05/08/25 15:30:57.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:30:57.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:30:57.75
  STEP: creating the pod @ 05/08/25 15:30:57.753
  I0508 15:30:57.753765 22 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0508 15:30:58.007997      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:30:59.009027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:00.018605      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:01.018467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:02.018547      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:03.019076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:04.019161      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:05.019370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:06.019519      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:07.019621      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:08.019783      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:09.019889      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:10.020009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:11.020191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:12.020326      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:13.020446      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:14.020706      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:15.020852      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:16.021076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:17.021203      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:18.021377      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:19.022057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:20.022181      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:21.022399      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:22.022551      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:23.022645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:24.022903      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:25.023131      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:26.023323      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:27.023535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:28.023594      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:29.024438      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:30.024646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:31.024695      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:32.024864      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:33.024996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:34.025909      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:35.026153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:36.026265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:37.026475      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:38.026572      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:39.026765      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:40.027107      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:31:40.758457 22 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-793590f4-a4f9-42a0-bf60-56eaa2b1f9fc", GenerateName:"", Namespace:"init-container-7829", SelfLink:"", UID:"1e9ae2ca-a9a7-491b-8785-f62ea3aefa64", ResourceVersion:"52856", Generation:1, CreationTimestamp:time.Date(2025, time.May, 8, 15, 30, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"753757279"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"96ad86dd6d9e518d5de85891d02b15848c4ad519bd35b379250dc6e68310fe37", "cni.projectcalico.org/podIP":"10.42.1.162/32", "cni.projectcalico.org/podIPs":"10.42.1.162/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 15, 30, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003326ff0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 15, 30, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003327020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 8, 15, 31, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003327050), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-s7cfw", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0057b29a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s7cfw", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s7cfw", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s7cfw", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004f6c418), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-27-218.us-east-2.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003bf4b40), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004f6c490)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004f6c4b0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004f6c4b8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004f6c4bc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc005940420), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 8, 15, 30, 59, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 8, 15, 30, 57, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 8, 15, 30, 57, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 8, 15, 30, 57, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 8, 15, 30, 57, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.27.218", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.27.218"}}, PodIP:"10.42.1.162", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.1.162"}}, StartTime:time.Date(2025, time.May, 8, 15, 30, 57, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004cbce0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004cbd50)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://ed13af3057614acfdfbc9748c800b4721348337a283b4a088c7754266c800965", Started:(*bool)(0xc004f6c56a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc003948240), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-s7cfw", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc005940450)}}, User:(*v1.ContainerUser)(0xc002d6c718), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0057b2a00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc004f6c595), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-s7cfw", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc005940460)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0057b29e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc004f6c53f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-s7cfw", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc005940440)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0508 15:31:40.758592 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7829" for this suite. @ 05/08/25 15:31:40.764
• [43.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 05/08/25 15:31:40.779
  I0508 15:31:40.779083 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 15:31:40.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:31:40.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:31:40.804
  STEP: creating a replication controller @ 05/08/25 15:31:40.811
  I0508 15:31:40.811940 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 create -f -'
  I0508 15:31:40.956452 22 builder.go:146] stderr: ""
  I0508 15:31:40.956519 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/08/25 15:31:40.956
  I0508 15:31:40.956619 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0508 15:31:41.028171      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:31:41.049435 22 builder.go:146] stderr: ""
  I0508 15:31:41.049480 22 builder.go:147] stdout: "update-demo-nautilus-j7zfg update-demo-nautilus-rl2vn "
  I0508 15:31:41.049522 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-j7zfg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0508 15:31:41.112676 22 builder.go:146] stderr: ""
  I0508 15:31:41.112715 22 builder.go:147] stdout: ""
  I0508 15:31:41.113053 22 kubectl.go:2505] update-demo-nautilus-j7zfg is created but not running
  E0508 15:31:42.028699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:43.028984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:44.030008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:45.030105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:46.030262      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:31:46.113467 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0508 15:31:46.176430 22 builder.go:146] stderr: ""
  I0508 15:31:46.176475 22 builder.go:147] stdout: "update-demo-nautilus-j7zfg update-demo-nautilus-rl2vn "
  I0508 15:31:46.176542 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-j7zfg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0508 15:31:46.242200 22 builder.go:146] stderr: ""
  I0508 15:31:46.242240 22 builder.go:147] stdout: "true"
  I0508 15:31:46.242281 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-j7zfg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0508 15:31:46.302308 22 builder.go:146] stderr: ""
  I0508 15:31:46.302348 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0508 15:31:46.302360 22 kubectl.go:2396] validating pod update-demo-nautilus-j7zfg
  I0508 15:31:46.309668 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0508 15:31:46.309747 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0508 15:31:46.309758 22 kubectl.go:2523] update-demo-nautilus-j7zfg is verified up and running
  I0508 15:31:46.309940 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-rl2vn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0508 15:31:46.369979 22 builder.go:146] stderr: ""
  I0508 15:31:46.370019 22 builder.go:147] stdout: ""
  I0508 15:31:46.370029 22 kubectl.go:2505] update-demo-nautilus-rl2vn is created but not running
  E0508 15:31:47.030335      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:48.030542      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:49.030838      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:50.031061      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:51.031202      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:31:51.370737 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0508 15:31:51.442242 22 builder.go:146] stderr: ""
  I0508 15:31:51.442283 22 builder.go:147] stdout: "update-demo-nautilus-j7zfg update-demo-nautilus-rl2vn "
  I0508 15:31:51.442341 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-j7zfg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0508 15:31:51.506473 22 builder.go:146] stderr: ""
  I0508 15:31:51.506514 22 builder.go:147] stdout: "true"
  I0508 15:31:51.506559 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-j7zfg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0508 15:31:51.565618 22 builder.go:146] stderr: ""
  I0508 15:31:51.565659 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0508 15:31:51.565670 22 kubectl.go:2396] validating pod update-demo-nautilus-j7zfg
  I0508 15:31:51.568290 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0508 15:31:51.568340 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0508 15:31:51.568351 22 kubectl.go:2523] update-demo-nautilus-j7zfg is verified up and running
  I0508 15:31:51.568387 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-rl2vn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0508 15:31:51.631777 22 builder.go:146] stderr: ""
  I0508 15:31:51.631820 22 builder.go:147] stdout: "true"
  I0508 15:31:51.631862 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-rl2vn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0508 15:31:51.693918 22 builder.go:146] stderr: ""
  I0508 15:31:51.693958 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0508 15:31:51.693970 22 kubectl.go:2396] validating pod update-demo-nautilus-rl2vn
  I0508 15:31:51.701328 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0508 15:31:51.701384 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0508 15:31:51.701396 22 kubectl.go:2523] update-demo-nautilus-rl2vn is verified up and running
  STEP: scaling down the replication controller @ 05/08/25 15:31:51.701
  I0508 15:31:51.702865 22 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0508 15:31:51.702911 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0508 15:31:52.031679      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:31:52.791221 22 builder.go:146] stderr: ""
  I0508 15:31:52.791276 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/08/25 15:31:52.791
  I0508 15:31:52.791435 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0508 15:31:52.853266 22 builder.go:146] stderr: ""
  I0508 15:31:52.853304 22 builder.go:147] stdout: "update-demo-nautilus-rl2vn "
  I0508 15:31:52.853354 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-rl2vn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0508 15:31:52.918258 22 builder.go:146] stderr: ""
  I0508 15:31:52.918308 22 builder.go:147] stdout: "true"
  I0508 15:31:52.918360 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-rl2vn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0508 15:31:52.982397 22 builder.go:146] stderr: ""
  I0508 15:31:52.982440 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0508 15:31:52.982463 22 kubectl.go:2396] validating pod update-demo-nautilus-rl2vn
  I0508 15:31:52.985005 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0508 15:31:52.985063 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0508 15:31:52.985078 22 kubectl.go:2523] update-demo-nautilus-rl2vn is verified up and running
  STEP: scaling up the replication controller @ 05/08/25 15:31:52.985
  I0508 15:31:52.986440 22 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0508 15:31:52.986510 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0508 15:31:53.032679      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:54.033126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:31:54.063077 22 builder.go:146] stderr: ""
  I0508 15:31:54.063116 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/08/25 15:31:54.063
  I0508 15:31:54.063212 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0508 15:31:54.132575 22 builder.go:146] stderr: ""
  I0508 15:31:54.132616 22 builder.go:147] stdout: "update-demo-nautilus-rl2vn update-demo-nautilus-s7rng "
  I0508 15:31:54.132669 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-rl2vn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0508 15:31:54.193390 22 builder.go:146] stderr: ""
  I0508 15:31:54.193431 22 builder.go:147] stdout: "true"
  I0508 15:31:54.193479 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-rl2vn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0508 15:31:54.254448 22 builder.go:146] stderr: ""
  I0508 15:31:54.254549 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0508 15:31:54.254561 22 kubectl.go:2396] validating pod update-demo-nautilus-rl2vn
  I0508 15:31:54.257290 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0508 15:31:54.257342 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0508 15:31:54.257489 22 kubectl.go:2523] update-demo-nautilus-rl2vn is verified up and running
  I0508 15:31:54.257538 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-s7rng -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0508 15:31:54.314185 22 builder.go:146] stderr: ""
  I0508 15:31:54.314223 22 builder.go:147] stdout: ""
  I0508 15:31:54.314234 22 kubectl.go:2505] update-demo-nautilus-s7rng is created but not running
  E0508 15:31:55.033688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:56.033808      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:57.033957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:58.034188      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:31:59.035125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:31:59.314414 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0508 15:31:59.380442 22 builder.go:146] stderr: ""
  I0508 15:31:59.380485 22 builder.go:147] stdout: "update-demo-nautilus-rl2vn update-demo-nautilus-s7rng "
  I0508 15:31:59.380810 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-rl2vn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0508 15:31:59.443310 22 builder.go:146] stderr: ""
  I0508 15:31:59.443357 22 builder.go:147] stdout: "true"
  I0508 15:31:59.443408 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-rl2vn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0508 15:31:59.507419 22 builder.go:146] stderr: ""
  I0508 15:31:59.507459 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0508 15:31:59.507471 22 kubectl.go:2396] validating pod update-demo-nautilus-rl2vn
  I0508 15:31:59.510076 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0508 15:31:59.510146 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0508 15:31:59.510169 22 kubectl.go:2523] update-demo-nautilus-rl2vn is verified up and running
  I0508 15:31:59.510410 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-s7rng -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0508 15:31:59.579127 22 builder.go:146] stderr: ""
  I0508 15:31:59.579171 22 builder.go:147] stdout: "true"
  I0508 15:31:59.579231 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods update-demo-nautilus-s7rng -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0508 15:31:59.641602 22 builder.go:146] stderr: ""
  I0508 15:31:59.641643 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0508 15:31:59.641665 22 kubectl.go:2396] validating pod update-demo-nautilus-s7rng
  I0508 15:31:59.648323 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0508 15:31:59.648392 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0508 15:31:59.648407 22 kubectl.go:2523] update-demo-nautilus-s7rng is verified up and running
  STEP: using delete to clean up resources @ 05/08/25 15:31:59.648
  I0508 15:31:59.648485 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 delete --grace-period=0 --force -f -'
  I0508 15:31:59.721497 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0508 15:31:59.721536 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0508 15:31:59.721588 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get rc,svc -l name=update-demo --no-headers'
  I0508 15:31:59.817620 22 builder.go:146] stderr: "No resources found in kubectl-4352 namespace.\n"
  I0508 15:31:59.817661 22 builder.go:147] stdout: ""
  I0508 15:31:59.817707 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4352 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0508 15:31:59.910001 22 builder.go:146] stderr: ""
  I0508 15:31:59.910050 22 builder.go:147] stdout: ""
  I0508 15:31:59.910169 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4352" for this suite. @ 05/08/25 15:31:59.913
• [19.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 05/08/25 15:31:59.919
  I0508 15:31:59.919302 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 15:31:59.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:31:59.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:31:59.938
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/08/25 15:31:59.941
  E0508 15:32:00.036460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:01.036672      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:02.037350      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:03.038426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:32:03.976
  I0508 15:32:03.978427 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-4f2ee0a4-ef30-4424-aa82-47f02c415bfe container test-container: <nil>
  STEP: delete the pod @ 05/08/25 15:32:03.986
  I0508 15:32:04.013663 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7678" for this suite. @ 05/08/25 15:32:04.015
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 05/08/25 15:32:04.029
  I0508 15:32:04.030016 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 15:32:04.03
  E0508 15:32:04.038820      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:32:04.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:32:04.054
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 05/08/25 15:32:04.057
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 05/08/25 15:32:04.07
  E0508 15:32:05.038820      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:06.038904      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:07.039001      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:08.039135      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:09.040338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:10.040495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 05/08/25 15:32:10.081
  I0508 15:32:10.083751 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4959" for this suite. @ 05/08/25 15:32:10.085
• [6.064 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 05/08/25 15:32:10.093
  I0508 15:32:10.093824 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename dns @ 05/08/25 15:32:10.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:32:10.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:32:10.125
  STEP: Creating a test headless service @ 05/08/25 15:32:10.128
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3288 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-3288;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3288 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-3288;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3288.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-3288.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3288.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-3288.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3288.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-3288.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3288.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-3288.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3288.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-3288.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3288.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-3288.svc;check="$$(dig +notcp +noall +answer +search 149.79.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.79.149_udp@PTR;check="$$(dig +tcp +noall +answer +search 149.79.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.79.149_tcp@PTR;sleep 1; done
   @ 05/08/25 15:32:10.187
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3288 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3288;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3288 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3288;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3288.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3288.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3288.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3288.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3288.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3288.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3288.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3288.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3288.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3288.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3288.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3288.svc;check="$$(dig +notcp +noall +answer +search 149.79.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.79.149_udp@PTR;check="$$(dig +tcp +noall +answer +search 149.79.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.79.149_tcp@PTR;sleep 1; done
   @ 05/08/25 15:32:10.187
  STEP: creating a pod to probe DNS @ 05/08/25 15:32:10.187
  STEP: submitting the pod to kubernetes @ 05/08/25 15:32:10.187
  E0508 15:32:11.040764      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:12.040839      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/08/25 15:32:12.239
  STEP: looking for the results for each expected name from probers @ 05/08/25 15:32:12.241
  I0508 15:32:12.246958 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.249571 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.251997 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.254200 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.256400 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.258579 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.260804 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.262960 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.272537 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.274384 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.276663 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.278972 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.281105 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.282970 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.284926 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.286860 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:12.295422 22 dns_common.go:506] Lookups using dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3288 agnhost_tcp@dns-test-service.dns-3288 agnhost_udp@dns-test-service.dns-3288.svc agnhost_tcp@dns-test-service.dns-3288.svc agnhost_udp@_http._tcp.dns-test-service.dns-3288.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3288.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3288 jessie_tcp@dns-test-service.dns-3288 jessie_udp@dns-test-service.dns-3288.svc jessie_tcp@dns-test-service.dns-3288.svc jessie_udp@_http._tcp.dns-test-service.dns-3288.svc jessie_tcp@_http._tcp.dns-test-service.dns-3288.svc]

  I0508 15:32:12.299776 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:32:12.304251 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:32:12.308690 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:32:13.040946      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:14.040979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:15.041125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:16.044755      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:17.045069      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:32:17.245228 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.247569 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.250354 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.252790 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.254959 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.256987 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.259338 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.261320 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.272115 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.274128 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.276109 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.278027 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.279982 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.281998 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.284007 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.285829 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:17.294880 22 dns_common.go:506] Lookups using dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3288 agnhost_tcp@dns-test-service.dns-3288 agnhost_udp@dns-test-service.dns-3288.svc agnhost_tcp@dns-test-service.dns-3288.svc agnhost_udp@_http._tcp.dns-test-service.dns-3288.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3288.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3288 jessie_tcp@dns-test-service.dns-3288 jessie_udp@dns-test-service.dns-3288.svc jessie_tcp@dns-test-service.dns-3288.svc jessie_udp@_http._tcp.dns-test-service.dns-3288.svc jessie_tcp@_http._tcp.dns-test-service.dns-3288.svc]

  I0508 15:32:17.299473 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:32:17.305195 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:32:17.310001 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:32:18.046120      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:19.047097      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:20.047588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:21.047981      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:22.048251      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:32:22.245952 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.248489 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.250888 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.253095 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.255383 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.257614 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.260001 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.262078 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.272875 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.275052 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.277382 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.279520 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.281775 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.284046 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.285932 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.288210 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:22.296039 22 dns_common.go:506] Lookups using dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3288 agnhost_tcp@dns-test-service.dns-3288 agnhost_udp@dns-test-service.dns-3288.svc agnhost_tcp@dns-test-service.dns-3288.svc agnhost_udp@_http._tcp.dns-test-service.dns-3288.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3288.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3288 jessie_tcp@dns-test-service.dns-3288 jessie_udp@dns-test-service.dns-3288.svc jessie_tcp@dns-test-service.dns-3288.svc jessie_udp@_http._tcp.dns-test-service.dns-3288.svc jessie_tcp@_http._tcp.dns-test-service.dns-3288.svc]

  I0508 15:32:22.300067 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:32:22.304138 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:32:22.308051 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:32:23.048677      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:24.048874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:25.048999      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:26.049753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:27.049867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:32:27.244958 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.247273 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.249364 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.251539 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.253573 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.256345 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.258643 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.260992 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.274013 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.276549 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.279325 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.281759 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.284327 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.286538 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.288738 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.291729 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:27.300675 22 dns_common.go:506] Lookups using dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3288 agnhost_tcp@dns-test-service.dns-3288 agnhost_udp@dns-test-service.dns-3288.svc agnhost_tcp@dns-test-service.dns-3288.svc agnhost_udp@_http._tcp.dns-test-service.dns-3288.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3288.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3288 jessie_tcp@dns-test-service.dns-3288 jessie_udp@dns-test-service.dns-3288.svc jessie_tcp@dns-test-service.dns-3288.svc jessie_udp@_http._tcp.dns-test-service.dns-3288.svc jessie_tcp@_http._tcp.dns-test-service.dns-3288.svc]

  I0508 15:32:27.304699 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:32:27.309001 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:32:27.313259 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:32:28.050135      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:29.052091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:30.052680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:31.052833      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:32.053004      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:32:32.245421 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.248141 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.250405 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.253115 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.255847 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.258267 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.260999 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.263191 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.274126 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.276569 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.278943 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.281189 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.283522 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.285616 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.287654 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.289588 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:32.297512 22 dns_common.go:506] Lookups using dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3288 agnhost_tcp@dns-test-service.dns-3288 agnhost_udp@dns-test-service.dns-3288.svc agnhost_tcp@dns-test-service.dns-3288.svc agnhost_udp@_http._tcp.dns-test-service.dns-3288.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3288.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3288 jessie_tcp@dns-test-service.dns-3288 jessie_udp@dns-test-service.dns-3288.svc jessie_tcp@dns-test-service.dns-3288.svc jessie_udp@_http._tcp.dns-test-service.dns-3288.svc jessie_tcp@_http._tcp.dns-test-service.dns-3288.svc]

  I0508 15:32:32.301916 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:32:32.306214 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:32:32.310776 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:32:33.053092      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:34.054057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:35.054658      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:36.055508      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:37.055642      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:32:37.245577 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.247855 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.250004 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.251943 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.253748 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.255756 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.257805 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.260044 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.269916 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.272029 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.274037 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.276284 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3288 from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.278227 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.280482 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.282965 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.285298 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3288.svc from pod dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199: the server could not find the requested resource (get pods dns-test-77414810-b2aa-4035-b637-51b063eee199)
  I0508 15:32:37.293663 22 dns_common.go:506] Lookups using dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3288 agnhost_tcp@dns-test-service.dns-3288 agnhost_udp@dns-test-service.dns-3288.svc agnhost_tcp@dns-test-service.dns-3288.svc agnhost_udp@_http._tcp.dns-test-service.dns-3288.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3288.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3288 jessie_tcp@dns-test-service.dns-3288 jessie_udp@dns-test-service.dns-3288.svc jessie_tcp@dns-test-service.dns-3288.svc jessie_udp@_http._tcp.dns-test-service.dns-3288.svc jessie_tcp@_http._tcp.dns-test-service.dns-3288.svc]

  I0508 15:32:37.310943 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:32:37.316170 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:32:37.320659 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:32:38.056065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:39.057059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:40.057291      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:41.057444      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:42.057807      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:32:42.304021 22 dns_common.go:546] DNS probes using dns-3288/dns-test-77414810-b2aa-4035-b637-51b063eee199 succeeded

  STEP: deleting the pod @ 05/08/25 15:32:42.304
  STEP: deleting the test service @ 05/08/25 15:32:42.344
  STEP: deleting the test headless service @ 05/08/25 15:32:42.434
  I0508 15:32:42.463402 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3288" for this suite. @ 05/08/25 15:32:42.466
• [32.384 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 05/08/25 15:32:42.478
  I0508 15:32:42.478809 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 15:32:42.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:32:42.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:32:42.51
  STEP: creating a ConfigMap @ 05/08/25 15:32:42.513
  STEP: fetching the ConfigMap @ 05/08/25 15:32:42.52
  STEP: patching the ConfigMap @ 05/08/25 15:32:42.523
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/08/25 15:32:42.532
  STEP: deleting the ConfigMap by collection with a label selector @ 05/08/25 15:32:42.534
  STEP: listing all ConfigMaps in test namespace @ 05/08/25 15:32:42.543
  I0508 15:32:42.546024 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5323" for this suite. @ 05/08/25 15:32:42.567
• [0.098 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/08/25 15:32:42.576
  I0508 15:32:42.576586 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pods @ 05/08/25 15:32:42.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:32:42.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:32:42.615
  STEP: creating the pod @ 05/08/25 15:32:42.618
  STEP: setting up watch @ 05/08/25 15:32:42.618
  STEP: submitting the pod to kubernetes @ 05/08/25 15:32:42.721
  STEP: verifying the pod is in kubernetes @ 05/08/25 15:32:42.739
  STEP: verifying pod creation was observed @ 05/08/25 15:32:42.747
  E0508 15:32:43.058630      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:44.059522      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/08/25 15:32:44.754
  STEP: verifying pod deletion was observed @ 05/08/25 15:32:44.768
  E0508 15:32:45.060617      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:46.060907      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:32:46.960226 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6309" for this suite. @ 05/08/25 15:32:46.962
• [4.395 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 05/08/25 15:32:46.971
  I0508 15:32:46.971552 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename svcaccounts @ 05/08/25 15:32:46.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:32:46.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:32:47.002
  STEP: Creating ServiceAccount "e2e-sa-tcrgn"  @ 05/08/25 15:32:47.005
  I0508 15:32:47.015344 22 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-tcrgn"  @ 05/08/25 15:32:47.015
  I0508 15:32:47.025548 22 service_accounts.go:867] AutomountServiceAccountToken: true
  I0508 15:32:47.025812 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0508 15:32:47.061715      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "svcaccounts-1835" for this suite. @ 05/08/25 15:32:47.064
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 05/08/25 15:32:47.072
  I0508 15:32:47.072907 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename statefulset @ 05/08/25 15:32:47.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:32:47.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:32:47.098
  STEP: Creating service test in namespace statefulset-6794 @ 05/08/25 15:32:47.101
  I0508 15:32:47.131095 22 wait.go:44] Found 0 stateful pods, waiting for 1
  E0508 15:32:48.062583      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:49.063164      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:50.063227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:51.063347      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:52.063460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:53.063637      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:54.063842      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:55.063978      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:56.064124      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:57.064234      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:32:57.132324 22 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/08/25 15:32:57.136
  I0508 15:32:57.170409 22 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0508 15:32:57.170448 22 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0508 15:32:58.064375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:32:59.065119      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:00.075989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:01.076728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:02.076840      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:03.077816      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:04.077969      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:05.078088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:06.078227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:07.078324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:33:07.152737 22 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0508 15:33:07.152775 22 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/08/25 15:33:07.157
  STEP: Delete all of the StatefulSets @ 05/08/25 15:33:07.159
  STEP: Verify that StatefulSets have been deleted @ 05/08/25 15:33:07.169
  I0508 15:33:07.172654 22 statefulset.go:138] Deleting all statefulset in ns statefulset-6794
  I0508 15:33:07.189357 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6794" for this suite. @ 05/08/25 15:33:07.205
• [20.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/08/25 15:33:07.254
  I0508 15:33:07.254557 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename subpath @ 05/08/25 15:33:07.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:33:07.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:33:07.299
  STEP: Setting up data @ 05/08/25 15:33:07.304
  STEP: Creating pod pod-subpath-test-configmap-fh68 @ 05/08/25 15:33:07.325
  STEP: Creating a pod to test atomic-volume-subpath @ 05/08/25 15:33:07.325
  E0508 15:33:08.078588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:09.079134      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:10.079261      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:11.079374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:12.079523      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:13.079711      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:14.080539      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:15.080727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:16.081772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:17.082134      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:18.082983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:19.083043      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:20.083206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:21.083487      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:22.083631      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:23.083741      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:24.084559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:25.084714      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:26.084851      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:27.084936      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:28.085515      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:29.085603      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:30.085784      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:31.086342      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:33:31.405
  I0508 15:33:31.407181 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-subpath-test-configmap-fh68 container test-container-subpath-configmap-fh68: <nil>
  STEP: delete the pod @ 05/08/25 15:33:31.411
  STEP: Deleting pod pod-subpath-test-configmap-fh68 @ 05/08/25 15:33:31.439
  I0508 15:33:31.439731 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-fh68" in namespace "subpath-1448"
  I0508 15:33:31.441525 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1448" for this suite. @ 05/08/25 15:33:31.444
• [24.199 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 05/08/25 15:33:31.454
  I0508 15:33:31.454733 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:33:31.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:33:31.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:33:31.488
  STEP: Setting up server cert @ 05/08/25 15:33:31.533
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:33:31.854
  STEP: Deploying the webhook pod @ 05/08/25 15:33:31.863
  STEP: Wait for the deployment to be ready @ 05/08/25 15:33:31.891
  I0508 15:33:31.900972 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0508 15:33:32.087257      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:33.087451      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:33:33.908
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:33:33.935
  E0508 15:33:34.087839      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:33:34.935531 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/08/25 15:33:34.938
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/08/25 15:33:34.961
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/08/25 15:33:34.97
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/08/25 15:33:34.992
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/08/25 15:33:35.019
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/08/25 15:33:35.035
  E0508 15:33:35.088337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:33:35.140967 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7489" for this suite. @ 05/08/25 15:33:35.144
  STEP: Destroying namespace "webhook-markers-4578" for this suite. @ 05/08/25 15:33:35.167
• [3.730 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 05/08/25 15:33:35.184
  I0508 15:33:35.184836 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename statefulset @ 05/08/25 15:33:35.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:33:35.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:33:35.216
  STEP: Creating service test in namespace statefulset-3228 @ 05/08/25 15:33:35.219
  STEP: Looking for a node to schedule stateful set and pod @ 05/08/25 15:33:35.227
  STEP: Creating pod with conflicting port in namespace statefulset-3228 @ 05/08/25 15:33:35.244
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3228 @ 05/08/25 15:33:35.254
  E0508 15:33:36.088906      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:37.089009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-3228 @ 05/08/25 15:33:37.259
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3228 @ 05/08/25 15:33:37.268
  I0508 15:33:37.292900 22 statefulset.go:884] Observed stateful pod in namespace: statefulset-3228, name: ss-0, uid: 40d8cd11-9ee2-459d-a1fd-69aa5535364c, status phase: Pending. Waiting for statefulset controller to delete.
  I0508 15:33:37.332342 22 statefulset.go:884] Observed stateful pod in namespace: statefulset-3228, name: ss-0, uid: 40d8cd11-9ee2-459d-a1fd-69aa5535364c, status phase: Failed. Waiting for statefulset controller to delete.
  I0508 15:33:37.347310 22 statefulset.go:884] Observed stateful pod in namespace: statefulset-3228, name: ss-0, uid: 40d8cd11-9ee2-459d-a1fd-69aa5535364c, status phase: Failed. Waiting for statefulset controller to delete.
  I0508 15:33:37.367326 22 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-3228
  STEP: Removing pod with conflicting port in namespace statefulset-3228 @ 05/08/25 15:33:37.367
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3228 and will be in running state @ 05/08/25 15:33:37.411
  E0508 15:33:38.089126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:39.089311      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:33:39.425525 22 statefulset.go:138] Deleting all statefulset in ns statefulset-3228
  I0508 15:33:39.427551 22 rest.go:153] Scaling statefulset ss to 0
  E0508 15:33:40.089309      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:41.089413      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:42.089537      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:43.089644      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:44.089871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:45.090125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:46.091015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:47.091123      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:48.091274      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:49.092125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:33:49.451469 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0508 15:33:49.453487 22 rest.go:91] Deleting statefulset ss
  I0508 15:33:49.485286 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3228" for this suite. @ 05/08/25 15:33:49.488
• [14.321 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 05/08/25 15:33:49.505
  I0508 15:33:49.506033 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 15:33:49.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:33:49.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:33:49.531
  STEP: Creating configMap configmap-2493/configmap-test-b67c904a-b9d6-47c5-8115-7556ba70b364 @ 05/08/25 15:33:49.535
  STEP: Creating a pod to test consume configMaps @ 05/08/25 15:33:49.543
  E0508 15:33:50.092277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:51.092360      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:52.092646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:33:53.092762      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:33:53.576
  I0508 15:33:53.579002 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-configmaps-cf12d374-c48c-4fb4-83fe-2f6ee24bb982 container env-test: <nil>
  STEP: delete the pod @ 05/08/25 15:33:53.583
  I0508 15:33:53.616989 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2493" for this suite. @ 05/08/25 15:33:53.619
• [4.122 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 05/08/25 15:33:53.629
  I0508 15:33:53.629141 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pods @ 05/08/25 15:33:53.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:33:53.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:33:53.65
  STEP: creating a Pod with a static label @ 05/08/25 15:33:53.66
  STEP: watching for Pod to be ready @ 05/08/25 15:33:53.678
  I0508 15:33:53.681717 22 pods.go:947] observed Pod pod-test in namespace pods-3549 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0508 15:33:53.693287 22 pods.go:947] observed Pod pod-test in namespace pods-3549 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:53 +0000 UTC  }]
  I0508 15:33:53.721709 22 pods.go:947] observed Pod pod-test in namespace pods-3549 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:53 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:53 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:53 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:53 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:53 +0000 UTC  }]
  E0508 15:33:54.093413      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:33:54.128019 22 pods.go:947] observed Pod pod-test in namespace pods-3549 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:53 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:53 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:53 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:53 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:53 +0000 UTC  }]
  E0508 15:33:55.093554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:33:55.119026 22 pods.go:950] Found Pod pod-test in namespace pods-3549 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:55 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:53 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:55 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:55 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-08 15:33:53 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/08/25 15:33:55.125
  STEP: getting the Pod and ensuring that it's patched @ 05/08/25 15:33:55.142
  STEP: replacing the Pod's status Ready condition to False @ 05/08/25 15:33:55.145
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/08/25 15:33:55.164
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/08/25 15:33:55.165
  STEP: watching for the Pod to be deleted @ 05/08/25 15:33:55.183
  I0508 15:33:55.185405 22 pods.go:1060] observed event type MODIFIED
  E0508 15:33:56.093705      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:33:56.951605 22 pods.go:1060] observed event type MODIFIED
  E0508 15:33:57.094126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:33:57.412902 22 pods.go:1060] observed event type MODIFIED
  I0508 15:33:57.496825 22 pods.go:1060] observed event type MODIFIED
  E0508 15:33:58.095147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:33:58.142977 22 pods.go:1060] observed event type MODIFIED
  I0508 15:33:58.157533 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3549" for this suite. @ 05/08/25 15:33:58.159
• [4.539 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 05/08/25 15:33:58.168
  I0508 15:33:58.169010 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename var-expansion @ 05/08/25 15:33:58.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:33:58.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:33:58.201
  STEP: Creating a pod to test env composition @ 05/08/25 15:33:58.204
  E0508 15:33:59.096678      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:00.096831      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:01.096961      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:02.097093      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:34:02.232
  I0508 15:34:02.235009 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod var-expansion-81558c84-cd35-40e4-809f-30f8875a2978 container dapi-container: <nil>
  STEP: delete the pod @ 05/08/25 15:34:02.245
  I0508 15:34:02.275724 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4798" for this suite. @ 05/08/25 15:34:02.278
• [4.118 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:470
  STEP: Creating a kubernetes client @ 05/08/25 15:34:02.286
  I0508 15:34:02.286947 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename sched-preemption @ 05/08/25 15:34:02.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:34:02.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:34:02.329
  I0508 15:34:02.371215 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0508 15:34:03.097192      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:04.098119      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:05.098347      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:06.098479      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:07.099390      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:08.099591      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:09.100628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:10.100835      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:11.100957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:12.101046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:13.101207      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:14.102107      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:15.102235      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:16.102457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:17.103341      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:18.103549      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:19.103621      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:20.103940      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:21.104048      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:22.104195      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:23.104293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:24.105137      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:25.106031      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:26.106132      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:27.106640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:28.106855      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:29.107106      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:30.107332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:31.107502      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:32.107619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:33.107756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:34.107872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:35.107993      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:36.108236      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:37.108646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:38.109734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:39.110760      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:40.110983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:41.111991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:42.112225      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:43.112738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:44.112893      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:45.113078      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:46.113291      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:47.113846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:48.114083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:49.114098      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:50.114340      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:51.114768      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:52.114981      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:53.115822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:54.115937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:55.116625      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:56.116694      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:57.117751      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:58.117834      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:34:59.117963      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:00.118189      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:01.118253      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:02.118540      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:35:02.374902 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 05/08/25 15:35:02.377
  STEP: Adding a custom resource @ 05/08/25 15:35:02.377
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 05/08/25 15:35:02.397
  I0508 15:35:02.418934 22 preemption.go:504] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 05/08/25 15:35:02.418
  E0508 15:35:03.118862      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:04.118976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 05/08/25 15:35:04.424
  I0508 15:35:04.433102 22 preemption.go:522] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 05/08/25 15:35:04.433
  E0508 15:35:05.119284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:06.119490      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 05/08/25 15:35:06.438
  I0508 15:35:06.440466 22 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0508 15:35:06.963688 22 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 05/08/25 15:35:06.996
  STEP: Removing a custom resource @ 05/08/25 15:35:07.042
  I0508 15:35:07.054953 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-596" for this suite. @ 05/08/25 15:35:07.057
• [64.779 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/08/25 15:35:07.067
  I0508 15:35:07.067321 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename replicaset @ 05/08/25 15:35:07.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:35:07.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:35:07.093
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/08/25 15:35:07.095
  E0508 15:35:07.120122      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:08.120305      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:09.121201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 05/08/25 15:35:09.125
  STEP: Then the orphan pod is adopted @ 05/08/25 15:35:09.133
  E0508 15:35:10.121575      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 05/08/25 15:35:10.138
  I0508 15:35:10.141140 22 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/08/25 15:35:10.158
  E0508 15:35:11.121726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:35:11.165201 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4612" for this suite. @ 05/08/25 15:35:11.167
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 05/08/25 15:35:11.186
  I0508 15:35:11.186935 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename gc @ 05/08/25 15:35:11.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:35:11.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:35:11.207
  STEP: create the deployment @ 05/08/25 15:35:11.217
  I0508 15:35:11.225292      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/08/25 15:35:11.225
  STEP: delete the deployment @ 05/08/25 15:35:11.346
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/08/25 15:35:11.384
  STEP: Gathering metrics @ 05/08/25 15:35:11.902
  I0508 15:35:12.038782 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0508 15:35:12.039206 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-102" for this suite. @ 05/08/25 15:35:12.044
• [0.866 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 05/08/25 15:35:12.053
  I0508 15:35:12.053842 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename secrets @ 05/08/25 15:35:12.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:35:12.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:35:12.093
  STEP: creating a secret @ 05/08/25 15:35:12.098
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/08/25 15:35:12.121
  E0508 15:35:12.122530      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching the secret @ 05/08/25 15:35:12.123
  STEP: deleting the secret using a LabelSelector @ 05/08/25 15:35:12.136
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/08/25 15:35:12.148
  I0508 15:35:12.150828 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9917" for this suite. @ 05/08/25 15:35:12.157
• [0.112 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/08/25 15:35:12.166
  I0508 15:35:12.166334 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename secrets @ 05/08/25 15:35:12.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:35:12.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:35:12.235
  STEP: Creating secret with name secret-test-af9d9d78-666f-4fb6-a7a1-ec31ac69fdb8 @ 05/08/25 15:35:12.24
  STEP: Creating a pod to test consume secrets @ 05/08/25 15:35:12.25
  E0508 15:35:13.123094      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:14.124157      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:15.124669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:16.124732      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:35:16.312
  I0508 15:35:16.314940 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-secrets-b3bd5aaf-a1a5-4a22-bfdc-e6f5d24df139 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 15:35:16.327
  I0508 15:35:16.359817 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8574" for this suite. @ 05/08/25 15:35:16.367
• [4.210 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 05/08/25 15:35:16.376
  I0508 15:35:16.376148 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename resourcequota @ 05/08/25 15:35:16.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:35:16.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:35:16.398
  STEP: Creating a ResourceQuota @ 05/08/25 15:35:16.401
  STEP: Getting a ResourceQuota @ 05/08/25 15:35:16.414
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/08/25 15:35:16.416
  STEP: Patching the ResourceQuota @ 05/08/25 15:35:16.423
  STEP: Deleting a Collection of ResourceQuotas @ 05/08/25 15:35:16.432
  STEP: Verifying the deleted ResourceQuota @ 05/08/25 15:35:16.448
  I0508 15:35:16.450200 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6672" for this suite. @ 05/08/25 15:35:16.463
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 05/08/25 15:35:16.48
  I0508 15:35:16.480431 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 15:35:16.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:35:16.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:35:16.507
  STEP: starting the proxy server @ 05/08/25 15:35:16.51
  I0508 15:35:16.510477 22 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4067 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/08/25 15:35:16.618
  I0508 15:35:16.659201 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0508 15:35:16.665545 22 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:39833

  STEP: Destroying namespace "kubectl-4067" for this suite. @ 05/08/25 15:35:16.666
  I0508 15:35:16.666478 22 kubectl.go:2232] kubectl proxy stderr: W0508 15:35:16.602747     779 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

• [0.195 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 05/08/25 15:35:16.675
  I0508 15:35:16.675091 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename job @ 05/08/25 15:35:16.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:35:16.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:35:16.719
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 05/08/25 15:35:16.727
  STEP: Awaiting for the job to fail as there are failed indexes @ 05/08/25 15:35:16.742
  E0508 15:35:17.126638      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:18.127148      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:19.127994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:20.128132      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:21.128911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:22.129442      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:23.129457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:24.129587      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:25.130088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:26.130300      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:27.130928      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:28.131226      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:29.131917      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:30.132065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:31.132209      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:32.132907      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:33.133668      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:34.133917      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:35.134316      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:36.134819      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:37.135091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:38.135334      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 05/08/25 15:35:38.789
  I0508 15:35:38.792133 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3701" for this suite. @ 05/08/25 15:35:38.794
• [22.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 05/08/25 15:35:38.804
  I0508 15:35:38.804100 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 15:35:38.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:35:38.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:35:38.834
  STEP: creating a collection of services @ 05/08/25 15:35:38.836
  I0508 15:35:38.837245 22 service.go:3666] Creating e2e-svc-a-qtjpr
  I0508 15:35:38.877780 22 service.go:3666] Creating e2e-svc-b-gprwp
  I0508 15:35:38.921711 22 service.go:3666] Creating e2e-svc-c-tpqrf
  STEP: deleting service collection @ 05/08/25 15:35:38.953
  I0508 15:35:39.023574 22 service.go:3701] Collection of services has been deleted
  I0508 15:35:39.023830 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8298" for this suite. @ 05/08/25 15:35:39.03
• [0.242 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/08/25 15:35:39.045
  I0508 15:35:39.045872 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename watch @ 05/08/25 15:35:39.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:35:39.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:35:39.066
  STEP: creating a new configmap @ 05/08/25 15:35:39.07
  STEP: modifying the configmap once @ 05/08/25 15:35:39.078
  STEP: modifying the configmap a second time @ 05/08/25 15:35:39.093
  STEP: deleting the configmap @ 05/08/25 15:35:39.103
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/08/25 15:35:39.111
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/08/25 15:35:39.113
  I0508 15:35:39.113449 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9571  e9411f6a-ece7-4532-ba29-9fb405b66a2c 54618 0 2025-05-08 15:35:39 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-05-08 15:35:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 15:35:39.113632 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9571  e9411f6a-ece7-4532-ba29-9fb405b66a2c 54619 0 2025-05-08 15:35:39 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-05-08 15:35:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0508 15:35:39.113721 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9571" for this suite. @ 05/08/25 15:35:39.13
  E0508 15:35:39.135609      22 retrywatcher.go:169] "Watch failed" err="context canceled"
• [0.094 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 05/08/25 15:35:39.14
  I0508 15:35:39.140230 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename field-validation @ 05/08/25 15:35:39.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:35:39.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:35:39.162
  I0508 15:35:39.172148 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:35:40.135749      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:41.135937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:35:41.714329      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0508 15:35:41.714355      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0508 15:35:41.714363      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0508 15:35:41.714373      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0508 15:35:41.714382      22 warnings.go:110] "Warning: unknown field \"gamma\""
  E0508 15:35:42.135986      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:35:42.255095 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1769" for this suite. @ 05/08/25 15:35:42.257
• [3.132 seconds]
------------------------------
SSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 05/08/25 15:35:42.272
  I0508 15:35:42.272988 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename servicecidr @ 05/08/25 15:35:42.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:35:42.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:35:42.293
  STEP: getting @ 05/08/25 15:35:42.296
  STEP: patching @ 05/08/25 15:35:42.323
  STEP: updating @ 05/08/25 15:35:42.338
  STEP: listing @ 05/08/25 15:35:42.379
  STEP: watching @ 05/08/25 15:35:42.382
  I0508 15:35:42.384211 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-8107" for this suite. @ 05/08/25 15:35:42.387
• [0.132 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/08/25 15:35:42.405
  I0508 15:35:42.405752 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/08/25 15:35:42.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:35:42.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:35:42.426
  I0508 15:35:42.429776 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:35:43.136467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:44.137042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:45.137612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:46.138279      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:47.138584      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:48.138879      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:35:48.757268 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2269" for this suite. @ 05/08/25 15:35:48.76
• [6.363 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/08/25 15:35:48.768
  I0508 15:35:48.768286 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename subpath @ 05/08/25 15:35:48.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:35:48.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:35:48.801
  STEP: Setting up data @ 05/08/25 15:35:48.804
  STEP: Creating pod pod-subpath-test-projected-m8p7 @ 05/08/25 15:35:48.819
  STEP: Creating a pod to test atomic-volume-subpath @ 05/08/25 15:35:48.819
  E0508 15:35:49.139649      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:50.139789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:51.140408      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:52.140543      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:53.141374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:54.141767      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:55.142626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:56.142769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:57.143242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:58.143389      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:35:59.143504      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:00.143717      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:01.144180      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:02.145204      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:03.145561      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:04.145834      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:05.146873      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:06.146987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:07.147966      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:08.148081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:09.148623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:10.148693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:11.149181      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:12.149740      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:36:12.893
  I0508 15:36:12.896425 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-subpath-test-projected-m8p7 container test-container-subpath-projected-m8p7: <nil>
  STEP: delete the pod @ 05/08/25 15:36:12.901
  STEP: Deleting pod pod-subpath-test-projected-m8p7 @ 05/08/25 15:36:12.937
  I0508 15:36:12.937530 22 delete.go:62] Deleting pod "pod-subpath-test-projected-m8p7" in namespace "subpath-2130"
  I0508 15:36:12.939772 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2130" for this suite. @ 05/08/25 15:36:12.942
• [24.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/08/25 15:36:12.952
  I0508 15:36:12.952871 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename replicaset @ 05/08/25 15:36:12.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:36:12.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:36:12.985
  I0508 15:36:13.001724 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0508 15:36:13.150142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:14.151197      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:15.151303      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:16.151467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:17.151577      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:36:18.064856 22 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/08/25 15:36:18.064
  STEP: Scaling up "test-rs" replicaset @ 05/08/25 15:36:18.065
  I0508 15:36:18.080110 22 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/08/25 15:36:18.08
  I0508 15:36:18.101649 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-9898 with ReadyReplicas 1, AvailableReplicas 1
  E0508 15:36:18.151822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:36:18.157969 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-9898 with ReadyReplicas 1, AvailableReplicas 1
  I0508 15:36:18.197910 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-9898 with ReadyReplicas 1, AvailableReplicas 1
  I0508 15:36:18.265491 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-9898 with ReadyReplicas 1, AvailableReplicas 1
  E0508 15:36:19.152685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:36:19.553912 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-9898 with ReadyReplicas 2, AvailableReplicas 2
  E0508 15:36:20.153697      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:36:20.154023 22 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-9898 with ReadyReplicas 3 found true
  I0508 15:36:20.154159 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9898" for this suite. @ 05/08/25 15:36:20.157
• [7.214 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 05/08/25 15:36:20.166
  I0508 15:36:20.166532 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 15:36:20.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:36:20.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:36:20.199
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 15:36:20.201
  E0508 15:36:21.153766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:22.153931      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:23.154817      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:24.154919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:36:24.239
  I0508 15:36:24.241770 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-1cce8165-ce62-4021-b477-bc0c7f975fea container client-container: <nil>
  STEP: delete the pod @ 05/08/25 15:36:24.246
  I0508 15:36:24.274468 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9666" for this suite. @ 05/08/25 15:36:24.277
• [4.125 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 05/08/25 15:36:24.291
  I0508 15:36:24.291617 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename containers @ 05/08/25 15:36:24.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:36:24.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:36:24.312
  STEP: Creating a pod to test override command @ 05/08/25 15:36:24.315
  E0508 15:36:25.155058      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:26.155213      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:27.155343      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:28.155423      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:36:28.349
  I0508 15:36:28.351360 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod client-containers-d6614b76-8fe0-437b-aaaa-6c9338cfd396 container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 15:36:28.355
  I0508 15:36:28.378408 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5793" for this suite. @ 05/08/25 15:36:28.38
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 05/08/25 15:36:28.389
  I0508 15:36:28.389544 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/08/25 15:36:28.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:36:28.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:36:28.475
  E0508 15:36:29.155965      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:30.156465      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 05/08/25 15:36:30.516
  STEP: Cleaning up the configmap @ 05/08/25 15:36:30.524
  STEP: Cleaning up the pod @ 05/08/25 15:36:30.533
  I0508 15:36:30.565597 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-618" for this suite. @ 05/08/25 15:36:30.571
• [2.196 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 05/08/25 15:36:30.587
  I0508 15:36:30.587823 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename gc @ 05/08/25 15:36:30.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:36:30.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:36:30.609
  I0508 15:36:30.683849 22 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"16f05e7b-0928-4830-96f5-3eef90685139", Controller:(*bool)(0xc003564ae6), BlockOwnerDeletion:(*bool)(0xc003564ae7)}}
  I0508 15:36:30.698817 22 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"033dbd8a-3f98-45dc-b47a-4cfb1271b0f9", Controller:(*bool)(0xc003564c9e), BlockOwnerDeletion:(*bool)(0xc003564c9f)}}
  I0508 15:36:30.714947 22 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"8151fb83-60b4-4228-a568-c1db9969442f", Controller:(*bool)(0xc003564e4e), BlockOwnerDeletion:(*bool)(0xc003564e4f)}}
  E0508 15:36:31.156655      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:32.157732      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:33.157940      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:34.158055      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:35.158169      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:36:35.738951 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8910" for this suite. @ 05/08/25 15:36:35.741
• [5.169 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/08/25 15:36:35.756
  I0508 15:36:35.756736 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-runtime @ 05/08/25 15:36:35.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:36:35.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:36:35.778
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/08/25 15:36:35.807
  E0508 15:36:36.159090      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:37.160077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:38.160576      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:39.161405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:40.161505      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:41.162100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:42.162872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:43.163359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:44.164447      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:45.165355      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:46.166067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:47.166580      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:48.167052      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:49.167722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:50.168333      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:51.169015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:52.169672      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:53.170233      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:54.170771      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:55.171740      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/08/25 15:36:55.912
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/08/25 15:36:55.932
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/08/25 15:36:55.939
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/08/25 15:36:55.939
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/08/25 15:36:55.981
  E0508 15:36:56.172417      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:57.172961      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:36:58.173632      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/08/25 15:36:58.993
  E0508 15:36:59.173920      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/08/25 15:36:59.997
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/08/25 15:37:00.116
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/08/25 15:37:00.116
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/08/25 15:37:00.171
  E0508 15:37:00.174181      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:01.174318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/08/25 15:37:01.182
  E0508 15:37:02.174486      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:03.174584      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/08/25 15:37:03.193
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/08/25 15:37:03.197
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/08/25 15:37:03.197
  I0508 15:37:03.233412 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5629" for this suite. @ 05/08/25 15:37:03.236
• [27.489 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/08/25 15:37:03.245
  I0508 15:37:03.245905 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename csi-storageclass @ 05/08/25 15:37:03.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:37:03.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:37:03.28
  STEP: Creating a StorageClass @ 05/08/25 15:37:03.282
  STEP: Get StorageClass "e2e-gq6fb" @ 05/08/25 15:37:03.291
  STEP: Patching the StorageClass "e2e-gq6fb" @ 05/08/25 15:37:03.293
  STEP: Delete StorageClass "e2e-gq6fb" @ 05/08/25 15:37:03.303
  STEP: Confirm deletion of StorageClass "e2e-gq6fb" @ 05/08/25 15:37:03.312
  STEP: Create a replacement StorageClass @ 05/08/25 15:37:03.314
  STEP: Updating StorageClass "e2e-v2-wlxjs" @ 05/08/25 15:37:03.322
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-wlxjs=updated" @ 05/08/25 15:37:03.338
  STEP: Deleting StorageClass "e2e-v2-wlxjs" via DeleteCollection @ 05/08/25 15:37:03.34
  STEP: Confirm deletion of StorageClass "e2e-v2-wlxjs" @ 05/08/25 15:37:03.349
  I0508 15:37:03.351032 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3430" for this suite. @ 05/08/25 15:37:03.353
• [0.116 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 05/08/25 15:37:03.362
  I0508 15:37:03.362222 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 15:37:03.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:37:03.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:37:03.39
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8697 @ 05/08/25 15:37:03.393
  STEP: changing the ExternalName service to type=ClusterIP @ 05/08/25 15:37:03.407
  I0508 15:37:03.472756 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0508 15:37:04.176673      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:05.177754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:05.475760 22 resource.go:361] Creating new exec pod
  E0508 15:37:06.177778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:07.177905      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:07.491874 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8697 exec execpodt4ncs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0508 15:37:07.630957 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.82.62) 80 port [tcp/http] succeeded!\n"
  I0508 15:37:07.631002 22 builder.go:147] stdout: ""
  E0508 15:37:08.178682      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:08.492040 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8697 exec execpodt4ncs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0508 15:37:08.626174 22 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.82.62) 80 port [tcp/http] succeeded!\n"
  I0508 15:37:08.626217 22 builder.go:147] stdout: ""
  E0508 15:37:09.178951      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:09.492372 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8697 exec execpodt4ncs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0508 15:37:09.615680 22 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.82.62) 80 port [tcp/http] succeeded!\n"
  I0508 15:37:09.615724 22 builder.go:147] stdout: ""
  E0508 15:37:10.179109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:10.492526 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8697 exec execpodt4ncs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0508 15:37:10.628445 22 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.82.62) 80 port [tcp/http] succeeded!\n"
  I0508 15:37:10.628491 22 builder.go:147] stdout: ""
  E0508 15:37:11.179226      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:11.492692 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8697 exec execpodt4ncs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0508 15:37:11.629470 22 builder.go:146] stderr: "+ + echonc hostName -v\n -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.82.62) 80 port [tcp/http] succeeded!\n"
  I0508 15:37:11.629511 22 builder.go:147] stdout: "externalname-service-785d96cbc5-dpj8h"
  I0508 15:37:11.629589 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8697 exec execpodt4ncs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.82.62 80'
  I0508 15:37:11.755721 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.82.62 80\nConnection to 10.43.82.62 80 port [tcp/http] succeeded!\n"
  I0508 15:37:11.755763 22 builder.go:147] stdout: ""
  E0508 15:37:12.179615      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:12.630219 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8697 exec execpodt4ncs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.82.62 80'
  I0508 15:37:12.762854 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.82.62 80\nConnection to 10.43.82.62 80 port [tcp/http] succeeded!\n"
  I0508 15:37:12.762983 22 builder.go:147] stdout: ""
  E0508 15:37:13.180468      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:13.629709 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-8697 exec execpodt4ncs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.82.62 80'
  I0508 15:37:13.759809 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.82.62 80\nConnection to 10.43.82.62 80 port [tcp/http] succeeded!\n"
  I0508 15:37:13.759870 22 builder.go:147] stdout: "externalname-service-785d96cbc5-dpj8h"
  I0508 15:37:13.759954 22 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0508 15:37:13.794299 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8697" for this suite. @ 05/08/25 15:37:13.801
• [10.448 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/08/25 15:37:13.81
  I0508 15:37:13.810068 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename secrets @ 05/08/25 15:37:13.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:37:13.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:37:13.83
  STEP: Creating secret with name secret-test-c7f343c7-fc44-408f-9979-20fec40163de @ 05/08/25 15:37:13.837
  STEP: Creating a pod to test consume secrets @ 05/08/25 15:37:13.846
  E0508 15:37:14.180689      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:15.180790      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:16.181470      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:17.181795      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:37:17.878
  I0508 15:37:17.880002 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-secrets-3800a7f0-9c58-4799-8ad1-024f56508a54 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 15:37:17.887
  I0508 15:37:17.927666 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5485" for this suite. @ 05/08/25 15:37:17.93
• [4.128 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 05/08/25 15:37:17.938
  I0508 15:37:17.938993 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename namespaces @ 05/08/25 15:37:17.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:37:17.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:37:17.96
  STEP: Creating namespace "e2e-ns-95sfm" @ 05/08/25 15:37:17.963
  I0508 15:37:17.984817 22 namespace.go:412] Namespace "e2e-ns-95sfm-8724" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-95sfm-8724" @ 05/08/25 15:37:17.985
  I0508 15:37:17.998059 22 namespace.go:435] Namespace "e2e-ns-95sfm-8724" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-95sfm-8724" @ 05/08/25 15:37:17.998
  I0508 15:37:18.014730 22 namespace.go:464] Namespace "e2e-ns-95sfm-8724" has []v1.FinalizerName{"kubernetes"}
  I0508 15:37:18.015107 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-404" for this suite. @ 05/08/25 15:37:18.036
  STEP: Destroying namespace "e2e-ns-95sfm-8724" for this suite. @ 05/08/25 15:37:18.045
• [0.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 05/08/25 15:37:18.055
  I0508 15:37:18.055686 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 15:37:18.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:37:18.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:37:18.075
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/08/25 15:37:18.083
  E0508 15:37:18.182212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:19.183567      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:20.184518      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:21.184650      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:37:22.102
  I0508 15:37:22.106171 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-4a7d4cbf-c192-4448-8079-11c633cfb3b0 container test-container: <nil>
  STEP: delete the pod @ 05/08/25 15:37:22.114
  I0508 15:37:22.144272 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1690" for this suite. @ 05/08/25 15:37:22.146
• [4.105 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 05/08/25 15:37:22.16
  I0508 15:37:22.160790 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 15:37:22.161
  E0508 15:37:22.185459      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:37:22.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:37:22.19
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/08/25 15:37:22.193
  E0508 15:37:23.185692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:24.186559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:25.186721      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:26.186902      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:37:26.218
  I0508 15:37:26.220342 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-cd90240d-94aa-47bf-8d4f-f66b7725fc22 container test-container: <nil>
  STEP: delete the pod @ 05/08/25 15:37:26.225
  I0508 15:37:26.255068 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4381" for this suite. @ 05/08/25 15:37:26.257
• [4.106 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 05/08/25 15:37:26.267
  I0508 15:37:26.267735 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename crd-webhook @ 05/08/25 15:37:26.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:37:26.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:37:26.289
  STEP: Setting up server cert @ 05/08/25 15:37:26.296
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/08/25 15:37:27.068
  STEP: Deploying the custom resource conversion webhook pod @ 05/08/25 15:37:27.082
  STEP: Wait for the deployment to be ready @ 05/08/25 15:37:27.105
  I0508 15:37:27.120793 22 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0508 15:37:27.187956      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:28.188157      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:37:29.127
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:37:29.155
  E0508 15:37:29.188707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:30.156558 22 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0508 15:37:30.159988 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:37:30.189240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:31.189800      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:32.189989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/08/25 15:37:32.718
  STEP: Create a v2 custom resource @ 05/08/25 15:37:32.744
  STEP: List CRs in v1 @ 05/08/25 15:37:32.769
  STEP: List CRs in v2 @ 05/08/25 15:37:32.856
  E0508 15:37:33.190127      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:33.478590 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3372" for this suite. @ 05/08/25 15:37:33.494
• [7.255 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 05/08/25 15:37:33.523
  I0508 15:37:33.523437 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-probe @ 05/08/25 15:37:33.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:37:33.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:37:33.558
  STEP: Creating pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111 @ 05/08/25 15:37:33.56
  E0508 15:37:34.190176      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:35.190304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/08/25 15:37:35.582
  I0508 15:37:35.583931 22 container_probe.go:1748] Initial restart count of pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 is 0
  I0508 15:37:35.585813 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:37:36.191151      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:37.191270      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:37.589498 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:37:38.192267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:39.193217      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:39.593072 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:37:40.193337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:41.193720      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:41.595787 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:37:42.194560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:43.194623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:43.598273 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:37:44.194861      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:45.195195      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:45.600981 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:37:46.195660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:47.195753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:47.603719 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:37:48.196368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:49.197206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:49.607005 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:37:50.197619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:51.197707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:51.609642 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:37:52.198294      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:53.198409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:53.612041 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:37:54.198860      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:55.198992      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:55.614804 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:37:56.199141      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:57.199227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:57.625651 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:37:58.199343      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:37:59.199727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:37:59.628905 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:00.200694      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:01.200911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:01.633035 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:02.201745      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:03.201869      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:03.635758 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:04.202454      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:05.202719      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:05.638328 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:06.202927      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:07.203015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:07.642584 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:08.203177      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:09.204021      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:09.645901 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:10.204442      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:11.204709      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:11.648839 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:12.205070      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:13.205182      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:13.652034 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:14.205757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:15.205954      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:15.654741 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:16.206092      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:17.206227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:17.658021 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:18.206343      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:19.206948      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:19.660707 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:20.207304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:21.207431      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:21.663489 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:22.208138      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:23.208582      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:23.666557 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:24.209354      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:25.209758      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:25.669816 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:26.210363      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:27.210575      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:27.672476 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:28.210868      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:29.210922      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:29.675804 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:30.211339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:31.211453      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:31.678775 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:32.212401      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:33.212737      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:33.681314 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:34.213734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:35.213862      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:35.684885 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:36.214216      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:37.214302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:37.688156 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:38.214442      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:39.214867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:39.690778 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:40.214970      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:41.215057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:41.694069 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:42.215321      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:43.215798      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:43.696899 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:44.216647      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:45.216766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:45.699836 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:46.217542      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:47.217674      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:47.702441 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:48.217783      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:49.217947      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:49.705850 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  E0508 15:38:50.218418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:51.218633      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:38:51.709260 22 container_probe.go:1758] Get pod test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 in namespace container-probe-6111
  I0508 15:38:51.709307 22 container_probe.go:1762] Restart count of pod container-probe-6111/test-grpc-a50197d0-5856-4cbd-8171-498c29a721a1 is now 1 (1m16.125340829s elapsed)
  STEP: deleting the pod @ 05/08/25 15:38:51.709
  I0508 15:38:51.743007 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6111" for this suite. @ 05/08/25 15:38:51.746
• [78.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 05/08/25 15:38:51.755
  I0508 15:38:51.755863 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename svcaccounts @ 05/08/25 15:38:51.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:38:51.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:38:51.788
  I0508 15:38:51.814424 22 service_accounts.go:646] created pod
  E0508 15:38:52.218786      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:53.218894      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:54.219929      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:55.220141      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:38:55.823
  E0508 15:38:56.220845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:57.220971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:58.221084      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:38:59.221802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:00.222167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:01.223210      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:02.223640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:03.223989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:04.224125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:05.224342      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:06.224473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:07.224651      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:08.224919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:09.225874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:10.225987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:11.226201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:12.226389      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:13.226519      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:14.226657      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:15.226949      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:16.227225      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:17.227712      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:18.227957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:19.228186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:20.228362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:21.228717      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:22.228711      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:23.229725      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:24.229902      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:25.230116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:39:25.823852 22 service_accounts.go:652] polling logs
  I0508 15:39:25.846548 22 service_accounts.go:662] Pod logs: 
  I0508 15:38:52.725772       1 log.go:245] OK: Got token
  I0508 15:38:52.725828       1 log.go:245] validating with in-cluster discovery
  I0508 15:38:52.726135       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0508 15:38:52.726163       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-2673:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000121a0), NotBefore:(*jwt.NumericDate)(0xc000012d90), IssuedAt:(*jwt.NumericDate)(0xc0000121b0), ID:"1c94e011-b18b-44fb-b9b4-5e9dd4bc5f40"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2673", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"8c1fe8ef-0a52-4144-87b8-276c33e6abf7"}}}
  I0508 15:38:52.733754       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0508 15:38:52.737105       1 log.go:245] OK: Validated signature on JWT
  I0508 15:38:52.737179       1 log.go:245] OK: Got valid claims from token!
  I0508 15:38:52.737200       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-2673:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001297a0), NotBefore:(*jwt.NumericDate)(0xc0001297c8), IssuedAt:(*jwt.NumericDate)(0xc0001297a8), ID:"1c94e011-b18b-44fb-b9b4-5e9dd4bc5f40"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2673", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"8c1fe8ef-0a52-4144-87b8-276c33e6abf7"}}}

  I0508 15:39:25.846627 22 service_accounts.go:666] completed pod
  I0508 15:39:25.855053 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2673" for this suite. @ 05/08/25 15:39:25.859
• [34.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/08/25 15:39:25.872
  I0508 15:39:25.872604 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename limitrange @ 05/08/25 15:39:25.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:39:25.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:39:25.906
  STEP: Creating a LimitRange @ 05/08/25 15:39:25.908
  STEP: Setting up watch @ 05/08/25 15:39:25.909
  STEP: Submitting a LimitRange @ 05/08/25 15:39:26.011
  STEP: Verifying LimitRange creation was observed @ 05/08/25 15:39:26.02
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/08/25 15:39:26.02
  I0508 15:39:26.022306 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0508 15:39:26.022347 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/08/25 15:39:26.022
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/08/25 15:39:26.036
  I0508 15:39:26.039091 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0508 15:39:26.039139 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/08/25 15:39:26.039
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/08/25 15:39:26.057
  I0508 15:39:26.066447 22 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0508 15:39:26.066495 22 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/08/25 15:39:26.066
  STEP: Failing to create a Pod with more than max resources @ 05/08/25 15:39:26.068
  STEP: Updating a LimitRange @ 05/08/25 15:39:26.07
  STEP: Verifying LimitRange updating is effective @ 05/08/25 15:39:26.082
  E0508 15:39:26.230644      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:27.230728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 05/08/25 15:39:28.084
  STEP: Failing to create a Pod with more than max resources @ 05/08/25 15:39:28.093
  STEP: Deleting a LimitRange @ 05/08/25 15:39:28.096
  STEP: Verifying the LimitRange was deleted @ 05/08/25 15:39:28.121
  E0508 15:39:28.231515      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:29.231645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:30.231869      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:31.232091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:32.232294      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:39:33.124082 22 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/08/25 15:39:33.124
  I0508 15:39:33.133992 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9297" for this suite. @ 05/08/25 15:39:33.139
• [7.298 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 05/08/25 15:39:33.17
  I0508 15:39:33.170647 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename volumeattachment @ 05/08/25 15:39:33.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:39:33.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:39:33.195
  E0508 15:39:33.232463      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create VolumeAttachment "va-e2e-2bnhz" on node "ip-172-31-20-200.us-east-2.compute.internal" @ 05/08/25 15:39:33.239
  STEP: Get VolumeAttachment "va-e2e-2bnhz" on node "ip-172-31-20-200.us-east-2.compute.internal" @ 05/08/25 15:39:33.247
  STEP: Patch VolumeAttachment "va-e2e-2bnhz" on node "ip-172-31-20-200.us-east-2.compute.internal" @ 05/08/25 15:39:33.249
  STEP: List VolumeAttachments with "va-e2e-2bnhz=patched" label @ 05/08/25 15:39:33.258
  STEP: Delete VolumeAttachment "va-e2e-2bnhz" on node "ip-172-31-20-200.us-east-2.compute.internal" @ 05/08/25 15:39:33.27
  STEP: Confirm deletion of VolumeAttachment "va-e2e-2bnhz" on node "ip-172-31-20-200.us-east-2.compute.internal" @ 05/08/25 15:39:33.28
  STEP: Create VolumeAttachment "va-e2e-cmrt5" on node "ip-172-31-27-218.us-east-2.compute.internal" @ 05/08/25 15:39:33.339
  STEP: Update the VolumeAttachment "va-e2e-cmrt5" on node "ip-172-31-27-218.us-east-2.compute.internal" with label "va-e2e=updated" @ 05/08/25 15:39:33.346
  STEP: Create VolumeAttachment "va-e2e-vcssk" on node "ip-172-31-20-200.us-east-2.compute.internal" @ 05/08/25 15:39:33.44
  STEP: Update the VolumeAttachment "va-e2e-vcssk" on node "ip-172-31-20-200.us-east-2.compute.internal" with label "va-e2e=updated" @ 05/08/25 15:39:33.454
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/08/25 15:39:33.463
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/08/25 15:39:33.48
  I0508 15:39:33.482324 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-7488" for this suite. @ 05/08/25 15:39:33.539
• [0.378 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 05/08/25 15:39:33.548
  I0508 15:39:33.548976 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 15:39:33.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:39:33.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:39:33.581
  STEP: Creating the pod @ 05/08/25 15:39:33.584
  E0508 15:39:34.233201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:35.233338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:39:36.139222 22 pod_client.go:173] Successfully updated pod "annotationupdatee0754a1a-24ea-4e72-bbdd-220f069591c6"
  E0508 15:39:36.234316      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:37.234447      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:38.235349      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:39.236262      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:39:40.158590 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6401" for this suite. @ 05/08/25 15:39:40.161
• [6.621 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 05/08/25 15:39:40.169
  I0508 15:39:40.169616 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename configmap @ 05/08/25 15:39:40.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:39:40.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:39:40.196
  STEP: Creating configMap with name configmap-test-volume-map-424b3e24-bb6d-4993-b9cb-2534470b694f @ 05/08/25 15:39:40.199
  STEP: Creating a pod to test consume configMaps @ 05/08/25 15:39:40.207
  E0508 15:39:40.237168      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:41.237753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:42.239217      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:43.239320      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:39:44.236
  I0508 15:39:44.238948 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-configmaps-ffbc7d55-e00a-4ecf-afb5-26ec1bd77500 container agnhost-container: <nil>
  E0508 15:39:44.239941      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod @ 05/08/25 15:39:44.243
  I0508 15:39:44.282806 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5395" for this suite. @ 05/08/25 15:39:44.285
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 05/08/25 15:39:44.295
  I0508 15:39:44.295624 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/08/25 15:39:44.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:39:44.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:39:44.316
  I0508 15:39:44.324786 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0508 15:39:45.240094      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:46.240243      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:47.240728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:48.240877      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:49.241739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:50.241955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:51.242086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:52.242199      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:53.242331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:54.243189      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:55.243326      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:56.243452      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:57.243588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:58.243689      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:39:59.244569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:00.244776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:01.245841      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:02.245979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:03.246081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:04.246172      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:05.246786      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:06.247008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:07.247693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:08.247969      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:09.248945      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:10.249058      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:11.249185      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:12.249718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:13.249935      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:14.250058      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:15.250191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:16.250421      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:17.251277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:18.251393      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:19.252188      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:20.252410      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:21.252576      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:22.252800      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:23.252977      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:24.253770      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:25.253888      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:26.254938      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:27.255876      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:28.256194      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:29.256867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:30.256984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:31.257109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:32.257731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:33.257854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:34.258018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:35.258053      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:36.258264      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:37.259081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:38.259224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:39.260244      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:40.260451      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:41.260681      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:42.260802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:43.261202      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:44.262257      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:40:44.325488 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0508 15:40:44.330800 22 taints.go:144] Starting informer...
  STEP: Starting pods... @ 05/08/25 15:40:44.33
  I0508 15:40:44.549752 22 taints.go:463] Pod1 is running on ip-172-31-27-218.us-east-2.compute.internal. Tainting Node
  E0508 15:40:45.262437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:46.262895      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:40:46.777438 22 taints.go:471] Pod2 is running on ip-172-31-27-218.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/08/25 15:40:46.777
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/08/25 15:40:46.796
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/08/25 15:40:46.8
  E0508 15:40:47.263757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:48.263851      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:49.264027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:50.264156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:51.264356      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:52.264880      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:40:53.208163 22 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0508 15:40:53.265606      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:54.265738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:55.265821      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:56.265960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:57.266049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:58.266141      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:40:59.266241      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:00.266491      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:01.267611      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:02.267168      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:03.267262      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:04.268303      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:05.268597      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:06.268659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:07.269743      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:08.270822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:09.271025      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:10.271776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:11.271905      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:12.272663      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:13.253451 22 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  E0508 15:41:13.272698      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/08/25 15:41:13.272
  I0508 15:41:13.276194 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-6603" for this suite. @ 05/08/25 15:41:13.278
• [89.008 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 05/08/25 15:41:13.304
  I0508 15:41:13.304696 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:41:13.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:41:13.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:41:13.382
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 15:41:13.385
  E0508 15:41:14.273706      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:15.273865      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:16.273976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:17.274085      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:41:17.416
  I0508 15:41:17.418389 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-db3c5107-78a2-4315-aecf-fa6760d12cfe container client-container: <nil>
  STEP: delete the pod @ 05/08/25 15:41:17.429
  I0508 15:41:17.471961 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2873" for this suite. @ 05/08/25 15:41:17.474
• [4.178 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 05/08/25 15:41:17.484
  I0508 15:41:17.484036 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename field-validation @ 05/08/25 15:41:17.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:41:17.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:41:17.503
  STEP: apply creating a deployment @ 05/08/25 15:41:17.506
  I0508 15:41:17.514803 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2173" for this suite. @ 05/08/25 15:41:17.574
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 05/08/25 15:41:17.583
  I0508 15:41:17.583423 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:41:17.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:41:17.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:41:17.606
  STEP: Setting up server cert @ 05/08/25 15:41:17.653
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:41:18.178
  STEP: Deploying the webhook pod @ 05/08/25 15:41:18.184
  STEP: Wait for the deployment to be ready @ 05/08/25 15:41:18.213
  I0508 15:41:18.227209 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0508 15:41:18.274265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:19.275157      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:20.234395 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 15, 41, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 41, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 41, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 41, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0508 15:41:20.275632      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:21.275970      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:41:22.237
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:41:22.273
  E0508 15:41:22.276850      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:23.273946 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0508 15:41:23.277003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/08/25 15:41:23.277
  STEP: create a configmap that should be updated by the webhook @ 05/08/25 15:41:23.3
  I0508 15:41:23.433013 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2599" for this suite. @ 05/08/25 15:41:23.441
  STEP: Destroying namespace "webhook-markers-965" for this suite. @ 05/08/25 15:41:23.454
• [5.880 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 05/08/25 15:41:23.463
  I0508 15:41:23.463810 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/08/25 15:41:23.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:41:23.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:41:23.49
  I0508 15:41:23.494067 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:41:24.277747      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/08/25 15:41:24.865
  I0508 15:41:24.865930 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-7477 --namespace=crd-publish-openapi-7477 create -f -'
  E0508 15:41:25.278867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:26.279058      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:26.953014 22 builder.go:146] stderr: ""
  I0508 15:41:26.953070 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3622-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0508 15:41:26.953199 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-7477 --namespace=crd-publish-openapi-7477 delete e2e-test-crd-publish-openapi-3622-crds test-cr'
  I0508 15:41:27.023108 22 builder.go:146] stderr: ""
  I0508 15:41:27.023151 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3622-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0508 15:41:27.023192 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-7477 --namespace=crd-publish-openapi-7477 apply -f -'
  I0508 15:41:27.097960 22 builder.go:146] stderr: ""
  I0508 15:41:27.098005 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3622-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0508 15:41:27.098065 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-7477 --namespace=crd-publish-openapi-7477 delete e2e-test-crd-publish-openapi-3622-crds test-cr'
  I0508 15:41:27.168092 22 builder.go:146] stderr: ""
  I0508 15:41:27.168141 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3622-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/08/25 15:41:27.168
  I0508 15:41:27.168315 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-7477 explain e2e-test-crd-publish-openapi-3622-crds'
  I0508 15:41:27.225421 22 builder.go:146] stderr: ""
  I0508 15:41:27.225479 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-3622-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0508 15:41:27.279990      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:28.280815      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:28.708829 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7477" for this suite. @ 05/08/25 15:41:28.715
• [5.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 05/08/25 15:41:28.724
  I0508 15:41:28.724254 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 15:41:28.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:41:28.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:41:28.743
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/08/25 15:41:28.751
  E0508 15:41:29.281827      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:30.282071      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:31.282389      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:32.282521      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:41:32.77
  I0508 15:41:32.775562 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-5b9a10d9-e2d7-4cea-a695-da1b381f4a34 container test-container: <nil>
  STEP: delete the pod @ 05/08/25 15:41:32.781
  I0508 15:41:32.816891 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8437" for this suite. @ 05/08/25 15:41:32.819
• [4.104 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 05/08/25 15:41:32.828
  I0508 15:41:32.828688 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename downward-api @ 05/08/25 15:41:32.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:41:32.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:41:32.856
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 15:41:32.859
  E0508 15:41:33.283023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:34.283443      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:35.283793      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:36.283892      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:41:36.884
  I0508 15:41:36.887035 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-15a56ce4-7d90-4ca3-9f19-c7a667d8518d container client-container: <nil>
  STEP: delete the pod @ 05/08/25 15:41:36.892
  I0508 15:41:36.934906 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8092" for this suite. @ 05/08/25 15:41:36.937
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/08/25 15:41:36.952
  I0508 15:41:36.952113 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename discovery @ 05/08/25 15:41:36.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:41:36.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:41:36.977
  STEP: Setting up server cert @ 05/08/25 15:41:36.98
  E0508 15:41:37.284597      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:37.722930 22 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0508 15:41:37.724031 22 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0508 15:41:37.724063 22 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0508 15:41:37.724091 22 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0508 15:41:37.724103 22 discovery.go:139] Checking APIGroup: apps
  I0508 15:41:37.725109 22 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0508 15:41:37.725137 22 discovery.go:148] Versions found [{apps/v1 v1}]
  I0508 15:41:37.725164 22 discovery.go:154] apps/v1 matches apps/v1
  I0508 15:41:37.725176 22 discovery.go:139] Checking APIGroup: events.k8s.io
  I0508 15:41:37.726142 22 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0508 15:41:37.726166 22 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0508 15:41:37.726177 22 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0508 15:41:37.726187 22 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0508 15:41:37.727057 22 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0508 15:41:37.727079 22 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0508 15:41:37.727090 22 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0508 15:41:37.727101 22 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0508 15:41:37.727973 22 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0508 15:41:37.727996 22 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0508 15:41:37.728007 22 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0508 15:41:37.728017 22 discovery.go:139] Checking APIGroup: autoscaling
  I0508 15:41:37.728834 22 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0508 15:41:37.728861 22 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0508 15:41:37.728873 22 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0508 15:41:37.729073 22 discovery.go:139] Checking APIGroup: batch
  I0508 15:41:37.729982 22 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0508 15:41:37.730008 22 discovery.go:148] Versions found [{batch/v1 v1}]
  I0508 15:41:37.730019 22 discovery.go:154] batch/v1 matches batch/v1
  I0508 15:41:37.730112 22 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0508 15:41:37.731023 22 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0508 15:41:37.731050 22 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0508 15:41:37.731061 22 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0508 15:41:37.731152 22 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0508 15:41:37.731981 22 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0508 15:41:37.732013 22 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0508 15:41:37.732020 22 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0508 15:41:37.732027 22 discovery.go:139] Checking APIGroup: policy
  I0508 15:41:37.732830 22 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0508 15:41:37.732849 22 discovery.go:148] Versions found [{policy/v1 v1}]
  I0508 15:41:37.732856 22 discovery.go:154] policy/v1 matches policy/v1
  I0508 15:41:37.732864 22 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0508 15:41:37.733719 22 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0508 15:41:37.733751 22 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0508 15:41:37.733759 22 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0508 15:41:37.733766 22 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0508 15:41:37.734536 22 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0508 15:41:37.734560 22 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0508 15:41:37.734568 22 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0508 15:41:37.734587 22 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0508 15:41:37.735702 22 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0508 15:41:37.735724 22 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0508 15:41:37.735732 22 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0508 15:41:37.735740 22 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0508 15:41:37.736525 22 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0508 15:41:37.736544 22 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0508 15:41:37.736552 22 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0508 15:41:37.736584 22 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0508 15:41:37.737323 22 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0508 15:41:37.737343 22 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0508 15:41:37.737350 22 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0508 15:41:37.737357 22 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0508 15:41:37.738013 22 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0508 15:41:37.738031 22 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0508 15:41:37.738040 22 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0508 15:41:37.738047 22 discovery.go:139] Checking APIGroup: node.k8s.io
  I0508 15:41:37.738734 22 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0508 15:41:37.738758 22 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0508 15:41:37.738766 22 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0508 15:41:37.738861 22 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0508 15:41:37.739625 22 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0508 15:41:37.739646 22 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0508 15:41:37.739653 22 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0508 15:41:37.739660 22 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0508 15:41:37.740516 22 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0508 15:41:37.740536 22 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0508 15:41:37.740543 22 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0508 15:41:37.740550 22 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0508 15:41:37.741290 22 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0508 15:41:37.741320 22 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0508 15:41:37.741328 22 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0508 15:41:37.741335 22 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0508 15:41:37.742169 22 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0508 15:41:37.742190 22 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0508 15:41:37.742197 22 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0508 15:41:37.742204 22 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0508 15:41:37.743207 22 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0508 15:41:37.743236 22 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0508 15:41:37.743244 22 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0508 15:41:37.743339 22 discovery.go:139] Checking APIGroup: snapshot.storage.k8s.io
  I0508 15:41:37.744128 22 discovery.go:147] PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  I0508 15:41:37.744150 22 discovery.go:148] Versions found [{snapshot.storage.k8s.io/v1 v1}]
  I0508 15:41:37.744158 22 discovery.go:154] snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  I0508 15:41:37.744165 22 discovery.go:139] Checking APIGroup: policy.networking.k8s.io
  I0508 15:41:37.745200 22 discovery.go:147] PreferredVersion.GroupVersion: policy.networking.k8s.io/v1alpha1
  I0508 15:41:37.745220 22 discovery.go:148] Versions found [{policy.networking.k8s.io/v1alpha1 v1alpha1}]
  I0508 15:41:37.745240 22 discovery.go:154] policy.networking.k8s.io/v1alpha1 matches policy.networking.k8s.io/v1alpha1
  I0508 15:41:37.745258 22 discovery.go:139] Checking APIGroup: groupsnapshot.storage.k8s.io
  I0508 15:41:37.746103 22 discovery.go:147] PreferredVersion.GroupVersion: groupsnapshot.storage.k8s.io/v1beta1
  I0508 15:41:37.746121 22 discovery.go:148] Versions found [{groupsnapshot.storage.k8s.io/v1beta1 v1beta1}]
  I0508 15:41:37.746142 22 discovery.go:154] groupsnapshot.storage.k8s.io/v1beta1 matches groupsnapshot.storage.k8s.io/v1beta1
  I0508 15:41:37.746160 22 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0508 15:41:37.747076 22 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0508 15:41:37.747094 22 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0508 15:41:37.747102 22 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0508 15:41:37.747299 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3399" for this suite. @ 05/08/25 15:41:37.749
• [0.806 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 05/08/25 15:41:37.758
  I0508 15:41:37.758530 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 15:41:37.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:41:37.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:41:37.798
  STEP: creating service multiprotocol-test in namespace services-3652 @ 05/08/25 15:41:37.8
  STEP: creating pod pod1 in namespace services-3652 @ 05/08/25 15:41:37.834
  STEP: Creating pod pod1 in namespace services-3652 @ 05/08/25 15:41:37.834
  E0508 15:41:38.284757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:39.285179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-3652 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/08/25 15:41:39.879
  I0508 15:41:39.883035      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:41:39.886073 22 service.go:4729] successfully validated that service multiprotocol-test in namespace services-3652 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/08/25 15:41:39.886
  I0508 15:41:39.886298 22 resource.go:361] Creating new exec pod
  E0508 15:41:40.285848      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:41.286884      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:41.916236 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3652 exec execpodk6m7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.143.140 80'
  I0508 15:41:42.046580 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.143.140 80\nConnection to 10.43.143.140 80 port [tcp/http] succeeded!\n"
  I0508 15:41:42.046628 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:41:42.046815 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3652 exec execpodk6m7k -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.143.140 80'
  E0508 15:41:42.287166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:43.287385      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:44.219786 22 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.143.140 80\n+ echo hostName\n"
  I0508 15:41:44.219825 22 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/08/25 15:41:44.219
  I0508 15:41:44.240372 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3652 exec execpodk6m7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.143.140 80'
  E0508 15:41:44.288900      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:44.420067 22 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.143.140 80\nConnection to 10.43.143.140 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0508 15:41:44.420122 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:41:44.420215 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3652 exec execpodk6m7k -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.143.140 80'
  E0508 15:41:45.289695      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:46.289835      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:46.548677 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.143.140 80\n"
  I0508 15:41:46.548722 22 builder.go:147] stdout: ""
  I0508 15:41:46.548776 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3652 exec execpodk6m7k -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.143.140 80'
  E0508 15:41:47.290775      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:48.290973      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:48.679885 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.143.140 80\n"
  I0508 15:41:48.679931 22 builder.go:147] stdout: ""
  I0508 15:41:48.679986 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3652 exec execpodk6m7k -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.143.140 80'
  E0508 15:41:49.291018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:50.291159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:50.824206 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.143.140 80\n"
  I0508 15:41:50.824257 22 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/08/25 15:41:50.824
  I0508 15:41:50.842104 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3652 exec execpodk6m7k -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.143.140 80'
  E0508 15:41:51.292152      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:52.292240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:52.984765 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.143.140 80\n"
  I0508 15:41:52.984806 22 builder.go:147] stdout: "pod1"
  I0508 15:41:52.984991 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3652 exec execpodk6m7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.143.140 80'
  E0508 15:41:53.292987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:54.293703      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:55.111830 22 builder.go:135] rc: 1
  I0508 15:41:55.111907 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3652 exec execpodk6m7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.143.140 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.143.140 80
  + echo hostName
  nc: connect to 10.43.143.140 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0508 15:41:55.111986 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3652 exec execpodk6m7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.143.140 80'
  E0508 15:41:55.294370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:56.294461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:57.250524 22 builder.go:135] rc: 1
  I0508 15:41:57.250584 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3652 exec execpodk6m7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.143.140 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.143.140 80
  + echo hostName
  nc: connect to 10.43.143.140 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0508 15:41:57.250823 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3652 exec execpodk6m7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.143.140 80'
  E0508 15:41:57.295365      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:58.295451      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:41:59.296409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:41:59.402976 22 builder.go:135] rc: 1
  I0508 15:41:59.403042 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-3652 exec execpodk6m7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.143.140 80:
  Command stdout:

  stderr:
  + + nc -v -t -w 2 10.43.143.140 80
  echo hostName
  nc: connect to 10.43.143.140 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0508 15:41:59.403467 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3652" for this suite. @ 05/08/25 15:41:59.406
• [21.657 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 05/08/25 15:41:59.415
  I0508 15:41:59.415699 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename deployment @ 05/08/25 15:41:59.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:41:59.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:41:59.442
  STEP: creating a Deployment @ 05/08/25 15:41:59.452
  I0508 15:41:59.452064 22 deployment.go:506] Creating simple deployment test-deployment-fthpr
  I0508 15:41:59.502761 22 deployment.go:223] deployment "test-deployment-fthpr" doesn't have the required revision set
  E0508 15:42:00.296491      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:01.296727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:42:01.551486 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 15, 41, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 41, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 41, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 41, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-fthpr-6fb4c74686\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0508 15:42:02.303008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:03.303102      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 05/08/25 15:42:03.556
  I0508 15:42:03.558827 22 deployment.go:531] Deployment test-deployment-fthpr has Conditions: [{Available True 2025-05-08 15:42:01 +0000 UTC 2025-05-08 15:42:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-05-08 15:42:01 +0000 UTC 2025-05-08 15:41:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fthpr-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/08/25 15:42:03.558
  I0508 15:42:03.575022 22 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 42, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 42, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 42, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 41, 59, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-fthpr-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/08/25 15:42:03.575
  I0508 15:42:03.576853 22 deployment.go:578] Observed &Deployment event: ADDED
  I0508 15:42:03.576890 22 deployment.go:574] Observed Deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-08 15:41:59 +0000 UTC 2025-05-08 15:41:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fthpr-6fb4c74686"}
  I0508 15:42:03.577140 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0508 15:42:03.577168 22 deployment.go:574] Observed Deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-08 15:41:59 +0000 UTC 2025-05-08 15:41:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fthpr-6fb4c74686"}
  I0508 15:42:03.577180 22 deployment.go:574] Observed Deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-08 15:41:59 +0000 UTC 2025-05-08 15:41:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0508 15:42:03.577266 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0508 15:42:03.577283 22 deployment.go:574] Observed Deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-08 15:41:59 +0000 UTC 2025-05-08 15:41:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0508 15:42:03.577293 22 deployment.go:574] Observed Deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-08 15:41:59 +0000 UTC 2025-05-08 15:41:59 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-fthpr-6fb4c74686" is progressing.}
  I0508 15:42:03.577361 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0508 15:42:03.577491 22 deployment.go:574] Observed Deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-08 15:42:01 +0000 UTC 2025-05-08 15:42:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0508 15:42:03.577526 22 deployment.go:574] Observed Deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-08 15:42:01 +0000 UTC 2025-05-08 15:41:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fthpr-6fb4c74686" has successfully progressed.}
  I0508 15:42:03.577751 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0508 15:42:03.577789 22 deployment.go:574] Observed Deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-08 15:42:01 +0000 UTC 2025-05-08 15:42:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0508 15:42:03.577846 22 deployment.go:574] Observed Deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-08 15:42:01 +0000 UTC 2025-05-08 15:41:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fthpr-6fb4c74686" has successfully progressed.}
  I0508 15:42:03.577869 22 deployment.go:571] Found Deployment test-deployment-fthpr in namespace deployment-2877 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0508 15:42:03.577945 22 deployment.go:582] Deployment test-deployment-fthpr has an updated status
  STEP: patching the Statefulset Status @ 05/08/25 15:42:03.577
  I0508 15:42:03.578031 22 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0508 15:42:03.594285 22 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/08/25 15:42:03.594
  I0508 15:42:03.599306 22 deployment.go:615] Observed &Deployment event: ADDED
  I0508 15:42:03.599354 22 deployment.go:611] Observed deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-08 15:41:59 +0000 UTC 2025-05-08 15:41:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fthpr-6fb4c74686"}
  I0508 15:42:03.599511 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0508 15:42:03.599552 22 deployment.go:611] Observed deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-08 15:41:59 +0000 UTC 2025-05-08 15:41:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fthpr-6fb4c74686"}
  I0508 15:42:03.599563 22 deployment.go:611] Observed deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-08 15:41:59 +0000 UTC 2025-05-08 15:41:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0508 15:42:03.599705 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0508 15:42:03.599748 22 deployment.go:611] Observed deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-08 15:41:59 +0000 UTC 2025-05-08 15:41:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0508 15:42:03.599759 22 deployment.go:611] Observed deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-08 15:41:59 +0000 UTC 2025-05-08 15:41:59 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-fthpr-6fb4c74686" is progressing.}
  I0508 15:42:03.599942 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0508 15:42:03.599966 22 deployment.go:611] Observed deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-08 15:42:01 +0000 UTC 2025-05-08 15:42:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0508 15:42:03.599992 22 deployment.go:611] Observed deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-08 15:42:01 +0000 UTC 2025-05-08 15:41:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fthpr-6fb4c74686" has successfully progressed.}
  I0508 15:42:03.600179 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0508 15:42:03.600207 22 deployment.go:611] Observed deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-08 15:42:01 +0000 UTC 2025-05-08 15:42:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0508 15:42:03.600230 22 deployment.go:611] Observed deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-08 15:42:01 +0000 UTC 2025-05-08 15:41:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fthpr-6fb4c74686" has successfully progressed.}
  I0508 15:42:03.600303 22 deployment.go:611] Observed deployment test-deployment-fthpr in namespace deployment-2877 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0508 15:42:03.600455 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0508 15:42:03.600480 22 deployment.go:608] Found deployment test-deployment-fthpr in namespace deployment-2877 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0508 15:42:03.600518 22 deployment.go:619] Deployment test-deployment-fthpr has a patched status
  I0508 15:42:03.610439 22 deployment.go:632] Deployment "test-deployment-fthpr":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-fthpr",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6c88b01-fecd-4cba-9b77-bf35185e918d",
      ResourceVersion: (string) (len=5) "57044",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315719,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315719,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-fthpr-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0508 15:42:03.615390 22 deployment.go:40] New ReplicaSet "test-deployment-fthpr-6fb4c74686" of Deployment "test-deployment-fthpr":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-fthpr-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70bdeffb-f6f1-4cdd-a370-88f1e13b0ef8",
      ResourceVersion: (string) (len=5) "57035",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315719,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-fthpr",
          UID: (types.UID) (len=36) "e6c88b01-fecd-4cba-9b77-bf35185e918d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315719,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 65 36 63  |k:{\"uid\":\"e6c|
              00000120  38 38 62 30 31 2d 66 65  63 64 2d 34 63 62 61 2d  |88b01-fecd-4cba-|
              00000130  39 62 37 37 2d 62 66 33  35 31 38 35 65 39 31 38  |9b77-bf35185e918|
              00000140  64 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |d\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0508 15:42:03.623174 22 deployment.go:68] Pod "test-deployment-fthpr-6fb4c74686-ztffz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-fthpr-6fb4c74686-ztffz",
      GenerateName: (string) (len=33) "test-deployment-fthpr-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-2877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c4c21cc2-aaf4-4caf-a3df-da5d814c7066",
      ResourceVersion: (string) (len=5) "57034",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315719,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1062ac8639e6b637494a03ae93074745614af4e76f49aa0cb303584058de9361",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.216/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.216/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-fthpr-6fb4c74686",
          UID: (types.UID) (len=36) "70bdeffb-f6f1-4cdd-a370-88f1e13b0ef8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315719,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315719,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 30 62 64 65 66 66  62 2d 66 36 66 31 2d 34  |"70bdeffb-f6f1-4|
              000000a0  63 64 64 2d 61 33 37 30  2d 38 38 66 31 65 31 33  |cdd-a370-88f1e13|
              000000b0  62 30 65 66 38 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b0ef8\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 31  36 5c 22 7d 22 3a 7b 22  |.42.1.216\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mnzc2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mnzc2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315719,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315719,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) (len=11) "10.42.1.216",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.216"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315719,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882315720,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a01381269f1acb25658252177cd3ad61896bd66528a5e72589b9daf055356ff7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mnzc2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 15:42:03.626262 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2877" for this suite. @ 05/08/25 15:42:03.63
• [4.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 05/08/25 15:42:03.651
  I0508 15:42:03.651035 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 15:42:03.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:03.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:03.671
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/08/25 15:42:03.674
  I0508 15:42:03.674309 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4620 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0508 15:42:03.747967 22 builder.go:146] stderr: ""
  I0508 15:42:03.748007 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/08/25 15:42:03.748
  E0508 15:42:04.303538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:05.303659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:06.304125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:07.304242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:08.304336      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/08/25 15:42:08.798
  I0508 15:42:08.798902 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4620 get pod e2e-test-httpd-pod -o json'
  I0508 15:42:08.909352 22 builder.go:146] stderr: ""
  I0508 15:42:08.911519 22 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"b6ff4754c2b8060f0f16ba5014df46bb2ef4b0da245ebc9736b9fc8873a3bdf7\",\n            \"cni.projectcalico.org/podIP\": \"10.42.1.217/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.42.1.217/32\"\n        },\n        \"creationTimestamp\": \"2025-05-08T15:42:03Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-4620\",\n        \"resourceVersion\": \"57089\",\n        \"uid\": \"926be5d3-1e93-4a24-8e6c-1b6f6347c80c\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-k5l8q\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-27-218.us-east-2.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-k5l8q\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-08T15:42:05Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-08T15:42:03Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-08T15:42:05Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-08T15:42:05Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-08T15:42:03Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://0d0e44faaaf68da54f209a39b58cdb30b5ee9faf11167aca2ca0ef1111b0b7e0\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-05-08T15:42:04Z\"\n                    }\n                },\n                \"user\": {\n                    \"linux\": {\n                        \"gid\": 0,\n                        \"supplementalGroups\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            6,\n                            10,\n                            11,\n                            20,\n                            26,\n                            27\n                        ],\n                        \"uid\": 0\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-k5l8q\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.27.218\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.27.218\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.1.217\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.1.217\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-05-08T15:42:03Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/08/25 15:42:08.911
  I0508 15:42:08.911608 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4620 replace -f -'
  I0508 15:42:09.124331 22 builder.go:146] stderr: ""
  I0508 15:42:09.124374 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/08/25 15:42:09.124
  I0508 15:42:09.132145 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4620 delete pods e2e-test-httpd-pod'
  E0508 15:42:09.305240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:10.305447      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:42:10.548577 22 builder.go:146] stderr: ""
  I0508 15:42:10.548616 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0508 15:42:10.548718 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4620" for this suite. @ 05/08/25 15:42:10.551
• [6.914 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/08/25 15:42:10.565
  I0508 15:42:10.565614 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename deployment @ 05/08/25 15:42:10.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:10.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:10.587
  I0508 15:42:10.590120 22 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0508 15:42:10.604272 22 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0508 15:42:10.615093 22 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0508 15:42:11.305534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:12.305636      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:42:12.620546 22 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0508 15:42:12.629105 22 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0508 15:42:12.646059 22 deployment.go:314] Updating deployment test-recreate-deployment
  I0508 15:42:12.646105 22 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0508 15:42:12.833719 22 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6876",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "998081cd-9bd1-4208-bc2d-9096a98f1435",
      ResourceVersion: (string) (len=5) "57187",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315730,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0508 15:42:12.838495 22 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6876",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4677231-5c6d-4fd2-a744-633534fbd7ec",
      ResourceVersion: (string) (len=5) "57185",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315732,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "998081cd-9bd1-4208-bc2d-9096a98f1435",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 39 38 30 38 31  63 64 2d 39 62 64 31 2d  |\"998081cd-9bd1-|
              00000120  34 32 30 38 2d 62 63 32  64 2d 39 30 39 36 61 39  |4208-bc2d-9096a9|
              00000130  38 66 31 34 33 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8f1435\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0508 15:42:12.841452 22 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0508 15:42:12.842027 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6876",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "566fda0d-7276-4216-88b2-7d9526b3f7d0",
      ResourceVersion: (string) (len=5) "57174",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315730,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "998081cd-9bd1-4208-bc2d-9096a98f1435",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 39 38 30 38 31  63 64 2d 39 62 64 31 2d  |\"998081cd-9bd1-|
              00000120  34 32 30 38 2d 62 63 32  64 2d 39 30 39 36 61 39  |4208-bc2d-9096a9|
              00000130  38 66 31 34 33 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8f1435\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0508 15:42:12.846287 22 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-rgj2f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-rgj2f",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-6876",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eddf6d00-1951-4c95-9678-db4be0c119c5",
      ResourceVersion: (string) (len=5) "57188",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315732,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "d4677231-5c6d-4fd2-a744-633534fbd7ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  36 37 37 32 33 31 2d 35  |d\":\"d4677231-5|
              00000090  63 36 64 2d 34 66 64 32  2d 61 37 34 34 2d 36 33  |c6d-4fd2-a744-63|
              000000a0  33 35 33 34 66 62 64 37  65 63 5c 22 7d 22 3a 7b  |3534fbd7ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kspjf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kspjf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315732,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315732,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kspjf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 15:42:12.848001 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6876" for this suite. @ 05/08/25 15:42:12.85
• [2.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 05/08/25 15:42:12.865
  I0508 15:42:12.865312 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:42:12.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:12.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:12.898
  STEP: Setting up server cert @ 05/08/25 15:42:12.932
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:42:13.264
  STEP: Deploying the webhook pod @ 05/08/25 15:42:13.272
  STEP: Wait for the deployment to be ready @ 05/08/25 15:42:13.299
  E0508 15:42:13.306136      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:42:13.316030 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0508 15:42:14.306824      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:15.306892      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:42:15.323788 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 15, 42, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 42, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 42, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 42, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0508 15:42:16.306952      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:17.307173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:42:17.326
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:42:17.363
  E0508 15:42:18.307285      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:42:18.364389 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/08/25 15:42:18.367
  STEP: create a pod that should be denied by the webhook @ 05/08/25 15:42:18.391
  STEP: create a pod that causes the webhook to hang @ 05/08/25 15:42:18.405
  E0508 15:42:19.308357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:20.308477      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:21.308672      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:22.308771      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:23.308901      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:24.309723      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:25.309865      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:26.310224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:27.310418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:28.310605      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 05/08/25 15:42:28.412
  STEP: create a configmap that should be admitted by the webhook @ 05/08/25 15:42:28.424
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/08/25 15:42:28.46
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/08/25 15:42:28.477
  STEP: create a namespace that bypass the webhook @ 05/08/25 15:42:28.481
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/08/25 15:42:28.5
  I0508 15:42:28.628268 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9102" for this suite. @ 05/08/25 15:42:28.631
  STEP: Destroying namespace "webhook-markers-8210" for this suite. @ 05/08/25 15:42:28.652
  STEP: Destroying namespace "exempted-namespace-610" for this suite. @ 05/08/25 15:42:28.666
• [15.812 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 05/08/25 15:42:28.677
  I0508 15:42:28.677530 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 15:42:28.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:28.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:28.712
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/08/25 15:42:28.715
  E0508 15:42:29.310802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:30.310954      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:31.311067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:32.311157      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:42:32.745
  I0508 15:42:32.747037 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-43bec88b-dfd1-4313-a2d9-d27f301ef196 container test-container: <nil>
  STEP: delete the pod @ 05/08/25 15:42:32.753
  I0508 15:42:32.791807 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3841" for this suite. @ 05/08/25 15:42:32.805
• [4.136 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/08/25 15:42:32.814
  I0508 15:42:32.814552 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:42:32.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:32.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:32.84
  STEP: Creating configMap with name configmap-projected-all-test-volume-9adc927e-ac4d-4b91-8f65-a8e1ef6c9204 @ 05/08/25 15:42:32.842
  STEP: Creating secret with name secret-projected-all-test-volume-5a9d11c5-81ff-4307-9f6c-a3d94b3c1d52 @ 05/08/25 15:42:32.856
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/08/25 15:42:32.864
  I0508 15:42:32.874833      22 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  E0508 15:42:33.311212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:34.311340      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:35.311536      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:36.311636      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:42:36.883
  I0508 15:42:36.885870 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod projected-volume-326ac995-5f23-40d9-a1ff-b1208003ac6d container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 15:42:36.892
  I0508 15:42:36.921307 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3075" for this suite. @ 05/08/25 15:42:36.924
• [4.130 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/08/25 15:42:36.944
  I0508 15:42:36.944773 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename watch @ 05/08/25 15:42:36.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:36.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:36.978
  STEP: getting a starting resourceVersion @ 05/08/25 15:42:36.98
  STEP: starting a background goroutine to produce watch events @ 05/08/25 15:42:36.982
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/08/25 15:42:36.983
  E0508 15:42:37.312000      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:38.312244      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:39.313228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:42:39.709272 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9577" for this suite. @ 05/08/25 15:42:39.749
• [2.866 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 05/08/25 15:42:39.811
  I0508 15:42:39.811220 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/08/25 15:42:39.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:39.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:39.847
  I0508 15:42:39.849635 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:42:40.313880      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:41.313951      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:42.314052      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:42:42.907080 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9768" for this suite. @ 05/08/25 15:42:42.912
• [3.111 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/08/25 15:42:42.922
  I0508 15:42:42.922093 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/08/25 15:42:42.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:42.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:42.946
  STEP: creating a target pod @ 05/08/25 15:42:42.955
  E0508 15:42:43.314916      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:44.315771      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/08/25 15:42:44.974
  E0508 15:42:45.316320      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:46.316648      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:47.316751      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:48.317728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 05/08/25 15:42:49.007
  STEP: checking pod container endpoints @ 05/08/25 15:42:49.009
  I0508 15:42:49.009455 22 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6127 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 15:42:49.009492 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 15:42:49.009533 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-6127/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0508 15:42:49.092801 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 15:42:49.092848 22 exec_util.go:112] Exec stderr: ""
  I0508 15:42:49.097724 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6127" for this suite. @ 05/08/25 15:42:49.1
• [6.187 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 05/08/25 15:42:49.108
  I0508 15:42:49.108722 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename emptydir @ 05/08/25 15:42:49.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:49.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:49.143
  STEP: Creating Pod @ 05/08/25 15:42:49.146
  E0508 15:42:49.318473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:50.318798      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 05/08/25 15:42:51.174
  I0508 15:42:51.174936 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-5902 PodName:pod-sharedvolume-673ace64-4f40-4341-995a-c57c173c3b05 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 15:42:51.174994 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 15:42:51.175073 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/emptydir-5902/pods/pod-sharedvolume-673ace64-4f40-4341-995a-c57c173c3b05/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0508 15:42:51.242009 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 15:42:51.242162 22 exec_util.go:112] Exec stderr: ""
  I0508 15:42:51.242293 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5902" for this suite. @ 05/08/25 15:42:51.245
• [2.150 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 05/08/25 15:42:51.259
  I0508 15:42:51.259455 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/08/25 15:42:51.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:51.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:51.287
  I0508 15:42:51.294192 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0508 15:42:51.319112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "aggregateddiscovery-6491" for this suite. @ 05/08/25 15:42:51.347
• [0.103 seconds]
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 05/08/25 15:42:51.362
  I0508 15:42:51.362671 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename disruption @ 05/08/25 15:42:51.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:51.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:51.385
  STEP: Waiting for the pdb to be processed @ 05/08/25 15:42:51.404
  E0508 15:42:52.319411      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:53.319534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 05/08/25 15:42:53.457
  I0508 15:42:53.473497 22 disruption.go:691] running pods: 0 < 3
  E0508 15:42:54.320657      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:55.320712      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:42:55.460827 22 disruption.go:691] running pods: 0 < 3
  E0508 15:42:56.320872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:42:57.321175      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:42:57.461648 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6377" for this suite. @ 05/08/25 15:42:57.464
• [6.109 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 05/08/25 15:42:57.472
  I0508 15:42:57.472711 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename svcaccounts @ 05/08/25 15:42:57.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:57.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:57.494
  I0508 15:42:57.530033 22 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0508 15:42:57.530067 22 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0508 15:42:57.544523 22 service_accounts.go:281] created pod pod-service-account-mountsa
  I0508 15:42:57.544560 22 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0508 15:42:57.562988 22 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0508 15:42:57.563050 22 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0508 15:42:57.573509 22 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0508 15:42:57.573572 22 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0508 15:42:57.598229 22 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0508 15:42:57.598350 22 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0508 15:42:57.626979 22 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0508 15:42:57.627163 22 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0508 15:42:57.643293 22 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0508 15:42:57.643425 22 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0508 15:42:57.675073 22 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0508 15:42:57.675104 22 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0508 15:42:57.709161 22 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0508 15:42:57.709200 22 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0508 15:42:57.709406 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-869" for this suite. @ 05/08/25 15:42:57.729
• [0.316 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 05/08/25 15:42:57.788
  I0508 15:42:57.788705 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubelet-test @ 05/08/25 15:42:57.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:57.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:57.853
  I0508 15:42:57.920028 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8702" for this suite. @ 05/08/25 15:42:57.934
• [0.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/08/25 15:42:57.963
  I0508 15:42:57.963456 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename daemonsets @ 05/08/25 15:42:57.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:42:58.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:42:58.018
  I0508 15:42:58.071251 22 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0508 15:42:58.081173 22 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0508 15:42:58.184403 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:42:58.184650 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:42:58.322108      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:42:59.113607 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:42:59.113642 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:42:59.322147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:00.124476 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0508 15:43:00.124570 22 fixtures.go:131] Node ip-172-31-20-200.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0508 15:43:00.322810      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:01.087572 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0508 15:43:01.087611 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0508 15:43:01.087627 22 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0508 15:43:01.108249 22 daemon_set.go:102] Updating DaemonSet daemon-set
  E0508 15:43:01.324551      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:02.324335      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:03.189867 22 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0508 15:43:03.212966 22 daemon_set.go:102] Updating DaemonSet daemon-set
  I0508 15:43:03.213159 22 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0508 15:43:03.222008 22 daemon_set.go:1193] Wrong image for pod: daemon-set-st52p. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0508 15:43:03.222196 22 daemon_set.go:1198] Pod daemon-set-st52p is not available
  E0508 15:43:03.325284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:04.326033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:05.326154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:06.326629      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:07.216890 22 daemon_set.go:1198] Pod daemon-set-vzdjq is not available
  STEP: Deleting DaemonSet "daemon-set" @ 05/08/25 15:43:07.226
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8855, will wait for the garbage collector to delete the pods @ 05/08/25 15:43:07.227
  I0508 15:43:07.290351 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.413248ms
  E0508 15:43:07.327566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:07.390604 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.249454ms
  E0508 15:43:08.327811      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:09.328715      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:10.329497      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:10.394022 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0508 15:43:10.394063 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0508 15:43:10.396138 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"58009"},"items":null}

  I0508 15:43:10.397635 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"58009"},"items":null}

  I0508 15:43:10.414974 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8855" for this suite. @ 05/08/25 15:43:10.418
• [12.464 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 05/08/25 15:43:10.427
  I0508 15:43:10.427578 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:43:10.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:43:10.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:43:10.459
  STEP: Setting up server cert @ 05/08/25 15:43:10.487
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:43:10.88
  STEP: Deploying the webhook pod @ 05/08/25 15:43:10.889
  STEP: Wait for the deployment to be ready @ 05/08/25 15:43:10.913
  I0508 15:43:10.932813 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0508 15:43:11.330226      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:12.330438      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:43:12.94
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:43:12.973
  E0508 15:43:13.331249      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:13.973839 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/08/25 15:43:13.976
  STEP: create a pod that should be updated by the webhook @ 05/08/25 15:43:14.007
  I0508 15:43:14.198892 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9611" for this suite. @ 05/08/25 15:43:14.207
  STEP: Destroying namespace "webhook-markers-126" for this suite. @ 05/08/25 15:43:14.216
• [3.800 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 05/08/25 15:43:14.227
  I0508 15:43:14.228055 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename resourcequota @ 05/08/25 15:43:14.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:43:14.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:43:14.267
  STEP: Creating a ResourceQuota with terminating scope @ 05/08/25 15:43:14.273
  STEP: Ensuring ResourceQuota status is calculated @ 05/08/25 15:43:14.282
  E0508 15:43:14.332098      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:15.332200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 05/08/25 15:43:16.286
  STEP: Ensuring ResourceQuota status is calculated @ 05/08/25 15:43:16.295
  E0508 15:43:16.332439      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:17.332714      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 05/08/25 15:43:18.298
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/08/25 15:43:18.321
  E0508 15:43:18.333223      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:19.333276      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/08/25 15:43:20.324
  E0508 15:43:20.334310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:21.334417      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/08/25 15:43:22.326
  E0508 15:43:22.334736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released the pod usage @ 05/08/25 15:43:22.357
  E0508 15:43:23.335305      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:24.335134      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 05/08/25 15:43:24.361
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/08/25 15:43:24.383
  E0508 15:43:25.335274      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:26.335356      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/08/25 15:43:26.387
  E0508 15:43:27.336122      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:28.336235      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/08/25 15:43:28.39
  STEP: Ensuring resource quota status released the pod usage @ 05/08/25 15:43:28.427
  E0508 15:43:29.337286      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:30.337765      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:30.430579 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5428" for this suite. @ 05/08/25 15:43:30.433
• [16.214 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 05/08/25 15:43:30.442
  I0508 15:43:30.442369 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename runtimeclass @ 05/08/25 15:43:30.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:43:30.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:43:30.474
  STEP: Deleting RuntimeClass runtimeclass-4743-delete-me @ 05/08/25 15:43:30.484
  STEP: Waiting for the RuntimeClass to disappear @ 05/08/25 15:43:30.492
  I0508 15:43:30.500110 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4743" for this suite. @ 05/08/25 15:43:30.534
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 05/08/25 15:43:30.544
  I0508 15:43:30.544492 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename namespaces @ 05/08/25 15:43:30.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:43:30.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:43:30.568
  STEP: Creating a test namespace @ 05/08/25 15:43:30.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:43:30.6
  STEP: Creating a service in the namespace @ 05/08/25 15:43:30.604
  STEP: Deleting the namespace @ 05/08/25 15:43:30.651
  STEP: Waiting for the namespace to be removed. @ 05/08/25 15:43:30.679
  E0508 15:43:31.337880      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:32.338864      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:33.339212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:34.339767      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:35.339880      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:36.339989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/08/25 15:43:36.682
  STEP: Verifying there is no service in the namespace @ 05/08/25 15:43:36.705
  I0508 15:43:36.711521 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6319" for this suite. @ 05/08/25 15:43:36.714
  STEP: Destroying namespace "nsdeletetest-1225" for this suite. @ 05/08/25 15:43:36.723
  I0508 15:43:36.725507 22 framework.go:370] Namespace nsdeletetest-1225 was already deleted
  STEP: Destroying namespace "nsdeletetest-3477" for this suite. @ 05/08/25 15:43:36.725
• [6.201 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/08/25 15:43:36.746
  I0508 15:43:36.746245 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename deployment @ 05/08/25 15:43:36.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:43:36.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:43:36.766
  STEP: creating a Deployment @ 05/08/25 15:43:36.779
  STEP: waiting for Deployment to be created @ 05/08/25 15:43:36.806
  STEP: waiting for all Replicas to be Ready @ 05/08/25 15:43:36.811
  I0508 15:43:36.814791 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0508 15:43:36.814902 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0508 15:43:36.879278 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0508 15:43:36.879315 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0508 15:43:36.914543 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0508 15:43:36.914576 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0508 15:43:37.027010 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0508 15:43:37.027046 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0508 15:43:37.340210      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:38.340539      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:38.375298 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0508 15:43:38.375340 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0508 15:43:38.847968 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/08/25 15:43:38.848
  I0508 15:43:38.864014 22 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/08/25 15:43:38.864
  I0508 15:43:38.865603 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0
  I0508 15:43:38.865638 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0
  I0508 15:43:38.865653 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0
  I0508 15:43:38.865661 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0
  I0508 15:43:38.865674 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0
  I0508 15:43:38.865681 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0
  I0508 15:43:38.865839 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0
  I0508 15:43:38.865863 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 0
  I0508 15:43:38.865872 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1
  I0508 15:43:38.865879 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1
  I0508 15:43:38.865887 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2
  I0508 15:43:38.865894 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2
  I0508 15:43:38.865982 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2
  I0508 15:43:38.865993 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2
  I0508 15:43:38.893805 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2
  I0508 15:43:38.893849 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2
  I0508 15:43:38.931065 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2
  I0508 15:43:38.931127 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2
  I0508 15:43:38.975467 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1
  I0508 15:43:38.975505 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1
  I0508 15:43:39.005596 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1
  I0508 15:43:39.005631 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1
  E0508 15:43:39.341220      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:40.342094      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:40.875106 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2
  I0508 15:43:40.875144 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2
  I0508 15:43:40.947756 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1
  STEP: listing Deployments @ 05/08/25 15:43:40.947
  I0508 15:43:40.951472 22 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/08/25 15:43:40.951
  I0508 15:43:40.969579 22 deployment.go:360] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/08/25 15:43:40.969
  I0508 15:43:40.976386 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0508 15:43:41.017062 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0508 15:43:41.085064 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0508 15:43:41.128059 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0508 15:43:41.342217      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:42.342329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:42.408880 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0508 15:43:42.885646 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0508 15:43:42.951566 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0508 15:43:42.971275 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0508 15:43:43.342824      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:44.342954      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:44.414016 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/08/25 15:43:44.495
  STEP: fetching the DeploymentStatus @ 05/08/25 15:43:44.513
  I0508 15:43:44.530923 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1
  I0508 15:43:44.530959 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1
  I0508 15:43:44.530969 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1
  I0508 15:43:44.531152 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 1
  I0508 15:43:44.531194 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2
  I0508 15:43:44.531205 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 3
  I0508 15:43:44.531238 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2
  I0508 15:43:44.531361 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 2
  I0508 15:43:44.531373 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-255 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/08/25 15:43:44.531
  I0508 15:43:44.559073 22 deployment.go:474] observed event type MODIFIED
  I0508 15:43:44.559161 22 deployment.go:474] observed event type MODIFIED
  I0508 15:43:44.559205 22 deployment.go:474] observed event type MODIFIED
  I0508 15:43:44.559216 22 deployment.go:474] observed event type MODIFIED
  I0508 15:43:44.559357 22 deployment.go:474] observed event type MODIFIED
  I0508 15:43:44.559381 22 deployment.go:474] observed event type MODIFIED
  I0508 15:43:44.559391 22 deployment.go:474] observed event type MODIFIED
  I0508 15:43:44.559494 22 deployment.go:474] observed event type MODIFIED
  I0508 15:43:44.559516 22 deployment.go:474] observed event type MODIFIED
  I0508 15:43:44.559529 22 deployment.go:474] observed event type MODIFIED
  I0508 15:43:44.559543 22 deployment.go:474] observed event type MODIFIED
  I0508 15:43:44.559581 22 deployment.go:474] observed event type MODIFIED
  I0508 15:43:44.571603 22 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0508 15:43:44.593328 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-255" for this suite. @ 05/08/25 15:43:44.615
• [7.919 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 05/08/25 15:43:44.665
  I0508 15:43:44.665141 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:43:44.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:43:44.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:43:44.71
  STEP: Setting up server cert @ 05/08/25 15:43:44.773
  E0508 15:43:45.348089      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:43:45.53
  STEP: Deploying the webhook pod @ 05/08/25 15:43:45.538
  STEP: Wait for the deployment to be ready @ 05/08/25 15:43:45.566
  I0508 15:43:45.613137 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0508 15:43:46.348926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:47.349030      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:43:47.626
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:43:47.667
  E0508 15:43:48.349725      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:48.668161 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/08/25 15:43:48.671
  I0508 15:43:48.759450 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2539" for this suite. @ 05/08/25 15:43:48.774
  STEP: Destroying namespace "webhook-markers-2120" for this suite. @ 05/08/25 15:43:48.789
• [4.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 05/08/25 15:43:48.823
  I0508 15:43:48.823465 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:43:48.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:43:48.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:43:48.85
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 15:43:48.852
  E0508 15:43:49.352617      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:50.352713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:51.353712      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:52.353852      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:43:52.888
  I0508 15:43:52.894178 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-7f1e6c52-933d-4337-9057-057dad3fb0f3 container client-container: <nil>
  STEP: delete the pod @ 05/08/25 15:43:52.898
  I0508 15:43:52.927502 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6244" for this suite. @ 05/08/25 15:43:52.929
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:466
  STEP: Creating a kubernetes client @ 05/08/25 15:43:52.939
  I0508 15:43:52.939635 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename sched-pred @ 05/08/25 15:43:52.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:43:52.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:43:52.974
  I0508 15:43:52.976748 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0508 15:43:53.033573 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0508 15:43:53.037115 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-20-200.us-east-2.compute.internal before test
  I0508 15:43:53.043192 22 predicates.go:956] cloud-controller-manager-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:52 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043230 22 predicates.go:958] 	Container cloud-controller-manager ready: true, restart count 0
  I0508 15:43:53.043239 22 predicates.go:956] etcd-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:24 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043246 22 predicates.go:958] 	Container etcd ready: true, restart count 0
  I0508 15:43:53.043277 22 predicates.go:956] helm-install-rke2-canal-ftk2n from kube-system started at 2025-05-08 12:45:58 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043284 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 15:43:53.043305 22 predicates.go:956] helm-install-rke2-coredns-lmmjk from kube-system started at 2025-05-08 12:45:58 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043312 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 15:43:53.043319 22 predicates.go:956] helm-install-rke2-metrics-server-8m9m2 from kube-system started at 2025-05-08 12:46:24 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043325 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 15:43:53.043367 22 predicates.go:956] helm-install-rke2-runtimeclasses-pcsjl from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043373 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 15:43:53.043380 22 predicates.go:956] helm-install-rke2-snapshot-controller-77fsq from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043386 22 predicates.go:958] 	Container helm ready: false, restart count 2
  I0508 15:43:53.043392 22 predicates.go:956] helm-install-rke2-snapshot-controller-crd-jsh9g from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043398 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 15:43:53.043407 22 predicates.go:956] kube-apiserver-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:39 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043412 22 predicates.go:958] 	Container kube-apiserver ready: true, restart count 0
  I0508 15:43:53.043451 22 predicates.go:956] kube-controller-manager-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:50 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043466 22 predicates.go:958] 	Container kube-controller-manager ready: true, restart count 0
  I0508 15:43:53.043472 22 predicates.go:956] kube-proxy-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:24 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043478 22 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0508 15:43:53.043484 22 predicates.go:956] kube-scheduler-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:50 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043490 22 predicates.go:958] 	Container kube-scheduler ready: true, restart count 0
  I0508 15:43:53.043496 22 predicates.go:956] rke2-canal-9hk6c from kube-system started at 2025-05-08 12:46:07 +0000 UTC (2 container statuses recorded)
  I0508 15:43:53.043547 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0508 15:43:53.043556 22 predicates.go:958] 	Container kube-flannel ready: true, restart count 0
  I0508 15:43:53.043562 22 predicates.go:956] rke2-coredns-rke2-coredns-78c6cdfd9-p6ldk from kube-system started at 2025-05-08 12:46:24 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043568 22 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0508 15:43:53.043576 22 predicates.go:956] rke2-coredns-rke2-coredns-autoscaler-6bb9778ffb-dqqh2 from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043606 22 predicates.go:958] 	Container autoscaler ready: true, restart count 0
  I0508 15:43:53.043614 22 predicates.go:956] rke2-metrics-server-85479b695c-42rvh from kube-system started at 2025-05-08 12:46:44 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043629 22 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0508 15:43:53.043644 22 predicates.go:956] rke2-snapshot-controller-696989ffdd-bpbd9 from kube-system started at 2025-05-08 12:47:01 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.043650 22 predicates.go:958] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0508 15:43:53.043657 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-e41e32d222f74fe8-8p4wr from sonobuoy started at 2025-05-08 14:10:29 +0000 UTC (2 container statuses recorded)
  I0508 15:43:53.043663 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0508 15:43:53.043702 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0508 15:43:53.043717 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-27-218.us-east-2.compute.internal before test
  I0508 15:43:53.046424 22 predicates.go:956] kube-proxy-ip-172-31-27-218.us-east-2.compute.internal from kube-system started at 2025-05-08 12:48:07 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.046462 22 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0508 15:43:53.046472 22 predicates.go:956] rke2-canal-rnbhm from kube-system started at 2025-05-08 12:48:07 +0000 UTC (2 container statuses recorded)
  I0508 15:43:53.046478 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0508 15:43:53.046484 22 predicates.go:958] 	Container kube-flannel ready: true, restart count 0
  I0508 15:43:53.046756 22 predicates.go:956] rke2-coredns-rke2-coredns-78c6cdfd9-ddwvf from kube-system started at 2025-05-08 15:41:13 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.046776 22 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0508 15:43:53.046783 22 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-08 14:10:24 +0000 UTC (1 container statuses recorded)
  I0508 15:43:53.046790 22 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0508 15:43:53.046797 22 predicates.go:956] sonobuoy-e2e-job-f43826452bc6480c from sonobuoy started at 2025-05-08 14:10:29 +0000 UTC (2 container statuses recorded)
  I0508 15:43:53.046803 22 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0508 15:43:53.046808 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0508 15:43:53.046815 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-e41e32d222f74fe8-vfkbf from sonobuoy started at 2025-05-08 14:10:29 +0000 UTC (2 container statuses recorded)
  I0508 15:43:53.046821 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0508 15:43:53.046828 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/08/25 15:43:53.047
  E0508 15:43:53.354488      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:54.355293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/08/25 15:43:55.065
  STEP: Trying to apply a random label on the found node. @ 05/08/25 15:43:55.086
  STEP: verifying the node has the label kubernetes.io/e2e-4b0e2acb-ac4c-460e-a9fc-bcb76ae7327a 42 @ 05/08/25 15:43:55.107
  STEP: Trying to relaunch the pod, now with labels. @ 05/08/25 15:43:55.11
  E0508 15:43:55.356348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:56.356663      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-4b0e2acb-ac4c-460e-a9fc-bcb76ae7327a off the node ip-172-31-27-218.us-east-2.compute.internal @ 05/08/25 15:43:57.145
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-4b0e2acb-ac4c-460e-a9fc-bcb76ae7327a @ 05/08/25 15:43:57.167
  I0508 15:43:57.170754 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7654" for this suite. @ 05/08/25 15:43:57.181
• [4.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 05/08/25 15:43:57.225
  I0508 15:43:57.225788 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename runtimeclass @ 05/08/25 15:43:57.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:43:57.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:43:57.277
  E0508 15:43:57.356999      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:43:58.357742      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:43:59.321631 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-987" for this suite. @ 05/08/25 15:43:59.324
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 05/08/25 15:43:59.334
  I0508 15:43:59.334240 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename namespaces @ 05/08/25 15:43:59.335
  E0508 15:43:59.358179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:43:59.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:43:59.383
  STEP: Creating a test namespace @ 05/08/25 15:43:59.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:43:59.406
  STEP: Creating a pod in the namespace @ 05/08/25 15:43:59.409
  STEP: Waiting for the pod to have running status @ 05/08/25 15:43:59.426
  E0508 15:44:00.358650      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:01.358772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 05/08/25 15:44:01.451
  STEP: Waiting for the namespace to be removed. @ 05/08/25 15:44:01.466
  E0508 15:44:02.359484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:03.359603      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:04.360711      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:05.360781      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:06.361746      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:07.361848      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:08.362015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:09.363660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:10.363095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:11.363404      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:12.363544      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/08/25 15:44:12.469
  STEP: Verifying there are no pods in the namespace @ 05/08/25 15:44:12.493
  I0508 15:44:12.495928 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5674" for this suite. @ 05/08/25 15:44:12.498
  STEP: Destroying namespace "nsdeletetest-9388" for this suite. @ 05/08/25 15:44:12.512
  I0508 15:44:12.515124 22 framework.go:370] Namespace nsdeletetest-9388 was already deleted
  STEP: Destroying namespace "nsdeletetest-678" for this suite. @ 05/08/25 15:44:12.515
• [13.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/08/25 15:44:12.524
  I0508 15:44:12.524195 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:44:12.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:44:12.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:44:12.549
  STEP: Creating projection with secret that has name projected-secret-test-map-68ff25aa-8fb2-4baa-b667-2840797988db @ 05/08/25 15:44:12.552
  STEP: Creating a pod to test consume secrets @ 05/08/25 15:44:12.565
  E0508 15:44:13.363757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:14.364830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:15.364956      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:16.365044      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:44:16.584
  I0508 15:44:16.586655 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-projected-secrets-cbc38b45-4926-47ec-932f-d60a35ab649e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 15:44:16.591
  I0508 15:44:16.621772 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3799" for this suite. @ 05/08/25 15:44:16.624
• [4.108 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/08/25 15:44:16.632
  I0508 15:44:16.632833 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pod-network-test @ 05/08/25 15:44:16.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:44:16.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:44:16.661
  STEP: Performing setup for networking test in namespace pod-network-test-8004 @ 05/08/25 15:44:16.664
  STEP: creating a selector @ 05/08/25 15:44:16.664
  STEP: Creating the service pods in kubernetes @ 05/08/25 15:44:16.664
  I0508 15:44:16.664200 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0508 15:44:17.368631      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:18.369735      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:19.369877      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:20.370143      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:21.370270      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:22.370413      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:23.370546      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:24.370743      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:25.371604      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:26.371829      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:27.372568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:28.372769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:29.373278      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:30.373743      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/08/25 15:44:30.8
  E0508 15:44:31.374095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:32.374396      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:44:32.854232 22 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0508 15:44:32.854270 22 utils.go:495] Going to poll 10.42.0.242 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0508 15:44:32.857079 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.242 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8004 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 15:44:32.857113 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 15:44:32.857173 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8004/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.242+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0508 15:44:33.374639      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:44:33.921901 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 15:44:33.921950 22 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0508 15:44:33.921982 22 utils.go:495] Going to poll 10.42.1.240 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0508 15:44:33.924100 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.240 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8004 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 15:44:33.924131 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 15:44:33.924188 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8004/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.240+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0508 15:44:34.375351      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:44:34.997742 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 15:44:34.997796 22 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0508 15:44:34.997956 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8004" for this suite. @ 05/08/25 15:44:35.002
• [18.379 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 05/08/25 15:44:35.011
  I0508 15:44:35.011569 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename volumeattachment @ 05/08/25 15:44:35.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:44:35.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:44:35.04
  STEP: Create VolumeAttachment "va-e2e-z4d65" on node "ip-172-31-27-218.us-east-2.compute.internal" @ 05/08/25 15:44:35.101
  STEP: Patch VolumeAttachment "va-e2e-z4d65" on node "ip-172-31-27-218.us-east-2.compute.internal" @ 05/08/25 15:44:35.109
  STEP: Reading "va-e2e-z4d65" Status @ 05/08/25 15:44:35.118
  STEP: Patching "va-e2e-z4d65" Status @ 05/08/25 15:44:35.121
  I0508 15:44:35.129858 22 volume_attachment.go:224] "va-e2e-z4d65" Status.Attached: true
  STEP: Updating "va-e2e-z4d65" Status @ 05/08/25 15:44:35.129
  I0508 15:44:35.139771 22 volume_attachment.go:240] "va-e2e-z4d65" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-z4d65" on node "ip-172-31-27-218.us-east-2.compute.internal" @ 05/08/25 15:44:35.139
  STEP: Confirm deletion of VolumeAttachment "va-e2e-z4d65" on node "ip-172-31-27-218.us-east-2.compute.internal" @ 05/08/25 15:44:35.147
  I0508 15:44:35.149772 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-3900" for this suite. @ 05/08/25 15:44:35.208
• [0.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/08/25 15:44:35.23
  I0508 15:44:35.230539 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pods @ 05/08/25 15:44:35.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:44:35.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:44:35.252
  I0508 15:44:35.254990 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: creating the pod @ 05/08/25 15:44:35.255
  STEP: submitting the pod to kubernetes @ 05/08/25 15:44:35.255
  E0508 15:44:35.376187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:36.376321      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the container to be running @ 05/08/25 15:44:37.277
  I0508 15:44:37.286641 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4672" for this suite. @ 05/08/25 15:44:37.289
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 05/08/25 15:44:37.299
  I0508 15:44:37.299357 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:44:37.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:44:37.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:44:37.319
  STEP: Setting up server cert @ 05/08/25 15:44:37.363
  E0508 15:44:37.376802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:44:37.83
  STEP: Deploying the webhook pod @ 05/08/25 15:44:37.838
  STEP: Wait for the deployment to be ready @ 05/08/25 15:44:37.862
  I0508 15:44:37.881414 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0508 15:44:38.377821      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:39.378586      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:44:39.889
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:44:39.924
  E0508 15:44:40.378726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:44:40.925167 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/08/25 15:44:40.928
  STEP: verifying the validating webhook match conditions @ 05/08/25 15:44:40.953
  STEP: updating the validating webhook match conditions @ 05/08/25 15:44:40.956
  STEP: verifying the validating webhook match conditions @ 05/08/25 15:44:40.971
  I0508 15:44:41.095681 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9338" for this suite. @ 05/08/25 15:44:41.115
  STEP: Destroying namespace "webhook-markers-93" for this suite. @ 05/08/25 15:44:41.143
• [3.871 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 05/08/25 15:44:41.17
  I0508 15:44:41.170086 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename security-context-test @ 05/08/25 15:44:41.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:44:41.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:44:41.271
  E0508 15:44:41.379323      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:42.379490      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:43.379781      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:44.379968      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:44:45.305200 22 security_context.go:619] Got logs for pod "busybox-privileged-false-f983956c-9cb5-463a-a293-97471af7d93b": "ip: RTNETLINK answers: Operation not permitted\n"
  I0508 15:44:45.305473 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6394" for this suite. @ 05/08/25 15:44:45.31
• [4.164 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 05/08/25 15:44:45.334
  I0508 15:44:45.334858 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:44:45.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:44:45.378
  E0508 15:44:45.380283      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:44:45.381
  STEP: Creating configMap with name cm-test-opt-del-89731536-8b48-41f2-9bad-94b5331cc50c @ 05/08/25 15:44:45.411
  STEP: Creating configMap with name cm-test-opt-upd-cca87437-d6ce-4227-b61a-2642b01bef42 @ 05/08/25 15:44:45.427
  STEP: Creating the pod @ 05/08/25 15:44:45.435
  E0508 15:44:46.380415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:47.380567      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-89731536-8b48-41f2-9bad-94b5331cc50c @ 05/08/25 15:44:47.474
  STEP: Updating configmap cm-test-opt-upd-cca87437-d6ce-4227-b61a-2642b01bef42 @ 05/08/25 15:44:47.482
  STEP: Creating configMap with name cm-test-opt-create-053891cb-8385-46d9-b0bf-08e018f5b16d @ 05/08/25 15:44:47.496
  STEP: waiting to observe update in volume @ 05/08/25 15:44:47.503
  E0508 15:44:48.380652      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:49.381733      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:44:49.537408 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-870" for this suite. @ 05/08/25 15:44:49.54
• [4.214 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 05/08/25 15:44:49.549
  I0508 15:44:49.549618 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename namespaces @ 05/08/25 15:44:49.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:44:49.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:44:49.584
  STEP: Updating Namespace "namespaces-7937" @ 05/08/25 15:44:49.587
  I0508 15:44:49.610962 22 namespace.go:390] Namespace "namespaces-7937" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"ea598a33-1ae6-4a6e-874a-e18cfe1f996e", "kubernetes.io/metadata.name":"namespaces-7937", "namespaces-7937":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0508 15:44:49.611340 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7937" for this suite. @ 05/08/25 15:44:49.641
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/08/25 15:44:49.651
  I0508 15:44:49.651053 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/08/25 15:44:49.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:44:49.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:44:49.683
  I0508 15:44:49.685897 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:44:50.381866      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:44:50.712601 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7136" for this suite. @ 05/08/25 15:44:50.715
• [1.073 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 05/08/25 15:44:50.724
  I0508 15:44:50.724928 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:44:50.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:44:50.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:44:50.756
  STEP: Setting up server cert @ 05/08/25 15:44:50.802
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:44:51.341
  STEP: Deploying the webhook pod @ 05/08/25 15:44:51.354
  STEP: Wait for the deployment to be ready @ 05/08/25 15:44:51.378
  E0508 15:44:51.382628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:44:51.383073 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0508 15:44:52.383228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:53.383324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:44:53.389
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:44:53.424
  E0508 15:44:54.383474      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:44:54.425560 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/08/25 15:44:54.428
  STEP: create a pod @ 05/08/25 15:44:54.452
  E0508 15:44:55.383546      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:56.383670      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/08/25 15:44:56.478
  I0508 15:44:56.478265 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=webhook-716 attach --namespace=webhook-716 to-be-attached-pod -i -c=container1'
  I0508 15:44:56.555777 22 builder.go:135] rc: 1
  I0508 15:44:56.658814 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-716" for this suite. @ 05/08/25 15:44:56.671
  STEP: Destroying namespace "webhook-markers-3575" for this suite. @ 05/08/25 15:44:56.703
• [5.990 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/08/25 15:44:56.714
  I0508 15:44:56.714993 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename deployment @ 05/08/25 15:44:56.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:44:56.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:44:56.745
  I0508 15:44:56.758447 22 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  E0508 15:44:57.384284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:58.385023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:44:59.385881      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:00.386384      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:01.386510      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:01.780025 22 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/08/25 15:45:01.78
  I0508 15:45:01.780104 22 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0508 15:45:02.386629      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:03.386807      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:03.782569 22 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0508 15:45:03.794426 22 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0508 15:45:04.387914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:05.388126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:05.799014 22 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0508 15:45:05.803368 22 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0508 15:45:05.810924 22 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0508 15:45:05.821602 22 deployment.go:314] Updating deployment test-rollover-deployment
  I0508 15:45:05.822093 22 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0508 15:45:06.389600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:07.389690      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:07.838286 22 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0508 15:45:07.843367 22 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0508 15:45:07.846854 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0508 15:45:07.846918 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 45, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0508 15:45:08.389834      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:09.390105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:09.863224 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0508 15:45:09.863335 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 45, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0508 15:45:10.390691      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:11.390813      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:11.855480 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0508 15:45:11.855673 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 45, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0508 15:45:12.390966      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:13.391311      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:13.852266 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0508 15:45:13.852325 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 45, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0508 15:45:14.391466      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:15.391692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:15.855802 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0508 15:45:15.856118 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 45, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 45, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0508 15:45:16.391692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:17.391809      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:17.852070 22 deployment.go:95] 
  I0508 15:45:17.852122 22 deployment.go:993] Ensure that both old replica sets have no replicas
  I0508 15:45:17.857681 22 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6896",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "876eae87-fc79-4d51-a8e3-676c048ac0f6",
      ResourceVersion: (string) (len=5) "59483",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0508 15:45:17.862918 22 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6896",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c4d5016-d126-4ced-8168-525d99fac0ac",
      ResourceVersion: (string) (len=5) "59473",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "876eae87-fc79-4d51-a8e3-676c048ac0f6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 37 36 65 61 65  38 37 2d 66 63 37 39 2d  |\"876eae87-fc79-|
              00000120  34 64 35 31 2d 61 38 65  33 2d 36 37 36 63 30 34  |4d51-a8e3-676c04|
              00000130  38 61 63 30 66 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8ac0f6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0508 15:45:17.864123 22 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0508 15:45:17.864593 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6896",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4fa057b-7d6a-455b-a728-7b9820aa26bf",
      ResourceVersion: (string) (len=5) "59482",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "876eae87-fc79-4d51-a8e3-676c048ac0f6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  38 37 36 65 61 65 38 37  2d 66 63 37 39 2d 34 64  |876eae87-fc79-4d|
              000000c0  35 31 2d 61 38 65 33 2d  36 37 36 63 30 34 38 61  |51-a8e3-676c048a|
              000000d0  63 30 66 36 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |c0f6\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0508 15:45:17.866023 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6896",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "219e2410-8b4b-4e8c-b518-7c825e2dc5ae",
      ResourceVersion: (string) (len=5) "59407",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "876eae87-fc79-4d51-a8e3-676c048ac0f6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 37 36 65 61 65  38 37 2d 66 63 37 39 2d  |\"876eae87-fc79-|
              00000120  34 64 35 31 2d 61 38 65  33 2d 36 37 36 63 30 34  |4d51-a8e3-676c04|
              00000130  38 61 63 30 66 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8ac0f6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0508 15:45:17.869777 22 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-46p5d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-46p5d",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-6896",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "953084ed-91ae-4efd-be7c-1811471c51c9",
      ResourceVersion: (string) (len=5) "59427",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "12b65ab2aae9b8a8f2ef1f686eca676b7ec1687e66839a72b425876b2a13ba80",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.250/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.250/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "6c4d5016-d126-4ced-8168-525d99fac0ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  34 64 35 30 31 36 2d 64  |d\":\"6c4d5016-d|
              00000090  31 32 36 2d 34 63 65 64  2d 38 31 36 38 2d 35 32  |126-4ced-8168-52|
              000000a0  35 64 39 39 66 61 63 30  61 63 5c 22 7d 22 3a 7b  |5d99fac0ac\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315906,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 35  30 5c 22 7d 22 3a 7b 22  |.42.1.250\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9vlsw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9vlsw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-27-218.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882315905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.27.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.27.218"
        }
      },
      PodIP: (string) (len=11) "10.42.1.250",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.250"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882315905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882315906,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://4db9ec365afa25541e6832f35a8b0a6fbe19fd5aa4eb7742d2ca93a84b5f0767",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9vlsw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0508 15:45:17.873545 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6896" for this suite. @ 05/08/25 15:45:17.876
• [21.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 05/08/25 15:45:17.895
  I0508 15:45:17.895163 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/08/25 15:45:17.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:45:17.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:45:17.915
  I0508 15:45:17.928304 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9698" for this suite. @ 05/08/25 15:45:17.978
• [0.092 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/08/25 15:45:17.987
  I0508 15:45:17.987915 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename pod-network-test @ 05/08/25 15:45:17.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:45:18.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:45:18.016
  STEP: Performing setup for networking test in namespace pod-network-test-9921 @ 05/08/25 15:45:18.024
  STEP: creating a selector @ 05/08/25 15:45:18.024
  STEP: Creating the service pods in kubernetes @ 05/08/25 15:45:18.024
  I0508 15:45:18.024197 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0508 15:45:18.392437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:19.392580      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:20.393310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:21.393389      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:22.394405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:23.394491      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:24.395000      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:25.396043      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:26.396588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:27.396634      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:28.396732      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:29.397740      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:30.398176      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:31.401945      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/08/25 15:45:32.144
  E0508 15:45:32.402427      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:33.402666      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:34.403186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:35.403288      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:36.184026 22 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0508 15:45:36.184065 22 utils.go:495] Going to poll 10.42.0.243 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0508 15:45:36.185574 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.243:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9921 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 15:45:36.185604 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 15:45:36.185644 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9921/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.243%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0508 15:45:36.253525 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 15:45:36.253609 22 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0508 15:45:36.253637 22 utils.go:495] Going to poll 10.42.1.251 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0508 15:45:36.255796 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.251:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9921 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 15:45:36.255873 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 15:45:36.255934 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9921/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.251%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0508 15:45:36.320923 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 15:45:36.321010 22 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0508 15:45:36.321175 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9921" for this suite. @ 05/08/25 15:45:36.324
• [18.350 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 05/08/25 15:45:36.337
  I0508 15:45:36.337782 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename proxy @ 05/08/25 15:45:36.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:45:36.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:45:36.363
  I0508 15:45:36.366061 22 proxy.go:430] Creating pod...
  E0508 15:45:36.404359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:37.404251      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:38.382531 22 proxy.go:454] Creating service...
  E0508 15:45:38.404636      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:38.421684 22 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/pods/agnhost/proxy?method=DELETE
  I0508 15:45:38.438040 22 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0508 15:45:38.438081 22 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/pods/agnhost/proxy?method=OPTIONS
  I0508 15:45:38.441386 22 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0508 15:45:38.441432 22 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/pods/agnhost/proxy?method=PATCH
  I0508 15:45:38.443877 22 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0508 15:45:38.443911 22 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/pods/agnhost/proxy?method=POST
  I0508 15:45:38.445930 22 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0508 15:45:38.445963 22 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/pods/agnhost/proxy?method=PUT
  I0508 15:45:38.447914 22 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0508 15:45:38.447953 22 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/services/e2e-proxy-test-service/proxy?method=DELETE
  I0508 15:45:38.450351 22 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0508 15:45:38.450394 22 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0508 15:45:38.452750 22 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0508 15:45:38.452789 22 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/services/e2e-proxy-test-service/proxy?method=PATCH
  I0508 15:45:38.454932 22 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0508 15:45:38.455196 22 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/services/e2e-proxy-test-service/proxy?method=POST
  I0508 15:45:38.457671 22 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0508 15:45:38.457697 22 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/services/e2e-proxy-test-service/proxy?method=PUT
  I0508 15:45:38.460012 22 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0508 15:45:38.460052 22 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/pods/agnhost/proxy?method=GET
  I0508 15:45:38.461274 22 proxy.go:530] http.Client request:GET StatusCode:301
  I0508 15:45:38.461322 22 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/services/e2e-proxy-test-service/proxy?method=GET
  I0508 15:45:38.462824 22 proxy.go:530] http.Client request:GET StatusCode:301
  I0508 15:45:38.462853 22 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/pods/agnhost/proxy?method=HEAD
  I0508 15:45:38.464105 22 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0508 15:45:38.464127 22 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9049/services/e2e-proxy-test-service/proxy?method=HEAD
  I0508 15:45:38.465908 22 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0508 15:45:38.466122 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9049" for this suite. @ 05/08/25 15:45:38.468
• [2.139 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 05/08/25 15:45:38.476
  I0508 15:45:38.477033 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 15:45:38.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:45:38.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:45:38.502
  STEP: creating service multi-endpoint-test in namespace services-5549 @ 05/08/25 15:45:38.505
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5549 to expose endpoints map[] @ 05/08/25 15:45:38.539
  I0508 15:45:38.553301      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:45:38.553483 22 service.go:4613] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0508 15:45:39.404935      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:39.556779      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:45:39.561628 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5549 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5549 @ 05/08/25 15:45:39.561
  E0508 15:45:40.405682      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:41.406649      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5549 to expose endpoints map[pod1:[100]] @ 05/08/25 15:45:41.592
  I0508 15:45:41.596403      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:45:41.600624 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5549 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5549 @ 05/08/25 15:45:41.6
  E0508 15:45:42.406828      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:43.407011      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5549 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/08/25 15:45:43.621
  I0508 15:45:43.626999      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:45:43.629746 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5549 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/08/25 15:45:43.629
  I0508 15:45:43.629974 22 resource.go:361] Creating new exec pod
  E0508 15:45:44.407114      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:45.407220      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:45.651793 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-5549 exec execpod4tml8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0508 15:45:45.785959 22 builder.go:146] stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test (10.43.199.136) 80 port [tcp/http] succeeded!\n"
  I0508 15:45:45.786000 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:45:45.786119 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-5549 exec execpod4tml8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.199.136 80'
  I0508 15:45:45.952714 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.199.136 80\nConnection to 10.43.199.136 80 port [tcp/http] succeeded!\n"
  I0508 15:45:45.952779 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:45:45.952848 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-5549 exec execpod4tml8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0508 15:45:46.080079 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.43.199.136) 81 port [tcp/*] succeeded!\n"
  I0508 15:45:46.080129 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:45:46.080195 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-5549 exec execpod4tml8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.199.136 81'
  I0508 15:45:46.206972 22 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.199.136 81\n+ echo hostName\nConnection to 10.43.199.136 81 port [tcp/*] succeeded!\n"
  I0508 15:45:46.207012 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5549 @ 05/08/25 15:45:46.207
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5549 to expose endpoints map[pod2:[101]] @ 05/08/25 15:45:46.244
  I0508 15:45:46.261871      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:45:46.267674 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5549 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5549 @ 05/08/25 15:45:46.267
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5549 to expose endpoints map[] @ 05/08/25 15:45:46.319
  I0508 15:45:46.329241      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0508 15:45:46.337332 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5549 exposes endpoints map[]
  I0508 15:45:46.393933 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5549" for this suite. @ 05/08/25 15:45:46.4
  E0508 15:45:46.408002      22 retrywatcher.go:169] "Watch failed" err="context canceled"
• [7.947 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:331
  STEP: Creating a kubernetes client @ 05/08/25 15:45:46.423
  I0508 15:45:46.423879 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename sched-pred @ 05/08/25 15:45:46.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:45:46.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:45:46.47
  I0508 15:45:46.478949 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0508 15:45:46.503542 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0508 15:45:46.509213 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-20-200.us-east-2.compute.internal before test
  I0508 15:45:46.518130 22 predicates.go:956] cloud-controller-manager-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:52 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.518414 22 predicates.go:958] 	Container cloud-controller-manager ready: true, restart count 0
  I0508 15:45:46.518520 22 predicates.go:956] etcd-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:24 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.518631 22 predicates.go:958] 	Container etcd ready: true, restart count 0
  I0508 15:45:46.518804 22 predicates.go:956] helm-install-rke2-canal-ftk2n from kube-system started at 2025-05-08 12:45:58 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.518898 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 15:45:46.518993 22 predicates.go:956] helm-install-rke2-coredns-lmmjk from kube-system started at 2025-05-08 12:45:58 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.519084 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 15:45:46.519182 22 predicates.go:956] helm-install-rke2-metrics-server-8m9m2 from kube-system started at 2025-05-08 12:46:24 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.519274 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 15:45:46.519521 22 predicates.go:956] helm-install-rke2-runtimeclasses-pcsjl from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.519623 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 15:45:46.519724 22 predicates.go:956] helm-install-rke2-snapshot-controller-77fsq from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.519949 22 predicates.go:958] 	Container helm ready: false, restart count 2
  I0508 15:45:46.520040 22 predicates.go:956] helm-install-rke2-snapshot-controller-crd-jsh9g from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.520114 22 predicates.go:958] 	Container helm ready: false, restart count 0
  I0508 15:45:46.520167 22 predicates.go:956] kube-apiserver-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:39 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.520244 22 predicates.go:958] 	Container kube-apiserver ready: true, restart count 0
  I0508 15:45:46.520310 22 predicates.go:956] kube-controller-manager-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:50 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.520366 22 predicates.go:958] 	Container kube-controller-manager ready: true, restart count 0
  I0508 15:45:46.520431 22 predicates.go:956] kube-proxy-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:24 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.520492 22 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0508 15:45:46.520592 22 predicates.go:956] kube-scheduler-ip-172-31-20-200.us-east-2.compute.internal from kube-system started at 2025-05-08 12:45:50 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.520665 22 predicates.go:958] 	Container kube-scheduler ready: true, restart count 0
  I0508 15:45:46.520858 22 predicates.go:956] rke2-canal-9hk6c from kube-system started at 2025-05-08 12:46:07 +0000 UTC (2 container statuses recorded)
  I0508 15:45:46.520947 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0508 15:45:46.521003 22 predicates.go:958] 	Container kube-flannel ready: true, restart count 0
  I0508 15:45:46.521159 22 predicates.go:956] rke2-coredns-rke2-coredns-78c6cdfd9-p6ldk from kube-system started at 2025-05-08 12:46:24 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.521282 22 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0508 15:45:46.521362 22 predicates.go:956] rke2-coredns-rke2-coredns-autoscaler-6bb9778ffb-dqqh2 from kube-system started at 2025-05-08 12:46:23 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.521428 22 predicates.go:958] 	Container autoscaler ready: true, restart count 0
  I0508 15:45:46.521567 22 predicates.go:956] rke2-metrics-server-85479b695c-42rvh from kube-system started at 2025-05-08 12:46:44 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.521633 22 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0508 15:45:46.521745 22 predicates.go:956] rke2-snapshot-controller-696989ffdd-bpbd9 from kube-system started at 2025-05-08 12:47:01 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.521826 22 predicates.go:958] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0508 15:45:46.522005 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-e41e32d222f74fe8-8p4wr from sonobuoy started at 2025-05-08 14:10:29 +0000 UTC (2 container statuses recorded)
  I0508 15:45:46.522083 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0508 15:45:46.522199 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0508 15:45:46.522271 22 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-27-218.us-east-2.compute.internal before test
  I0508 15:45:46.530830 22 predicates.go:956] kube-proxy-ip-172-31-27-218.us-east-2.compute.internal from kube-system started at 2025-05-08 12:48:07 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.530865 22 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0508 15:45:46.530879 22 predicates.go:956] rke2-canal-rnbhm from kube-system started at 2025-05-08 12:48:07 +0000 UTC (2 container statuses recorded)
  I0508 15:45:46.530889 22 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0508 15:45:46.530897 22 predicates.go:958] 	Container kube-flannel ready: true, restart count 0
  I0508 15:45:46.530908 22 predicates.go:956] rke2-coredns-rke2-coredns-78c6cdfd9-ddwvf from kube-system started at 2025-05-08 15:41:13 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.530917 22 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0508 15:45:46.530927 22 predicates.go:956] execpod4tml8 from services-5549 started at 2025-05-08 15:45:43 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.530936 22 predicates.go:958] 	Container agnhost-container ready: true, restart count 0
  I0508 15:45:46.530946 22 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-08 14:10:24 +0000 UTC (1 container statuses recorded)
  I0508 15:45:46.530955 22 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0508 15:45:46.530966 22 predicates.go:956] sonobuoy-e2e-job-f43826452bc6480c from sonobuoy started at 2025-05-08 14:10:29 +0000 UTC (2 container statuses recorded)
  I0508 15:45:46.530976 22 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0508 15:45:46.530985 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0508 15:45:46.530995 22 predicates.go:956] sonobuoy-systemd-logs-daemon-set-e41e32d222f74fe8-vfkbf from sonobuoy started at 2025-05-08 14:10:29 +0000 UTC (2 container statuses recorded)
  I0508 15:45:46.531004 22 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0508 15:45:46.531013 22 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-20-200.us-east-2.compute.internal @ 05/08/25 15:45:46.574
  STEP: verifying the node has the label node ip-172-31-27-218.us-east-2.compute.internal @ 05/08/25 15:45:46.618
  I0508 15:45:46.650227 22 predicates.go:371] Pod cloud-controller-manager-ip-172-31-20-200.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-20-200.us-east-2.compute.internal
  I0508 15:45:46.650269 22 predicates.go:371] Pod etcd-ip-172-31-20-200.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-20-200.us-east-2.compute.internal
  I0508 15:45:46.650300 22 predicates.go:371] Pod kube-apiserver-ip-172-31-20-200.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-20-200.us-east-2.compute.internal
  I0508 15:45:46.650310 22 predicates.go:371] Pod kube-controller-manager-ip-172-31-20-200.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-20-200.us-east-2.compute.internal
  I0508 15:45:46.650320 22 predicates.go:371] Pod kube-proxy-ip-172-31-20-200.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-20-200.us-east-2.compute.internal
  I0508 15:45:46.650330 22 predicates.go:371] Pod kube-proxy-ip-172-31-27-218.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-27-218.us-east-2.compute.internal
  I0508 15:45:46.650340 22 predicates.go:371] Pod kube-scheduler-ip-172-31-20-200.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-20-200.us-east-2.compute.internal
  I0508 15:45:46.650350 22 predicates.go:371] Pod rke2-canal-9hk6c requesting resource cpu=250m on Node ip-172-31-20-200.us-east-2.compute.internal
  I0508 15:45:46.650374 22 predicates.go:371] Pod rke2-canal-rnbhm requesting resource cpu=250m on Node ip-172-31-27-218.us-east-2.compute.internal
  I0508 15:45:46.650385 22 predicates.go:371] Pod rke2-coredns-rke2-coredns-78c6cdfd9-ddwvf requesting resource cpu=100m on Node ip-172-31-27-218.us-east-2.compute.internal
  I0508 15:45:46.650394 22 predicates.go:371] Pod rke2-coredns-rke2-coredns-78c6cdfd9-p6ldk requesting resource cpu=100m on Node ip-172-31-20-200.us-east-2.compute.internal
  I0508 15:45:46.650404 22 predicates.go:371] Pod rke2-coredns-rke2-coredns-autoscaler-6bb9778ffb-dqqh2 requesting resource cpu=25m on Node ip-172-31-20-200.us-east-2.compute.internal
  I0508 15:45:46.650414 22 predicates.go:371] Pod rke2-metrics-server-85479b695c-42rvh requesting resource cpu=100m on Node ip-172-31-20-200.us-east-2.compute.internal
  I0508 15:45:46.650424 22 predicates.go:371] Pod rke2-snapshot-controller-696989ffdd-bpbd9 requesting resource cpu=0m on Node ip-172-31-20-200.us-east-2.compute.internal
  I0508 15:45:46.650448 22 predicates.go:371] Pod execpod4tml8 requesting resource cpu=0m on Node ip-172-31-27-218.us-east-2.compute.internal
  I0508 15:45:46.650459 22 predicates.go:371] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-27-218.us-east-2.compute.internal
  I0508 15:45:46.650468 22 predicates.go:371] Pod sonobuoy-e2e-job-f43826452bc6480c requesting resource cpu=0m on Node ip-172-31-27-218.us-east-2.compute.internal
  I0508 15:45:46.650478 22 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-e41e32d222f74fe8-8p4wr requesting resource cpu=0m on Node ip-172-31-20-200.us-east-2.compute.internal
  I0508 15:45:46.650486 22 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-e41e32d222f74fe8-vfkbf requesting resource cpu=0m on Node ip-172-31-27-218.us-east-2.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/08/25 15:45:46.65
  I0508 15:45:46.650546 22 predicates.go:381] Creating a pod which consumes cpu=297m on Node ip-172-31-20-200.us-east-2.compute.internal
  I0508 15:45:46.672985 22 predicates.go:381] Creating a pod which consumes cpu=980m on Node ip-172-31-27-218.us-east-2.compute.internal
  E0508 15:45:47.408685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:48.409748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/08/25 15:45:48.743
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8b28aff2-e5e7-4b27-8cec-ebf57894657f.183d97cf352292a9], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9708/filler-pod-8b28aff2-e5e7-4b27-8cec-ebf57894657f to ip-172-31-20-200.us-east-2.compute.internal] @ 05/08/25 15:45:48.746
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8b28aff2-e5e7-4b27-8cec-ebf57894657f.183d97cf6294101d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 05/08/25 15:45:48.746
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8b28aff2-e5e7-4b27-8cec-ebf57894657f.183d97cf6840d7c4], Reason = [Created], Message = [Created container: filler-pod-8b28aff2-e5e7-4b27-8cec-ebf57894657f] @ 05/08/25 15:45:48.746
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8b28aff2-e5e7-4b27-8cec-ebf57894657f.183d97cf747ceb67], Reason = [Started], Message = [Started container filler-pod-8b28aff2-e5e7-4b27-8cec-ebf57894657f] @ 05/08/25 15:45:48.746
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f749550b-382f-438d-9282-d662fb42c79a.183d97cf37b8d953], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9708/filler-pod-f749550b-382f-438d-9282-d662fb42c79a to ip-172-31-27-218.us-east-2.compute.internal] @ 05/08/25 15:45:48.746
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f749550b-382f-438d-9282-d662fb42c79a.183d97cf664c8389], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 05/08/25 15:45:48.746
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f749550b-382f-438d-9282-d662fb42c79a.183d97cf6bb49383], Reason = [Created], Message = [Created container: filler-pod-f749550b-382f-438d-9282-d662fb42c79a] @ 05/08/25 15:45:48.746
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f749550b-382f-438d-9282-d662fb42c79a.183d97cf738f8dee], Reason = [Started], Message = [Started container filler-pod-f749550b-382f-438d-9282-d662fb42c79a] @ 05/08/25 15:45:48.746
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.183d97cfb012a20f], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 05/08/25 15:45:48.768
  E0508 15:45:49.410091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-20-200.us-east-2.compute.internal @ 05/08/25 15:45:49.761
  STEP: verifying the node doesn't have the label node @ 05/08/25 15:45:49.78
  STEP: removing the label node off the node ip-172-31-27-218.us-east-2.compute.internal @ 05/08/25 15:45:49.788
  STEP: verifying the node doesn't have the label node @ 05/08/25 15:45:49.809
  I0508 15:45:49.818319 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9708" for this suite. @ 05/08/25 15:45:49.821
• [3.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 05/08/25 15:45:49.836
  I0508 15:45:49.836817 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 15:45:49.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:45:49.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:45:49.857
  I0508 15:45:49.870710 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-4442 version'
  I0508 15:45:49.924827 22 builder.go:146] stderr: ""
  I0508 15:45:49.924872 22 builder.go:147] stdout: "Client Version: v1.33.0\nKustomize Version: v5.6.0\nServer Version: v1.33.0+rke2r1\n"
  I0508 15:45:49.925317 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4442" for this suite. @ 05/08/25 15:45:49.928
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/08/25 15:45:49.941
  I0508 15:45:49.941414 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename replicaset @ 05/08/25 15:45:49.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:45:49.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:45:49.966
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/08/25 15:45:49.969
  I0508 15:45:49.994859 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0508 15:45:50.410133      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:51.411117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:52.411242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:53.411986      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:54.413013      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:45:55.069634 22 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/08/25 15:45:55.069
  STEP: getting scale subresource @ 05/08/25 15:45:55.069
  STEP: updating a scale subresource @ 05/08/25 15:45:55.073
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/08/25 15:45:55.091
  STEP: Patch a scale subresource @ 05/08/25 15:45:55.096
  I0508 15:45:55.136901 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-775" for this suite. @ 05/08/25 15:45:55.151
• [5.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/08/25 15:45:55.197
  I0508 15:45:55.197277 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-runtime @ 05/08/25 15:45:55.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:45:55.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:45:55.253
  STEP: create the container @ 05/08/25 15:45:55.264
  I0508 15:45:55.293983      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 05/08/25 15:45:55.294
  E0508 15:45:55.413812      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:56.414202      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:57.414736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:45:58.415218      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/08/25 15:45:59.333
  STEP: the container should be terminated @ 05/08/25 15:45:59.335
  STEP: the termination message should be set @ 05/08/25 15:45:59.335
  I0508 15:45:59.335193 22 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/08/25 15:45:59.335
  I0508 15:45:59.365688 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8719" for this suite. @ 05/08/25 15:45:59.368
• [4.181 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 05/08/25 15:45:59.381
  I0508 15:45:59.381208 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 15:45:59.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:45:59.415
  E0508 15:45:59.415337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:45:59.418
  STEP: creating service in namespace services-6153 @ 05/08/25 15:45:59.421
  STEP: creating service affinity-nodeport-transition in namespace services-6153 @ 05/08/25 15:45:59.421
  I0508 15:45:59.523118 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0508 15:46:00.415461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:01.415645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:46:01.527234 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 8, 15, 45, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 45, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 8, 15, 46, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 8, 15, 45, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-transition-7d57658b6c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0508 15:46:02.415963      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:03.416162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:46:03.544317 22 resource.go:361] Creating new exec pod
  E0508 15:46:04.416820      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:05.416873      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:46:05.569713 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6153 exec execpod-affinityqcrcn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0508 15:46:05.720852 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.43.250.122) 80 port [tcp/http] succeeded!\n"
  I0508 15:46:05.720902 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:46:05.720984 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6153 exec execpod-affinityqcrcn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.250.122 80'
  I0508 15:46:05.888123 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.250.122 80\nConnection to 10.43.250.122 80 port [tcp/http] succeeded!\n"
  I0508 15:46:05.888182 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:46:05.888281 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6153 exec execpod-affinityqcrcn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.200 31185'
  I0508 15:46:06.039274 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.200 31185\nConnection to 172.31.20.200 31185 port [tcp/*] succeeded!\n"
  I0508 15:46:06.039320 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:46:06.039386 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6153 exec execpod-affinityqcrcn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.27.218 31185'
  I0508 15:46:06.164392 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.27.218 31185\nConnection to 172.31.27.218 31185 port [tcp/*] succeeded!\n"
  I0508 15:46:06.164438 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0508 15:46:06.174195 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6153 exec execpod-affinityqcrcn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/ ; done'
  I0508 15:46:06.383805 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n"
  I0508 15:46:06.383858 22 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-5q6jd\naffinity-nodeport-transition-7d57658b6c-ffjdm\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-ffjdm\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-ffjdm\naffinity-nodeport-transition-7d57658b6c-ffjdm\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-ffjdm\naffinity-nodeport-transition-7d57658b6c-5q6jd\naffinity-nodeport-transition-7d57658b6c-ffjdm\naffinity-nodeport-transition-7d57658b6c-ffjdm\naffinity-nodeport-transition-7d57658b6c-ffjdm"
  I0508 15:46:06.383874 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5q6jd
  I0508 15:46:06.383884 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ffjdm
  I0508 15:46:06.383892 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.384023 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ffjdm
  I0508 15:46:06.384097 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.384154 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.384163 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.384172 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ffjdm
  I0508 15:46:06.384180 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ffjdm
  I0508 15:46:06.384187 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.384194 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.384201 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ffjdm
  I0508 15:46:06.384208 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5q6jd
  I0508 15:46:06.384215 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ffjdm
  I0508 15:46:06.384221 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ffjdm
  I0508 15:46:06.384228 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ffjdm
  I0508 15:46:06.396991 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=services-6153 exec execpod-affinityqcrcn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/ ; done'
  E0508 15:46:06.417041      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:46:06.656971 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.20.200:31185/\n"
  I0508 15:46:06.657028 22 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt\naffinity-nodeport-transition-7d57658b6c-t6xdt"
  I0508 15:46:06.657043 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657055 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657063 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657071 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657079 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657091 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657103 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657111 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657123 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657133 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657144 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657154 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657167 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657178 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657189 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657200 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-t6xdt
  I0508 15:46:06.657283 22 service.go:4352] Cleaning up the exec pod
  I0508 15:46:06.789060 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6153" for this suite. @ 05/08/25 15:46:06.793
• [7.463 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:747
  STEP: Creating a kubernetes client @ 05/08/25 15:46:06.843
  I0508 15:46:06.844006 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename sched-preemption @ 05/08/25 15:46:06.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:46:06.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:46:06.963
  I0508 15:46:07.012222 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0508 15:46:07.417132      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:08.417251      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:09.417355      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:10.417488      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:11.418510      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:12.418757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:13.418935      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:14.419249      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:15.419387      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:16.419538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:17.419634      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:18.419876      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:19.420430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:20.420665      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:21.421773      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:22.422029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:23.422704      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:24.422946      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:25.424057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:26.424187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:27.425075      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:28.425178      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:29.426132      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:30.426494      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:31.427250      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:32.427392      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:33.428338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:34.428353      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:35.429258      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:36.429368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:37.429774      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:38.429862      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:39.430531      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:40.430687      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:41.430962      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:42.431189      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:43.431948      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:44.432123      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:45.432255      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:46.432456      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:47.432687      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:48.432896      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:49.433016      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:50.433228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:51.433605      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:52.433904      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:53.434803      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:54.435546      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:55.436575      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:56.436690      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:57.437501      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:58.437702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:46:59.437764      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:00.437887      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:01.438942      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:02.438949      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:03.439340      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:04.439398      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:05.439808      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:06.439934      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:47:07.015189 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/08/25 15:47:07.017
  I0508 15:47:07.017552 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/08/25 15:47:07.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:47:07.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:47:07.044
  STEP: Finding an available node @ 05/08/25 15:47:07.052
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/08/25 15:47:07.052
  E0508 15:47:07.440718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:08.440747      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/08/25 15:47:09.076
  I0508 15:47:09.096602 22 preemption.go:710] found a healthy node: ip-172-31-27-218.us-east-2.compute.internal
  STEP: Adding a custom resource @ 05/08/25 15:47:09.1
  E0508 15:47:09.441734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:10.442470      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:11.442871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:12.443477      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:13.444363      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:14.444804      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:47:15.193533 22 preemption.go:829] pods created so far: [1 1 1]
  I0508 15:47:15.193575 22 preemption.go:830] length of pods created so far: 3
  E0508 15:47:15.445117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:16.445431      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:47:17.207947 22 preemption.go:847] pods created so far: [2 2 1]
  E0508 15:47:17.446349      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:18.447200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:19.447564      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:20.447791      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:21.447909      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:22.448104      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:23.448228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 05/08/25 15:47:24.21
  STEP: Removing a custom resource @ 05/08/25 15:47:24.296
  STEP: Removing a custom resource @ 05/08/25 15:47:24.304
  I0508 15:47:24.312290 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6421" for this suite. @ 05/08/25 15:47:24.314
  I0508 15:47:24.322918 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6557" for this suite. @ 05/08/25 15:47:24.415
• [77.586 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 05/08/25 15:47:24.43
  I0508 15:47:24.430649 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename containers @ 05/08/25 15:47:24.431
  E0508 15:47:24.449274      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:47:24.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:47:24.457
  STEP: Creating a pod to test override arguments @ 05/08/25 15:47:24.46
  E0508 15:47:25.449417      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:26.449752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:27.449950      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:28.450198      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:47:28.493
  I0508 15:47:28.495810 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod client-containers-6b962ebb-fd90-4112-aa25-301d452295cb container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 15:47:28.507
  I0508 15:47:28.537447 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6071" for this suite. @ 05/08/25 15:47:28.54
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 05/08/25 15:47:28.549
  I0508 15:47:28.549436 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/08/25 15:47:28.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:47:28.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:47:28.571
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/08/25 15:47:28.581
  I0508 15:47:28.581721 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:47:29.450331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:47:30.123146 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:47:30.451283      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:31.451412      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:32.451541      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:33.452446      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:34.452488      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:35.452698      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:47:35.658633 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8831" for this suite. @ 05/08/25 15:47:35.663
• [7.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/08/25 15:47:35.674
  I0508 15:47:35.674516 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename events @ 05/08/25 15:47:35.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:47:35.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:47:35.703
  STEP: creating a test event @ 05/08/25 15:47:35.706
  STEP: listing events in all namespaces @ 05/08/25 15:47:35.719
  STEP: listing events in test namespace @ 05/08/25 15:47:35.721
  STEP: listing events with field selection filtering on source @ 05/08/25 15:47:35.723
  STEP: listing events with field selection filtering on reportingController @ 05/08/25 15:47:35.725
  STEP: getting the test event @ 05/08/25 15:47:35.727
  STEP: patching the test event @ 05/08/25 15:47:35.728
  STEP: getting the test event @ 05/08/25 15:47:35.737
  STEP: updating the test event @ 05/08/25 15:47:35.742
  STEP: getting the test event @ 05/08/25 15:47:35.751
  STEP: deleting the test event @ 05/08/25 15:47:35.753
  STEP: listing events in all namespaces @ 05/08/25 15:47:35.761
  STEP: listing events in test namespace @ 05/08/25 15:47:35.764
  I0508 15:47:35.766095 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6699" for this suite. @ 05/08/25 15:47:35.768
• [0.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 05/08/25 15:47:35.778
  I0508 15:47:35.778117 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/08/25 15:47:35.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:47:35.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:47:35.823
  I0508 15:47:35.826915 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:47:36.453028      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:37.453123      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:38.453715      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:47:38.892108 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4143" for this suite. @ 05/08/25 15:47:38.895
• [3.126 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 05/08/25 15:47:38.904
  I0508 15:47:38.904206 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename disruption @ 05/08/25 15:47:38.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:47:38.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:47:38.93
  STEP: creating the pdb @ 05/08/25 15:47:38.933
  STEP: Waiting for the pdb to be processed @ 05/08/25 15:47:38.941
  STEP: updating the pdb @ 05/08/25 15:47:38.957
  STEP: Waiting for the pdb to be processed @ 05/08/25 15:47:38.971
  STEP: patching the pdb @ 05/08/25 15:47:38.979
  STEP: Waiting for the pdb to be processed @ 05/08/25 15:47:39.004
  STEP: Waiting for the pdb to be deleted @ 05/08/25 15:47:39.036
  I0508 15:47:39.039032 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5088" for this suite. @ 05/08/25 15:47:39.041
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 05/08/25 15:47:39.051
  I0508 15:47:39.052025 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename var-expansion @ 05/08/25 15:47:39.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:47:39.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:47:39.091
  STEP: Creating a pod to test substitution in container's args @ 05/08/25 15:47:39.093
  E0508 15:47:39.454054      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:40.454194      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:41.454775      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:42.455033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:47:43.112
  I0508 15:47:43.114166 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod var-expansion-30ee42a6-d4df-41ca-bd7c-f0da16ea7bb2 container dapi-container: <nil>
  STEP: delete the pod @ 05/08/25 15:47:43.121
  I0508 15:47:43.155905 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9011" for this suite. @ 05/08/25 15:47:43.158
• [4.116 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/08/25 15:47:43.168
  I0508 15:47:43.168260 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename subpath @ 05/08/25 15:47:43.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:47:43.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:47:43.189
  STEP: Setting up data @ 05/08/25 15:47:43.193
  STEP: Creating pod pod-subpath-test-downwardapi-t9k7 @ 05/08/25 15:47:43.227
  STEP: Creating a pod to test atomic-volume-subpath @ 05/08/25 15:47:43.227
  E0508 15:47:43.455426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:44.455475      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:45.455906      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:46.456030      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:47.456419      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:48.456538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:49.457296      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:50.457419      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:51.458478      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:52.458599      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:53.459163      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:54.459665      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:55.460016      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:56.460138      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:57.460646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:58.461726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:47:59.462555      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:00.463097      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:01.463732      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:02.464661      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:03.465715      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:04.465760      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:05.466553      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:06.466806      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:48:07.276
  I0508 15:48:07.278147 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-subpath-test-downwardapi-t9k7 container test-container-subpath-downwardapi-t9k7: <nil>
  STEP: delete the pod @ 05/08/25 15:48:07.283
  STEP: Deleting pod pod-subpath-test-downwardapi-t9k7 @ 05/08/25 15:48:07.312
  I0508 15:48:07.312917 22 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-t9k7" in namespace "subpath-8484"
  I0508 15:48:07.319063 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8484" for this suite. @ 05/08/25 15:48:07.322
• [24.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 05/08/25 15:48:07.346
  I0508 15:48:07.347314 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename dns @ 05/08/25 15:48:07.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:48:07.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:48:07.369
  STEP: Creating a test headless service @ 05/08/25 15:48:07.372
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7997.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-7997.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7997.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-7997.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7997.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7997.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7997.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-7997.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7997.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-7997.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 71.69.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.69.71_udp@PTR;check="$$(dig +tcp +noall +answer +search 71.69.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.69.71_tcp@PTR;sleep 1; done
   @ 05/08/25 15:48:07.42
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7997.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7997.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7997.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7997.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7997.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7997.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7997.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7997.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7997.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7997.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 71.69.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.69.71_udp@PTR;check="$$(dig +tcp +noall +answer +search 71.69.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.69.71_tcp@PTR;sleep 1; done
   @ 05/08/25 15:48:07.42
  STEP: creating a pod to probe DNS @ 05/08/25 15:48:07.42
  STEP: submitting the pod to kubernetes @ 05/08/25 15:48:07.42
  E0508 15:48:07.467505      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:08.467618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:09.468645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:10.468680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/08/25 15:48:11.457
  STEP: looking for the results for each expected name from probers @ 05/08/25 15:48:11.459
  I0508 15:48:11.465855 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  E0508 15:48:11.468789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:48:11.468789 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:11.471763 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:11.474496 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:11.487099 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:11.489339 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:11.491947 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:11.494352 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:11.509435 22 dns_common.go:506] Lookups using dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c failed for: [agnhost_udp@dns-test-service.dns-7997.svc.cluster.local agnhost_tcp@dns-test-service.dns-7997.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local jessie_udp@dns-test-service.dns-7997.svc.cluster.local jessie_tcp@dns-test-service.dns-7997.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local]

  I0508 15:48:11.524282 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:48:11.528963 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:48:11.533930 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:48:12.468940      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:13.469049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:14.469802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:15.470129      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:48:16.463497 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:16.466770 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  E0508 15:48:16.470175      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:48:16.470839 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:16.473582 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:16.488819 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:16.492694 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:16.495241 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:16.498429 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:16.510044 22 dns_common.go:506] Lookups using dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c failed for: [agnhost_udp@dns-test-service.dns-7997.svc.cluster.local agnhost_tcp@dns-test-service.dns-7997.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local jessie_udp@dns-test-service.dns-7997.svc.cluster.local jessie_tcp@dns-test-service.dns-7997.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local]

  I0508 15:48:16.514889 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:48:16.519861 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:48:16.524874 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:48:17.470339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:18.470568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:19.470807      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:20.470856      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:48:21.463680 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:21.466440 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:21.469128 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  E0508 15:48:21.471409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:48:21.472418 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:21.485458 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:21.488763 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:21.491666 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:21.494333 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:21.509446 22 dns_common.go:506] Lookups using dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c failed for: [agnhost_udp@dns-test-service.dns-7997.svc.cluster.local agnhost_tcp@dns-test-service.dns-7997.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local jessie_udp@dns-test-service.dns-7997.svc.cluster.local jessie_tcp@dns-test-service.dns-7997.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local]

  I0508 15:48:21.514393 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:48:21.518871 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:48:21.523526 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:48:22.471589      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:23.471825      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:24.471964      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:25.472146      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:48:26.462922 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:26.465552 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:26.468036 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:26.470609 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  E0508 15:48:26.472824      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:48:26.482056 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:26.484232 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:26.486192 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:26.488561 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:26.497832 22 dns_common.go:506] Lookups using dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c failed for: [agnhost_udp@dns-test-service.dns-7997.svc.cluster.local agnhost_tcp@dns-test-service.dns-7997.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local jessie_udp@dns-test-service.dns-7997.svc.cluster.local jessie_tcp@dns-test-service.dns-7997.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local]

  I0508 15:48:26.502267 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:48:26.506735 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:48:26.511537 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:48:27.473625      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:28.473751      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:29.473937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:30.474043      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:48:31.463140 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:31.465699 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:31.468147 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:31.470788 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  E0508 15:48:31.474364      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:48:31.481734 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:31.483868 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:31.485881 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:31.487871 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:31.497834 22 dns_common.go:506] Lookups using dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c failed for: [agnhost_udp@dns-test-service.dns-7997.svc.cluster.local agnhost_tcp@dns-test-service.dns-7997.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local jessie_udp@dns-test-service.dns-7997.svc.cluster.local jessie_tcp@dns-test-service.dns-7997.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local]

  I0508 15:48:31.503716 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:48:31.508519 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:48:31.513633 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:48:32.474563      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:33.474640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:34.474762      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:35.474882      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:48:36.463576 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:36.466528 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:36.469008 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:36.471584 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  E0508 15:48:36.475079      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:48:36.482482 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:36.484808 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:36.486969 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:36.490922 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local from pod dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c: the server could not find the requested resource (get pods dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c)
  I0508 15:48:36.499692 22 dns_common.go:506] Lookups using dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c failed for: [agnhost_udp@dns-test-service.dns-7997.svc.cluster.local agnhost_tcp@dns-test-service.dns-7997.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local jessie_udp@dns-test-service.dns-7997.svc.cluster.local jessie_tcp@dns-test-service.dns-7997.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7997.svc.cluster.local]

  I0508 15:48:36.504169 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:48:36.508831 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:48:36.513516 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:48:37.475229      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:38.476675      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:39.477744      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:40.478019      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:41.478844      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:48:41.497677 22 dns_common.go:546] DNS probes using dns-7997/dns-test-5e6af7ed-840a-4383-ba00-3390cc836e7c succeeded

  STEP: deleting the pod @ 05/08/25 15:48:41.497
  STEP: deleting the test service @ 05/08/25 15:48:41.552
  STEP: deleting the test headless service @ 05/08/25 15:48:41.62
  I0508 15:48:41.648260 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7997" for this suite. @ 05/08/25 15:48:41.661
• [34.325 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 05/08/25 15:48:41.673
  I0508 15:48:41.673132 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:48:41.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:48:41.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:48:41.694
  STEP: Creating configMap with name projected-configmap-test-volume-9a9381be-bae4-4b3a-b9ca-51f21e91a100 @ 05/08/25 15:48:41.697
  STEP: Creating a pod to test consume configMaps @ 05/08/25 15:48:41.71
  E0508 15:48:42.479154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:43.479278      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:44.479989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:45.480178      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:48:45.741
  I0508 15:48:45.743869 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-projected-configmaps-ef878059-040f-441c-b7a3-e20e01b53fdb container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 15:48:45.748
  I0508 15:48:45.777446 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2216" for this suite. @ 05/08/25 15:48:45.78
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/08/25 15:48:45.798
  I0508 15:48:45.798469 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename ingressclass @ 05/08/25 15:48:45.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:48:45.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:48:45.833
  STEP: getting /apis @ 05/08/25 15:48:45.838
  STEP: getting /apis/networking.k8s.io @ 05/08/25 15:48:45.844
  STEP: getting /apis/networking.k8s.iov1 @ 05/08/25 15:48:45.846
  STEP: creating @ 05/08/25 15:48:45.853
  STEP: getting @ 05/08/25 15:48:45.888
  STEP: listing @ 05/08/25 15:48:45.89
  STEP: watching @ 05/08/25 15:48:45.893
  I0508 15:48:45.893310 22 ingressclass.go:348] starting watch
  STEP: patching @ 05/08/25 15:48:45.894
  STEP: updating @ 05/08/25 15:48:45.903
  I0508 15:48:45.912012 22 ingressclass.go:364] waiting for watch events with expected annotations
  I0508 15:48:45.912067 22 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 05/08/25 15:48:45.912
  STEP: deleting a collection @ 05/08/25 15:48:45.924
  I0508 15:48:45.942094 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-3926" for this suite. @ 05/08/25 15:48:45.944
• [0.155 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 05/08/25 15:48:45.954
  I0508 15:48:45.954195 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:48:45.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:48:45.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:48:45.99
  STEP: Creating a pod to test downward API volume plugin @ 05/08/25 15:48:45.993
  E0508 15:48:46.480357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:47.480640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:48.481068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:49.481752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:48:50.02
  I0508 15:48:50.022938 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod downwardapi-volume-ca16b1a0-47c5-4f97-ba84-eba792205860 container client-container: <nil>
  STEP: delete the pod @ 05/08/25 15:48:50.027
  I0508 15:48:50.057084 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4501" for this suite. @ 05/08/25 15:48:50.059
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/08/25 15:48:50.068
  I0508 15:48:50.068209 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:48:50.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:48:50.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:48:50.093
  STEP: Creating projection with secret that has name projected-secret-test-3f422e8d-96f0-4a5d-8133-ae8fcd3fdb5a @ 05/08/25 15:48:50.096
  STEP: Creating a pod to test consume secrets @ 05/08/25 15:48:50.109
  E0508 15:48:50.482843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:51.482959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:52.483300      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:53.483402      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:48:54.128
  I0508 15:48:54.133583 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-projected-secrets-9bcd38db-1a51-4e13-9b51-501fdcedc1bf container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 15:48:54.138
  I0508 15:48:54.166928 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2076" for this suite. @ 05/08/25 15:48:54.169
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/08/25 15:48:54.178
  I0508 15:48:54.178629 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/08/25 15:48:54.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:48:54.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:48:54.219
  STEP: getting /apis @ 05/08/25 15:48:54.221
  STEP: getting /apis/storage.k8s.io @ 05/08/25 15:48:54.224
  STEP: getting /apis/storage.k8s.io/v1 @ 05/08/25 15:48:54.225
  STEP: creating @ 05/08/25 15:48:54.226
  STEP: watching @ 05/08/25 15:48:54.264
  I0508 15:48:54.264326 22 csistoragecapacity.go:143] starting watch
  STEP: getting @ 05/08/25 15:48:54.274
  STEP: listing in namespace @ 05/08/25 15:48:54.276
  STEP: listing across namespaces @ 05/08/25 15:48:54.278
  STEP: patching @ 05/08/25 15:48:54.279
  STEP: updating @ 05/08/25 15:48:54.287
  I0508 15:48:54.295738 22 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0508 15:48:54.295986 22 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/08/25 15:48:54.296
  STEP: deleting a collection @ 05/08/25 15:48:54.307
  I0508 15:48:54.335306 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9542" for this suite. @ 05/08/25 15:48:54.337
• [0.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 05/08/25 15:48:54.352
  I0508 15:48:54.352308 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:48:54.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:48:54.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:48:54.373
  STEP: Setting up server cert @ 05/08/25 15:48:54.416
  E0508 15:48:54.483623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:48:54.797
  STEP: Deploying the webhook pod @ 05/08/25 15:48:54.805
  STEP: Wait for the deployment to be ready @ 05/08/25 15:48:54.827
  I0508 15:48:54.841756 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0508 15:48:55.484148      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:56.484308      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:48:56.848
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:48:56.881
  E0508 15:48:57.485152      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:48:57.882538 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/08/25 15:48:58.029
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/08/25 15:48:58.077
  STEP: Deleting the collection of validation webhooks @ 05/08/25 15:48:58.112
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/08/25 15:48:58.214
  I0508 15:48:58.338002 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1144" for this suite. @ 05/08/25 15:48:58.34
  STEP: Destroying namespace "webhook-markers-261" for this suite. @ 05/08/25 15:48:58.359
• [4.032 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 05/08/25 15:48:58.384
  I0508 15:48:58.384456 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-probe @ 05/08/25 15:48:58.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:48:58.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:48:58.41
  E0508 15:48:58.485707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:48:59.486067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:00.486293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:01.486399      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:02.486595      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:03.486807      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:04.487294      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:05.487420      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:06.488270      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:07.488356      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:08.489260      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:09.489400      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:10.490294      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:11.490416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:12.491227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:13.491436      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:14.491987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:15.492134      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:16.493168      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:17.493450      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:18.494512      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:19.495481      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:20.496156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:21.496293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:49:22.479705 22 container_probe.go:91] Container started at 2025-05-08 15:48:59 +0000 UTC, pod became ready at 2025-05-08 15:49:21 +0000 UTC
  I0508 15:49:22.479857 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4745" for this suite. @ 05/08/25 15:49:22.482
• [24.107 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 05/08/25 15:49:22.491
  I0508 15:49:22.491667 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 15:49:22.492
  E0508 15:49:22.497031      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:49:22.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:49:22.518
  STEP: creating a replication controller @ 05/08/25 15:49:22.521
  I0508 15:49:22.522051 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9805 create -f -'
  I0508 15:49:22.653160 22 builder.go:146] stderr: ""
  I0508 15:49:22.653207 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/08/25 15:49:22.653
  I0508 15:49:22.653295 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9805 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0508 15:49:22.765391 22 builder.go:146] stderr: ""
  I0508 15:49:22.765437 22 builder.go:147] stdout: "update-demo-nautilus-hnptz update-demo-nautilus-kqj68 "
  I0508 15:49:22.765485 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9805 get pods update-demo-nautilus-hnptz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0508 15:49:22.830399 22 builder.go:146] stderr: ""
  I0508 15:49:22.830437 22 builder.go:147] stdout: ""
  I0508 15:49:22.830447 22 kubectl.go:2505] update-demo-nautilus-hnptz is created but not running
  E0508 15:49:23.497747      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:24.497847      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:25.498142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:26.498362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:27.498579      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:49:27.831384 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9805 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0508 15:49:27.923186 22 builder.go:146] stderr: ""
  I0508 15:49:27.923229 22 builder.go:147] stdout: "update-demo-nautilus-hnptz update-demo-nautilus-kqj68 "
  I0508 15:49:27.923269 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9805 get pods update-demo-nautilus-hnptz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0508 15:49:27.987073 22 builder.go:146] stderr: ""
  I0508 15:49:27.987112 22 builder.go:147] stdout: "true"
  I0508 15:49:27.987154 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9805 get pods update-demo-nautilus-hnptz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0508 15:49:28.049217 22 builder.go:146] stderr: ""
  I0508 15:49:28.049259 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0508 15:49:28.049339 22 kubectl.go:2396] validating pod update-demo-nautilus-hnptz
  I0508 15:49:28.055162 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0508 15:49:28.055232 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0508 15:49:28.055243 22 kubectl.go:2523] update-demo-nautilus-hnptz is verified up and running
  I0508 15:49:28.055284 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9805 get pods update-demo-nautilus-kqj68 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0508 15:49:28.113050 22 builder.go:146] stderr: ""
  I0508 15:49:28.113091 22 builder.go:147] stdout: "true"
  I0508 15:49:28.113133 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9805 get pods update-demo-nautilus-kqj68 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0508 15:49:28.168701 22 builder.go:146] stderr: ""
  I0508 15:49:28.168739 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0508 15:49:28.168751 22 kubectl.go:2396] validating pod update-demo-nautilus-kqj68
  I0508 15:49:28.174430 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0508 15:49:28.174483 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0508 15:49:28.174498 22 kubectl.go:2523] update-demo-nautilus-kqj68 is verified up and running
  STEP: using delete to clean up resources @ 05/08/25 15:49:28.174
  I0508 15:49:28.174759 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9805 delete --grace-period=0 --force -f -'
  I0508 15:49:28.247873 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0508 15:49:28.247922 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0508 15:49:28.247982 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9805 get rc,svc -l name=update-demo --no-headers'
  I0508 15:49:28.341162 22 builder.go:146] stderr: "No resources found in kubectl-9805 namespace.\n"
  I0508 15:49:28.341209 22 builder.go:147] stdout: ""
  I0508 15:49:28.341283 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-9805 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0508 15:49:28.451186 22 builder.go:146] stderr: ""
  I0508 15:49:28.451236 22 builder.go:147] stdout: ""
  I0508 15:49:28.451355 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9805" for this suite. @ 05/08/25 15:49:28.454
• [5.976 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 05/08/25 15:49:28.467
  I0508 15:49:28.467300 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/08/25 15:49:28.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:49:28.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:49:28.492
  I0508 15:49:28.495589 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  E0508 15:49:28.499196      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:29.500313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/08/25 15:49:29.947
  I0508 15:49:29.947107 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-6973 --namespace=crd-publish-openapi-6973 create -f -'
  I0508 15:49:30.057180 22 builder.go:146] stderr: ""
  I0508 15:49:30.057230 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3226-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0508 15:49:30.057364 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-6973 --namespace=crd-publish-openapi-6973 delete e2e-test-crd-publish-openapi-3226-crds test-cr'
  I0508 15:49:30.135465 22 builder.go:146] stderr: ""
  I0508 15:49:30.135504 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3226-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0508 15:49:30.135678 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-6973 --namespace=crd-publish-openapi-6973 apply -f -'
  I0508 15:49:30.208586 22 builder.go:146] stderr: ""
  I0508 15:49:30.208627 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3226-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0508 15:49:30.208738 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-6973 --namespace=crd-publish-openapi-6973 delete e2e-test-crd-publish-openapi-3226-crds test-cr'
  I0508 15:49:30.277842 22 builder.go:146] stderr: ""
  I0508 15:49:30.277884 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3226-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/08/25 15:49:30.277
  I0508 15:49:30.278146 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=crd-publish-openapi-6973 explain e2e-test-crd-publish-openapi-3226-crds'
  I0508 15:49:30.335781 22 builder.go:146] stderr: ""
  I0508 15:49:30.335827 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3226-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0508 15:49:30.500379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:31.500996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:49:31.651465 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6973" for this suite. @ 05/08/25 15:49:31.656
• [3.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 05/08/25 15:49:31.665
  I0508 15:49:31.665696 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/08/25 15:49:31.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:49:31.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:49:31.692
  STEP: create the container to handle the HTTPGet hook request. @ 05/08/25 15:49:31.756
  E0508 15:49:32.501972      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:33.502222      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/08/25 15:49:33.786
  E0508 15:49:34.502368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:35.502499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/08/25 15:49:35.803
  E0508 15:49:36.502643      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:37.502896      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:38.503060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:39.503227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/08/25 15:49:39.831
  I0508 15:49:39.848966 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4174" for this suite. @ 05/08/25 15:49:39.853
• [8.197 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:125
  STEP: Creating a kubernetes client @ 05/08/25 15:49:39.862
  I0508 15:49:39.862917 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename sched-preemption @ 05/08/25 15:49:39.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:49:39.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:49:39.888
  I0508 15:49:39.928797 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0508 15:49:40.504007      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:41.504038      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:42.504184      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:43.504297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:44.504487      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:45.504656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:46.504794      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:47.504867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:48.504976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:49.505197      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:50.506216      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:51.506436      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:52.507499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:53.507648      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:54.508534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:55.508754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:56.509821      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:57.509851      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:58.509923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:49:59.510221      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:00.511256      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:01.511583      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:02.512632      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:03.512669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:04.512833      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:05.513065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:06.513196      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:07.513326      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:08.513753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:09.514013      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:10.514124      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:11.514315      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:12.514456      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:13.514565      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:14.515561      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:15.515668      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:16.516192      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:17.516371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:18.516699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:19.516809      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:20.516912      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:21.516989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:22.517125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:23.517222      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:24.518249      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:25.518368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:26.519332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:27.519436      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:28.519689      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:29.520365      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:30.520541      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:31.520651      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:32.521057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:33.521264      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:34.521749      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:35.521877      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:36.521993      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:37.522909      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:38.523702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:39.523896      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:50:39.932382 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/08/25 15:50:39.934
  STEP: Adding a custom resource @ 05/08/25 15:50:39.934
  I0508 15:50:39.971608 22 preemption.go:169] Created pod: pod0-0-sched-preemption-low-priority
  I0508 15:50:40.005490 22 preemption.go:169] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 05/08/25 15:50:40.005
  I0508 15:50:40.081113 22 preemption.go:169] Created pod: pod1-0-sched-preemption-medium-priority
  I0508 15:50:40.109144 22 preemption.go:169] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/08/25 15:50:40.109
  E0508 15:50:40.524636      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:41.524684      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/08/25 15:50:42.125
  E0508 15:50:42.525462      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:43.525542      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:44.526283      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:45.526509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 05/08/25 15:50:46.182
  STEP: Removing a custom resource @ 05/08/25 15:50:46.204
  I0508 15:50:46.229630 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9347" for this suite. @ 05/08/25 15:50:46.235
• [66.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 05/08/25 15:50:46.245
  I0508 15:50:46.245285 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename services @ 05/08/25 15:50:46.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:50:46.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:50:46.276
  STEP: creating a Service @ 05/08/25 15:50:46.281
  STEP: watching for the Service to be added @ 05/08/25 15:50:46.318
  I0508 15:50:46.321713 22 service.go:3456] Found Service test-service-cz5l8 in namespace services-381 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32242}]
  I0508 15:50:46.322092 22 service.go:3463] Service test-service-cz5l8 created
  STEP: Getting /status @ 05/08/25 15:50:46.322
  I0508 15:50:46.335721 22 service.go:3474] Service test-service-cz5l8 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/08/25 15:50:46.335
  STEP: watching for the Service to be patched @ 05/08/25 15:50:46.348
  I0508 15:50:46.349810 22 service.go:3497] observed Service test-service-cz5l8 in namespace services-381 with annotations: map[] & LoadBalancer: {[]}
  I0508 15:50:46.349846 22 service.go:3500] Found Service test-service-cz5l8 in namespace services-381 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc001455d60 []}]}
  I0508 15:50:46.349858 22 service.go:3507] Service test-service-cz5l8 has service status patched
  STEP: updating the ServiceStatus @ 05/08/25 15:50:46.349
  I0508 15:50:46.361891 22 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/08/25 15:50:46.361
  I0508 15:50:46.363496 22 service.go:3538] Observed Service test-service-cz5l8 in namespace services-381 with annotations: map[] & Conditions: []
  I0508 15:50:46.363539 22 service.go:3549] Observed Service test-service-cz5l8 in namespace services-381 with annotations: map[patchedstatus:true] & Conditions: []
  I0508 15:50:46.363577 22 service.go:3545] Found Service test-service-cz5l8 in namespace services-381 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0508 15:50:46.363590 22 service.go:3556] Service test-service-cz5l8 has service status updated
  STEP: patching the service @ 05/08/25 15:50:46.363
  STEP: watching for the Service to be patched @ 05/08/25 15:50:46.384
  I0508 15:50:46.386986 22 service.go:3579] observed Service test-service-cz5l8 in namespace services-381 with labels: map[test-service-static:true]
  I0508 15:50:46.387038 22 service.go:3579] observed Service test-service-cz5l8 in namespace services-381 with labels: map[test-service-static:true]
  I0508 15:50:46.387065 22 service.go:3579] observed Service test-service-cz5l8 in namespace services-381 with labels: map[test-service-static:true]
  I0508 15:50:46.387154 22 service.go:3582] Found Service test-service-cz5l8 in namespace services-381 with labels: map[test-service:patched test-service-static:true]
  I0508 15:50:46.387167 22 service.go:3589] Service test-service-cz5l8 patched
  STEP: deleting the service @ 05/08/25 15:50:46.387
  STEP: watching for the Service to be deleted @ 05/08/25 15:50:46.428
  I0508 15:50:46.429623 22 service.go:3613] Observed event: ADDED
  I0508 15:50:46.429659 22 service.go:3613] Observed event: MODIFIED
  I0508 15:50:46.429674 22 service.go:3613] Observed event: MODIFIED
  I0508 15:50:46.429720 22 service.go:3613] Observed event: MODIFIED
  I0508 15:50:46.429903 22 service.go:3609] Found Service test-service-cz5l8 in namespace services-381 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0508 15:50:46.429936 22 service.go:3618] Service test-service-cz5l8 deleted
  I0508 15:50:46.430088 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-381" for this suite. @ 05/08/25 15:50:46.432
• [0.196 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 05/08/25 15:50:46.442
  I0508 15:50:46.442231 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubelet-test @ 05/08/25 15:50:46.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:50:46.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:50:46.464
  STEP: Waiting for pod completion @ 05/08/25 15:50:46.483
  E0508 15:50:46.527151      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:47.527257      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:48.527657      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:49.527856      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:50:50.512206 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2619" for this suite. @ 05/08/25 15:50:50.515
• [4.081 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 05/08/25 15:50:50.523
  I0508 15:50:50.523738 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename statefulset @ 05/08/25 15:50:50.524
  E0508 15:50:50.528415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:50:50.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:50:50.556
  STEP: Creating service test in namespace statefulset-9263 @ 05/08/25 15:50:50.558
  STEP: Creating a new StatefulSet @ 05/08/25 15:50:50.566
  I0508 15:50:50.592790 22 wait.go:44] Found 0 stateful pods, waiting for 3
  E0508 15:50:51.528753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:52.528879      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:53.528971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:54.529757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:55.529881      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:56.530224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:57.530492      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:58.530802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:50:59.530918      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:00.531133      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:51:00.589944 22 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0508 15:51:00.589985 22 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0508 15:51:00.589994 22 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0508 15:51:00.597187 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-9263 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0508 15:51:00.727908 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0508 15:51:00.727949 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0508 15:51:00.727962 22 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0508 15:51:01.531563      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:02.531449      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:03.531520      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:04.531887      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:05.532259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:06.532330      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:07.532470      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:08.532659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:09.532725      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:10.532957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/08/25 15:51:10.733
  I0508 15:51:10.744090 22 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 05/08/25 15:51:10.744
  E0508 15:51:11.533072      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:12.533347      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:13.533510      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:14.533709      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:15.533791      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:16.533965      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:17.534095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:18.534218      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:19.534360      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:20.534598      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 05/08/25 15:51:20.749
  I0508 15:51:20.752183 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-9263 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0508 15:51:20.906137 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0508 15:51:20.906181 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0508 15:51:20.906193 22 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0508 15:51:21.535499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:22.535780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:23.535920      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:24.536116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:25.536209      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:26.536452      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:27.536653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:28.536825      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:29.537743      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:30.537941      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 05/08/25 15:51:30.915
  I0508 15:51:30.915854 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-9263 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0508 15:51:31.064392 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0508 15:51:31.064454 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0508 15:51:31.064467 22 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0508 15:51:31.538867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:32.539003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:33.539126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:34.539245      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:35.539387      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:36.539584      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:37.539809      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:38.539979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:39.540130      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:40.540620      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:51:41.080248 22 statefulset.go:2542] Updating stateful set ss2
  E0508 15:51:41.540809      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:42.541743      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:43.541876      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:44.542077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:45.542207      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:46.542360      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:47.542499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:48.542612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:49.542961      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:50.543186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 05/08/25 15:51:51.085
  I0508 15:51:51.089049 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=statefulset-9263 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0508 15:51:51.216427 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0508 15:51:51.216475 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0508 15:51:51.216487 22 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0508 15:51:51.543344      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:52.543452      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:53.545573      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:54.545780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:55.546002      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:56.546210      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:57.546459      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:58.546750      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:51:59.546848      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:00.546997      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:52:01.357212 22 statefulset.go:138] Deleting all statefulset in ns statefulset-9263
  I0508 15:52:01.369659 22 rest.go:153] Scaling statefulset ss2 to 0
  E0508 15:52:01.548766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:02.548987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:03.549134      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:04.549760      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:05.549914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:06.550154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:07.550358      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:08.550500      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:09.550628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:10.550935      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:52:11.401634 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0508 15:52:11.403774 22 rest.go:91] Deleting statefulset ss2
  I0508 15:52:11.431437 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9263" for this suite. @ 05/08/25 15:52:11.437
• [80.936 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 05/08/25 15:52:11.459
  I0508 15:52:11.459611 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename fake-node @ 05/08/25 15:52:11.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:52:11.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:52:11.481
  STEP: Create "e2e-fake-node-ffb55" @ 05/08/25 15:52:11.485
  STEP: Getting "e2e-fake-node-ffb55" @ 05/08/25 15:52:11.493
  STEP: Patching "e2e-fake-node-ffb55" @ 05/08/25 15:52:11.503
  STEP: Listing nodes with LabelSelector "e2e-fake-node-ffb55=patched" @ 05/08/25 15:52:11.534
  STEP: Updating "e2e-fake-node-ffb55" @ 05/08/25 15:52:11.547
  E0508 15:52:11.551173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete "e2e-fake-node-ffb55" @ 05/08/25 15:52:11.588
  STEP: Confirm deletion of "e2e-fake-node-ffb55" @ 05/08/25 15:52:11.603
  I0508 15:52:11.611121 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-5812" for this suite. @ 05/08/25 15:52:11.615
• [0.170 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 05/08/25 15:52:11.629
  I0508 15:52:11.629435 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename dns @ 05/08/25 15:52:11.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:52:11.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:52:11.657
  STEP: Creating a test headless service @ 05/08/25 15:52:11.661
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3297.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-3297.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3297.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local;sleep 1; done
   @ 05/08/25 15:52:11.67
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3297.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3297.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3297.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3297.svc.cluster.local;sleep 1; done
   @ 05/08/25 15:52:11.67
  STEP: creating a pod to probe DNS @ 05/08/25 15:52:11.67
  STEP: submitting the pod to kubernetes @ 05/08/25 15:52:11.671
  E0508 15:52:12.552050      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:13.552170      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/08/25 15:52:13.716
  STEP: looking for the results for each expected name from probers @ 05/08/25 15:52:13.719
  I0508 15:52:13.725367 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:13.728053 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:13.731241 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:13.733945 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:13.736421 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:13.738847 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:13.741300 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:13.743710 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:13.743745 22 dns_common.go:506] Lookups using dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3297.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local jessie_udp@dns-test-service-2.dns-3297.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3297.svc.cluster.local]

  I0508 15:52:13.748291 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:52:13.752837 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:52:13.756898 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:52:14.553010      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:15.553255      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:16.553402      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:17.553678      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:18.553962      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:52:18.723737 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:18.726798 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:18.732026 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:18.738558 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:18.741828 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:18.744706 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:18.747443 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:18.753266 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:18.753670 22 dns_common.go:506] Lookups using dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3297.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local jessie_udp@dns-test-service-2.dns-3297.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3297.svc.cluster.local]

  I0508 15:52:18.760994 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:52:18.767517 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:52:18.773722 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:52:19.554106      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:20.554316      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:21.554467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:22.554582      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:23.554872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:52:23.723410 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:23.726062 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:23.728441 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:23.730613 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:23.733876 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:23.735970 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:23.738303 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:23.740380 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:23.740408 22 dns_common.go:506] Lookups using dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3297.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local jessie_udp@dns-test-service-2.dns-3297.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3297.svc.cluster.local]

  I0508 15:52:23.744818 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:52:23.749261 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:52:23.753720 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:52:24.554906      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:25.555073      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:26.555167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:27.555308      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:28.555632      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:52:28.722556 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:28.725508 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:28.728700 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:28.732033 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:28.734854 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:28.737339 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:28.740216 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:28.742832 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:28.742873 22 dns_common.go:506] Lookups using dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3297.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local jessie_udp@dns-test-service-2.dns-3297.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3297.svc.cluster.local]

  I0508 15:52:28.747747 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:52:28.752402 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:52:28.756897 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:52:29.555980      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:30.556181      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:31.556298      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:32.556716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:33.556848      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:52:33.723549 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:33.726292 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:33.728726 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:33.731044 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:33.733654 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:33.736105 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:33.738889 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:33.741639 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:33.741667 22 dns_common.go:506] Lookups using dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3297.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local jessie_udp@dns-test-service-2.dns-3297.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3297.svc.cluster.local]

  I0508 15:52:33.748714 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:52:33.754336 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:52:33.759728 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:52:34.557761      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:35.557896      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:36.557996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:37.558212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:38.558331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:52:38.722424 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:38.724858 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:38.727318 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:38.729652 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:38.732016 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:38.734230 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:38.736563 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:38.738627 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:38.738761 22 dns_common.go:506] Lookups using dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3297.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local jessie_udp@dns-test-service-2.dns-3297.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3297.svc.cluster.local]

  I0508 15:52:38.742954 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:52:38.746916 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:52:38.750914 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:52:39.558521      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:40.558796      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:41.558869      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:42.559083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:43.559245      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:52:43.722144 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:43.729836 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local from pod dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38: the server could not find the requested resource (get pods dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38)
  I0508 15:52:43.738039 22 dns_common.go:506] Lookups using dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3297.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3297.svc.cluster.local]

  I0508 15:52:43.744215 22 dns_common.go:514] Pod client logs for webserver: 
  I0508 15:52:43.748325 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0508 15:52:43.752440 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0508 15:52:44.559586      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:45.559743      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:46.560011      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:47.560196      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:48.560340      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:52:48.738402 22 dns_common.go:546] DNS probes using dns-3297/dns-test-5b1e0ff3-8c30-4657-bb61-2f155a90dd38 succeeded

  STEP: deleting the pod @ 05/08/25 15:52:48.738
  STEP: deleting the test headless service @ 05/08/25 15:52:48.775
  I0508 15:52:48.808921 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3297" for this suite. @ 05/08/25 15:52:48.823
• [37.221 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/08/25 15:52:48.851
  I0508 15:52:48.851035 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename secrets @ 05/08/25 15:52:48.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:52:48.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:52:48.877
  STEP: Creating secret with name secret-test-map-d338ac32-40a4-4e5a-b958-399907e1e2a0 @ 05/08/25 15:52:48.882
  STEP: Creating a pod to test consume secrets @ 05/08/25 15:52:48.891
  E0508 15:52:49.560723      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:50.560774      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:51.561700      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:52.561920      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:52:52.915
  I0508 15:52:52.917665 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-secrets-d744aae1-cb68-4e08-acc7-b7c3a13787bd container secret-volume-test: <nil>
  STEP: delete the pod @ 05/08/25 15:52:52.929
  I0508 15:52:52.953630 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1513" for this suite. @ 05/08/25 15:52:52.956
• [4.120 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 05/08/25 15:52:52.971
  I0508 15:52:52.971883 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename projected @ 05/08/25 15:52:52.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:52:52.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:52:52.994
  STEP: Creating configMap with name projected-configmap-test-volume-map-f2ea3d13-a5f8-4f81-96c8-9198f3012e10 @ 05/08/25 15:52:53.001
  STEP: Creating a pod to test consume configMaps @ 05/08/25 15:52:53.009
  E0508 15:52:53.564651      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:54.564885      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:55.565734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:56.565843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/08/25 15:52:57.03
  I0508 15:52:57.033119 22 output.go:207] Trying to get logs from node ip-172-31-27-218.us-east-2.compute.internal pod pod-projected-configmaps-f5730fb4-4f8f-4ae6-857f-30036fdd68d7 container agnhost-container: <nil>
  STEP: delete the pod @ 05/08/25 15:52:57.038
  I0508 15:52:57.068917 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5627" for this suite. @ 05/08/25 15:52:57.071
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 05/08/25 15:52:57.087
  I0508 15:52:57.087039 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename webhook @ 05/08/25 15:52:57.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:52:57.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:52:57.12
  STEP: Setting up server cert @ 05/08/25 15:52:57.161
  E0508 15:52:57.565956      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/08/25 15:52:57.706
  STEP: Deploying the webhook pod @ 05/08/25 15:52:57.72
  STEP: Wait for the deployment to be ready @ 05/08/25 15:52:57.749
  I0508 15:52:57.755774 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0508 15:52:58.566034      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:52:59.566145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/08/25 15:52:59.763
  STEP: Verifying the service has paired with the endpoint @ 05/08/25 15:52:59.799
  E0508 15:53:00.566213      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:53:00.800622 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/08/25 15:53:00.805
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/08/25 15:53:00.832
  STEP: Creating a configMap that should not be mutated @ 05/08/25 15:53:00.846
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/08/25 15:53:00.869
  STEP: Creating a configMap that should be mutated @ 05/08/25 15:53:00.884
  I0508 15:53:01.014630 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8465" for this suite. @ 05/08/25 15:53:01.032
  STEP: Destroying namespace "webhook-markers-6116" for this suite. @ 05/08/25 15:53:01.06
• [3.983 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 05/08/25 15:53:01.071
  I0508 15:53:01.072077 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename kubectl @ 05/08/25 15:53:01.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:53:01.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:53:01.119
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/08/25 15:53:01.123
  I0508 15:53:01.123955 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5515 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0508 15:53:01.235963 22 builder.go:146] stderr: ""
  I0508 15:53:01.236011 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/08/25 15:53:01.236
  I0508 15:53:01.243467 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-769881633 --namespace=kubectl-5515 delete pods e2e-test-httpd-pod'
  E0508 15:53:01.567068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0508 15:53:02.453340 22 builder.go:146] stderr: ""
  I0508 15:53:02.453377 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0508 15:53:02.453470 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5515" for this suite. @ 05/08/25 15:53:02.457
• [1.395 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 05/08/25 15:53:02.466
  I0508 15:53:02.466909 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-769881633
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/08/25 15:53:02.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/08/25 15:53:02.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/08/25 15:53:02.49
  STEP: creating a target pod @ 05/08/25 15:53:02.495
  E0508 15:53:02.567535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:53:03.567669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/08/25 15:53:04.536
  E0508 15:53:04.568728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:53:05.568940      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:53:06.570351      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:53:07.570461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0508 15:53:08.571025      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 05/08/25 15:53:08.572
  STEP: checking pod container endpoints @ 05/08/25 15:53:08.574
  I0508 15:53:08.574773 22 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5740 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0508 15:53:08.574796 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0508 15:53:08.575016 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-5740/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0508 15:53:08.645792 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0508 15:53:08.645839 22 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/08/25 15:53:08.651
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/08/25 15:53:08.654
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/08/25 15:53:08.67
  I0508 15:53:08.686559 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5740" for this suite. @ 05/08/25 15:53:08.699
• [6.242 seconds]
------------------------------
SSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0508 15:53:08.709121 22 suites.go:34] Running AfterSuite actions on node 1
  I0508 15:53:08.709145 22 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.054 seconds]
------------------------------

Ran 419 of 6731 Specs in 6144.499 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h42m26.272509818s
Test Suite Passed
