  I0801 01:30:47.404320      23 e2e.go:109] Starting e2e run "76f7947d-4280-45a5-99d3-e8336dd2b590" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1754011845 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0801 01:30:47.891854 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:30:47.899541 23 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0801 01:30:48.173973 23 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0801 01:30:48.177418 23 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'svclb-traefik-f3709a6a' (0 seconds elapsed)
  I0801 01:30:48.177593 23 e2e.go:245] e2e test version: v1.33.3
  I0801 01:30:48.179354 23 e2e.go:254] kube-apiserver version: v1.33.3+k3s1
  I0801 01:30:48.179614 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:30:48.184631 23 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.293 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 08/01/25 01:30:48.571
  I0801 01:30:48.571430 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename cronjob @ 08/01/25 01:30:48.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:30:49.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:30:49.407
  STEP: Creating a cronjob @ 08/01/25 01:30:49.418
  STEP: creating @ 08/01/25 01:30:49.418
  STEP: getting @ 08/01/25 01:30:49.698
  STEP: listing @ 08/01/25 01:30:49.701
  STEP: watching @ 08/01/25 01:30:49.705
  I0801 01:30:49.705044 23 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 08/01/25 01:30:49.709
  STEP: cluster-wide watching @ 08/01/25 01:30:49.711
  I0801 01:30:49.711563 23 cronjob.go:407] starting watch
  STEP: patching @ 08/01/25 01:30:49.713
  STEP: updating @ 08/01/25 01:30:49.745
  I0801 01:30:50.152410 23 cronjob.go:431] waiting for watch events with expected annotations
  I0801 01:30:50.152471 23 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 08/01/25 01:30:50.152
  STEP: updating /status @ 08/01/25 01:30:50.739
  STEP: get /status @ 08/01/25 01:30:50.807
  STEP: deleting @ 08/01/25 01:30:50.815
  STEP: deleting a collection @ 08/01/25 01:30:51.255
  I0801 01:30:51.609108 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-759" for this suite. @ 08/01/25 01:30:51.613
â€¢ [3.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 08/01/25 01:30:51.848
  I0801 01:30:51.848228 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 01:30:51.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:30:52.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:30:52.426
  STEP: Setting up server cert @ 08/01/25 01:30:53.089
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 01:30:53.348
  STEP: Deploying the webhook pod @ 08/01/25 01:30:53.636
  STEP: Wait for the deployment to be ready @ 08/01/25 01:30:54.073
  I0801 01:30:54.417186 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0801 01:30:56.496435 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:30:58.852918 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:00.509398 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:02.570148 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:04.581002 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:06.624930 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:08.546985 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:10.499577 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:12.539281 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:14.503819 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:16.509131 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:18.501420 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:20.501561 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:22.538512 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:24.516659 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:26.640686 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:28.728906 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:30.530427 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:31:32.501645 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 30, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 30, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 08/01/25 01:31:34.506
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 01:31:34.622
  I0801 01:31:35.623382 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 08/01/25 01:31:35.629
  STEP: create the configmap with a random name @ 08/01/25 01:31:35.705
  STEP: verify the configmap is mutated @ 08/01/25 01:31:35.761
  STEP: create the configmap with 'skip-me' name @ 08/01/25 01:31:35.761
  I0801 01:31:35.992986 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2533" for this suite. @ 08/01/25 01:31:36.008
  STEP: Destroying namespace "webhook-markers-5942" for this suite. @ 08/01/25 01:31:36.03
â€¢ [44.231 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 08/01/25 01:31:36.079
  I0801 01:31:36.079461 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename svcaccounts @ 08/01/25 01:31:36.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:31:36.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:31:36.153
  STEP: Creating ServiceAccount "e2e-sa-whgcz"  @ 08/01/25 01:31:36.179
  I0801 01:31:36.233932 23 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-whgcz"  @ 08/01/25 01:31:36.234
  I0801 01:31:36.255242 23 service_accounts.go:867] AutomountServiceAccountToken: true
  I0801 01:31:36.255675 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2087" for this suite. @ 08/01/25 01:31:36.277
â€¢ [0.217 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 08/01/25 01:31:36.298
  I0801 01:31:36.298922 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pods @ 08/01/25 01:31:36.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:31:36.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:31:36.431
  STEP: creating the pod @ 08/01/25 01:31:36.469
  STEP: setting up watch @ 08/01/25 01:31:36.47
  STEP: submitting the pod to kubernetes @ 08/01/25 01:31:36.603
  STEP: verifying the pod is in kubernetes @ 08/01/25 01:31:36.652
  STEP: verifying pod creation was observed @ 08/01/25 01:31:36.673
  STEP: deleting the pod gracefully @ 08/01/25 01:31:40.727
  STEP: verifying pod deletion was observed @ 08/01/25 01:31:40.741
  I0801 01:31:42.940659 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9689" for this suite. @ 08/01/25 01:31:42.957
â€¢ [6.691 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 08/01/25 01:31:42.99
  I0801 01:31:42.990129 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename gc @ 08/01/25 01:31:42.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:31:43.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:31:43.032
  I0801 01:31:43.122065 23 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"c8eda57a-47b2-487d-841b-a2961828e26d", Controller:(*bool)(0xc000ed7696), BlockOwnerDeletion:(*bool)(0xc000ed7697)}}
  I0801 01:31:43.160147 23 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"2d69b420-00d6-435e-a74a-d79e1c8977bb", Controller:(*bool)(0xc000ed782e), BlockOwnerDeletion:(*bool)(0xc000ed782f)}}
  I0801 01:31:43.206145 23 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"1bc27d59-8561-44bd-aae1-1ab4faa4fdd8", Controller:(*bool)(0xc000ed79be), BlockOwnerDeletion:(*bool)(0xc000ed79bf)}}
  I0801 01:31:48.252870 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7168" for this suite. @ 08/01/25 01:31:48.256
â€¢ [5.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 08/01/25 01:31:48.268
  I0801 01:31:48.268344 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename statefulset @ 08/01/25 01:31:48.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:31:48.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:31:48.34
  STEP: Creating service test in namespace statefulset-7504 @ 08/01/25 01:31:48.396
  STEP: Looking for a node to schedule stateful set and pod @ 08/01/25 01:31:48.415
  STEP: Creating pod with conflicting port in namespace statefulset-7504 @ 08/01/25 01:31:48.419
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7504 @ 08/01/25 01:31:48.471
  STEP: Creating statefulset with conflicting port in namespace statefulset-7504 @ 08/01/25 01:32:00.805
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7504 @ 08/01/25 01:32:00.838
  I0801 01:32:00.965853 23 statefulset.go:884] Observed stateful pod in namespace: statefulset-7504, name: ss-0, uid: 27c430bd-db5a-44c1-b39c-4617ef83ffa7, status phase: Pending. Waiting for statefulset controller to delete.
  I0801 01:32:01.136736 23 statefulset.go:884] Observed stateful pod in namespace: statefulset-7504, name: ss-0, uid: 27c430bd-db5a-44c1-b39c-4617ef83ffa7, status phase: Failed. Waiting for statefulset controller to delete.
  I0801 01:32:01.162992 23 statefulset.go:884] Observed stateful pod in namespace: statefulset-7504, name: ss-0, uid: 27c430bd-db5a-44c1-b39c-4617ef83ffa7, status phase: Failed. Waiting for statefulset controller to delete.
  I0801 01:32:01.173156 23 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-7504
  STEP: Removing pod with conflicting port in namespace statefulset-7504 @ 08/01/25 01:32:01.173
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7504 and will be in running state @ 08/01/25 01:32:01.211
  I0801 01:32:05.640099 23 statefulset.go:138] Deleting all statefulset in ns statefulset-7504
  I0801 01:32:05.648804 23 rest.go:153] Scaling statefulset ss to 0
  I0801 01:32:16.064894 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0801 01:32:16.067840 23 rest.go:91] Deleting statefulset ss
  I0801 01:32:16.122878 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7504" for this suite. @ 08/01/25 01:32:16.182
â€¢ [27.933 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 08/01/25 01:32:16.201
  I0801 01:32:16.201670 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 01:32:16.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:32:16.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:32:16.256
  STEP: creating the pod @ 08/01/25 01:32:16.265
  I0801 01:32:16.265600 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-6936 create -f -'
  I0801 01:32:16.798376 23 builder.go:146] stderr: ""
  I0801 01:32:16.798436 23 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 08/01/25 01:32:20.846
  I0801 01:32:20.846355 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-6936 label pods pause testing-label=testing-label-value'
  I0801 01:32:21.012204 23 builder.go:146] stderr: ""
  I0801 01:32:21.012261 23 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 08/01/25 01:32:21.012
  I0801 01:32:21.012353 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-6936 get pod pause -L testing-label'
  I0801 01:32:21.283788 23 builder.go:146] stderr: ""
  I0801 01:32:21.284655 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          5s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 08/01/25 01:32:21.284
  I0801 01:32:21.284749 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-6936 label pods pause testing-label-'
  I0801 01:32:21.763275 23 builder.go:146] stderr: ""
  I0801 01:32:21.763326 23 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 08/01/25 01:32:21.763
  I0801 01:32:21.763411 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-6936 get pod pause -L testing-label'
  I0801 01:32:21.993157 23 builder.go:146] stderr: ""
  I0801 01:32:22.002044 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          5s    \n"
  STEP: using delete to clean up resources @ 08/01/25 01:32:22.003
  I0801 01:32:22.004383 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-6936 delete --grace-period=0 --force -f -'
  I0801 01:32:22.357160 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0801 01:32:22.357331 23 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0801 01:32:22.357406 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-6936 get rc,svc -l name=pause --no-headers'
  I0801 01:32:22.652900 23 builder.go:146] stderr: "No resources found in kubectl-6936 namespace.\n"
  I0801 01:32:22.652944 23 builder.go:147] stdout: ""
  I0801 01:32:22.652999 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-6936 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0801 01:32:23.109616 23 builder.go:146] stderr: ""
  I0801 01:32:23.109675 23 builder.go:147] stdout: ""
  I0801 01:32:23.109817 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6936" for this suite. @ 08/01/25 01:32:23.123
â€¢ [6.940 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 08/01/25 01:32:23.141
  I0801 01:32:23.141746 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename crd-watch @ 08/01/25 01:32:23.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:32:23.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:32:23.213
  I0801 01:32:23.236008 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Creating first CR  @ 08/01/25 01:32:25.869
  I0801 01:32:25.900864 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-08-01T01:32:25Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-08-01T01:32:25Z]] name:name1 resourceVersion:1800 uid:66c4c9d1-fba5-4853-bbb9-d8b4b838c24a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 08/01/25 01:32:35.914
  I0801 01:32:35.940966 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-08-01T01:32:35Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-08-01T01:32:35Z]] name:name2 resourceVersion:1839 uid:4c789ff7-b878-40a0-acb8-d187518f5018] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 08/01/25 01:32:45.943
  I0801 01:32:45.955785 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-08-01T01:32:25Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-08-01T01:32:45Z]] name:name1 resourceVersion:1869 uid:66c4c9d1-fba5-4853-bbb9-d8b4b838c24a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 08/01/25 01:32:55.956
  I0801 01:32:55.988739 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-08-01T01:32:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-08-01T01:32:55Z]] name:name2 resourceVersion:1898 uid:4c789ff7-b878-40a0-acb8-d187518f5018] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 08/01/25 01:33:05.989
  I0801 01:33:06.015460 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-08-01T01:32:25Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-08-01T01:32:45Z]] name:name1 resourceVersion:1928 uid:66c4c9d1-fba5-4853-bbb9-d8b4b838c24a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 08/01/25 01:33:16.016
  I0801 01:33:16.040433 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-08-01T01:32:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-08-01T01:32:55Z]] name:name2 resourceVersion:1958 uid:4c789ff7-b878-40a0-acb8-d187518f5018] num:map[num1:9223372036854775807 num2:1000000]]}
  I0801 01:33:26.567041 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-8744" for this suite. @ 08/01/25 01:33:26.594
â€¢ [63.468 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 08/01/25 01:33:26.609
  I0801 01:33:26.610018 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/01/25 01:33:26.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:33:26.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:33:26.666
  STEP: create the container to handle the HTTPGet hook request. @ 08/01/25 01:33:26.695
  STEP: create the pod with lifecycle hook @ 08/01/25 01:33:30.743
  STEP: check poststart hook @ 08/01/25 01:33:34.783
  STEP: delete the pod with lifecycle hook @ 08/01/25 01:33:34.806
  I0801 01:33:36.832684 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7198" for this suite. @ 08/01/25 01:33:36.835
â€¢ [10.244 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 08/01/25 01:33:36.853
  I0801 01:33:36.853727 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename podtemplate @ 08/01/25 01:33:36.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:33:36.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:33:36.893
  I0801 01:33:37.002613 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9963" for this suite. @ 08/01/25 01:33:37.013
â€¢ [0.180 seconds]
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 08/01/25 01:33:37.034
  I0801 01:33:37.034931 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename svcaccounts @ 08/01/25 01:33:37.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:33:37.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:33:37.082
  STEP: creating a ServiceAccount @ 08/01/25 01:33:37.089
  STEP: watching for the ServiceAccount to be added @ 08/01/25 01:33:37.103
  STEP: patching the ServiceAccount @ 08/01/25 01:33:37.105
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 08/01/25 01:33:37.12
  STEP: deleting the ServiceAccount @ 08/01/25 01:33:37.131
  I0801 01:33:37.201207 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9150" for this suite. @ 08/01/25 01:33:37.219
â€¢ [0.214 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 08/01/25 01:33:37.259
  I0801 01:33:37.259252 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 01:33:37.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:33:37.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:33:37.32
  STEP: creating a replication controller @ 08/01/25 01:33:37.349
  I0801 01:33:37.349181 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 create -f -'
  I0801 01:33:37.741245 23 builder.go:146] stderr: ""
  I0801 01:33:37.741294 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/01/25 01:33:37.741
  I0801 01:33:37.741374 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0801 01:33:37.910024 23 builder.go:146] stderr: ""
  I0801 01:33:37.910085 23 builder.go:147] stdout: "update-demo-nautilus-85wrr update-demo-nautilus-xlxzb "
  I0801 01:33:37.910141 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 get pods update-demo-nautilus-85wrr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0801 01:33:38.049076 23 builder.go:146] stderr: ""
  I0801 01:33:38.049139 23 builder.go:147] stdout: ""
  I0801 01:33:38.049156 23 kubectl.go:2505] update-demo-nautilus-85wrr is created but not running
  I0801 01:33:43.049452 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0801 01:33:43.367305 23 builder.go:146] stderr: ""
  I0801 01:33:43.367351 23 builder.go:147] stdout: "update-demo-nautilus-85wrr update-demo-nautilus-xlxzb "
  I0801 01:33:43.367410 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 get pods update-demo-nautilus-85wrr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0801 01:33:43.613418 23 builder.go:146] stderr: ""
  I0801 01:33:43.613472 23 builder.go:147] stdout: ""
  I0801 01:33:43.613486 23 kubectl.go:2505] update-demo-nautilus-85wrr is created but not running
  I0801 01:33:48.614233 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0801 01:33:48.756232 23 builder.go:146] stderr: ""
  I0801 01:33:48.756287 23 builder.go:147] stdout: "update-demo-nautilus-85wrr update-demo-nautilus-xlxzb "
  I0801 01:33:48.756653 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 get pods update-demo-nautilus-85wrr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0801 01:33:48.872183 23 builder.go:146] stderr: ""
  I0801 01:33:48.872547 23 builder.go:147] stdout: ""
  I0801 01:33:48.872629 23 kubectl.go:2505] update-demo-nautilus-85wrr is created but not running
  I0801 01:33:53.873073 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0801 01:33:54.038630 23 builder.go:146] stderr: ""
  I0801 01:33:54.038707 23 builder.go:147] stdout: "update-demo-nautilus-85wrr update-demo-nautilus-xlxzb "
  I0801 01:33:54.038768 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 get pods update-demo-nautilus-85wrr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0801 01:33:54.352606 23 builder.go:146] stderr: ""
  I0801 01:33:54.352664 23 builder.go:147] stdout: "true"
  I0801 01:33:54.352718 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 get pods update-demo-nautilus-85wrr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0801 01:33:54.575795 23 builder.go:146] stderr: ""
  I0801 01:33:54.576129 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0801 01:33:54.576158 23 kubectl.go:2396] validating pod update-demo-nautilus-85wrr
  I0801 01:33:54.598742 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0801 01:33:54.598889 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0801 01:33:54.599003 23 kubectl.go:2523] update-demo-nautilus-85wrr is verified up and running
  I0801 01:33:54.599065 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 get pods update-demo-nautilus-xlxzb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0801 01:33:54.807257 23 builder.go:146] stderr: ""
  I0801 01:33:54.807320 23 builder.go:147] stdout: "true"
  I0801 01:33:54.808226 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 get pods update-demo-nautilus-xlxzb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0801 01:33:55.021874 23 builder.go:146] stderr: ""
  I0801 01:33:55.021938 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0801 01:33:55.022651 23 kubectl.go:2396] validating pod update-demo-nautilus-xlxzb
  I0801 01:33:55.057515 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0801 01:33:55.057569 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0801 01:33:55.057582 23 kubectl.go:2523] update-demo-nautilus-xlxzb is verified up and running
  STEP: using delete to clean up resources @ 08/01/25 01:33:55.057
  I0801 01:33:55.057655 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 delete --grace-period=0 --force -f -'
  I0801 01:33:55.296590 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0801 01:33:55.296651 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0801 01:33:55.296713 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 get rc,svc -l name=update-demo --no-headers'
  I0801 01:33:55.495222 23 builder.go:146] stderr: "No resources found in kubectl-9546 namespace.\n"
  I0801 01:33:55.502062 23 builder.go:147] stdout: ""
  I0801 01:33:55.502156 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9546 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0801 01:33:55.723010 23 builder.go:146] stderr: ""
  I0801 01:33:55.723166 23 builder.go:147] stdout: ""
  I0801 01:33:55.723290 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9546" for this suite. @ 08/01/25 01:33:55.727
â€¢ [18.481 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 08/01/25 01:33:55.742
  I0801 01:33:55.742115 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 01:33:55.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:33:55.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:33:55.899
  STEP: creating a replication controller @ 08/01/25 01:33:55.937
  I0801 01:33:55.937297 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 create -f -'
  I0801 01:33:56.399113 23 builder.go:146] stderr: ""
  I0801 01:33:56.399161 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/01/25 01:33:56.399
  I0801 01:33:56.399259 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0801 01:33:56.822792 23 builder.go:146] stderr: ""
  I0801 01:33:56.822844 23 builder.go:147] stdout: "update-demo-nautilus-8fkzp update-demo-nautilus-h8xng "
  I0801 01:33:56.822901 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods update-demo-nautilus-8fkzp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0801 01:33:57.053468 23 builder.go:146] stderr: ""
  I0801 01:33:57.053516 23 builder.go:147] stdout: ""
  I0801 01:33:57.053531 23 kubectl.go:2505] update-demo-nautilus-8fkzp is created but not running
  I0801 01:34:02.056571 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0801 01:34:02.341551 23 builder.go:146] stderr: ""
  I0801 01:34:02.341606 23 builder.go:147] stdout: "update-demo-nautilus-8fkzp update-demo-nautilus-h8xng "
  I0801 01:34:02.341670 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods update-demo-nautilus-8fkzp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0801 01:34:02.487177 23 builder.go:146] stderr: ""
  I0801 01:34:02.487269 23 builder.go:147] stdout: "true"
  I0801 01:34:02.487318 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods update-demo-nautilus-8fkzp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0801 01:34:02.627531 23 builder.go:146] stderr: ""
  I0801 01:34:02.627586 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0801 01:34:02.627602 23 kubectl.go:2396] validating pod update-demo-nautilus-8fkzp
  I0801 01:34:02.635745 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0801 01:34:02.635806 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0801 01:34:02.635818 23 kubectl.go:2523] update-demo-nautilus-8fkzp is verified up and running
  I0801 01:34:02.635856 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods update-demo-nautilus-h8xng -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0801 01:34:02.798835 23 builder.go:146] stderr: ""
  I0801 01:34:02.798886 23 builder.go:147] stdout: "true"
  I0801 01:34:02.798938 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods update-demo-nautilus-h8xng -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0801 01:34:03.078213 23 builder.go:146] stderr: ""
  I0801 01:34:03.083202 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0801 01:34:03.083238 23 kubectl.go:2396] validating pod update-demo-nautilus-h8xng
  I0801 01:34:03.117307 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0801 01:34:03.117387 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0801 01:34:03.117407 23 kubectl.go:2523] update-demo-nautilus-h8xng is verified up and running
  STEP: scaling down the replication controller @ 08/01/25 01:34:03.117
  I0801 01:34:03.288122 23 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0801 01:34:03.288199 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0801 01:34:04.578713 23 builder.go:146] stderr: ""
  I0801 01:34:04.578764 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/01/25 01:34:04.578
  I0801 01:34:04.578863 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0801 01:34:04.795508 23 builder.go:146] stderr: ""
  I0801 01:34:04.795586 23 builder.go:147] stdout: "update-demo-nautilus-8fkzp update-demo-nautilus-h8xng "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 08/01/25 01:34:04.795
  I0801 01:34:09.796765 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0801 01:34:09.978309 23 builder.go:146] stderr: ""
  I0801 01:34:09.978376 23 builder.go:147] stdout: "update-demo-nautilus-h8xng "
  I0801 01:34:09.978433 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods update-demo-nautilus-h8xng -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0801 01:34:10.258962 23 builder.go:146] stderr: ""
  I0801 01:34:10.259017 23 builder.go:147] stdout: "true"
  I0801 01:34:10.259073 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods update-demo-nautilus-h8xng -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0801 01:34:10.404926 23 builder.go:146] stderr: ""
  I0801 01:34:10.404971 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0801 01:34:10.404984 23 kubectl.go:2396] validating pod update-demo-nautilus-h8xng
  I0801 01:34:10.413496 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0801 01:34:10.413566 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0801 01:34:10.413579 23 kubectl.go:2523] update-demo-nautilus-h8xng is verified up and running
  STEP: scaling up the replication controller @ 08/01/25 01:34:10.413
  I0801 01:34:10.414803 23 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0801 01:34:10.414856 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0801 01:34:11.561544 23 builder.go:146] stderr: ""
  I0801 01:34:11.561593 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/01/25 01:34:11.561
  I0801 01:34:11.561689 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0801 01:34:11.741458 23 builder.go:146] stderr: ""
  I0801 01:34:11.741508 23 builder.go:147] stdout: "update-demo-nautilus-h8xng update-demo-nautilus-zjtjc "
  I0801 01:34:11.741563 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods update-demo-nautilus-h8xng -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0801 01:34:11.901223 23 builder.go:146] stderr: ""
  I0801 01:34:11.901262 23 builder.go:147] stdout: "true"
  I0801 01:34:11.901314 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods update-demo-nautilus-h8xng -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0801 01:34:12.030851 23 builder.go:146] stderr: ""
  I0801 01:34:12.031021 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0801 01:34:12.031041 23 kubectl.go:2396] validating pod update-demo-nautilus-h8xng
  I0801 01:34:12.035929 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0801 01:34:12.035997 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0801 01:34:12.036012 23 kubectl.go:2523] update-demo-nautilus-h8xng is verified up and running
  I0801 01:34:12.036280 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods update-demo-nautilus-zjtjc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0801 01:34:12.296771 23 builder.go:146] stderr: ""
  I0801 01:34:12.296825 23 builder.go:147] stdout: "true"
  I0801 01:34:12.296881 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods update-demo-nautilus-zjtjc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0801 01:34:12.477829 23 builder.go:146] stderr: ""
  I0801 01:34:12.477896 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0801 01:34:12.478076 23 kubectl.go:2396] validating pod update-demo-nautilus-zjtjc
  I0801 01:34:12.495494 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0801 01:34:12.496316 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0801 01:34:12.496345 23 kubectl.go:2523] update-demo-nautilus-zjtjc is verified up and running
  STEP: using delete to clean up resources @ 08/01/25 01:34:12.496
  I0801 01:34:12.496426 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 delete --grace-period=0 --force -f -'
  I0801 01:34:12.637896 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0801 01:34:12.639305 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0801 01:34:12.639414 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get rc,svc -l name=update-demo --no-headers'
  I0801 01:34:12.829268 23 builder.go:146] stderr: "No resources found in kubectl-5089 namespace.\n"
  I0801 01:34:12.829338 23 builder.go:147] stdout: ""
  I0801 01:34:12.829429 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-5089 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0801 01:34:13.050783 23 builder.go:146] stderr: ""
  I0801 01:34:13.050836 23 builder.go:147] stdout: ""
  I0801 01:34:13.051744 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5089" for this suite. @ 08/01/25 01:34:13.058
â€¢ [17.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 08/01/25 01:34:13.086
  I0801 01:34:13.086611 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename security-context-test @ 08/01/25 01:34:13.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:34:13.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:34:13.137
  I0801 01:34:19.258707 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-157" for this suite. @ 08/01/25 01:34:19.268
â€¢ [6.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 08/01/25 01:34:19.295
  I0801 01:34:19.295917 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename resourcequota @ 08/01/25 01:34:19.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:34:19.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:34:19.388
  STEP: Creating a ResourceQuota @ 08/01/25 01:34:19.392
  STEP: Getting a ResourceQuota @ 08/01/25 01:34:19.401
  STEP: Listing all ResourceQuotas with LabelSelector @ 08/01/25 01:34:19.406
  STEP: Patching the ResourceQuota @ 08/01/25 01:34:19.413
  STEP: Deleting a Collection of ResourceQuotas @ 08/01/25 01:34:19.423
  STEP: Verifying the deleted ResourceQuota @ 08/01/25 01:34:19.452
  I0801 01:34:19.455777 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-569" for this suite. @ 08/01/25 01:34:19.462
â€¢ [0.178 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 08/01/25 01:34:19.474
  I0801 01:34:19.474352 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-probe @ 08/01/25 01:34:19.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:34:19.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:34:19.533
  STEP: Creating pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202 @ 08/01/25 01:34:19.539
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/01/25 01:34:23.585
  I0801 01:34:23.598579 23 container_probe.go:1748] Initial restart count of pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 is 0
  I0801 01:34:23.606311 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:25.610615 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:27.633215 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:29.636935 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:31.647427 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:33.652724 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:35.656774 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:37.673108 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:39.679208 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:41.683620 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:43.694973 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:45.699789 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:47.714357 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:49.727542 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:51.734024 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:53.737701 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:55.741493 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:57.749771 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:34:59.759244 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:01.765914 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:03.783462 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:05.790465 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:07.795917 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:09.805683 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:11.811459 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:13.821012 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:15.829537 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:17.834767 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:19.842133 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:21.847130 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:23.854453 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:25.872635 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:27.877343 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:29.881241 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:31.888332 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:33.891746 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:35.904346 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:37.909988 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:39.917694 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:41.921923 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:43.927178 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:45.932815 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:47.938966 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:49.946712 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:51.964834 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:53.970660 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:55.975367 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:35:57.993997 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:00.001344 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:02.006442 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:04.018459 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:06.024303 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:08.029071 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:10.035874 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:12.039610 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:14.044116 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:16.049124 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:18.058295 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:20.062835 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:22.070438 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:24.074976 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:26.078415 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:28.084223 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:30.091753 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:32.098057 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:34.112794 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:36.117075 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:38.136110 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:40.141417 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:42.173616 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:44.178849 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:46.182369 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:48.185445 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:50.201136 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:52.203971 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:54.207197 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:56.210097 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:36:58.213112 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:00.218273 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:02.224809 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:04.233202 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:06.237196 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:08.241793 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:10.247434 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:12.250692 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:14.255226 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:16.259436 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:18.275826 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:20.280885 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:22.284253 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:24.288869 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:26.292921 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:28.298544 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:30.311507 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:32.317841 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:34.326597 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:36.330614 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:38.335738 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:40.340060 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:42.343442 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:44.347826 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:46.351862 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:48.355645 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:50.360838 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:52.363545 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:54.384920 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:56.388690 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:37:58.392935 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:38:00.397604 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:38:02.404341 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:38:04.409231 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:38:06.419241 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:38:08.422697 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:38:10.428385 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:38:12.438712 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:38:14.444739 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:38:16.454631 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:38:18.459450 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:38:20.462999 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  I0801 01:38:22.467156 23 container_probe.go:1758] Get pod busybox-c11b937e-7528-4fea-9192-316119d8eee9 in namespace container-probe-4202
  STEP: deleting the pod @ 08/01/25 01:38:24.467
  I0801 01:38:24.502116 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4202" for this suite. @ 08/01/25 01:38:24.509
â€¢ [245.046 seconds]
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 08/01/25 01:38:24.52
  I0801 01:38:24.520630 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 01:38:24.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:38:24.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:38:24.555
  STEP: Creating an indexed job with successPolicy @ 08/01/25 01:38:24.56
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 08/01/25 01:38:24.57
  STEP: Ensure that the job reaches completions @ 08/01/25 01:38:30.597
  STEP: Verifying that the job status to ensure correct final state @ 08/01/25 01:38:30.602
  I0801 01:38:30.604849 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-577" for this suite. @ 08/01/25 01:38:30.607
â€¢ [6.106 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 08/01/25 01:38:30.628
  I0801 01:38:30.628197 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename svcaccounts @ 08/01/25 01:38:30.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:38:30.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:38:30.718
  STEP: reading a file in the container @ 08/01/25 01:38:32.766
  I0801 01:38:32.766873 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9683 pod-service-account-40a8082f-057a-4a6d-ab70-bcdb149254cf -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 08/01/25 01:38:32.958
  I0801 01:38:32.958155 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9683 pod-service-account-40a8082f-057a-4a6d-ab70-bcdb149254cf -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 08/01/25 01:38:33.203
  I0801 01:38:33.203839 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9683 pod-service-account-40a8082f-057a-4a6d-ab70-bcdb149254cf -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0801 01:38:33.405480 23 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-9683"
  I0801 01:38:33.410822 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9683" for this suite. @ 08/01/25 01:38:33.417
â€¢ [2.807 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 08/01/25 01:38:33.435
  I0801 01:38:33.435403 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename daemonsets @ 08/01/25 01:38:33.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:38:33.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:38:33.457
  STEP: Creating simple DaemonSet "daemon-set" @ 08/01/25 01:38:33.526
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/01/25 01:38:33.538
  I0801 01:38:33.628759 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 01:38:33.628812 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 01:38:34.547025 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 01:38:34.547073 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 01:38:35.561143 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 01:38:35.561200 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 01:38:36.557338 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 01:38:36.557394 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 01:38:37.544777 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 01:38:37.544824 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 01:38:38.560279 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 01:38:38.560330 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 01:38:39.555365 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 01:38:39.555601 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 01:38:40.545431 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 01:38:40.545645 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 01:38:41.545736 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0801 01:38:41.545951 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 08/01/25 01:38:41.667
  STEP: DeleteCollection of the DaemonSets @ 08/01/25 01:38:41.675
  STEP: Verify that ReplicaSets have been deleted @ 08/01/25 01:38:41.704
  I0801 01:38:42.094892 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"3292"},"items":null}

  I0801 01:38:42.098213 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"3292"},"items":[{"metadata":{"name":"daemon-set-9c9ft","generateName":"daemon-set-","namespace":"daemonsets-9213","uid":"0f0947d0-d754-41c3-b7c0-6b72e7209118","resourceVersion":"3289","generation":2,"creationTimestamp":"2025-08-01T01:38:33Z","deletionTimestamp":"2025-08-01T01:39:11Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"59c83373-59a9-4d4a-bbe9-c0c50117b771","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-08-01T01:38:33Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59c83373-59a9-4d4a-bbe9-c0c50117b771\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-08-01T01:38:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.52.0.15\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-mt56g","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-mt56g","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k3k-k3kcluster-server-0","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k3k-k3kcluster-server-0"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-08-01T01:38:35Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-08-01T01:38:33Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-08-01T01:38:35Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-08-01T01:38:35Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-08-01T01:38:33Z"}],"hostIP":"10.42.0.18","hostIPs":[{"ip":"10.42.0.18"}],"podIP":"10.52.0.15","podIPs":[{"ip":"10.52.0.15"}],"startTime":"2025-08-01T01:38:33Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-08-01T01:38:34Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://f835437dfdcf3498771a216cf7134a694fb7d2eb745e59835cb6861972d25fe5","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-mt56g","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-d7xjb","generateName":"daemon-set-","namespace":"daemonsets-9213","uid":"98359469-a4bc-46f8-b0b6-0a81a6648a39","resourceVersion":"3290","generation":2,"creationTimestamp":"2025-08-01T01:38:33Z","deletionTimestamp":"2025-08-01T01:39:11Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"59c83373-59a9-4d4a-bbe9-c0c50117b771","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-08-01T01:38:33Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59c83373-59a9-4d4a-bbe9-c0c50117b771\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-08-01T01:38:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.52.1.16\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-zq8tn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-zq8tn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-08-01T01:38:40Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-08-01T01:38:33Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-08-01T01:38:40Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-08-01T01:38:40Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-08-01T01:38:33Z"}],"hostIP":"10.42.0.16","hostIPs":[{"ip":"10.42.0.16"}],"podIP":"10.52.1.16","podIPs":[{"ip":"10.52.1.16"}],"startTime":"2025-08-01T01:38:33Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-08-01T01:38:40Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://60364048a087332e89bedcdf65bb35eb734841d6d848c19bda10ccaa61ab4042","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-zq8tn","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}}]}

  I0801 01:38:42.106953 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9213" for this suite. @ 08/01/25 01:38:42.109
â€¢ [8.867 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 08/01/25 01:38:42.302
  I0801 01:38:42.302939 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 01:38:42.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:38:42.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:38:42.815
  STEP: Creating a pod to test downward api env vars @ 08/01/25 01:38:42.818
  STEP: Saw pod success @ 08/01/25 01:38:49.036
  I0801 01:38:49.039377 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downward-api-87f426fc-48d6-4af6-a496-71f5c69fa78a container dapi-container: <nil>
  STEP: delete the pod @ 08/01/25 01:38:49.095
  I0801 01:38:49.134908 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3612" for this suite. @ 08/01/25 01:38:49.146
â€¢ [6.857 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 08/01/25 01:38:49.16
  I0801 01:38:49.160736 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename resourcequota @ 08/01/25 01:38:49.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:38:49.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:38:49.207
  STEP: Counting existing ResourceQuota @ 08/01/25 01:39:06.214
  STEP: Creating a ResourceQuota @ 08/01/25 01:39:11.224
  STEP: Ensuring resource quota status is calculated @ 08/01/25 01:39:11.237
  STEP: Creating a ConfigMap @ 08/01/25 01:39:13.243
  STEP: Ensuring resource quota status captures configMap creation @ 08/01/25 01:39:13.278
  STEP: Deleting a ConfigMap @ 08/01/25 01:39:15.29
  STEP: Ensuring resource quota status released usage @ 08/01/25 01:39:15.317
  I0801 01:39:17.322515 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3292" for this suite. @ 08/01/25 01:39:17.326
â€¢ [28.185 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 08/01/25 01:39:17.346
  I0801 01:39:17.346224 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename gc @ 08/01/25 01:39:17.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:39:17.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:39:17.372
  STEP: create the rc @ 08/01/25 01:39:17.377
  I0801 01:39:17.396575      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 08/01/25 01:39:22.403
  STEP: wait for all pods to be garbage collected @ 08/01/25 01:39:22.408
  STEP: Gathering metrics @ 08/01/25 01:39:27.418
  W0801 01:39:27.423434      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0801 01:39:27.423691 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0801 01:39:27.423944 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9116" for this suite. @ 08/01/25 01:39:27.436
â€¢ [10.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 08/01/25 01:39:27.447
  I0801 01:39:27.447655 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 01:39:27.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:39:27.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:39:27.499
  STEP: Creating configMap with name configmap-test-upd-d0e20778-2b80-4c59-9988-c9711caacc26 @ 08/01/25 01:39:27.539
  STEP: Creating the pod @ 08/01/25 01:39:27.554
  STEP: Updating configmap configmap-test-upd-d0e20778-2b80-4c59-9988-c9711caacc26 @ 08/01/25 01:39:29.594
  STEP: waiting to observe update in volume @ 08/01/25 01:39:29.609
  I0801 01:40:54.207068 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8003" for this suite. @ 08/01/25 01:40:54.214
â€¢ [86.793 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 08/01/25 01:40:54.24
  I0801 01:40:54.240641 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename var-expansion @ 08/01/25 01:40:54.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:40:54.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:40:54.28
  I0801 01:40:56.316779 23 delete.go:62] Deleting pod "var-expansion-1964e312-ed61-40cb-84f5-21b46b1963e9" in namespace "var-expansion-1674"
  I0801 01:40:56.335143 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-1964e312-ed61-40cb-84f5-21b46b1963e9" to be fully deleted
  I0801 01:40:58.342472 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1674" for this suite. @ 08/01/25 01:40:58.348
â€¢ [4.124 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 08/01/25 01:40:58.365
  I0801 01:40:58.365460 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename sched-preemption @ 08/01/25 01:40:58.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:40:58.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:40:58.45
  I0801 01:40:58.514334 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0801 01:41:58.528854 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 08/01/25 01:41:58.532
  STEP: Adding a custom resource @ 08/01/25 01:41:58.533
  I0801 01:41:58.578064 23 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0801 01:41:58.604376 23 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 08/01/25 01:41:58.604
  I0801 01:41:58.654389 23 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0801 01:41:58.677848 23 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 08/01/25 01:41:58.677
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 08/01/25 01:42:04.717
  STEP: Removing a custom resource @ 08/01/25 01:42:06.8
  STEP: Removing a custom resource @ 08/01/25 01:42:06.825
  I0801 01:42:06.862265 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8835" for this suite. @ 08/01/25 01:42:06.866
â€¢ [68.512 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 08/01/25 01:42:06.877
  I0801 01:42:06.877664 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 01:42:06.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:42:06.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:42:06.915
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 08/01/25 01:42:06.919
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 08/01/25 01:42:06.94
  STEP: Verifying the Job status fields to ensure early termination of the job @ 08/01/25 01:42:10.961
  I0801 01:42:10.964717 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1138" for this suite. @ 08/01/25 01:42:10.969
â€¢ [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 08/01/25 01:42:10.981
  I0801 01:42:10.981940 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename secrets @ 08/01/25 01:42:10.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:42:11.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:42:11.03
  STEP: Creating secret with name s-test-opt-del-718643e9-2f53-480a-a8c5-77a1fb86aecc @ 08/01/25 01:42:11.069
  STEP: Creating secret with name s-test-opt-upd-ccc486cd-5ad1-44d9-ab18-c937b1149cd7 @ 08/01/25 01:42:11.083
  STEP: Creating the pod @ 08/01/25 01:42:11.094
  STEP: Deleting secret s-test-opt-del-718643e9-2f53-480a-a8c5-77a1fb86aecc @ 08/01/25 01:42:15.198
  STEP: Updating secret s-test-opt-upd-ccc486cd-5ad1-44d9-ab18-c937b1149cd7 @ 08/01/25 01:42:15.21
  STEP: Creating secret with name s-test-opt-create-9d453509-119c-47fb-9c4d-db1ec7edc024 @ 08/01/25 01:42:15.221
  STEP: waiting to observe update in volume @ 08/01/25 01:42:15.237
  I0801 01:43:41.731639 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9548" for this suite. @ 08/01/25 01:43:41.735
â€¢ [90.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 08/01/25 01:43:41.745
  I0801 01:43:41.745027 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/01/25 01:43:41.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:43:41.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:43:41.78
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 08/01/25 01:43:41.785
  I0801 01:43:41.786061 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:43:43.591494 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:43:50.036583 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3631" for this suite. @ 08/01/25 01:43:50.041
â€¢ [8.309 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 08/01/25 01:43:50.054
  I0801 01:43:50.054907 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename replication-controller @ 08/01/25 01:43:50.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:43:50.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:43:50.116
  STEP: Creating ReplicationController "e2e-rc-vghvn" @ 08/01/25 01:43:50.119
  I0801 01:43:50.131012 23 rc.go:795] Get Replication Controller "e2e-rc-vghvn" to confirm replicas
  I0801 01:43:51.133178 23 rc.go:795] Get Replication Controller "e2e-rc-vghvn" to confirm replicas
  I0801 01:43:51.136918 23 rc.go:804] Found 1 replicas for "e2e-rc-vghvn" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-vghvn" @ 08/01/25 01:43:51.136
  STEP: Updating a scale subresource @ 08/01/25 01:43:51.139
  STEP: Verifying replicas where modified for replication controller "e2e-rc-vghvn" @ 08/01/25 01:43:51.165
  I0801 01:43:51.166041 23 rc.go:795] Get Replication Controller "e2e-rc-vghvn" to confirm replicas
  I0801 01:43:52.167102 23 rc.go:795] Get Replication Controller "e2e-rc-vghvn" to confirm replicas
  I0801 01:43:52.172665 23 rc.go:804] Found 2 replicas for "e2e-rc-vghvn" replication controller
  I0801 01:43:52.172936 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5843" for this suite. @ 08/01/25 01:43:52.183
â€¢ [2.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 08/01/25 01:43:52.214
  I0801 01:43:52.214964 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 01:43:52.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:43:52.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:43:52.264
  STEP: creating Agnhost RC @ 08/01/25 01:43:52.268
  I0801 01:43:52.268537 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-2994 create -f -'
  I0801 01:43:52.494209 23 builder.go:146] stderr: ""
  I0801 01:43:52.494261 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/01/25 01:43:52.494
  I0801 01:43:53.533721 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0801 01:43:53.533766 23 framework.go:733] Found 0 / 1
  I0801 01:43:54.497653 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0801 01:43:54.497700 23 framework.go:733] Found 1 / 1
  I0801 01:43:54.497722 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 08/01/25 01:43:54.497
  I0801 01:43:54.501334 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0801 01:43:54.501378 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0801 01:43:54.501425 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-2994 patch pod agnhost-primary-rz8jh -p {"metadata":{"annotations":{"x":"y"}}}'
  I0801 01:43:54.627351 23 builder.go:146] stderr: ""
  I0801 01:43:54.627501 23 builder.go:147] stdout: "pod/agnhost-primary-rz8jh patched\n"
  STEP: checking annotations @ 08/01/25 01:43:54.627
  I0801 01:43:54.631978 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0801 01:43:54.632019 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0801 01:43:54.632199 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2994" for this suite. @ 08/01/25 01:43:54.636
â€¢ [2.437 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 08/01/25 01:43:54.652
  I0801 01:43:54.652121 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename statefulset @ 08/01/25 01:43:54.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:43:54.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:43:54.685
  STEP: Creating service test in namespace statefulset-3273 @ 08/01/25 01:43:54.69
  STEP: Creating statefulset ss in namespace statefulset-3273 @ 08/01/25 01:43:54.702
  I0801 01:43:54.733592 23 wait.go:44] Found 0 stateful pods, waiting for 1
  I0801 01:44:04.734564 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 08/01/25 01:44:04.739
  STEP: Getting /status @ 08/01/25 01:44:04.753
  I0801 01:44:04.757156 23 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 08/01/25 01:44:04.757
  I0801 01:44:04.775045 23 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 08/01/25 01:44:04.775
  I0801 01:44:04.777173 23 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0801 01:44:04.777320 23 statefulset.go:1126] Found Statefulset ss in namespace statefulset-3273 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0801 01:44:04.777340 23 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 08/01/25 01:44:04.777
  I0801 01:44:04.777591 23 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0801 01:44:04.792591 23 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 08/01/25 01:44:04.792
  I0801 01:44:04.795422 23 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0801 01:44:04.795529 23 statefulset.go:138] Deleting all statefulset in ns statefulset-3273
  I0801 01:44:04.798525 23 rest.go:153] Scaling statefulset ss to 0
  I0801 01:44:14.821575 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0801 01:44:14.824021 23 rest.go:91] Deleting statefulset ss
  I0801 01:44:14.848469 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3273" for this suite. @ 08/01/25 01:44:14.851
â€¢ [20.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 08/01/25 01:44:14.861
  I0801 01:44:14.861073 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename conformance-tests @ 08/01/25 01:44:14.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:44:14.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:44:14.895
  STEP: Getting node addresses @ 08/01/25 01:44:14.9
  I0801 01:44:14.900739 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0801 01:44:14.970049 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2559" for this suite. @ 08/01/25 01:44:14.973
â€¢ [0.125 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 08/01/25 01:44:14.986
  I0801 01:44:14.986268 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename sched-preemption @ 08/01/25 01:44:14.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:44:15.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:44:15.024
  I0801 01:44:15.070304 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0801 01:45:15.076404 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 08/01/25 01:45:15.08
  STEP: Adding a custom resource @ 08/01/25 01:45:15.081
  I0801 01:45:15.120646 23 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0801 01:45:15.141121 23 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 08/01/25 01:45:15.141
  I0801 01:45:15.192890 23 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0801 01:45:15.212048 23 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 08/01/25 01:45:15.212
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 08/01/25 01:45:19.259
  STEP: Removing a custom resource @ 08/01/25 01:45:23.391
  STEP: Removing a custom resource @ 08/01/25 01:45:23.418
  I0801 01:45:23.458377 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8348" for this suite. @ 08/01/25 01:45:23.471
â€¢ [68.497 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 08/01/25 01:45:23.483
  I0801 01:45:23.483477 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename resourcequota @ 08/01/25 01:45:23.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:45:23.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:45:23.538
  STEP: Counting existing ResourceQuota @ 08/01/25 01:45:23.542
  STEP: Creating a ResourceQuota @ 08/01/25 01:45:28.558
  STEP: Ensuring resource quota status is calculated @ 08/01/25 01:45:28.579
  STEP: Creating a Service @ 08/01/25 01:45:30.586
  STEP: Creating a NodePort Service @ 08/01/25 01:45:30.65
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 08/01/25 01:45:30.732
  STEP: Ensuring resource quota status captures service creation @ 08/01/25 01:45:30.804
  STEP: Deleting Services @ 08/01/25 01:45:32.808
  STEP: Ensuring resource quota status released usage @ 08/01/25 01:45:32.916
  I0801 01:45:34.920631 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7338" for this suite. @ 08/01/25 01:45:34.923
â€¢ [11.455 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 08/01/25 01:45:34.939
  I0801 01:45:34.939164 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 01:45:34.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:45:34.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:45:34.976
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 08/01/25 01:45:34.98
  STEP: Saw pod success @ 08/01/25 01:45:39.003
  I0801 01:45:39.006381 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-f80043b1-324c-4707-834c-bb6758fbc7de container test-container: <nil>
  STEP: delete the pod @ 08/01/25 01:45:39.034
  I0801 01:45:39.085253 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2203" for this suite. @ 08/01/25 01:45:39.089
â€¢ [4.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 08/01/25 01:45:39.101
  I0801 01:45:39.101249 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename subpath @ 08/01/25 01:45:39.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:45:39.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:45:39.125
  STEP: Setting up data @ 08/01/25 01:45:39.129
  STEP: Creating pod pod-subpath-test-secret-m97k @ 08/01/25 01:45:39.17
  STEP: Creating a pod to test atomic-volume-subpath @ 08/01/25 01:45:39.17
  STEP: Saw pod success @ 08/01/25 01:46:03.303
  I0801 01:46:03.311713 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-subpath-test-secret-m97k container test-container-subpath-secret-m97k: <nil>
  STEP: delete the pod @ 08/01/25 01:46:03.321
  STEP: Deleting pod pod-subpath-test-secret-m97k @ 08/01/25 01:46:03.367
  I0801 01:46:03.367514 23 delete.go:62] Deleting pod "pod-subpath-test-secret-m97k" in namespace "subpath-6010"
  I0801 01:46:03.378911 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6010" for this suite. @ 08/01/25 01:46:03.389
â€¢ [24.310 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 08/01/25 01:46:03.415
  I0801 01:46:03.415200 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename replicaset @ 08/01/25 01:46:03.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:46:03.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:46:03.463
  STEP: Create a ReplicaSet @ 08/01/25 01:46:03.468
  STEP: Verify that the required pods have come up @ 08/01/25 01:46:03.484
  I0801 01:46:03.499296 23 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  I0801 01:46:08.521882 23 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 08/01/25 01:46:08.521
  I0801 01:46:08.524362 23 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 08/01/25 01:46:08.524
  STEP: DeleteCollection of the ReplicaSets @ 08/01/25 01:46:08.526
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 08/01/25 01:46:08.534
  I0801 01:46:08.537517 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8851" for this suite. @ 08/01/25 01:46:08.54
â€¢ [5.137 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 08/01/25 01:46:08.553
  I0801 01:46:08.553530 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-probe @ 08/01/25 01:46:08.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:46:08.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:46:08.67
  STEP: Creating pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616 @ 08/01/25 01:46:08.674
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/01/25 01:46:10.722
  I0801 01:46:10.725226 23 container_probe.go:1748] Initial restart count of pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a is 0
  I0801 01:46:10.727661 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:12.731262 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:14.741761 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:16.746084 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:18.749837 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:20.753897 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:22.757550 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:24.762280 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:26.766190 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:28.770412 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:30.777115 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:32.781776 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:34.785060 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:36.788863 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:38.792449 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:40.795311 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:42.798697 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:44.801850 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:46.805690 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:48.809084 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:50.812341 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:52.817415 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:54.821411 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:56.824437 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:46:58.827891 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:47:00.833137 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:47:02.837946 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:47:04.843534 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:47:06.849617 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:47:08.861363 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:47:10.867892 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:47:12.872169 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:47:14.874966 23 container_probe.go:1758] Get pod test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a in namespace container-probe-5616
  I0801 01:47:14.875016 23 container_probe.go:1762] Restart count of pod container-probe-5616/test-grpc-22d45d64-cdb9-4074-8bb1-bf92c606433a is now 1 (1m4.14974828s elapsed)
  STEP: deleting the pod @ 08/01/25 01:47:14.875
  I0801 01:47:14.904017 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5616" for this suite. @ 08/01/25 01:47:14.907
â€¢ [66.363 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 08/01/25 01:47:14.917
  I0801 01:47:14.917035 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename sched-preemption @ 08/01/25 01:47:14.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:47:14.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:47:14.951
  I0801 01:47:14.982413 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0801 01:48:14.988246 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 08/01/25 01:48:14.99
  I0801 01:48:14.990712 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename sched-preemption-path @ 08/01/25 01:48:14.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:48:15.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:48:15.034
  I0801 01:48:15.096012 23 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0801 01:48:15.100140 23 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 08/01/25 01:48:15.19
  STEP: Removing a custom resource @ 08/01/25 01:48:15.2
  I0801 01:48:15.210430 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4208" for this suite. @ 08/01/25 01:48:15.214
  I0801 01:48:15.226652 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2064" for this suite. @ 08/01/25 01:48:15.315
â€¢ [60.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 08/01/25 01:48:15.325
  I0801 01:48:15.325047 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 01:48:15.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:48:15.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:48:15.36
  STEP: Creating a pod to test downward api env vars @ 08/01/25 01:48:15.364
  STEP: Saw pod success @ 08/01/25 01:48:19.384
  I0801 01:48:19.387280 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downward-api-cc3f39b5-b282-4c55-92e9-319eed6885ba container dapi-container: <nil>
  STEP: delete the pod @ 08/01/25 01:48:19.398
  I0801 01:48:19.434509 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4671" for this suite. @ 08/01/25 01:48:19.438
â€¢ [4.130 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 08/01/25 01:48:19.455
  I0801 01:48:19.455326 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 01:48:19.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:48:19.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:48:19.481
  STEP: Setting up server cert @ 08/01/25 01:48:19.534
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 01:48:19.875
  STEP: Deploying the webhook pod @ 08/01/25 01:48:19.887
  STEP: Wait for the deployment to be ready @ 08/01/25 01:48:19.919
  I0801 01:48:19.928812 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 01:48:21.94
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 01:48:21.98
  I0801 01:48:22.981643 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 08/01/25 01:48:23.17
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/01/25 01:48:23.226
  STEP: Deleting the collection of validation webhooks @ 08/01/25 01:48:23.29
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/01/25 01:48:23.411
  I0801 01:48:23.539035 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2211" for this suite. @ 08/01/25 01:48:23.541
  STEP: Destroying namespace "webhook-markers-630" for this suite. @ 08/01/25 01:48:23.562
â€¢ [4.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 08/01/25 01:48:23.574
  I0801 01:48:23.574226 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename validating-admission-policy @ 08/01/25 01:48:23.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:48:23.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:48:23.619
  STEP: getting /apis @ 08/01/25 01:48:23.634
  STEP: getting /apis/admissionregistration.k8s.io @ 08/01/25 01:48:23.64
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 08/01/25 01:48:23.641
  STEP: creating @ 08/01/25 01:48:23.643
  STEP: getting @ 08/01/25 01:48:23.677
  STEP: listing @ 08/01/25 01:48:23.679
  STEP: watching @ 08/01/25 01:48:23.682
  I0801 01:48:23.682539 23 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 08/01/25 01:48:23.684
  STEP: updating @ 08/01/25 01:48:23.696
  I0801 01:48:23.707426 23 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 08/01/25 01:48:23.707
  STEP: deleting a collection @ 08/01/25 01:48:23.73
  I0801 01:48:23.758482 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5709" for this suite. @ 08/01/25 01:48:23.761
â€¢ [0.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 08/01/25 01:48:23.772
  I0801 01:48:23.772689 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 01:48:23.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:48:23.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:48:23.799
  STEP: Creating a job @ 08/01/25 01:48:23.803
  STEP: Ensuring job reaches completions @ 08/01/25 01:48:23.822
  I0801 01:48:33.850912 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4494" for this suite. @ 08/01/25 01:48:33.853
â€¢ [10.090 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 08/01/25 01:48:33.862
  I0801 01:48:33.862725 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 01:48:33.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:48:33.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:48:33.895
  STEP: creating service in namespace services-6992 @ 08/01/25 01:48:33.906
  STEP: creating service affinity-nodeport-transition in namespace services-6992 @ 08/01/25 01:48:33.906
  I0801 01:48:33.985559 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0801 01:48:35.993103 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 48, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 48, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 48, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 48, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-transition-7d57658b6c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:48:37.988656 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 48, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 48, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 48, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 48, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-transition-7d57658b6c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:48:39.988228 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 48, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 48, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 48, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 48, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-transition-7d57658b6c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:48:41.989473 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 48, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 48, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 48, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 48, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-transition-7d57658b6c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 01:48:44.006266 23 resource.go:361] Creating new exec pod
  I0801 01:48:46.032935 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-6992 exec execpod-affinitybkwfr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0801 01:48:46.257656 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.53.231.104) 80 port [tcp/http] succeeded!\n"
  I0801 01:48:46.257710 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 01:48:46.257795 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-6992 exec execpod-affinitybkwfr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.231.104 80'
  I0801 01:48:46.394152 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.231.104 80\nConnection to 10.53.231.104 80 port [tcp/http] succeeded!\n"
  I0801 01:48:46.394215 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 01:48:46.394311 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-6992 exec execpod-affinitybkwfr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.42.0.16 32228'
  I0801 01:48:46.545153 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.42.0.16 32228\nConnection to 10.42.0.16 32228 port [tcp/*] succeeded!\n"
  I0801 01:48:46.545206 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 01:48:46.545279 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-6992 exec execpod-affinitybkwfr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.42.0.18 32228'
  I0801 01:48:46.686094 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.42.0.18 32228\nConnection to 10.42.0.18 32228 port [tcp/*] succeeded!\n"
  I0801 01:48:46.686157 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 01:48:46.698041 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-6992 exec execpod-affinitybkwfr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/ ; done'
  I0801 01:48:46.929272 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n"
  I0801 01:48:46.929326 23 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-nr26b\naffinity-nodeport-transition-7d57658b6c-hwjfc\naffinity-nodeport-transition-7d57658b6c-nr26b\naffinity-nodeport-transition-7d57658b6c-hwjfc\naffinity-nodeport-transition-7d57658b6c-nr26b\naffinity-nodeport-transition-7d57658b6c-nr26b\naffinity-nodeport-transition-7d57658b6c-nr26b\naffinity-nodeport-transition-7d57658b6c-nr26b\naffinity-nodeport-transition-7d57658b6c-hwjfc\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-hwjfc\naffinity-nodeport-transition-7d57658b6c-hwjfc\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-nr26b"
  I0801 01:48:46.929345 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-nr26b
  I0801 01:48:46.929355 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-hwjfc
  I0801 01:48:46.929363 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-nr26b
  I0801 01:48:46.929370 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-hwjfc
  I0801 01:48:46.929379 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-nr26b
  I0801 01:48:46.929386 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-nr26b
  I0801 01:48:46.929396 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-nr26b
  I0801 01:48:46.929404 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-nr26b
  I0801 01:48:46.929411 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-hwjfc
  I0801 01:48:46.929418 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:46.929425 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:46.929432 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-hwjfc
  I0801 01:48:46.929439 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-hwjfc
  I0801 01:48:46.929447 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:46.929454 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:46.929461 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-nr26b
  I0801 01:48:46.950870 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-6992 exec execpod-affinitybkwfr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/ ; done'
  I0801 01:48:47.205661 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32228/\n"
  I0801 01:48:47.205724 23 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm\naffinity-nodeport-transition-7d57658b6c-lzxrm"
  I0801 01:48:47.205742 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205756 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205772 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205784 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205797 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205806 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205813 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205828 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205837 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205844 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205854 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205866 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205875 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205884 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205894 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205902 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-lzxrm
  I0801 01:48:47.205972 23 service.go:4352] Cleaning up the exec pod
  I0801 01:48:47.317484 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6992" for this suite. @ 08/01/25 01:48:47.324
â€¢ [13.505 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 08/01/25 01:48:47.368
  I0801 01:48:47.368101 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename field-validation @ 08/01/25 01:48:47.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:48:47.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:48:47.404
  I0801 01:48:47.409427 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:48:49.962811      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0801 01:48:49.962842      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0801 01:48:49.962853      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0801 01:48:49.962865      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0801 01:48:49.962875      23 warnings.go:110] "Warning: unknown field \"gamma\""
  I0801 01:48:50.525708 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7625" for this suite. @ 08/01/25 01:48:50.528
â€¢ [3.182 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 08/01/25 01:48:50.549
  I0801 01:48:50.549762 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/01/25 01:48:50.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:48:50.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:48:50.581
  I0801 01:48:50.603467 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:48:51.183926 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-545" for this suite. @ 08/01/25 01:48:51.197
â€¢ [0.663 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 08/01/25 01:48:51.212
  I0801 01:48:51.212945 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 01:48:51.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:48:51.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:48:51.256
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 08/01/25 01:48:51.259
  STEP: Saw pod success @ 08/01/25 01:48:55.285
  I0801 01:48:55.288153 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-6679cca1-18d0-481b-8a77-d36feb02cebf container test-container: <nil>
  STEP: delete the pod @ 08/01/25 01:48:55.293
  I0801 01:48:55.324717 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2071" for this suite. @ 08/01/25 01:48:55.337
â€¢ [4.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 08/01/25 01:48:55.36
  I0801 01:48:55.360903 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 01:48:55.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:48:55.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:48:55.387
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 01:48:55.391
  STEP: Saw pod success @ 08/01/25 01:48:59.431
  I0801 01:48:59.434793 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-34e92b0e-c46b-4357-9d91-c360325a0c92 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 01:48:59.44
  I0801 01:48:59.471214 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3547" for this suite. @ 08/01/25 01:48:59.474
â€¢ [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 08/01/25 01:48:59.49
  I0801 01:48:59.490870 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 01:48:59.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:48:59.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:48:59.541
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 01:48:59.545
  STEP: Saw pod success @ 08/01/25 01:49:03.574
  I0801 01:49:03.576764 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-64b1dab8-2f4d-4f15-95da-fef0a40b8b56 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 01:49:03.582
  I0801 01:49:03.613147 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7767" for this suite. @ 08/01/25 01:49:03.616
â€¢ [4.158 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 08/01/25 01:49:03.649
  I0801 01:49:03.649551 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 01:49:03.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:49:03.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:49:03.703
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 08/01/25 01:49:03.708
  STEP: Saw pod success @ 08/01/25 01:49:07.737
  I0801 01:49:07.739762 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-7e6b95f3-a4dc-4b03-8992-20fc2b098aa1 container test-container: <nil>
  STEP: delete the pod @ 08/01/25 01:49:07.744
  I0801 01:49:07.795493 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9427" for this suite. @ 08/01/25 01:49:07.798
â€¢ [4.159 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 08/01/25 01:49:07.809
  I0801 01:49:07.809144 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 01:49:07.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:49:07.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:49:07.843
  STEP: Looking for a node to schedule job pods @ 08/01/25 01:49:07.846
  STEP: Creating a job @ 08/01/25 01:49:07.898
  STEP: Waiting for all the pods to be ready @ 08/01/25 01:49:07.914
  STEP: Fetch all running pods @ 08/01/25 01:49:11.924
  STEP: Evict all the Pods @ 08/01/25 01:49:11.927
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-wmqds/job-2054 @ 08/01/25 01:49:11.927
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-vc9c6/job-2054 @ 08/01/25 01:49:11.927
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-xbj2v/job-2054 @ 08/01/25 01:49:11.927
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-vc9c6/job-2054 to be deleted @ 08/01/25 01:49:11.97
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-xbj2v/job-2054 to be deleted @ 08/01/25 01:49:11.981
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-wmqds/job-2054 to be deleted @ 08/01/25 01:49:11.995
  STEP: Ensuring job reaches completions @ 08/01/25 01:49:18.021
  I0801 01:50:00.112714 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2054" for this suite. @ 08/01/25 01:50:00.123
â€¢ [52.339 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 08/01/25 01:50:00.148
  I0801 01:50:00.148795 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename csistoragecapacity @ 08/01/25 01:50:00.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:50:00.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:50:00.169
  STEP: getting /apis @ 08/01/25 01:50:00.173
  STEP: getting /apis/storage.k8s.io @ 08/01/25 01:50:00.178
  STEP: getting /apis/storage.k8s.io/v1 @ 08/01/25 01:50:00.179
  STEP: creating @ 08/01/25 01:50:00.181
  STEP: watching @ 08/01/25 01:50:00.224
  I0801 01:50:00.225027 23 csistoragecapacity.go:143] starting watch
  STEP: getting @ 08/01/25 01:50:00.239
  STEP: listing in namespace @ 08/01/25 01:50:00.241
  STEP: listing across namespaces @ 08/01/25 01:50:00.244
  STEP: patching @ 08/01/25 01:50:00.269
  STEP: updating @ 08/01/25 01:50:00.281
  I0801 01:50:00.292370 23 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0801 01:50:00.292526 23 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 08/01/25 01:50:00.292
  STEP: deleting a collection @ 08/01/25 01:50:00.314
  I0801 01:50:00.341179 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4771" for this suite. @ 08/01/25 01:50:00.343
â€¢ [0.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 08/01/25 01:50:00.355
  I0801 01:50:00.355504 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename cronjob @ 08/01/25 01:50:00.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:50:00.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:50:00.386
  STEP: Creating a ForbidConcurrent cronjob @ 08/01/25 01:50:00.39
  STEP: Ensuring a job is scheduled @ 08/01/25 01:50:00.408
  STEP: Ensuring exactly one is scheduled @ 08/01/25 01:51:00.414
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 08/01/25 01:51:00.417
  STEP: Ensuring no more jobs are scheduled @ 08/01/25 01:51:00.419
  STEP: Removing cronjob @ 08/01/25 01:51:00.422
  I0801 01:51:00.434679 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7887" for this suite. @ 08/01/25 01:51:00.442
â€¢ [60.097 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 08/01/25 01:51:00.453
  I0801 01:51:00.453106 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename resourcequota @ 08/01/25 01:51:00.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:51:00.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:51:00.499
  STEP: Counting existing ResourceQuota @ 08/01/25 01:51:00.505
  STEP: Creating a ResourceQuota @ 08/01/25 01:51:05.545
  STEP: Ensuring resource quota status is calculated @ 08/01/25 01:51:05.561
  I0801 01:51:07.585007 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2549" for this suite. @ 08/01/25 01:51:07.59
â€¢ [7.149 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 08/01/25 01:51:07.601
  I0801 01:51:07.601971 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 01:51:07.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:51:07.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:51:07.644
  I0801 01:51:07.653665 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-478" for this suite. @ 08/01/25 01:51:07.69
â€¢ [0.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 08/01/25 01:51:07.702
  I0801 01:51:07.702581 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename validating-admission-policy @ 08/01/25 01:51:07.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:51:07.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:51:07.759
  STEP: creating a policy with variables @ 08/01/25 01:51:07.795
  STEP: waiting until the marker is denied @ 08/01/25 01:51:07.863
  STEP: testing a replicated Deployment to be allowed @ 08/01/25 01:51:08.494
  STEP: testing a non-replicated ReplicaSet not to be denied @ 08/01/25 01:51:08.569
  I0801 01:51:08.713527 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9489" for this suite. @ 08/01/25 01:51:08.725
â€¢ [1.047 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 08/01/25 01:51:08.749
  I0801 01:51:08.750017 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename apf @ 08/01/25 01:51:08.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:51:08.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:51:08.788
  STEP: getting /apis @ 08/01/25 01:51:08.796
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 08/01/25 01:51:08.801
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 08/01/25 01:51:08.802
  STEP: creating @ 08/01/25 01:51:08.804
  STEP: getting @ 08/01/25 01:51:08.843
  STEP: listing @ 08/01/25 01:51:08.85
  STEP: watching @ 08/01/25 01:51:08.857
  I0801 01:51:08.857663 23 flowcontrol.go:620] starting watch
  STEP: patching @ 08/01/25 01:51:08.858
  STEP: updating @ 08/01/25 01:51:08.869
  I0801 01:51:08.888392 23 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 08/01/25 01:51:08.888
  STEP: patching /status @ 08/01/25 01:51:08.891
  STEP: updating /status @ 08/01/25 01:51:08.913
  STEP: deleting @ 08/01/25 01:51:08.925
  STEP: deleting a collection @ 08/01/25 01:51:08.94
  I0801 01:51:08.973571 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1075" for this suite. @ 08/01/25 01:51:08.992
â€¢ [0.264 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 08/01/25 01:51:09.014
  I0801 01:51:09.014509 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename field-validation @ 08/01/25 01:51:09.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:51:09.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:51:09.043
  I0801 01:51:09.047244 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:51:11.597101      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0801 01:51:11.597141      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0801 01:51:11.597153      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0801 01:51:11.597165      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0801 01:51:11.597177      23 warnings.go:110] "Warning: unknown field \"gamma\""
  I0801 01:51:12.181722 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9415" for this suite. @ 08/01/25 01:51:12.195
â€¢ [3.196 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 08/01/25 01:51:12.21
  I0801 01:51:12.210457 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 01:51:12.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:51:12.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:51:12.234
  STEP: Creating configMap with name cm-test-opt-del-7c52c4ee-e455-4be4-935b-8c3e860ef3b3 @ 08/01/25 01:51:12.302
  STEP: Creating configMap with name cm-test-opt-upd-2c37fa17-2610-49d0-a0ec-a37fbb802377 @ 08/01/25 01:51:12.312
  STEP: Creating the pod @ 08/01/25 01:51:12.327
  STEP: Deleting configmap cm-test-opt-del-7c52c4ee-e455-4be4-935b-8c3e860ef3b3 @ 08/01/25 01:51:16.387
  STEP: Updating configmap cm-test-opt-upd-2c37fa17-2610-49d0-a0ec-a37fbb802377 @ 08/01/25 01:51:16.404
  STEP: Creating configMap with name cm-test-opt-create-055b33ad-45b6-4270-94d1-cffb3d84b6d7 @ 08/01/25 01:51:16.412
  STEP: waiting to observe update in volume @ 08/01/25 01:51:16.428
  I0801 01:52:42.834753 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-978" for this suite. @ 08/01/25 01:52:42.838
â€¢ [90.642 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 08/01/25 01:52:42.852
  I0801 01:52:42.852473 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename replication-controller @ 08/01/25 01:52:42.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:52:42.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:52:42.889
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 08/01/25 01:52:42.893
  STEP: When a replication controller with a matching selector is created @ 08/01/25 01:52:44.92
  STEP: Then the orphan pod is adopted @ 08/01/25 01:52:44.93
  I0801 01:52:45.937652 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8909" for this suite. @ 08/01/25 01:52:45.94
â€¢ [3.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 08/01/25 01:52:45.956
  I0801 01:52:45.956212 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 01:52:45.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:52:45.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:52:45.982
  STEP: Creating configMap with name projected-configmap-test-volume-map-8b2f41f4-e06c-4866-9d5d-1d892733e770 @ 08/01/25 01:52:45.985
  STEP: Creating a pod to test consume configMaps @ 08/01/25 01:52:45.999
  STEP: Saw pod success @ 08/01/25 01:52:50.031
  I0801 01:52:50.033045 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-projected-configmaps-6340df6d-dd05-4d65-a5db-683d796f0949 container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 01:52:50.047
  I0801 01:52:50.072326 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1822" for this suite. @ 08/01/25 01:52:50.076
â€¢ [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 08/01/25 01:52:50.103
  I0801 01:52:50.103557 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 01:52:50.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:52:50.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:52:50.137
  STEP: Creating configMap with name projected-configmap-test-volume-1e038d8d-4bd2-4948-b6b2-9654af082f6c @ 08/01/25 01:52:50.14
  STEP: Creating a pod to test consume configMaps @ 08/01/25 01:52:50.149
  STEP: Saw pod success @ 08/01/25 01:52:54.172
  I0801 01:52:54.175892 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod pod-projected-configmaps-ab129ce5-d198-4f95-9dca-660d31173f5c container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 01:52:54.185
  I0801 01:52:54.237658 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-639" for this suite. @ 08/01/25 01:52:54.242
â€¢ [4.150 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 08/01/25 01:52:54.253
  I0801 01:52:54.253510 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename dns @ 08/01/25 01:52:54.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:52:54.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:52:54.293
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 08/01/25 01:52:54.297
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 08/01/25 01:52:54.297
  STEP: creating a pod to probe DNS @ 08/01/25 01:52:54.297
  STEP: submitting the pod to kubernetes @ 08/01/25 01:52:54.297
  STEP: retrieving the pod @ 08/01/25 01:53:04.342
  STEP: looking for the results for each expected name from probers @ 08/01/25 01:53:04.346
  I0801 01:53:04.363000 23 dns_common.go:546] DNS probes using dns-5443/dns-test-e9655b0e-d434-47f9-b9df-6158f1198e95 succeeded

  STEP: deleting the pod @ 08/01/25 01:53:04.363
  I0801 01:53:04.409735 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5443" for this suite. @ 08/01/25 01:53:04.413
â€¢ [10.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 08/01/25 01:53:04.422
  I0801 01:53:04.422843 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename daemonsets @ 08/01/25 01:53:04.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:53:04.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:53:04.457
  STEP: Creating simple DaemonSet "daemon-set" @ 08/01/25 01:53:04.533
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/01/25 01:53:04.549
  I0801 01:53:04.637817 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 01:53:04.637873 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 01:53:05.597840 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 01:53:05.597885 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 01:53:06.563248 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0801 01:53:06.563293 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 08/01/25 01:53:06.565
  I0801 01:53:06.569894 23 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 08/01/25 01:53:06.569
  I0801 01:53:06.739550 23 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 08/01/25 01:53:06.739
  I0801 01:53:06.745786 23 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0801 01:53:06.745900 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0801 01:53:06.745991 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0801 01:53:06.746295 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0801 01:53:06.746447 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0801 01:53:06.746487 23 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-4983 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0801 01:53:06.746508 23 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 08/01/25 01:53:06.746
  STEP: watching for the daemon set status to be patched @ 08/01/25 01:53:06.801
  I0801 01:53:06.803358 23 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0801 01:53:06.805180 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0801 01:53:06.805315 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0801 01:53:06.805417 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0801 01:53:06.805727 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0801 01:53:06.805760 23 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-4983 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0801 01:53:06.805858 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0801 01:53:06.806072 23 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-4983 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0801 01:53:06.806100 23 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 08/01/25 01:53:07.006
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4983, will wait for the garbage collector to delete the pods @ 08/01/25 01:53:07.006
  I0801 01:53:07.161415 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 97.134368ms
  I0801 01:53:07.662403 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 500.986191ms
  I0801 01:53:16.266089 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 01:53:16.266131 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0801 01:53:16.268890 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7746"},"items":null}

  I0801 01:53:16.271168 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7746"},"items":null}

  I0801 01:53:16.277997 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4983" for this suite. @ 08/01/25 01:53:16.29
â€¢ [11.889 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 08/01/25 01:53:16.312
  I0801 01:53:16.312371 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pods @ 08/01/25 01:53:16.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:53:16.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:53:16.336
  I0801 01:53:16.341579 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: creating the pod @ 08/01/25 01:53:16.342
  STEP: submitting the pod to kubernetes @ 08/01/25 01:53:16.342
  STEP: waiting for the container to be running @ 08/01/25 01:53:18.38
  I0801 01:53:18.390913 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3671" for this suite. @ 08/01/25 01:53:18.393
â€¢ [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 08/01/25 01:53:18.403
  I0801 01:53:18.403338 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename discovery @ 08/01/25 01:53:18.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:53:18.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:53:18.438
  STEP: Setting up server cert @ 08/01/25 01:53:18.443
  STEP: Requesting APIResourceList from "/api/v1" @ 08/01/25 01:53:19.391
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 08/01/25 01:53:19.392
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 08/01/25 01:53:19.394
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 08/01/25 01:53:19.395
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 08/01/25 01:53:19.396
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 08/01/25 01:53:19.398
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 08/01/25 01:53:19.399
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 08/01/25 01:53:19.4
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 08/01/25 01:53:19.402
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 08/01/25 01:53:19.403
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 08/01/25 01:53:19.404
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 08/01/25 01:53:19.405
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 08/01/25 01:53:19.406
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 08/01/25 01:53:19.407
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 08/01/25 01:53:19.408
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 08/01/25 01:53:19.409
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 08/01/25 01:53:19.41
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 08/01/25 01:53:19.411
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 08/01/25 01:53:19.412
  I0801 01:53:19.413284 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1149" for this suite. @ 08/01/25 01:53:19.415
â€¢ [1.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 08/01/25 01:53:19.424
  I0801 01:53:19.424662 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename deployment @ 08/01/25 01:53:19.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:53:19.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:53:19.45
  STEP: creating a Deployment @ 08/01/25 01:53:19.456
  I0801 01:53:19.456932 23 deployment.go:506] Creating simple deployment test-deployment-wn95q
  I0801 01:53:19.488113 23 deployment.go:223] deployment "test-deployment-wn95q" doesn't have the required revision set
  STEP: Getting /status @ 08/01/25 01:53:21.517
  I0801 01:53:21.521709 23 deployment.go:531] Deployment test-deployment-wn95q has Conditions: [{Available True 2025-08-01 01:53:21 +0000 UTC 2025-08-01 01:53:21 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-08-01 01:53:21 +0000 UTC 2025-08-01 01:53:19 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wn95q-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 08/01/25 01:53:21.521
  I0801 01:53:21.539182 23 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 53, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 53, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 53, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 53, 19, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-wn95q-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 08/01/25 01:53:21.539
  I0801 01:53:21.541358 23 deployment.go:578] Observed &Deployment event: ADDED
  I0801 01:53:21.541421 23 deployment.go:574] Observed Deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-08-01 01:53:19 +0000 UTC 2025-08-01 01:53:19 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wn95q-6fb4c74686"}
  I0801 01:53:21.541542 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0801 01:53:21.541574 23 deployment.go:574] Observed Deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-08-01 01:53:19 +0000 UTC 2025-08-01 01:53:19 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wn95q-6fb4c74686"}
  I0801 01:53:21.541592 23 deployment.go:574] Observed Deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-08-01 01:53:19 +0000 UTC 2025-08-01 01:53:19 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0801 01:53:21.541715 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0801 01:53:21.541739 23 deployment.go:574] Observed Deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-08-01 01:53:19 +0000 UTC 2025-08-01 01:53:19 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0801 01:53:21.541757 23 deployment.go:574] Observed Deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-08-01 01:53:19 +0000 UTC 2025-08-01 01:53:19 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-wn95q-6fb4c74686" is progressing.}
  I0801 01:53:21.541872 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0801 01:53:21.541903 23 deployment.go:574] Observed Deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-08-01 01:53:21 +0000 UTC 2025-08-01 01:53:21 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0801 01:53:21.541919 23 deployment.go:574] Observed Deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-08-01 01:53:21 +0000 UTC 2025-08-01 01:53:19 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wn95q-6fb4c74686" has successfully progressed.}
  I0801 01:53:21.542025 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0801 01:53:21.542045 23 deployment.go:574] Observed Deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-08-01 01:53:21 +0000 UTC 2025-08-01 01:53:21 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0801 01:53:21.542055 23 deployment.go:574] Observed Deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-08-01 01:53:21 +0000 UTC 2025-08-01 01:53:19 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wn95q-6fb4c74686" has successfully progressed.}
  I0801 01:53:21.542067 23 deployment.go:571] Found Deployment test-deployment-wn95q in namespace deployment-2994 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0801 01:53:21.542080 23 deployment.go:582] Deployment test-deployment-wn95q has an updated status
  STEP: patching the Statefulset Status @ 08/01/25 01:53:21.542
  I0801 01:53:21.542114 23 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0801 01:53:21.556380 23 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 08/01/25 01:53:21.556
  I0801 01:53:21.561937 23 deployment.go:615] Observed &Deployment event: ADDED
  I0801 01:53:21.562010 23 deployment.go:611] Observed deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-08-01 01:53:19 +0000 UTC 2025-08-01 01:53:19 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wn95q-6fb4c74686"}
  I0801 01:53:21.562129 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0801 01:53:21.564362 23 deployment.go:611] Observed deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-08-01 01:53:19 +0000 UTC 2025-08-01 01:53:19 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-wn95q-6fb4c74686"}
  I0801 01:53:21.564429 23 deployment.go:611] Observed deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-08-01 01:53:19 +0000 UTC 2025-08-01 01:53:19 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0801 01:53:21.564645 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0801 01:53:21.564671 23 deployment.go:611] Observed deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-08-01 01:53:19 +0000 UTC 2025-08-01 01:53:19 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0801 01:53:21.564685 23 deployment.go:611] Observed deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-08-01 01:53:19 +0000 UTC 2025-08-01 01:53:19 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-wn95q-6fb4c74686" is progressing.}
  I0801 01:53:21.564793 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0801 01:53:21.564824 23 deployment.go:611] Observed deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-08-01 01:53:21 +0000 UTC 2025-08-01 01:53:21 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0801 01:53:21.564841 23 deployment.go:611] Observed deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-08-01 01:53:21 +0000 UTC 2025-08-01 01:53:19 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wn95q-6fb4c74686" has successfully progressed.}
  I0801 01:53:21.564932 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0801 01:53:21.565116 23 deployment.go:611] Observed deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-08-01 01:53:21 +0000 UTC 2025-08-01 01:53:21 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0801 01:53:21.565148 23 deployment.go:611] Observed deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-08-01 01:53:21 +0000 UTC 2025-08-01 01:53:19 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-wn95q-6fb4c74686" has successfully progressed.}
  I0801 01:53:21.565165 23 deployment.go:611] Observed deployment test-deployment-wn95q in namespace deployment-2994 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0801 01:53:21.565289 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0801 01:53:21.565389 23 deployment.go:608] Found deployment test-deployment-wn95q in namespace deployment-2994 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0801 01:53:21.565416 23 deployment.go:619] Deployment test-deployment-wn95q has a patched status
  I0801 01:53:21.579989 23 deployment.go:632] Deployment "test-deployment-wn95q":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-wn95q",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2994",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a875a133-911a-4562-8457-04eb2bf92261",
      ResourceVersion: (string) (len=4) "7815",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889609999,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889609999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889610001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889610001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889610001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889610001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-wn95q-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0801 01:53:21.614648 23 deployment.go:40] New ReplicaSet "test-deployment-wn95q-6fb4c74686" of Deployment "test-deployment-wn95q":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-wn95q-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2994",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e90d681-975f-487f-b121-31ad976ba56e",
      ResourceVersion: (string) (len=4) "7798",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889609999,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-wn95q",
          UID: (types.UID) (len=36) "a875a133-911a-4562-8457-04eb2bf92261",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889609999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 61 38 37  |k:{\"uid\":\"a87|
              00000120  35 61 31 33 33 2d 39 31  31 61 2d 34 35 36 32 2d  |5a133-911a-4562-|
              00000130  38 34 35 37 2d 30 34 65  62 32 62 66 39 32 32 36  |8457-04eb2bf9226|
              00000140  31 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |1\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889610001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0801 01:53:21.618899 23 deployment.go:68] Pod "test-deployment-wn95q-6fb4c74686-b5qjg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-wn95q-6fb4c74686-b5qjg",
      GenerateName: (string) (len=33) "test-deployment-wn95q-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-2994",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "804688b4-0c5d-4ca7-8b7e-1e1dda5283e6",
      ResourceVersion: (string) (len=4) "7797",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889609999,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-wn95q-6fb4c74686",
          UID: (types.UID) (len=36) "0e90d681-975f-487f-b121-31ad976ba56e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889609999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 30 65 39 30 64 36 38  31 2d 39 37 35 66 2d 34  |"0e90d681-975f-4|
              000000a0  38 37 66 2d 62 31 32 31  2d 33 31 61 64 39 37 36  |87f-b121-31ad976|
              000000b0  62 61 35 36 65 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |ba56e\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889610001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 30 2e 33 36  5c 22 7d 22 3a 7b 22 2e  |.52.0.36\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w8xq6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w8xq6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889610001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889609999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889610001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889610001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889609999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) (len=10) "10.52.0.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.52.0.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889609999,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889610000,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://32858e532ab03cb96c4d53b7cecfeb8af2a5db48ed21ca3e5d99e97b99712523",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w8xq6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 01:53:21.621533 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2994" for this suite. @ 08/01/25 01:53:21.625
â€¢ [2.215 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 08/01/25 01:53:21.64
  I0801 01:53:21.640894 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 01:53:21.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:53:21.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:53:21.665
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 01:53:21.669
  STEP: Saw pod success @ 08/01/25 01:53:25.703
  I0801 01:53:25.706105 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-e726ac91-6f5f-4eca-8126-bd30a5c71676 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 01:53:25.711
  I0801 01:53:25.747813 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5776" for this suite. @ 08/01/25 01:53:25.751
â€¢ [4.130 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 08/01/25 01:53:25.77
  I0801 01:53:25.770774 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/01/25 01:53:25.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:53:25.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:53:25.807
  I0801 01:53:25.812871 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:53:26.849263 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7894" for this suite. @ 08/01/25 01:53:26.851
â€¢ [1.091 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 08/01/25 01:53:26.862
  I0801 01:53:26.862046 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 01:53:26.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:53:26.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:53:26.895
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 08/01/25 01:53:26.899
  STEP: Saw pod success @ 08/01/25 01:53:31.018
  I0801 01:53:31.020547 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod pod-fc9b7588-8a24-4e12-9bcc-1a388e456e4e container test-container: <nil>
  STEP: delete the pod @ 08/01/25 01:53:31.024
  I0801 01:53:31.046146 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4751" for this suite. @ 08/01/25 01:53:31.05
â€¢ [4.196 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 08/01/25 01:53:31.058
  I0801 01:53:31.058545 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename crd-webhook @ 08/01/25 01:53:31.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:53:31.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:53:31.082
  STEP: Setting up server cert @ 08/01/25 01:53:31.086
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 08/01/25 01:53:32.145
  STEP: Deploying the custom resource conversion webhook pod @ 08/01/25 01:53:32.163
  STEP: Wait for the deployment to be ready @ 08/01/25 01:53:32.19
  I0801 01:53:32.207812 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 01:53:34.225
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 01:53:34.255
  I0801 01:53:35.256011 23 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0801 01:53:35.259557 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Creating a v1 custom resource @ 08/01/25 01:53:37.834
  STEP: v2 custom resource should be converted @ 08/01/25 01:53:37.843
  I0801 01:53:38.491999 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3688" for this suite. @ 08/01/25 01:53:38.494
â€¢ [7.446 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 08/01/25 01:53:38.506
  I0801 01:53:38.506499 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename secrets @ 08/01/25 01:53:38.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:53:38.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:53:38.528
  STEP: Creating secret with name secret-test-map-a3024835-5259-4ae0-85d6-0236ffcbe889 @ 08/01/25 01:53:38.532
  STEP: Creating a pod to test consume secrets @ 08/01/25 01:53:38.542
  STEP: Saw pod success @ 08/01/25 01:53:42.562
  I0801 01:53:42.565213 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod pod-secrets-500cafe4-4abd-44de-9a02-3200319d4253 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 01:53:42.569
  I0801 01:53:42.611684 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3748" for this suite. @ 08/01/25 01:53:42.614
â€¢ [4.126 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 08/01/25 01:53:42.633
  I0801 01:53:42.633371 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/01/25 01:53:42.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:53:42.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:53:42.676
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 08/01/25 01:53:42.68
  I0801 01:53:42.681497 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 08/01/25 01:53:48.717
  I0801 01:53:48.717680 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:53:50.301915 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:53:56.265374 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8877" for this suite. @ 08/01/25 01:53:56.272
â€¢ [13.654 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 08/01/25 01:53:56.287
  I0801 01:53:56.287410 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pod-network-test @ 08/01/25 01:53:56.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:53:56.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:53:56.324
  STEP: Performing setup for networking test in namespace pod-network-test-1961 @ 08/01/25 01:53:56.327
  STEP: creating a selector @ 08/01/25 01:53:56.327
  STEP: Creating the service pods in kubernetes @ 08/01/25 01:53:56.327
  I0801 01:53:56.327607 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 08/01/25 01:54:10.479
  I0801 01:54:12.550295 23 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0801 01:54:12.550333 23 utils.go:495] Going to poll 10.52.1.54 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0801 01:54:12.552908 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.52.1.54:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1961 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 01:54:12.552947 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 01:54:12.553009 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/pod-network-test-1961/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.52.1.54%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0801 01:54:12.650458 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 01:54:12.650525 23 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0801 01:54:12.650545 23 utils.go:495] Going to poll 10.52.0.40 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0801 01:54:12.653032 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.52.0.40:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1961 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 01:54:12.653076 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 01:54:12.653141 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/pod-network-test-1961/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.52.0.40%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0801 01:54:12.742647 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 01:54:12.742714 23 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0801 01:54:12.742842 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1961" for this suite. @ 08/01/25 01:54:12.746
â€¢ [16.477 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 08/01/25 01:54:12.764
  I0801 01:54:12.764698 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 01:54:12.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:54:12.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:54:12.791
  STEP: Setting up server cert @ 08/01/25 01:54:12.88
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 01:54:13.24
  STEP: Deploying the webhook pod @ 08/01/25 01:54:13.269
  STEP: Wait for the deployment to be ready @ 08/01/25 01:54:13.297
  I0801 01:54:13.314223 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 01:54:15.323
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 01:54:15.356
  I0801 01:54:16.356606 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 08/01/25 01:54:16.36
  STEP: create a pod that should be updated by the webhook @ 08/01/25 01:54:16.386
  I0801 01:54:16.544282 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8889" for this suite. @ 08/01/25 01:54:16.555
  STEP: Destroying namespace "webhook-markers-4093" for this suite. @ 08/01/25 01:54:16.573
â€¢ [3.817 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 08/01/25 01:54:16.581
  I0801 01:54:16.582010 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename field-validation @ 08/01/25 01:54:16.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:54:16.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:54:16.615
  I0801 01:54:16.619659 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  W0801 01:54:16.620639      23 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0043b7e00 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  I0801 01:54:19.157559      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0801 01:54:19.157589      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0801 01:54:19.157601      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0801 01:54:19.157608      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0801 01:54:19.157617      23 warnings.go:110] "Warning: unknown field \"gamma\""
  I0801 01:54:19.706818 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5104" for this suite. @ 08/01/25 01:54:19.71
â€¢ [3.145 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 08/01/25 01:54:19.727
  I0801 01:54:19.727503 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubelet-test @ 08/01/25 01:54:19.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:54:19.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:54:19.748
  I0801 01:54:21.809067 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2907" for this suite. @ 08/01/25 01:54:21.813
â€¢ [2.096 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 08/01/25 01:54:21.823
  I0801 01:54:21.823591 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename subpath @ 08/01/25 01:54:21.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:54:21.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:54:21.865
  STEP: Setting up data @ 08/01/25 01:54:21.868
  STEP: Creating pod pod-subpath-test-downwardapi-hpfh @ 08/01/25 01:54:21.891
  STEP: Creating a pod to test atomic-volume-subpath @ 08/01/25 01:54:21.891
  STEP: Saw pod success @ 08/01/25 01:54:45.977
  I0801 01:54:45.980354 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-subpath-test-downwardapi-hpfh container test-container-subpath-downwardapi-hpfh: <nil>
  STEP: delete the pod @ 08/01/25 01:54:45.986
  STEP: Deleting pod pod-subpath-test-downwardapi-hpfh @ 08/01/25 01:54:46.011
  I0801 01:54:46.011409 23 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-hpfh" in namespace "subpath-4997"
  I0801 01:54:46.014231 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4997" for this suite. @ 08/01/25 01:54:46.017
â€¢ [24.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 08/01/25 01:54:46.026
  I0801 01:54:46.026891 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename endpointslicemirroring @ 08/01/25 01:54:46.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:54:46.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:54:46.055
  STEP: mirroring a new custom Endpoint @ 08/01/25 01:54:46.088
  I0801 01:54:46.098652      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 01:54:46.102676 23 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 08/01/25 01:54:48.105
  I0801 01:54:48.115682      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 08/01/25 01:54:48.139
  I0801 01:54:48.163460      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 01:54:48.174340 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-2192" for this suite. @ 08/01/25 01:54:48.177
â€¢ [2.165 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 08/01/25 01:54:48.192
  I0801 01:54:48.192377 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 01:54:48.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:54:48.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:54:48.226
  STEP: validating api versions @ 08/01/25 01:54:48.239
  I0801 01:54:48.240136 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-790 api-versions'
  I0801 01:54:48.331689 23 builder.go:146] stderr: ""
  I0801 01:54:48.331755 23 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\ngateway.networking.k8s.io/v1\ngateway.networking.k8s.io/v1beta1\nhelm.cattle.io/v1\nhub.traefik.io/v1alpha1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\ntraefik.io/v1alpha1\nv1\n"
  I0801 01:54:48.331868 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-790" for this suite. @ 08/01/25 01:54:48.337
â€¢ [0.155 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 08/01/25 01:54:48.347
  I0801 01:54:48.347529 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename disruption @ 08/01/25 01:54:48.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:54:48.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:54:48.384
  STEP: Waiting for the pdb to be processed @ 08/01/25 01:54:48.399
  STEP: Waiting for all pods to be running @ 08/01/25 01:54:50.461
  I0801 01:54:50.469010 23 disruption.go:691] running pods: 0 < 3
  I0801 01:54:52.466023 23 disruption.go:691] running pods: 1 < 3
  I0801 01:54:54.468708 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7689" for this suite. @ 08/01/25 01:54:54.471
â€¢ [6.134 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 08/01/25 01:54:54.481
  I0801 01:54:54.481344 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 08/01/25 01:54:54.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:54:54.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:54:54.521
  STEP: creating a target pod @ 08/01/25 01:54:54.526
  STEP: adding an ephemeral container @ 08/01/25 01:54:56.547
  STEP: verifying the pod's generation is 2 @ 08/01/25 01:55:00.587
  STEP: checking pod container endpoints @ 08/01/25 01:55:00.594
  I0801 01:55:00.594629 23 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2963 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 01:55:00.594652 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 01:55:00.594714 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/ephemeral-containers-test-2963/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0801 01:55:00.705676 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 01:55:00.705726 23 exec_util.go:112] Exec stderr: ""
  I0801 01:55:00.718027 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2963" for this suite. @ 08/01/25 01:55:00.728
â€¢ [6.271 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 08/01/25 01:55:00.753
  I0801 01:55:00.753178 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename csiinlinevolumes @ 08/01/25 01:55:00.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:55:00.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:55:00.782
  STEP: Creating two CSIDrivers @ 08/01/25 01:55:00.786
  STEP: Getting "inline-driver-6d176444-4ade-4ef8-93cc-505c70219cd1" & "inline-driver-fce90324-5916-48e6-a36c-75443cb868d6" @ 08/01/25 01:55:00.819
  STEP: Patching the CSIDriver "inline-driver-fce90324-5916-48e6-a36c-75443cb868d6" @ 08/01/25 01:55:00.825
  STEP: Updating the CSIDriver "inline-driver-fce90324-5916-48e6-a36c-75443cb868d6" @ 08/01/25 01:55:00.836
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7560" @ 08/01/25 01:55:00.846
  STEP: Deleting CSIDriver "inline-driver-6d176444-4ade-4ef8-93cc-505c70219cd1" @ 08/01/25 01:55:00.85
  STEP: Confirm deletion of CSIDriver "inline-driver-6d176444-4ade-4ef8-93cc-505c70219cd1" @ 08/01/25 01:55:00.86
  STEP: Deleting CSIDriver "inline-driver-fce90324-5916-48e6-a36c-75443cb868d6" via DeleteCollection @ 08/01/25 01:55:00.864
  STEP: Confirm deletion of CSIDriver "inline-driver-fce90324-5916-48e6-a36c-75443cb868d6" @ 08/01/25 01:55:00.879
  I0801 01:55:00.882692 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7560" for this suite. @ 08/01/25 01:55:00.885
â€¢ [0.142 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 08/01/25 01:55:00.895
  I0801 01:55:00.895273 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 01:55:00.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:55:00.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:55:00.922
  STEP: Creating configMap with name configmap-test-volume-d239f28e-aeb8-4ce7-8223-5212f558d767 @ 08/01/25 01:55:00.925
  STEP: Creating a pod to test consume configMaps @ 08/01/25 01:55:00.94
  STEP: Saw pod success @ 08/01/25 01:55:04.963
  I0801 01:55:04.966059 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-configmaps-2a06b315-fc3d-4009-872e-ae89ea96eb88 container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 01:55:04.97
  I0801 01:55:05.010164 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4783" for this suite. @ 08/01/25 01:55:05.013
â€¢ [4.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 08/01/25 01:55:05.037
  I0801 01:55:05.037393 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename field-validation @ 08/01/25 01:55:05.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:55:05.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:55:05.082
  I0801 01:55:05.089465 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:55:08.212860 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5799" for this suite. @ 08/01/25 01:55:08.215
â€¢ [3.192 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 08/01/25 01:55:08.229
  I0801 01:55:08.229269 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 01:55:08.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:55:08.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:55:08.265
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 08/01/25 01:55:08.274
  STEP: Saw pod success @ 08/01/25 01:55:12.302
  I0801 01:55:12.307912 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-38af738b-c27e-4fa9-a814-3bae53dc7773 container test-container: <nil>
  STEP: delete the pod @ 08/01/25 01:55:12.317
  I0801 01:55:12.345574 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3302" for this suite. @ 08/01/25 01:55:12.349
â€¢ [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 08/01/25 01:55:12.359
  I0801 01:55:12.359785 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename discovery @ 08/01/25 01:55:12.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:55:12.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:55:12.383
  STEP: Setting up server cert @ 08/01/25 01:55:12.395
  I0801 01:55:12.994227 23 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0801 01:55:12.995280 23 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0801 01:55:12.995321 23 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0801 01:55:12.995330 23 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0801 01:55:12.995338 23 discovery.go:139] Checking APIGroup: apps
  I0801 01:55:12.996584 23 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0801 01:55:12.996624 23 discovery.go:148] Versions found [{apps/v1 v1}]
  I0801 01:55:12.996633 23 discovery.go:154] apps/v1 matches apps/v1
  I0801 01:55:12.996644 23 discovery.go:139] Checking APIGroup: events.k8s.io
  I0801 01:55:12.997961 23 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0801 01:55:12.998000 23 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0801 01:55:12.998012 23 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0801 01:55:12.998023 23 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0801 01:55:12.999095 23 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0801 01:55:12.999134 23 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0801 01:55:12.999144 23 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0801 01:55:12.999157 23 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0801 01:55:13.000223 23 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0801 01:55:13.000272 23 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0801 01:55:13.000284 23 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0801 01:55:13.000296 23 discovery.go:139] Checking APIGroup: autoscaling
  I0801 01:55:13.001363 23 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0801 01:55:13.001403 23 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0801 01:55:13.001415 23 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0801 01:55:13.001426 23 discovery.go:139] Checking APIGroup: batch
  I0801 01:55:13.003264 23 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0801 01:55:13.003306 23 discovery.go:148] Versions found [{batch/v1 v1}]
  I0801 01:55:13.003317 23 discovery.go:154] batch/v1 matches batch/v1
  I0801 01:55:13.003329 23 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0801 01:55:13.007617 23 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0801 01:55:13.007657 23 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0801 01:55:13.007669 23 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0801 01:55:13.007678 23 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0801 01:55:13.013736 23 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0801 01:55:13.013795 23 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0801 01:55:13.013805 23 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0801 01:55:13.013816 23 discovery.go:139] Checking APIGroup: policy
  I0801 01:55:13.023514 23 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0801 01:55:13.023581 23 discovery.go:148] Versions found [{policy/v1 v1}]
  I0801 01:55:13.023592 23 discovery.go:154] policy/v1 matches policy/v1
  I0801 01:55:13.023603 23 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0801 01:55:13.025818 23 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0801 01:55:13.025870 23 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0801 01:55:13.025952 23 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0801 01:55:13.025963 23 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0801 01:55:13.029087 23 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0801 01:55:13.029137 23 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0801 01:55:13.029147 23 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0801 01:55:13.029159 23 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0801 01:55:13.031293 23 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0801 01:55:13.031340 23 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0801 01:55:13.031357 23 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0801 01:55:13.031368 23 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0801 01:55:13.036519 23 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0801 01:55:13.036575 23 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0801 01:55:13.036584 23 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0801 01:55:13.036592 23 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0801 01:55:13.039780 23 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0801 01:55:13.039825 23 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0801 01:55:13.039837 23 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0801 01:55:13.039847 23 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0801 01:55:13.041781 23 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0801 01:55:13.041897 23 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0801 01:55:13.041918 23 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0801 01:55:13.041929 23 discovery.go:139] Checking APIGroup: node.k8s.io
  I0801 01:55:13.043178 23 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0801 01:55:13.043223 23 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0801 01:55:13.043234 23 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0801 01:55:13.043244 23 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0801 01:55:13.044790 23 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0801 01:55:13.044839 23 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0801 01:55:13.044851 23 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0801 01:55:13.044864 23 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0801 01:55:13.074935 23 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0801 01:55:13.074991 23 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0801 01:55:13.075004 23 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0801 01:55:13.075015 23 discovery.go:139] Checking APIGroup: gateway.networking.k8s.io
  I0801 01:55:13.079017 23 discovery.go:147] PreferredVersion.GroupVersion: gateway.networking.k8s.io/v1
  I0801 01:55:13.079078 23 discovery.go:148] Versions found [{gateway.networking.k8s.io/v1 v1} {gateway.networking.k8s.io/v1beta1 v1beta1}]
  I0801 01:55:13.079093 23 discovery.go:154] gateway.networking.k8s.io/v1 matches gateway.networking.k8s.io/v1
  I0801 01:55:13.079104 23 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0801 01:55:13.081474 23 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0801 01:55:13.081541 23 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0801 01:55:13.081554 23 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0801 01:55:13.081566 23 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0801 01:55:13.082664 23 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0801 01:55:13.082706 23 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0801 01:55:13.082714 23 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0801 01:55:13.082722 23 discovery.go:139] Checking APIGroup: hub.traefik.io
  I0801 01:55:13.083960 23 discovery.go:147] PreferredVersion.GroupVersion: hub.traefik.io/v1alpha1
  I0801 01:55:13.084076 23 discovery.go:148] Versions found [{hub.traefik.io/v1alpha1 v1alpha1}]
  I0801 01:55:13.084184 23 discovery.go:154] hub.traefik.io/v1alpha1 matches hub.traefik.io/v1alpha1
  I0801 01:55:13.084207 23 discovery.go:139] Checking APIGroup: traefik.io
  I0801 01:55:13.085995 23 discovery.go:147] PreferredVersion.GroupVersion: traefik.io/v1alpha1
  I0801 01:55:13.086249 23 discovery.go:148] Versions found [{traefik.io/v1alpha1 v1alpha1}]
  I0801 01:55:13.086270 23 discovery.go:154] traefik.io/v1alpha1 matches traefik.io/v1alpha1
  I0801 01:55:13.086281 23 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0801 01:55:13.087993 23 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0801 01:55:13.088029 23 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0801 01:55:13.088037 23 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0801 01:55:13.088276 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2571" for this suite. @ 08/01/25 01:55:13.101
â€¢ [0.754 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 08/01/25 01:55:13.113
  I0801 01:55:13.113989 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename aggregateddiscovery @ 08/01/25 01:55:13.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:55:13.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:55:13.171
  I0801 01:55:13.175681 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:55:16.235025 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7736" for this suite. @ 08/01/25 01:55:16.238
â€¢ [3.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 08/01/25 01:55:16.254
  I0801 01:55:16.254364 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename gc @ 08/01/25 01:55:16.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:55:16.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:55:16.289
  STEP: create the deployment @ 08/01/25 01:55:16.296
  I0801 01:55:16.306373      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 08/01/25 01:55:16.306
  STEP: delete the deployment @ 08/01/25 01:55:16.81
  STEP: wait for all rs to be garbage collected @ 08/01/25 01:55:16.823
  STEP: expected 0 pods, got 2 pods @ 08/01/25 01:55:16.842
  STEP: Gathering metrics @ 08/01/25 01:55:17.333
  W0801 01:55:17.338833      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0801 01:55:17.338877 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0801 01:55:17.339108 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1267" for this suite. @ 08/01/25 01:55:17.341
â€¢ [1.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 08/01/25 01:55:17.369
  I0801 01:55:17.369107 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename apf @ 08/01/25 01:55:17.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:55:17.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:55:17.402
  STEP: getting /apis @ 08/01/25 01:55:17.406
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 08/01/25 01:55:17.412
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 08/01/25 01:55:17.416
  STEP: creating @ 08/01/25 01:55:17.418
  STEP: getting @ 08/01/25 01:55:17.452
  STEP: listing @ 08/01/25 01:55:17.457
  STEP: watching @ 08/01/25 01:55:17.459
  I0801 01:55:17.459989 23 flowcontrol.go:394] starting watch
  STEP: patching @ 08/01/25 01:55:17.461
  STEP: updating @ 08/01/25 01:55:17.475
  I0801 01:55:17.507611 23 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 08/01/25 01:55:17.507
  STEP: patching /status @ 08/01/25 01:55:17.518
  STEP: updating /status @ 08/01/25 01:55:17.531
  STEP: deleting @ 08/01/25 01:55:17.622
  STEP: deleting a collection @ 08/01/25 01:55:17.668
  I0801 01:55:17.721735 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9111" for this suite. @ 08/01/25 01:55:17.724
â€¢ [0.376 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 08/01/25 01:55:17.745
  I0801 01:55:17.745474 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename statefulset @ 08/01/25 01:55:17.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:55:17.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:55:17.831
  STEP: Creating service test in namespace statefulset-444 @ 08/01/25 01:55:17.842
  STEP: Creating a new StatefulSet @ 08/01/25 01:55:17.877
  I0801 01:55:17.902372 23 wait.go:44] Found 0 stateful pods, waiting for 3
  I0801 01:55:27.890116 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0801 01:55:27.890165 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0801 01:55:27.890178 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0801 01:55:27.896626 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-444 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0801 01:55:28.087741 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0801 01:55:28.087794 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0801 01:55:28.087807 23 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 08/01/25 01:55:38.097
  I0801 01:55:38.114018 23 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 08/01/25 01:55:38.114
  STEP: Updating Pods in reverse ordinal order @ 08/01/25 01:55:48.12
  I0801 01:55:48.124286 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-444 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0801 01:55:48.286935 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0801 01:55:48.286996 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0801 01:55:48.287014 23 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0801 01:56:08.508168 23 wait.go:158] Waiting for StatefulSet statefulset-444/ss2 to complete update
  I0801 01:56:08.508225 23 wait.go:165] Waiting for Pod statefulset-444/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Rolling back to a previous revision @ 08/01/25 01:56:18.51
  I0801 01:56:18.510446 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-444 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0801 01:56:18.709632 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0801 01:56:18.709685 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0801 01:56:18.709703 23 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0801 01:56:28.736208 23 statefulset.go:2542] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 08/01/25 01:56:38.744
  I0801 01:56:38.748380 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-444 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0801 01:56:38.909140 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0801 01:56:38.909188 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0801 01:56:38.909203 23 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0801 01:56:48.920546 23 statefulset.go:138] Deleting all statefulset in ns statefulset-444
  I0801 01:56:48.922953 23 rest.go:153] Scaling statefulset ss2 to 0
  I0801 01:56:58.950013 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0801 01:56:58.952302 23 rest.go:91] Deleting statefulset ss2
  I0801 01:56:58.966869 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-444" for this suite. @ 08/01/25 01:56:58.97
â€¢ [101.234 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 08/01/25 01:56:58.98
  I0801 01:56:58.980182 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir-wrapper @ 08/01/25 01:56:58.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:56:59.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:56:59.018
  STEP: Creating 50 configmaps @ 08/01/25 01:56:59.022
  STEP: Creating RC which spawns configmap-volume pods @ 08/01/25 01:56:59.703
  I0801 01:56:59.723768 23 resource.go:81] Pod name wrapped-volume-race-8dcc436d-530a-4f35-8f19-9b50914322f3: Found 0 pods out of 5
  I0801 01:57:04.745051 23 resource.go:81] Pod name wrapped-volume-race-8dcc436d-530a-4f35-8f19-9b50914322f3: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/01/25 01:57:04.745
  STEP: Creating RC which spawns configmap-volume pods @ 08/01/25 01:57:04.817
  I0801 01:57:04.865886 23 resource.go:81] Pod name wrapped-volume-race-87bae1b8-945d-4382-99ef-b3017b492c0e: Found 0 pods out of 5
  I0801 01:57:09.871646 23 resource.go:81] Pod name wrapped-volume-race-87bae1b8-945d-4382-99ef-b3017b492c0e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/01/25 01:57:09.871
  STEP: Creating RC which spawns configmap-volume pods @ 08/01/25 01:57:11.901
  I0801 01:57:11.943132 23 resource.go:81] Pod name wrapped-volume-race-97efd86d-cfc1-4d51-bfb4-e0fcf3b89898: Found 0 pods out of 5
  I0801 01:57:16.950687 23 resource.go:81] Pod name wrapped-volume-race-97efd86d-cfc1-4d51-bfb4-e0fcf3b89898: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/01/25 01:57:16.95
  STEP: deleting ReplicationController wrapped-volume-race-97efd86d-cfc1-4d51-bfb4-e0fcf3b89898 in namespace emptydir-wrapper-8988, will wait for the garbage collector to delete the pods @ 08/01/25 01:57:16.97
  I0801 01:57:17.042065 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-97efd86d-cfc1-4d51-bfb4-e0fcf3b89898 took: 17.516871ms
  I0801 01:57:17.142543 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-97efd86d-cfc1-4d51-bfb4-e0fcf3b89898 pods took: 100.474321ms
  STEP: deleting ReplicationController wrapped-volume-race-87bae1b8-945d-4382-99ef-b3017b492c0e in namespace emptydir-wrapper-8988, will wait for the garbage collector to delete the pods @ 08/01/25 01:57:23.643
  I0801 01:57:23.709909 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-87bae1b8-945d-4382-99ef-b3017b492c0e took: 10.607119ms
  I0801 01:57:23.910267 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-87bae1b8-945d-4382-99ef-b3017b492c0e pods took: 200.35498ms
  STEP: deleting ReplicationController wrapped-volume-race-8dcc436d-530a-4f35-8f19-9b50914322f3 in namespace emptydir-wrapper-8988, will wait for the garbage collector to delete the pods @ 08/01/25 01:57:25.411
  I0801 01:57:25.488206 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-8dcc436d-530a-4f35-8f19-9b50914322f3 took: 11.558834ms
  I0801 01:57:25.688449 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-8dcc436d-530a-4f35-8f19-9b50914322f3 pods took: 200.240059ms
  STEP: Cleaning up the configMaps @ 08/01/25 01:57:26.589
  I0801 01:57:27.084986 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8988" for this suite. @ 08/01/25 01:57:27.091
â€¢ [28.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 08/01/25 01:57:27.101
  I0801 01:57:27.101107 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-probe @ 08/01/25 01:57:27.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:57:27.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:57:27.126
  I0801 01:57:51.193210 23 container_probe.go:91] Container started at 2025-08-01 01:57:27 +0000 UTC, pod became ready at 2025-08-01 01:57:49 +0000 UTC
  I0801 01:57:51.193347 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-510" for this suite. @ 08/01/25 01:57:51.195
â€¢ [24.104 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 08/01/25 01:57:51.205
  I0801 01:57:51.205126 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename replicaset @ 08/01/25 01:57:51.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:57:51.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:57:51.242
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 08/01/25 01:57:51.246
  I0801 01:57:51.277332 23 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/01/25 01:57:51.277
  STEP: getting scale subresource @ 08/01/25 01:57:53.294
  STEP: updating a scale subresource @ 08/01/25 01:57:53.296
  STEP: verifying the replicaset Spec.Replicas was modified @ 08/01/25 01:57:53.309
  STEP: Patch a scale subresource @ 08/01/25 01:57:53.316
  I0801 01:57:53.346441 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4552" for this suite. @ 08/01/25 01:57:53.35
â€¢ [2.155 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 08/01/25 01:57:53.36
  I0801 01:57:53.360863 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename endpointslice @ 08/01/25 01:57:53.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:57:53.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:57:53.405
  STEP: getting /apis @ 08/01/25 01:57:53.408
  STEP: getting /apis/discovery.k8s.io @ 08/01/25 01:57:53.414
  STEP: getting /apis/discovery.k8s.iov1 @ 08/01/25 01:57:53.415
  STEP: creating @ 08/01/25 01:57:53.417
  STEP: getting @ 08/01/25 01:57:53.452
  STEP: listing @ 08/01/25 01:57:53.456
  STEP: watching @ 08/01/25 01:57:53.459
  I0801 01:57:53.459604 23 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 08/01/25 01:57:53.461
  STEP: cluster-wide watching @ 08/01/25 01:57:53.463
  I0801 01:57:53.463505 23 endpointslice.go:459] starting watch
  STEP: patching @ 08/01/25 01:57:53.464
  STEP: updating @ 08/01/25 01:57:53.473
  I0801 01:57:53.505409 23 endpointslice.go:482] waiting for watch events with expected annotations
  I0801 01:57:53.505469 23 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 08/01/25 01:57:53.505
  STEP: deleting a collection @ 08/01/25 01:57:53.522
  I0801 01:57:53.544171 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6593" for this suite. @ 08/01/25 01:57:53.548
â€¢ [0.202 seconds]
------------------------------
S
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 08/01/25 01:57:53.563
  I0801 01:57:53.563749 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename controllerrevisions @ 08/01/25 01:57:53.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:57:53.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:57:53.591
  STEP: Creating DaemonSet "e2e-2m6sh-daemon-set" @ 08/01/25 01:57:53.654
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/01/25 01:57:53.662
  I0801 01:57:53.754770 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2m6sh-daemon-set: 0
  I0801 01:57:53.754924 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 01:57:54.670506 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2m6sh-daemon-set: 0
  I0801 01:57:54.670547 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 01:57:55.669797 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2m6sh-daemon-set: 2
  I0801 01:57:55.669841 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-2m6sh-daemon-set
  STEP: Confirm DaemonSet "e2e-2m6sh-daemon-set" successfully created with "daemonset-name=e2e-2m6sh-daemon-set" label @ 08/01/25 01:57:55.671
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-2m6sh-daemon-set" @ 08/01/25 01:57:55.675
  I0801 01:57:55.680708 23 controller_revision.go:162] Located ControllerRevision: "e2e-2m6sh-daemon-set-744dcc646"
  STEP: Patching ControllerRevision "e2e-2m6sh-daemon-set-744dcc646" @ 08/01/25 01:57:55.682
  I0801 01:57:55.697120 23 controller_revision.go:173] e2e-2m6sh-daemon-set-744dcc646 has been patched
  STEP: Create a new ControllerRevision @ 08/01/25 01:57:55.697
  I0801 01:57:55.706163 23 controller_revision.go:191] Created ControllerRevision: e2e-2m6sh-daemon-set-5d4d597bb8
  STEP: Confirm that there are two ControllerRevisions @ 08/01/25 01:57:55.706
  I0801 01:57:55.706244 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0801 01:57:55.708657 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-2m6sh-daemon-set-744dcc646" @ 08/01/25 01:57:55.708
  STEP: Confirm that there is only one ControllerRevision @ 08/01/25 01:57:55.718
  I0801 01:57:55.718175 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0801 01:57:55.720323 23 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-2m6sh-daemon-set-5d4d597bb8" @ 08/01/25 01:57:55.722
  I0801 01:57:55.738243 23 controller_revision.go:220] e2e-2m6sh-daemon-set-5d4d597bb8 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 08/01/25 01:57:55.738
  I0801 01:57:55.750058      23 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 08/01/25 01:57:55.75
  I0801 01:57:55.750256 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0801 01:57:56.750390 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0801 01:57:56.753165 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-2m6sh-daemon-set-5d4d597bb8=updated" @ 08/01/25 01:57:56.753
  STEP: Confirm that there is only one ControllerRevision @ 08/01/25 01:57:56.762
  I0801 01:57:56.762710 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0801 01:57:56.773398 23 controller_revision.go:265] Found 1 ControllerRevisions
  I0801 01:57:56.775324 23 controller_revision.go:246] ControllerRevision "e2e-2m6sh-daemon-set-7dbcdb5d9c" has revision 3
  STEP: Deleting DaemonSet "e2e-2m6sh-daemon-set" @ 08/01/25 01:57:56.777
  STEP: deleting DaemonSet.extensions e2e-2m6sh-daemon-set in namespace controllerrevisions-9091, will wait for the garbage collector to delete the pods @ 08/01/25 01:57:56.778
  I0801 01:57:56.843333 23 resources.go:139] Deleting DaemonSet.extensions e2e-2m6sh-daemon-set took: 13.094648ms
  I0801 01:57:56.943685 23 resources.go:163] Terminating DaemonSet.extensions e2e-2m6sh-daemon-set pods took: 100.346776ms
  I0801 01:57:59.348398 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2m6sh-daemon-set: 0
  I0801 01:57:59.348437 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-2m6sh-daemon-set
  I0801 01:57:59.371333 23 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10371"},"items":null}

  I0801 01:57:59.373697 23 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10371"},"items":null}

  I0801 01:57:59.386194 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-9091" for this suite. @ 08/01/25 01:57:59.488
â€¢ [5.948 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 08/01/25 01:57:59.511
  I0801 01:57:59.511271 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 01:57:59.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:57:59.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:57:59.541
  STEP: Setting up server cert @ 08/01/25 01:57:59.571
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 01:58:00.315
  STEP: Deploying the webhook pod @ 08/01/25 01:58:00.323
  STEP: Wait for the deployment to be ready @ 08/01/25 01:58:00.351
  I0801 01:58:00.372271 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 01:58:02.382
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 01:58:02.422
  I0801 01:58:03.431966 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 08/01/25 01:58:03.444
  I0801 01:58:03.547698 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4790" for this suite. @ 08/01/25 01:58:03.561
  STEP: Destroying namespace "webhook-markers-7630" for this suite. @ 08/01/25 01:58:03.588
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 08/01/25 01:58:03.598
  I0801 01:58:03.598250 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/01/25 01:58:03.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:58:03.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:58:03.63
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 08/01/25 01:58:03.633
  I0801 01:58:03.634296 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:58:05.100454 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 01:58:11.242794 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6979" for this suite. @ 08/01/25 01:58:11.248
â€¢ [7.664 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 08/01/25 01:58:11.262
  I0801 01:58:11.262093 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 01:58:11.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:58:11.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:58:11.304
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2920 @ 08/01/25 01:58:11.312
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 08/01/25 01:58:11.388
  STEP: creating service externalsvc in namespace services-2920 @ 08/01/25 01:58:11.388
  I0801 01:58:11.447381 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0801 01:58:13.521566 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 1, 58, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 58, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 1, 58, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 1, 58, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalsvc-7576cd9b5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: changing the NodePort service to type=ExternalName @ 08/01/25 01:58:15.46
  I0801 01:58:15.535036 23 resource.go:361] Creating new exec pod
  I0801 01:58:17.567172 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-2920 exec execpodrnk9b -- /bin/sh -x -c nslookup nodeport-service.services-2920.svc.cluster.local'
  I0801 01:58:17.741819 23 builder.go:146] stderr: "+ nslookup nodeport-service.services-2920.svc.cluster.local\n"
  I0801 01:58:17.741887 23 builder.go:147] stdout: "Server:\t\t10.53.0.10\nAddress:\t10.53.0.10#53\n\nnodeport-service.services-2920.svc.cluster.local\tcanonical name = externalsvc.services-2920.svc.cluster.local.\nName:\texternalsvc.services-2920.svc.cluster.local\nAddress: 10.53.50.116\n\n"
  I0801 01:58:17.804449 23 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0801 01:58:17.869304 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2920" for this suite. @ 08/01/25 01:58:17.877
â€¢ [6.630 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 08/01/25 01:58:17.892
  I0801 01:58:17.892029 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 01:58:17.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:58:17.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:58:17.912
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 01:58:17.915
  STEP: Saw pod success @ 08/01/25 01:58:21.94
  I0801 01:58:21.942702 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-c49a904c-665b-41de-9ca9-2feda2b84269 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 01:58:21.958
  I0801 01:58:22.006132 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8109" for this suite. @ 08/01/25 01:58:22.01
â€¢ [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 08/01/25 01:58:22.021
  I0801 01:58:22.021732 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 01:58:22.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:58:22.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:58:22.062
  STEP: Setting up server cert @ 08/01/25 01:58:22.112
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 01:58:23.051
  STEP: Deploying the webhook pod @ 08/01/25 01:58:23.067
  STEP: Wait for the deployment to be ready @ 08/01/25 01:58:23.128
  I0801 01:58:23.150654 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 01:58:25.158
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 01:58:25.193
  I0801 01:58:26.193832 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 08/01/25 01:58:26.196
  STEP: create a namespace for the webhook @ 08/01/25 01:58:26.225
  STEP: create a configmap should be unconditionally rejected by the webhook @ 08/01/25 01:58:26.245
  I0801 01:58:26.378561 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5167" for this suite. @ 08/01/25 01:58:26.384
  STEP: Destroying namespace "webhook-markers-9703" for this suite. @ 08/01/25 01:58:26.395
  STEP: Destroying namespace "fail-closed-namespace-8099" for this suite. @ 08/01/25 01:58:26.417
â€¢ [4.410 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 08/01/25 01:58:26.432
  I0801 01:58:26.432578 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename gc @ 08/01/25 01:58:26.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:58:26.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:58:26.46
  STEP: create the rc @ 08/01/25 01:58:26.484
  I0801 01:58:26.502784      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 08/01/25 01:58:32.676
  STEP: wait for the rc to be deleted @ 08/01/25 01:58:33.122
  I0801 01:58:34.618784 23 garbage_collector.go:678] 86 pods remaining
  I0801 01:58:34.619009 23 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0801 01:58:34.619094 23 garbage_collector.go:686] 
  I0801 01:58:35.606690 23 garbage_collector.go:678] 77 pods remaining
  I0801 01:58:35.606871 23 garbage_collector.go:685] 63 pods has nil DeletionTimestamp
  I0801 01:58:35.606949 23 garbage_collector.go:686] 
  I0801 01:58:36.399568 23 garbage_collector.go:678] 60 pods remaining
  I0801 01:58:36.399635 23 garbage_collector.go:685] 60 pods has nil DeletionTimestamp
  I0801 01:58:36.399648 23 garbage_collector.go:686] 
  I0801 01:58:37.534107 23 garbage_collector.go:678] 43 pods remaining
  I0801 01:58:37.534156 23 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0801 01:58:37.534167 23 garbage_collector.go:686] 
  I0801 01:58:39.172934 23 garbage_collector.go:678] 40 pods remaining
  I0801 01:58:39.172978 23 garbage_collector.go:685] 33 pods has nil DeletionTimestamp
  I0801 01:58:39.172989 23 garbage_collector.go:686] 
  I0801 01:58:40.058777 23 garbage_collector.go:678] 32 pods remaining
  I0801 01:58:40.058821 23 garbage_collector.go:685] 20 pods has nil DeletionTimestamp
  I0801 01:58:40.058833 23 garbage_collector.go:686] 
  I0801 01:58:40.463242 23 garbage_collector.go:678] 20 pods remaining
  I0801 01:58:40.463411 23 garbage_collector.go:685] 18 pods has nil DeletionTimestamp
  I0801 01:58:40.463495 23 garbage_collector.go:686] 
  I0801 01:58:41.415755 23 garbage_collector.go:678] 5 pods remaining
  I0801 01:58:41.415981 23 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0801 01:58:41.416126 23 garbage_collector.go:686] 
  STEP: Gathering metrics @ 08/01/25 01:58:42.265
  W0801 01:58:42.446452      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0801 01:58:42.446615 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0801 01:58:42.447533 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7978" for this suite. @ 08/01/25 01:58:42.454
â€¢ [16.043 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 08/01/25 01:58:42.475
  I0801 01:58:42.476006 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename security-context @ 08/01/25 01:58:42.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 01:58:42.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 01:58:42.648
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 08/01/25 01:58:42.659
  STEP: Saw pod success @ 08/01/25 02:00:11.339
  I0801 02:00:11.474348 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod security-context-0ff09d00-b582-402d-8f9e-bd43ac6c259b container test-container: <nil>
  STEP: delete the pod @ 08/01/25 02:00:11.607
  I0801 02:00:11.752887 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7883" for this suite. @ 08/01/25 02:00:11.756
â€¢ [89.381 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 08/01/25 02:00:11.856
  I0801 02:00:11.856954 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename daemonsets @ 08/01/25 02:00:11.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:00:11.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:00:11.927
  I0801 02:00:12.079276 23 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/01/25 02:00:12.094
  I0801 02:00:12.206299 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 02:00:12.206352 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:00:13.208453 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 02:00:13.208529 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:00:14.111795 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 02:00:14.111844 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:00:15.103142 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 02:00:15.103194 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:00:16.169802 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 02:00:16.169861 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:00:17.101940 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0801 02:00:17.101976 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 08/01/25 02:00:17.155
  STEP: Check that daemon pods images are updated. @ 08/01/25 02:00:17.2
  I0801 02:00:17.203248 23 daemon_set.go:1193] Wrong image for pod: daemon-set-2tlfq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0801 02:00:18.206761 23 daemon_set.go:1193] Wrong image for pod: daemon-set-2tlfq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0801 02:00:19.206398 23 daemon_set.go:1193] Wrong image for pod: daemon-set-2tlfq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0801 02:00:19.206445 23 daemon_set.go:1198] Pod daemon-set-95pjm is not available
  I0801 02:00:20.203456 23 daemon_set.go:1193] Wrong image for pod: daemon-set-2tlfq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0801 02:00:20.203499 23 daemon_set.go:1198] Pod daemon-set-95pjm is not available
  I0801 02:00:21.202759 23 daemon_set.go:1198] Pod daemon-set-wj749 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 08/01/25 02:00:21.206
  I0801 02:00:21.210992 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 02:00:21.211030 23 fixtures.go:131] Node k3k-k3kcluster-server-0 is running 0 daemon pod, expected 1
  I0801 02:00:22.238797 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 02:00:22.238860 23 fixtures.go:131] Node k3k-k3kcluster-server-0 is running 0 daemon pod, expected 1
  I0801 02:00:23.237789 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0801 02:00:23.238050 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/01/25 02:00:23.341
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1991, will wait for the garbage collector to delete the pods @ 08/01/25 02:00:23.341
  I0801 02:00:23.406189 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.007062ms
  I0801 02:00:23.506904 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.711921ms
  I0801 02:00:25.116985 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 02:00:25.117021 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0801 02:00:25.121447 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11919"},"items":null}

  I0801 02:00:25.144164 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11920"},"items":null}

  I0801 02:00:25.156656 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1991" for this suite. @ 08/01/25 02:00:25.159
â€¢ [13.313 seconds]
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 08/01/25 02:00:25.169
  I0801 02:00:25.169908 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename svcaccounts @ 08/01/25 02:00:25.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:00:25.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:00:25.215
  I0801 02:00:25.235124 23 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-4759"
  I0801 02:00:25.256106 23 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-4759"
  STEP: waiting for a new root ca configmap created @ 08/01/25 02:00:25.756
  I0801 02:00:25.759264 23 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-4759"
  I0801 02:00:25.782003 23 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-4759"
  STEP: waiting for the root ca configmap reconciled @ 08/01/25 02:00:26.282
  I0801 02:00:26.285858 23 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-4759"
  I0801 02:00:26.286107 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4759" for this suite. @ 08/01/25 02:00:26.303
â€¢ [1.155 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 08/01/25 02:00:26.325
  I0801 02:00:26.325797 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename resourcequota @ 08/01/25 02:00:26.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:00:26.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:00:26.363
  STEP: Creating resourceQuota "e2e-rq-status-gsjsp" @ 08/01/25 02:00:26.369
  I0801 02:00:26.387124 23 resource_quota.go:1106] Resource quota "e2e-rq-status-gsjsp" reports spec: hard cpu limit of 500m
  I0801 02:00:26.387304 23 resource_quota.go:1108] Resource quota "e2e-rq-status-gsjsp" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-gsjsp" /status @ 08/01/25 02:00:26.387
  STEP: Confirm /status for "e2e-rq-status-gsjsp" resourceQuota via watch @ 08/01/25 02:00:26.418
  I0801 02:00:26.426348 23 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-gsjsp" in namespace "resourcequota-2814" with hard status: v1.ResourceList(nil)
  I0801 02:00:26.426435 23 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-gsjsp" in namespace "resourcequota-2814" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0801 02:00:26.426455 23 resource_quota.go:1145] ResourceQuota "e2e-rq-status-gsjsp" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 08/01/25 02:00:26.431
  I0801 02:00:26.441059 23 resource_quota.go:1156] Resource quota "e2e-rq-status-gsjsp" reports spec: hard cpu limit of 1
  I0801 02:00:26.441107 23 resource_quota.go:1157] Resource quota "e2e-rq-status-gsjsp" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-gsjsp" /status @ 08/01/25 02:00:26.441
  STEP: Confirm /status for "e2e-rq-status-gsjsp" resourceQuota via watch @ 08/01/25 02:00:26.449
  I0801 02:00:26.451413 23 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-gsjsp" in namespace "resourcequota-2814" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0801 02:00:26.452269 23 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-gsjsp" in namespace "resourcequota-2814" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0801 02:00:26.452320 23 resource_quota.go:1189] ResourceQuota "e2e-rq-status-gsjsp" /status was patched
  STEP: Get "e2e-rq-status-gsjsp" /status @ 08/01/25 02:00:26.452
  I0801 02:00:26.458197 23 resource_quota.go:1200] Resourcequota "e2e-rq-status-gsjsp" reports status: hard cpu of 1
  I0801 02:00:26.458255 23 resource_quota.go:1202] Resourcequota "e2e-rq-status-gsjsp" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-gsjsp" /status before checking Spec is unchanged @ 08/01/25 02:00:26.472
  I0801 02:00:26.481035 23 resource_quota.go:1222] Resourcequota "e2e-rq-status-gsjsp" reports status: hard cpu of 2
  I0801 02:00:26.481087 23 resource_quota.go:1224] Resourcequota "e2e-rq-status-gsjsp" reports status: hard memory of 2Gi
  I0801 02:00:26.483039 23 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-gsjsp" in namespace "resourcequota-2814" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0801 02:00:26.486232 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4708), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4750), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:00:31.503470 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba48b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:00:36.486850 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4a38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4a68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4a98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:00:41.499776 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4b70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4ba0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4bd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:00:46.488045 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4ca8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4d08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4d38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:00:51.499114 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4e28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4e58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4e88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:00:56.537503 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba5d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba630), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:01:01.522648 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba720), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba750), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:01:06.495906 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4fa8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4fd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba5008), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:01:11.513126 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba5140), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba5188), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba51b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:01:16.487918 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba52c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba52f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba5320), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:01:21.508904 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba5410), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba5440), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba5470), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:01:26.486858 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba858), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba888), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba8b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:01:31.525009 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044cb020), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044cb050), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044cb080), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:01:36.487409 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba9c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba9f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047baa20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:01:41.487244 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044cb188), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044cb1b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044cb1e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:01:46.486756 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba55c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba5620), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba5680), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:01:51.492879 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047bab10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047bab40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047bab70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:01:56.487283 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047bac60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047bac90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047bacc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:02:01.494491 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047badb0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047bade0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047bae10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:02:06.505187 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba5788), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba57b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba57e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:02:11.495172 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba58f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba5920), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba5950), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:02:16.487623 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba40a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba40d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:02:21.491716 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba41e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:02:26.486866 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba060), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba090), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:02:31.488574 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba43a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba43d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:02:36.488389 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba168), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba198), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba1c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:02:41.501290 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ca0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ca0f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ca120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:02:46.487223 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba2e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:02:51.491419 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4570), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:02:56.486994 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ca1f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ca228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ca258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:03:01.499113 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ca348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ca378), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ca3a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:03:06.496444 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ca468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ca4f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ca540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:03:11.494581 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba46a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba46d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ba4708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:03:16.489613 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-gsjsp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gsjsp", GenerateName:"", Namespace:"resourcequota-2814", SelfLink:"", UID:"bf8f1349-1548-4493-bc4c-74a32af45c9a", ResourceVersion:"11943", Generation:0, CreationTimestamp:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gsjsp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba4c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba4f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047ba528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0801 02:03:21.487937 23 resource_quota.go:1264] ResourceQuota "e2e-rq-status-gsjsp" Spec was unchanged and /status reset
  I0801 02:03:21.488066 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2814" for this suite. @ 08/01/25 02:03:21.495
â€¢ [175.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 08/01/25 02:03:21.513
  I0801 02:03:21.513106 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 02:03:21.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:03:21.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:03:21.557
  I0801 02:03:21.572636 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-3086 version'
  I0801 02:03:21.737852 23 builder.go:146] stderr: ""
  I0801 02:03:21.737901 23 builder.go:147] stdout: "Client Version: v1.33.3\nKustomize Version: v5.6.0\nServer Version: v1.33.3+k3s1\n"
  I0801 02:03:21.738143 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3086" for this suite. @ 08/01/25 02:03:21.742
â€¢ [0.245 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 08/01/25 02:03:21.757
  I0801 02:03:21.758003 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubelet-test @ 08/01/25 02:03:21.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:03:21.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:03:21.801
  STEP: Waiting for pod completion @ 08/01/25 02:03:21.83
  I0801 02:03:25.863168 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6580" for this suite. @ 08/01/25 02:03:25.866
â€¢ [4.118 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 08/01/25 02:03:25.875
  I0801 02:03:25.875665 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename daemonsets @ 08/01/25 02:03:25.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:03:25.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:03:25.9
  STEP: Creating simple DaemonSet "daemon-set" @ 08/01/25 02:03:25.972
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/01/25 02:03:25.981
  I0801 02:03:26.042719 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 02:03:26.042771 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:03:26.990210 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 02:03:26.990275 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:03:27.991463 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0801 02:03:27.991506 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 08/01/25 02:03:27.995
  I0801 02:03:28.098948 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 02:03:28.098996 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:03:29.022690 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 02:03:29.022732 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:03:30.032593 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 02:03:30.032647 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:03:31.023603 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0801 02:03:31.023643 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/01/25 02:03:31.026
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1684, will wait for the garbage collector to delete the pods @ 08/01/25 02:03:31.026
  I0801 02:03:31.088525 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.733115ms
  I0801 02:03:31.189411 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.939998ms
  I0801 02:03:33.391992 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 02:03:33.392043 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0801 02:03:33.395422 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12612"},"items":null}

  I0801 02:03:33.398281 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12612"},"items":null}

  I0801 02:03:33.407520 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1684" for this suite. @ 08/01/25 02:03:33.411
â€¢ [7.554 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 08/01/25 02:03:33.43
  I0801 02:03:33.430363 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 02:03:33.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:03:33.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:03:33.459
  STEP: Setting up server cert @ 08/01/25 02:03:33.504
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 02:03:34.192
  STEP: Deploying the webhook pod @ 08/01/25 02:03:34.201
  STEP: Wait for the deployment to be ready @ 08/01/25 02:03:34.224
  I0801 02:03:34.239646 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 02:03:36.248
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 02:03:36.277
  I0801 02:03:37.277666 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0801 02:03:37.282963 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 08/01/25 02:03:37.794
  STEP: Creating a custom resource that should be denied by the webhook @ 08/01/25 02:03:37.817
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 08/01/25 02:03:39.835
  STEP: Updating the custom resource with disallowed data should be denied @ 08/01/25 02:03:39.856
  STEP: Deleting the custom resource should be denied @ 08/01/25 02:03:39.864
  STEP: Remove the offending key and value from the custom resource data @ 08/01/25 02:03:39.869
  STEP: Deleting the updated custom resource should be successful @ 08/01/25 02:03:39.886
  I0801 02:03:40.541517 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8105" for this suite. @ 08/01/25 02:03:40.544
  STEP: Destroying namespace "webhook-markers-9691" for this suite. @ 08/01/25 02:03:40.553
â€¢ [7.143 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 08/01/25 02:03:40.573
  I0801 02:03:40.573960 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:03:40.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:03:40.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:03:40.598
  STEP: Creating configMap with name projected-configmap-test-volume-3adbcae3-2df3-4f8b-9e9b-5fe7785710ea @ 08/01/25 02:03:40.602
  STEP: Creating a pod to test consume configMaps @ 08/01/25 02:03:40.612
  STEP: Saw pod success @ 08/01/25 02:03:44.637
  I0801 02:03:44.640269 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-projected-configmaps-4bd83223-c9db-4a2d-ae7e-98b2b5046cb0 container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 02:03:44.645
  I0801 02:03:44.698957 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-504" for this suite. @ 08/01/25 02:03:44.702
â€¢ [4.219 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 08/01/25 02:03:44.792
  I0801 02:03:44.792977 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename secrets @ 08/01/25 02:03:44.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:03:44.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:03:44.84
  STEP: creating secret secrets-7504/secret-test-5968368e-e2d0-46d4-87f0-2bd870ed0329 @ 08/01/25 02:03:44.844
  STEP: Creating a pod to test consume secrets @ 08/01/25 02:03:44.854
  STEP: Saw pod success @ 08/01/25 02:03:48.881
  I0801 02:03:48.883656 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-configmaps-017d34a1-dabb-4144-8efc-cf48221de4ec container env-test: <nil>
  STEP: delete the pod @ 08/01/25 02:03:48.888
  I0801 02:03:48.917955 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7504" for this suite. @ 08/01/25 02:03:48.92
â€¢ [4.143 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 08/01/25 02:03:48.936
  I0801 02:03:48.936849 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:03:48.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:03:48.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:03:48.96
  STEP: Creating configMap with name projected-configmap-test-volume-map-d0870f73-9a8a-44e1-ad40-fba6ee4bff3c @ 08/01/25 02:03:48.967
  STEP: Creating a pod to test consume configMaps @ 08/01/25 02:03:48.976
  STEP: Saw pod success @ 08/01/25 02:03:52.998
  I0801 02:03:53.001279 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-projected-configmaps-3c2c383d-3503-4e2e-adb7-5244302cbf04 container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 02:03:53.006
  I0801 02:03:53.035336 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3082" for this suite. @ 08/01/25 02:03:53.038
â€¢ [4.122 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 08/01/25 02:03:53.058
  I0801 02:03:53.059009 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename svcaccounts @ 08/01/25 02:03:53.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:03:53.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:03:53.092
  I0801 02:03:53.123052 23 service_accounts.go:646] created pod
  STEP: Saw pod success @ 08/01/25 02:03:57.15
  I0801 02:04:27.151997 23 service_accounts.go:652] polling logs
  I0801 02:04:27.158442 23 service_accounts.go:662] Pod logs: 
  I0801 02:03:53.952663       1 log.go:245] OK: Got token
  I0801 02:03:53.952747       1 log.go:245] validating with in-cluster discovery
  I0801 02:03:53.953139       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0801 02:03:53.953172       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1797:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013910), NotBefore:(*jwt.NumericDate)(0xc000013a70), IssuedAt:(*jwt.NumericDate)(0xc000013950), ID:"57eb31bb-7abb-4d10-9d13-f431387f5fc8"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1797", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"8bb469c4-1c7a-4151-a3b5-fff049c3d3d8"}}}
  I0801 02:03:53.967267       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0801 02:03:53.971966       1 log.go:245] OK: Validated signature on JWT
  I0801 02:03:53.972136       1 log.go:245] OK: Got valid claims from token!
  I0801 02:03:53.972167       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1797:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00026ef38), NotBefore:(*jwt.NumericDate)(0xc00026ef90), IssuedAt:(*jwt.NumericDate)(0xc00026ef60), ID:"57eb31bb-7abb-4d10-9d13-f431387f5fc8"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1797", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"8bb469c4-1c7a-4151-a3b5-fff049c3d3d8"}}}

  I0801 02:04:27.158512 23 service_accounts.go:666] completed pod
  I0801 02:04:27.167573 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1797" for this suite. @ 08/01/25 02:04:27.179
â€¢ [34.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 08/01/25 02:04:27.189
  I0801 02:04:27.189250 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 02:04:27.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:04:27.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:04:27.21
  STEP: creating service in namespace services-9253 @ 08/01/25 02:04:27.217
  STEP: creating service affinity-nodeport in namespace services-9253 @ 08/01/25 02:04:27.217
  I0801 02:04:27.307285 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0801 02:04:29.311287 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 4, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 4, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 4, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 4, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-85dffb5fc7\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:04:31.328379 23 resource.go:361] Creating new exec pod
  I0801 02:04:33.365621 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-9253 exec execpod-affinitycfx7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0801 02:04:33.534566 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.53.207.49) 80 port [tcp/http] succeeded!\n"
  I0801 02:04:33.534625 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 02:04:33.534707 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-9253 exec execpod-affinitycfx7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.207.49 80'
  I0801 02:04:33.672528 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.53.207.49 80\nConnection to 10.53.207.49 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0801 02:04:33.672578 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 02:04:33.672664 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-9253 exec execpod-affinitycfx7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.42.0.16 32729'
  I0801 02:04:33.825274 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.42.0.16 32729\n+ echo hostName\nConnection to 10.42.0.16 32729 port [tcp/*] succeeded!\n"
  I0801 02:04:33.825328 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 02:04:33.825403 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-9253 exec execpod-affinitycfx7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.42.0.18 32729'
  I0801 02:04:34.006400 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.42.0.18 32729\nConnection to 10.42.0.18 32729 port [tcp/*] succeeded!\n"
  I0801 02:04:34.006458 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 02:04:34.006526 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-9253 exec execpod-affinitycfx7g -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/ ; done'
  I0801 02:04:34.256811 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.42.0.16:32729/\n"
  I0801 02:04:34.256878 23 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r\naffinity-nodeport-85dffb5fc7-dt86r"
  I0801 02:04:34.256900 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.256913 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.256924 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.256934 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.256945 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.256958 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.256970 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.256985 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.257003 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.257014 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.257028 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.257038 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.257059 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.257069 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.257083 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.257095 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dt86r
  I0801 02:04:34.257185 23 service.go:4352] Cleaning up the exec pod
  I0801 02:04:34.422042 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9253" for this suite. @ 08/01/25 02:04:34.433
â€¢ [7.254 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 08/01/25 02:04:34.442
  I0801 02:04:34.442942 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename replication-controller @ 08/01/25 02:04:34.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:04:34.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:04:34.47
  I0801 02:04:34.474432 23 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 08/01/25 02:04:35.501
  STEP: Checking rc "condition-test" has the desired failure condition set @ 08/01/25 02:04:35.518
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 08/01/25 02:04:36.524
  I0801 02:04:36.546053 23 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 08/01/25 02:04:36.546
  I0801 02:04:37.565597 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1647" for this suite. @ 08/01/25 02:04:37.568
â€¢ [3.134 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 08/01/25 02:04:37.577
  I0801 02:04:37.577138 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename statefulset @ 08/01/25 02:04:37.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:04:37.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:04:37.618
  STEP: Creating service test in namespace statefulset-9114 @ 08/01/25 02:04:37.623
  STEP: Creating stateful set ss in namespace statefulset-9114 @ 08/01/25 02:04:37.641
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9114 @ 08/01/25 02:04:37.656
  I0801 02:04:37.661678 23 wait.go:44] Found 0 stateful pods, waiting for 1
  I0801 02:04:47.659978 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 08/01/25 02:04:47.66
  I0801 02:04:47.662510 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-9114 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0801 02:04:47.797682 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0801 02:04:47.797739 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0801 02:04:47.797757 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0801 02:04:47.800174 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0801 02:04:57.801287 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0801 02:04:57.801330 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0801 02:04:57.835174 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999654s
  I0801 02:04:58.847776 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.98397783s
  I0801 02:04:59.850924 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.972148296s
  I0801 02:05:00.855081 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.967993086s
  I0801 02:05:01.864430 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.964846874s
  I0801 02:05:02.867953 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.95545174s
  I0801 02:05:03.871724 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.951415086s
  I0801 02:05:04.875635 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.947479023s
  I0801 02:05:05.880787 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.942429163s
  I0801 02:05:06.885585 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 938.370032ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9114 @ 08/01/25 02:05:07.886
  I0801 02:05:07.892902 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-9114 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0801 02:05:08.186629 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0801 02:05:08.186683 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0801 02:05:08.186700 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0801 02:05:08.186750 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-9114 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0801 02:05:08.393969 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0801 02:05:08.394023 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0801 02:05:08.394038 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0801 02:05:08.394099 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-9114 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0801 02:05:08.547665 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0801 02:05:08.547713 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0801 02:05:08.547725 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0801 02:05:08.552203 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0801 02:05:18.553276 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0801 02:05:18.553320 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0801 02:05:18.553334 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 08/01/25 02:05:18.553
  I0801 02:05:18.555908 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-9114 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0801 02:05:18.689462 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0801 02:05:18.689505 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0801 02:05:18.689522 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0801 02:05:18.689569 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-9114 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0801 02:05:18.912848 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0801 02:05:18.912892 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0801 02:05:18.912904 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0801 02:05:18.912951 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-9114 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0801 02:05:19.059215 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0801 02:05:19.059259 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0801 02:05:19.059273 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0801 02:05:19.059289 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0801 02:05:19.062449 23 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0801 02:05:29.066461 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0801 02:05:29.066677 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0801 02:05:29.066689 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0801 02:05:29.113822 23 resource.go:168] POD   NODE                                           PHASE    GRACE  CONDITIONS
  I0801 02:05:29.113905 23 resource.go:175] ss-0  k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:04:38 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:04:37 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:05:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:05:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:04:37 +0000 UTC  }]
  I0801 02:05:29.113928 23 resource.go:175] ss-1  k3k-k3kcluster-server-0                        Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:04:58 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:04:57 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:05:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:05:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:04:57 +0000 UTC  }]
  I0801 02:05:29.113949 23 resource.go:175] ss-2  k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc  Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:04:59 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:04:57 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:05:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:05:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:04:57 +0000 UTC  }]
  I0801 02:05:29.113956 23 resource.go:178] 
  I0801 02:05:29.113964 23 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  I0801 02:05:30.116859 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 8.976217411s
  I0801 02:05:31.121143 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.973257167s
  I0801 02:05:32.125179 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.969280656s
  I0801 02:05:33.129445 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.965331458s
  I0801 02:05:34.134679 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.960582478s
  I0801 02:05:35.138932 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.955789179s
  I0801 02:05:36.141363 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.951827193s
  I0801 02:05:37.145768 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.949042984s
  I0801 02:05:38.148805 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 945.028021ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9114 @ 08/01/25 02:05:39.149
  I0801 02:05:39.152453 23 rest.go:153] Scaling statefulset ss to 0
  I0801 02:05:39.156915 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0801 02:05:39.159087 23 statefulset.go:138] Deleting all statefulset in ns statefulset-9114
  I0801 02:05:39.161328 23 rest.go:153] Scaling statefulset ss to 0
  I0801 02:05:39.165124 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0801 02:05:39.168166 23 rest.go:91] Deleting statefulset ss
  I0801 02:05:39.181416 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9114" for this suite. @ 08/01/25 02:05:39.183
â€¢ [61.625 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 08/01/25 02:05:39.205
  I0801 02:05:39.205232 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:05:39.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:05:39.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:05:39.231
  STEP: Creating projection with secret that has name projected-secret-test-map-8aea4d39-941a-477c-ab76-2f15d948ae5a @ 08/01/25 02:05:39.235
  STEP: Creating a pod to test consume secrets @ 08/01/25 02:05:39.246
  STEP: Saw pod success @ 08/01/25 02:05:43.274
  I0801 02:05:43.276559 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-projected-secrets-2a3c12d8-909b-429b-bf77-8d6b74dfade6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 02:05:43.282
  I0801 02:05:43.307137 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6206" for this suite. @ 08/01/25 02:05:43.323
â€¢ [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 08/01/25 02:05:43.337
  I0801 02:05:43.337493 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename init-container @ 08/01/25 02:05:43.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:05:43.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:05:43.362
  STEP: creating the pod @ 08/01/25 02:05:43.369
  I0801 02:05:43.369277 23 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0801 02:05:47.940464 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7573" for this suite. @ 08/01/25 02:05:47.955
â€¢ [4.629 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 08/01/25 02:05:47.966
  I0801 02:05:47.966785 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 02:05:47.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:05:47.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:05:47.999
  STEP: Setting up server cert @ 08/01/25 02:05:48.05
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 02:05:48.754
  STEP: Deploying the webhook pod @ 08/01/25 02:05:48.763
  STEP: Wait for the deployment to be ready @ 08/01/25 02:05:48.802
  I0801 02:05:48.839692 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 02:05:50.846
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 02:05:50.875
  I0801 02:05:51.875212 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 08/01/25 02:05:51.885
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/01/25 02:05:51.885
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 08/01/25 02:05:51.911
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 08/01/25 02:05:52.923
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/01/25 02:05:52.923
  STEP: Having no error when timeout is longer than webhook latency @ 08/01/25 02:05:53.973
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/01/25 02:05:53.973
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 08/01/25 02:05:59.027
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/01/25 02:05:59.027
  I0801 02:06:04.204261 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4754" for this suite. @ 08/01/25 02:06:04.225
  STEP: Destroying namespace "webhook-markers-2627" for this suite. @ 08/01/25 02:06:04.238
â€¢ [16.294 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 08/01/25 02:06:04.261
  I0801 02:06:04.261290 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename resourcequota @ 08/01/25 02:06:04.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:06:04.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:06:04.298
  STEP: Counting existing ResourceQuota @ 08/01/25 02:06:04.302
  STEP: Creating a ResourceQuota @ 08/01/25 02:06:09.32
  STEP: Ensuring resource quota status is calculated @ 08/01/25 02:06:09.337
  STEP: Creating a Pod that fits quota @ 08/01/25 02:06:11.34
  STEP: Ensuring ResourceQuota status captures the pod usage @ 08/01/25 02:06:11.372
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 08/01/25 02:06:13.376
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 08/01/25 02:06:13.379
  STEP: Ensuring a pod cannot update its resource requirements @ 08/01/25 02:06:13.383
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 08/01/25 02:06:13.386
  STEP: Deleting the pod @ 08/01/25 02:06:15.389
  STEP: Ensuring resource quota status released the pod usage @ 08/01/25 02:06:15.404
  I0801 02:06:17.419616 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7464" for this suite. @ 08/01/25 02:06:17.422
â€¢ [13.183 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 08/01/25 02:06:17.443
  I0801 02:06:17.444008 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 02:06:17.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:06:17.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:06:17.474
  STEP: Creating a job @ 08/01/25 02:06:17.477
  STEP: Ensuring active pods == parallelism @ 08/01/25 02:06:17.494
  STEP: Orphaning one of the Job's Pods @ 08/01/25 02:06:21.599
  I0801 02:06:22.131382 23 pod_client.go:173] Successfully updated pod "adopt-release-bthn4"
  STEP: Checking that the Job readopts the Pod @ 08/01/25 02:06:22.131
  STEP: Removing the labels from the Job's Pod @ 08/01/25 02:06:24.151
  I0801 02:06:24.672400 23 pod_client.go:173] Successfully updated pod "adopt-release-bthn4"
  STEP: Checking that the Job releases the Pod @ 08/01/25 02:06:24.672
  I0801 02:06:26.677795 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5518" for this suite. @ 08/01/25 02:06:26.68
â€¢ [9.245 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 08/01/25 02:06:26.688
  I0801 02:06:26.688798 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 02:06:26.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:06:26.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:06:26.719
  STEP: creating service in namespace services-2393 @ 08/01/25 02:06:26.722
  STEP: creating service affinity-clusterip in namespace services-2393 @ 08/01/25 02:06:26.722
  I0801 02:06:26.794764 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0801 02:06:28.797872 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 6, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 6, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 6, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 6, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-6dd57cf8dc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:06:30.807445 23 resource.go:361] Creating new exec pod
  I0801 02:06:32.830185 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-2393 exec execpod-affinity8vncp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0801 02:06:33.016393 23 builder.go:146] stderr: "+ + ncecho hostName\n -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.53.111.11) 80 port [tcp/http] succeeded!\n"
  I0801 02:06:33.016443 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 02:06:33.016547 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-2393 exec execpod-affinity8vncp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.111.11 80'
  I0801 02:06:33.246914 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.111.11 80\nConnection to 10.53.111.11 80 port [tcp/http] succeeded!\n"
  I0801 02:06:33.246968 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 02:06:33.247043 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-2393 exec execpod-affinity8vncp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/ ; done'
  I0801 02:06:33.562971 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.111.11:80/\n"
  I0801 02:06:33.563025 23 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d\naffinity-clusterip-6dd57cf8dc-tnp6d"
  I0801 02:06:33.563040 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563050 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563058 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563066 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563074 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563081 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563089 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563096 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563104 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563112 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563119 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563127 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563135 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563142 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563150 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563158 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-tnp6d
  I0801 02:06:33.563267 23 service.go:4352] Cleaning up the exec pod
  I0801 02:06:33.710304 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2393" for this suite. @ 08/01/25 02:06:33.731
â€¢ [7.053 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 08/01/25 02:06:33.742
  I0801 02:06:33.742330 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename sched-pred @ 08/01/25 02:06:33.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:06:33.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:06:33.776
  I0801 02:06:33.779682 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0801 02:06:33.832299 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0801 02:06:33.834743 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc before test
  I0801 02:06:33.838449 23 predicates.go:958] svclb-traefik-f3709a6a-mfw2z from kube-system started at 2025-08-01 01:29:02 +0000 UTC (2 container statuses recorded)
  I0801 02:06:33.838483 23 predicates.go:960] 	Container lb-tcp-443 ready: true, restart count 0
  I0801 02:06:33.838491 23 predicates.go:960] 	Container lb-tcp-80 ready: true, restart count 0
  I0801 02:06:33.838499 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-08-01 01:30:06 +0000 UTC (1 container statuses recorded)
  I0801 02:06:33.838506 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0801 02:06:33.838513 23 predicates.go:958] sonobuoy-e2e-job-df5b01beee5e4694 from sonobuoy started at 2025-08-01 01:30:13 +0000 UTC (2 container statuses recorded)
  I0801 02:06:33.838519 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0801 02:06:33.838525 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0801 02:06:33.838532 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-17f975e496f9456c-s2s2c from sonobuoy started at 2025-08-01 01:30:13 +0000 UTC (2 container statuses recorded)
  I0801 02:06:33.838537 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0801 02:06:33.838543 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0801 02:06:33.838552 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3k-k3kcluster-server-0 before test
  I0801 02:06:33.841911 23 predicates.go:958] coredns-5688667fd4-6pnmp from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:06:33.841942 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0801 02:06:33.841952 23 predicates.go:958] helm-install-traefik-2697s from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:06:33.841958 23 predicates.go:960] 	Container helm ready: false, restart count 1
  I0801 02:06:33.841965 23 predicates.go:958] helm-install-traefik-crd-mr72s from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:06:33.841972 23 predicates.go:960] 	Container helm ready: false, restart count 0
  I0801 02:06:33.841979 23 predicates.go:958] local-path-provisioner-774c6665dc-bldhg from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:06:33.841986 23 predicates.go:960] 	Container local-path-provisioner ready: true, restart count 0
  I0801 02:06:33.841992 23 predicates.go:958] metrics-server-6f4c6675d5-86tpl from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:06:33.841998 23 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0801 02:06:33.842004 23 predicates.go:958] svclb-traefik-f3709a6a-2x7fk from kube-system started at 2025-08-01 01:28:56 +0000 UTC (2 container statuses recorded)
  I0801 02:06:33.842011 23 predicates.go:960] 	Container lb-tcp-443 ready: true, restart count 0
  I0801 02:06:33.842016 23 predicates.go:960] 	Container lb-tcp-80 ready: true, restart count 0
  I0801 02:06:33.842022 23 predicates.go:958] traefik-c98fdf6fb-f9b8t from kube-system started at 2025-08-01 01:28:56 +0000 UTC (1 container statuses recorded)
  I0801 02:06:33.842028 23 predicates.go:960] 	Container traefik ready: true, restart count 0
  I0801 02:06:33.842034 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-17f975e496f9456c-mjcrm from sonobuoy started at 2025-08-01 01:30:13 +0000 UTC (2 container statuses recorded)
  I0801 02:06:33.842040 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0801 02:06:33.842046 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/01/25 02:06:33.842
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/01/25 02:06:35.875
  STEP: Trying to apply a random label on the found node. @ 08/01/25 02:06:35.909
  STEP: verifying the node has the label kubernetes.io/e2e-5b293199-04c3-4772-b68d-4d1684b716e5 95 @ 08/01/25 02:06:35.934
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 08/01/25 02:06:35.94
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.42.0.16 on the node which pod4 resides and expect not scheduled @ 08/01/25 02:06:37.973
  STEP: removing the label kubernetes.io/e2e-5b293199-04c3-4772-b68d-4d1684b716e5 off the node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc @ 08/01/25 02:11:38.002
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5b293199-04c3-4772-b68d-4d1684b716e5 @ 08/01/25 02:11:38.024
  I0801 02:11:38.027572 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4877" for this suite. @ 08/01/25 02:11:38.031
â€¢ [304.303 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 08/01/25 02:11:38.046
  I0801 02:11:38.046425 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 02:11:38.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:11:38.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:11:38.082
  STEP: validating cluster-info @ 08/01/25 02:11:38.086
  I0801 02:11:38.086196 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-6733 cluster-info'
  I0801 02:11:38.195235 23 builder.go:146] stderr: ""
  I0801 02:11:38.195286 23 builder.go:147] stdout: "Kubernetes control plane is running at https://10.53.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0801 02:11:38.195496 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6733" for this suite. @ 08/01/25 02:11:38.198
â€¢ [0.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 08/01/25 02:11:38.207
  I0801 02:11:38.207172 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/01/25 02:11:38.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:11:38.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:11:38.242
  I0801 02:11:38.245584 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/01/25 02:11:39.696
  I0801 02:11:39.696852 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-341 --namespace=crd-publish-openapi-341 create -f -'
  I0801 02:11:41.789486 23 builder.go:146] stderr: ""
  I0801 02:11:41.789534 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8868-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0801 02:11:41.789578 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-341 --namespace=crd-publish-openapi-341 delete e2e-test-crd-publish-openapi-8868-crds test-cr'
  I0801 02:11:41.865403 23 builder.go:146] stderr: ""
  I0801 02:11:41.865466 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8868-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0801 02:11:41.865532 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-341 --namespace=crd-publish-openapi-341 apply -f -'
  I0801 02:11:41.956148 23 builder.go:146] stderr: ""
  I0801 02:11:41.956203 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8868-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0801 02:11:41.956247 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-341 --namespace=crd-publish-openapi-341 delete e2e-test-crd-publish-openapi-8868-crds test-cr'
  I0801 02:11:42.033568 23 builder.go:146] stderr: ""
  I0801 02:11:42.033614 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8868-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 08/01/25 02:11:42.033
  I0801 02:11:42.033685 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-341 explain e2e-test-crd-publish-openapi-8868-crds'
  I0801 02:11:42.094943 23 builder.go:146] stderr: ""
  I0801 02:11:42.095031 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-8868-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0801 02:11:43.595820 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-341" for this suite. @ 08/01/25 02:11:43.601
â€¢ [5.405 seconds]
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 08/01/25 02:11:43.611
  I0801 02:11:43.611891 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 02:11:43.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:11:43.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:11:43.632
  STEP: Creating a pod to test downward api env vars @ 08/01/25 02:11:43.635
  STEP: Saw pod success @ 08/01/25 02:11:47.67
  I0801 02:11:47.672845 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downward-api-2166b300-585d-4e4f-8727-e7a87e7ff643 container dapi-container: <nil>
  STEP: delete the pod @ 08/01/25 02:11:47.686
  I0801 02:11:47.715404 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4107" for this suite. @ 08/01/25 02:11:47.717
â€¢ [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 08/01/25 02:11:47.727
  I0801 02:11:47.727384 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename csi-storageclass @ 08/01/25 02:11:47.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:11:47.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:11:47.766
  STEP: Creating a StorageClass @ 08/01/25 02:11:47.769
  STEP: Get StorageClass "e2e-zwfsv" @ 08/01/25 02:11:47.777
  STEP: Patching the StorageClass "e2e-zwfsv" @ 08/01/25 02:11:47.779
  STEP: Delete StorageClass "e2e-zwfsv" @ 08/01/25 02:11:47.788
  STEP: Confirm deletion of StorageClass "e2e-zwfsv" @ 08/01/25 02:11:47.797
  STEP: Create a replacement StorageClass @ 08/01/25 02:11:47.798
  STEP: Updating StorageClass "e2e-v2-zqvfj" @ 08/01/25 02:11:47.806
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-zqvfj=updated" @ 08/01/25 02:11:47.827
  STEP: Deleting StorageClass "e2e-v2-zqvfj" via DeleteCollection @ 08/01/25 02:11:47.829
  STEP: Confirm deletion of StorageClass "e2e-v2-zqvfj" @ 08/01/25 02:11:47.839
  I0801 02:11:47.841822 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-6399" for this suite. @ 08/01/25 02:11:47.844
â€¢ [0.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 08/01/25 02:11:47.862
  I0801 02:11:47.862616 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename chunking @ 08/01/25 02:11:47.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:11:47.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:11:47.881
  STEP: creating a large number of resources @ 08/01/25 02:11:47.889
  I0801 02:11:51.324191      23 request.go:752] "Waited before sending request" delay="1.001438812s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.53.0.1:443/api/v1/namespaces/chunking-5204/podtemplates"
  STEP: retrieving the first page @ 08/01/25 02:12:05.578
  I0801 02:12:05.617315 23 chunking.go:163] Retrieved 40/40 results with rv 15538 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 08/01/25 02:12:05.617
  I0801 02:12:25.626565 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:12:45.622405 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:13:05.622358 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:13:25.622919 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:13:45.625462 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:14:05.622420 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:14:25.622603 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:14:45.621533 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:15:05.623831 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:15:25.623064 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:15:45.621937 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:16:05.622063 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:16:25.624375 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:16:45.622009 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:17:05.624688 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:17:25.622301 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:17:45.621005 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU1MzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0801 02:18:05.625878 23 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0801 02:18:05.625920 23 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 08/01/25 02:18:05.625
  STEP: retrieving all remaining pages @ 08/01/25 02:18:05.639
  I0801 02:18:05.681365 23 chunking.go:221] Retrieved 40/40 results with rv 16580 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY1ODAsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0801 02:18:05.685291 23 chunking.go:221] Retrieved 40/40 results with rv 16580 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY1ODAsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0801 02:18:05.691470 23 chunking.go:221] Retrieved 40/40 results with rv 16580 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY1ODAsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0801 02:18:05.695367 23 chunking.go:221] Retrieved 40/40 results with rv 16580 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY1ODAsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0801 02:18:05.698858 23 chunking.go:221] Retrieved 40/40 results with rv 16580 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY1ODAsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0801 02:18:05.702900 23 chunking.go:221] Retrieved 40/40 results with rv 16580 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY1ODAsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0801 02:18:05.707282 23 chunking.go:221] Retrieved 40/40 results with rv 16580 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY1ODAsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0801 02:18:05.711069 23 chunking.go:221] Retrieved 40/40 results with rv 16580 and continue 
  I0801 02:18:05.711255 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5204" for this suite. @ 08/01/25 02:18:05.714
â€¢ [377.859 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 08/01/25 02:18:05.722
  I0801 02:18:05.722139 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename validating-admission-policy @ 08/01/25 02:18:05.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:18:05.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:18:05.755
  STEP: creating the policy @ 08/01/25 02:18:05.77
  STEP: waiting until the marker is denied @ 08/01/25 02:18:05.793
  STEP: testing a replicated Deployment to be allowed @ 08/01/25 02:18:05.913
  STEP: testing a non-replicated ReplicaSet not to be denied @ 08/01/25 02:18:05.956
  I0801 02:18:06.115339 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8863" for this suite. @ 08/01/25 02:18:06.119
â€¢ [0.414 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 08/01/25 02:18:06.137
  I0801 02:18:06.137083 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:18:06.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:18:06.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:18:06.174
  STEP: Creating configMap with name projected-configmap-test-volume-20600a7e-ec12-4680-aa66-013a43afbd1f @ 08/01/25 02:18:06.178
  STEP: Creating a pod to test consume configMaps @ 08/01/25 02:18:06.189
  STEP: Saw pod success @ 08/01/25 02:18:10.223
  I0801 02:18:10.226634 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod pod-projected-configmaps-1e7e70d4-7aae-485d-bb44-80e89fb8f4c2 container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 02:18:10.244
  I0801 02:18:10.285026 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-463" for this suite. @ 08/01/25 02:18:10.288
â€¢ [4.161 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 08/01/25 02:18:10.299
  I0801 02:18:10.299489 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 02:18:10.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:18:10.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:18:10.324
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 02:18:10.33
  STEP: Saw pod success @ 08/01/25 02:18:14.358
  I0801 02:18:14.366471 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-60eb4d07-0be1-45c5-90ed-8088960897f6 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 02:18:14.387
  I0801 02:18:14.445045 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5910" for this suite. @ 08/01/25 02:18:14.455
â€¢ [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 08/01/25 02:18:14.475
  I0801 02:18:14.475123 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename endpointslice @ 08/01/25 02:18:14.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:18:14.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:18:14.519
  I0801 02:18:14.584923      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 02:18:16.587331      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 02:18:16.635063      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 02:18:16.700386 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1934" for this suite. @ 08/01/25 02:18:16.703
â€¢ [2.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 08/01/25 02:18:16.713
  I0801 02:18:16.713198 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 02:18:16.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:18:16.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:18:16.745
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8399 @ 08/01/25 02:18:16.749
  STEP: changing the ExternalName service to type=ClusterIP @ 08/01/25 02:18:16.763
  I0801 02:18:16.829621 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0801 02:18:18.835215 23 resource.go:361] Creating new exec pod
  I0801 02:18:20.859335 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-8399 exec execpodpp27g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0801 02:18:21.006534 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.53.209.60) 80 port [tcp/http] succeeded!\n"
  I0801 02:18:21.006584 23 builder.go:147] stdout: "externalname-service-58569c7cbd-ntwpj"
  I0801 02:18:21.006658 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-8399 exec execpodpp27g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.209.60 80'
  I0801 02:18:21.230645 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.209.60 80\nConnection to 10.53.209.60 80 port [tcp/http] succeeded!\n"
  I0801 02:18:21.230700 23 builder.go:147] stdout: "externalname-service-58569c7cbd-ntwpj"
  I0801 02:18:21.230790 23 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0801 02:18:21.308733 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8399" for this suite. @ 08/01/25 02:18:21.312
â€¢ [4.612 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 08/01/25 02:18:21.325
  I0801 02:18:21.325719 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename csinodes @ 08/01/25 02:18:21.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:18:21.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:18:21.374
  STEP: Creating initial csiNode "e2e-csinode-pdbcn" @ 08/01/25 02:18:21.377
  STEP: Getting initial csiNode "e2e-csinode-pdbcn" @ 08/01/25 02:18:21.387
  STEP: Patching initial csiNode: "e2e-csinode-pdbcn" @ 08/01/25 02:18:21.39
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-pdbcn=patched" @ 08/01/25 02:18:21.404
  STEP: Delete initial csiNode: "e2e-csinode-pdbcn" @ 08/01/25 02:18:21.408
  STEP: Confirm deletion of csiNode "e2e-csinode-pdbcn" @ 08/01/25 02:18:21.421
  STEP: Creating replacement csiNode "e2e-csinode-khtpw" @ 08/01/25 02:18:21.424
  STEP: Getting replacement csiNode "e2e-csinode-khtpw" @ 08/01/25 02:18:21.432
  STEP: Updating replacement csiNode "e2e-csinode-khtpw" @ 08/01/25 02:18:21.435
  STEP: DeleteCollection of CSINodes with "e2e-csinode-khtpw=updated" label @ 08/01/25 02:18:21.464
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-khtpw=updated" @ 08/01/25 02:18:21.48
  I0801 02:18:21.482408 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-2983" for this suite. @ 08/01/25 02:18:21.485
â€¢ [0.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 08/01/25 02:18:21.515
  I0801 02:18:21.515343 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 02:18:21.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:18:21.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:18:21.547
  STEP: Creating configMap with name configmap-test-volume-map-5e2da35a-3b02-4107-baa9-be99eac4c628 @ 08/01/25 02:18:21.55
  STEP: Creating a pod to test consume configMaps @ 08/01/25 02:18:21.567
  STEP: Saw pod success @ 08/01/25 02:18:25.607
  I0801 02:18:25.609342 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-configmaps-b9a94740-3f95-486b-a753-2958c36d6185 container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 02:18:25.614
  I0801 02:18:25.640951 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8700" for this suite. @ 08/01/25 02:18:25.643
â€¢ [4.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 08/01/25 02:18:25.652
  I0801 02:18:25.652496 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename prestop @ 08/01/25 02:18:25.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:18:25.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:18:25.715
  STEP: Creating server pod server in namespace prestop-3016 @ 08/01/25 02:18:25.718
  STEP: Waiting for pods to come up. @ 08/01/25 02:18:25.738
  STEP: Creating tester pod tester in namespace prestop-3016 @ 08/01/25 02:18:27.747
  STEP: Deleting pre-stop pod @ 08/01/25 02:18:29.761
  I0801 02:18:34.793078 23 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 08/01/25 02:18:34.793
  I0801 02:18:34.831175 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-3016" for this suite. @ 08/01/25 02:18:34.835
â€¢ [9.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 08/01/25 02:18:34.843
  I0801 02:18:34.843644 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename replicaset @ 08/01/25 02:18:34.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:18:34.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:18:34.908
  I0801 02:18:34.934398 23 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0801 02:18:39.957560 23 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/01/25 02:18:39.957
  STEP: Scaling up "test-rs" replicaset @ 08/01/25 02:18:39.957
  I0801 02:18:39.967503 23 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 08/01/25 02:18:39.967
  I0801 02:18:39.987945 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2742 with ReadyReplicas 1, AvailableReplicas 1
  I0801 02:18:40.008769 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2742 with ReadyReplicas 1, AvailableReplicas 1
  I0801 02:18:40.044879 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2742 with ReadyReplicas 1, AvailableReplicas 1
  I0801 02:18:40.054725 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2742 with ReadyReplicas 1, AvailableReplicas 1
  I0801 02:18:41.781975 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2742 with ReadyReplicas 2, AvailableReplicas 2
  I0801 02:18:41.977809 23 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-2742 with ReadyReplicas 3 found true
  I0801 02:18:41.978082 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2742" for this suite. @ 08/01/25 02:18:41.981
â€¢ [7.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 08/01/25 02:18:41.996
  I0801 02:18:41.996047 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename deployment @ 08/01/25 02:18:41.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:18:42.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:18:42.019
  I0801 02:18:42.038556 23 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  I0801 02:18:47.080742 23 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/01/25 02:18:47.08
  I0801 02:18:47.081109 23 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0801 02:18:49.084909 23 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0801 02:18:49.095099 23 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0801 02:18:51.100419 23 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0801 02:18:51.106028 23 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0801 02:18:51.111632 23 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0801 02:18:51.129140 23 deployment.go:314] Updating deployment test-rollover-deployment
  I0801 02:18:51.129186 23 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0801 02:18:53.136252 23 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0801 02:18:53.149350 23 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0801 02:18:53.155424 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0801 02:18:53.155506 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 18, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:18:55.161977 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0801 02:18:55.162036 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 18, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:18:57.161115 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0801 02:18:57.161181 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 18, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:18:59.163223 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0801 02:18:59.163301 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 18, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:19:01.161211 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0801 02:19:01.161282 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 18, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 18, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:19:03.162649 23 deployment.go:95] 
  I0801 02:19:03.162739 23 deployment.go:993] Ensure that both old replica sets have no replicas
  I0801 02:19:03.176649 23 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b167fde5-f721-4c06-a5a2-c311685e3f7b",
      ResourceVersion: (string) (len=5) "17605",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889611529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0801 02:19:03.182420 23 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13e57e13-7b53-48b5-9621-6b50055b7629",
      ResourceVersion: (string) (len=5) "17595",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889611531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "b167fde5-f721-4c06-a5a2-c311685e3f7b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 31 36 37 66 64  65 35 2d 66 37 32 31 2d  |\"b167fde5-f721-|
              00000120  34 63 30 36 2d 61 35 61  32 2d 63 33 31 31 36 38  |4c06-a5a2-c31168|
              00000130  35 65 33 66 37 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5e3f7b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0801 02:19:03.183646 23 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0801 02:19:03.184052 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7c39137-340f-4e72-8d8f-f56d7819bb49",
      ResourceVersion: (string) (len=5) "17604",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889611522,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "b167fde5-f721-4c06-a5a2-c311685e3f7b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611522,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  62 31 36 37 66 64 65 35  2d 66 37 32 31 2d 34 63  |b167fde5-f721-4c|
              000000c0  30 36 2d 61 35 61 32 2d  63 33 31 31 36 38 35 65  |06-a5a2-c311685e|
              000000d0  33 66 37 62 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |3f7b\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0801 02:19:03.185596 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0cf2f9fa-13ef-4497-bd23-991fc98e9b7d",
      ResourceVersion: (string) (len=5) "17549",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889611529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "b167fde5-f721-4c06-a5a2-c311685e3f7b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 31 36 37 66 64  65 35 2d 66 37 32 31 2d  |\"b167fde5-f721-|
              00000120  34 63 30 36 2d 61 35 61  32 2d 63 33 31 31 36 38  |4c06-a5a2-c31168|
              00000130  35 65 33 66 37 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5e3f7b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0801 02:19:03.190652 23 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-78276" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-78276",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-4378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1fdf037e-8859-4de6-8de8-183771cefdf5",
      ResourceVersion: (string) (len=5) "17560",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889611531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "13e57e13-7b53-48b5-9621-6b50055b7629",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  65 35 37 65 31 33 2d 37  |d\":\"13e57e13-7|
              00000090  62 35 33 2d 34 38 62 35  2d 39 36 32 31 2d 36 62  |b53-48b5-9621-6b|
              000000a0  35 30 30 35 35 62 37 36  32 39 5c 22 7d 22 3a 7b  |50055b7629\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 30 2e 31 32  37 5c 22 7d 22 3a 7b 22  |.52.0.127\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-85lw8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-85lw8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) (len=11) "10.52.0.127",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.0.127"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889611531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889611532,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://958142147c86f9989cc9114c31e6c8e9f9389977d948cab518c80dbd33130537",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-85lw8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:19:03.193476 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4378" for this suite. @ 08/01/25 02:19:03.196
â€¢ [21.209 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 08/01/25 02:19:03.205
  I0801 02:19:03.205599 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 02:19:03.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:19:03.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:19:03.236
  STEP: Looking for a node to schedule job pod @ 08/01/25 02:19:03.24
  STEP: Creating a job @ 08/01/25 02:19:03.298
  STEP: Ensuring job fails @ 08/01/25 02:19:03.317
  I0801 02:19:07.353720 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8875" for this suite. @ 08/01/25 02:19:07.359
â€¢ [4.169 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 08/01/25 02:19:07.375
  I0801 02:19:07.375114 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 02:19:07.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:19:07.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:19:07.403
  STEP: starting the proxy server @ 08/01/25 02:19:07.407
  I0801 02:19:07.407343 23 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-7141 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 08/01/25 02:19:07.477
  I0801 02:19:07.483000 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0801 02:19:07.496413 23 kubectl.go:2232] kubectl proxy stderr: W0801 02:19:07.477069     571 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0801 02:19:07.496406 23 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:36883

  STEP: Destroying namespace "kubectl-7141" for this suite. @ 08/01/25 02:19:07.504
â€¢ [0.139 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 08/01/25 02:19:07.514
  I0801 02:19:07.514380 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-runtime @ 08/01/25 02:19:07.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:19:07.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:19:07.548
  STEP: create the container @ 08/01/25 02:19:07.558
  I0801 02:19:07.577119      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 08/01/25 02:19:07.577
  STEP: get the container status @ 08/01/25 02:19:10.591
  STEP: the container should be terminated @ 08/01/25 02:19:10.599
  STEP: the termination message should be set @ 08/01/25 02:19:10.599
  I0801 02:19:10.599576 23 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 08/01/25 02:19:10.599
  I0801 02:19:10.646308 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2171" for this suite. @ 08/01/25 02:19:10.65
â€¢ [3.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 08/01/25 02:19:10.667
  I0801 02:19:10.667912 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 02:19:10.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:19:10.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:19:10.696
  STEP: Setting up server cert @ 08/01/25 02:19:10.739
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 02:19:11.88
  STEP: Deploying the webhook pod @ 08/01/25 02:19:11.891
  STEP: Wait for the deployment to be ready @ 08/01/25 02:19:11.915
  I0801 02:19:11.931378 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0801 02:19:13.956528 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 19, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 19, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 19, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 19, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 08/01/25 02:19:15.964
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 02:19:16.016
  I0801 02:19:17.017743 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 08/01/25 02:19:17.033
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 08/01/25 02:19:17.034
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 08/01/25 02:19:17.034
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 08/01/25 02:19:17.034
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 08/01/25 02:19:17.035
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 08/01/25 02:19:17.035
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 08/01/25 02:19:17.037
  I0801 02:19:17.149755 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3411" for this suite. @ 08/01/25 02:19:17.152
  STEP: Destroying namespace "webhook-markers-4496" for this suite. @ 08/01/25 02:19:17.177
â€¢ [6.522 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 08/01/25 02:19:17.189
  I0801 02:19:17.189921 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename namespaces @ 08/01/25 02:19:17.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:19:17.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:19:17.226
  STEP: Creating a test namespace @ 08/01/25 02:19:17.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:19:17.254
  STEP: Creating a service in the namespace @ 08/01/25 02:19:17.264
  STEP: Deleting the namespace @ 08/01/25 02:19:17.304
  STEP: Waiting for the namespace to be removed. @ 08/01/25 02:19:17.314
  STEP: Recreating the namespace @ 08/01/25 02:19:23.319
  STEP: Verifying there is no service in the namespace @ 08/01/25 02:19:23.342
  I0801 02:19:23.347720 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4731" for this suite. @ 08/01/25 02:19:23.352
  STEP: Destroying namespace "nsdeletetest-752" for this suite. @ 08/01/25 02:19:23.36
  I0801 02:19:23.362885 23 framework.go:370] Namespace nsdeletetest-752 was already deleted
  STEP: Destroying namespace "nsdeletetest-760" for this suite. @ 08/01/25 02:19:23.363
â€¢ [6.190 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 08/01/25 02:19:23.379
  I0801 02:19:23.379856 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 02:19:23.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:19:23.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:19:23.402
  STEP: Creating configMap with name configmap-test-volume-155b8a44-cb48-4b96-85a2-57877c079a12 @ 08/01/25 02:19:23.405
  STEP: Creating a pod to test consume configMaps @ 08/01/25 02:19:23.413
  STEP: Saw pod success @ 08/01/25 02:19:27.464
  I0801 02:19:27.466998 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-configmaps-0d745378-1ca8-4d54-b6d2-b0ce73c14e94 container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 02:19:27.472
  I0801 02:19:27.502468 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4376" for this suite. @ 08/01/25 02:19:27.526
â€¢ [4.158 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 08/01/25 02:19:27.538
  I0801 02:19:27.538477 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename aggregateddiscovery @ 08/01/25 02:19:27.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:19:27.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:19:27.561
  I0801 02:19:27.605475 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3916" for this suite. @ 08/01/25 02:19:27.626
â€¢ [0.097 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 08/01/25 02:19:27.635
  I0801 02:19:27.635343 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename deployment @ 08/01/25 02:19:27.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:19:27.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:19:27.661
  I0801 02:19:27.664948 23 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0801 02:19:27.703358 23 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0801 02:19:32.761851 23 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/01/25 02:19:32.761
  I0801 02:19:32.761940 23 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0801 02:19:32.777535 23 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0801 02:19:32.782009 23 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0801 02:19:34.789763 23 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0801 02:19:34.792054 23 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0801 02:19:34.800400 23 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5447",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f2c8483-e456-41f7-89dc-d0678b3f24ee",
      ResourceVersion: (string) (len=5) "17999",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889611572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611574,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611574,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0801 02:19:34.812286 23 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5447",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab8133f0-2306-4f90-9c41-c0f2fa9834de",
      ResourceVersion: (string) (len=5) "17988",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889611572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "2f2c8483-e456-41f7-89dc-d0678b3f24ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 66 32 63 38 34  38 33 2d 65 34 35 36 2d  |\"2f2c8483-e456-|
              00000120  34 31 66 37 2d 38 39 64  63 2d 64 30 36 37 38 62  |41f7-89dc-d0678b|
              00000130  33 66 32 34 65 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3f24ee\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611574,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0801 02:19:34.814202 23 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0801 02:19:34.814900 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5447",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26f5ebb4-0248-4172-86b3-83b0f04a0bbd",
      ResourceVersion: (string) (len=5) "17998",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889611567,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "2f2c8483-e456-41f7-89dc-d0678b3f24ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611574,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 32 66 32 63 38 34 38  |"uid\":\"2f2c848|
              000000b0  33 2d 65 34 35 36 2d 34  31 66 37 2d 38 39 64 63  |3-e456-41f7-89dc|
              000000c0  2d 64 30 36 37 38 62 33  66 32 34 65 65 5c 22 7d  |-d0678b3f24ee\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611574,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0801 02:19:34.821681 23 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-b4z5z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-b4z5z",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-5447",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2748f2d8-ce99-41cc-bd28-2e27958935a6",
      ResourceVersion: (string) (len=5) "17987",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889611572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "ab8133f0-2306-4f90-9c41-c0f2fa9834de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 62  38 31 33 33 66 30 2d 32  |d\":\"ab8133f0-2|
              00000090  33 30 36 2d 34 66 39 30  2d 39 63 34 31 2d 63 30  |306-4f90-9c41-c0|
              000000a0  66 32 66 61 39 38 33 34  64 65 5c 22 7d 22 3a 7b  |f2fa9834de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611574,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 30 2e 31 32  38 5c 22 7d 22 3a 7b 22  |.52.0.128\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gw9s5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gw9s5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611574,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611574,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611574,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889611572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) (len=11) "10.52.0.128",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.0.128"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889611572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889611573,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://2320cf636df62b1f3646a71f30943018a9c5e7b63f6939d4ecd13323bcfcf260",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gw9s5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:19:34.824611 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5447" for this suite. @ 08/01/25 02:19:34.828
â€¢ [7.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 08/01/25 02:19:34.837
  I0801 02:19:34.837862 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 02:19:34.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:19:34.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:19:34.883
  STEP: Setting up server cert @ 08/01/25 02:19:34.961
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 02:19:35.469
  STEP: Deploying the webhook pod @ 08/01/25 02:19:35.478
  STEP: Wait for the deployment to be ready @ 08/01/25 02:19:35.523
  I0801 02:19:35.541834 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 02:19:37.552
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 02:19:37.576
  I0801 02:19:38.577662 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 08/01/25 02:19:38.581
  STEP: create a configmap that should be updated by the webhook @ 08/01/25 02:19:38.605
  I0801 02:19:38.725420 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8969" for this suite. @ 08/01/25 02:19:38.737
  STEP: Destroying namespace "webhook-markers-8000" for this suite. @ 08/01/25 02:19:38.756
â€¢ [3.937 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 08/01/25 02:19:38.774
  I0801 02:19:38.774689 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename crd-webhook @ 08/01/25 02:19:38.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:19:38.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:19:38.809
  STEP: Setting up server cert @ 08/01/25 02:19:38.817
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 08/01/25 02:19:39.633
  STEP: Deploying the custom resource conversion webhook pod @ 08/01/25 02:19:39.641
  STEP: Wait for the deployment to be ready @ 08/01/25 02:19:39.673
  I0801 02:19:39.684296 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 02:19:41.692
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 02:19:41.72
  I0801 02:19:42.721036 23 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0801 02:19:42.724061 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Creating a v1 custom resource @ 08/01/25 02:19:45.291
  STEP: Create a v2 custom resource @ 08/01/25 02:19:45.322
  STEP: List CRs in v1 @ 08/01/25 02:19:45.4
  STEP: List CRs in v2 @ 08/01/25 02:19:45.405
  I0801 02:19:46.043081 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3009" for this suite. @ 08/01/25 02:19:46.045
â€¢ [7.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 08/01/25 02:19:46.066
  I0801 02:19:46.066078 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:19:46.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:19:46.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:19:46.112
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-fa3a774f-adb7-4669-84e1-1e82b8b7205b @ 08/01/25 02:19:46.149
  STEP: Creating the pod @ 08/01/25 02:19:46.16
  STEP: Updating configmap projected-configmap-test-upd-fa3a774f-adb7-4669-84e1-1e82b8b7205b @ 08/01/25 02:19:48.189
  STEP: waiting to observe update in volume @ 08/01/25 02:19:48.197
  I0801 02:21:08.579526 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7432" for this suite. @ 08/01/25 02:21:08.608
â€¢ [82.554 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 08/01/25 02:21:08.62
  I0801 02:21:08.620582 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/01/25 02:21:08.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:08.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:08.65
  STEP: create the container to handle the HTTPGet hook request. @ 08/01/25 02:21:08.694
  STEP: create the pod with lifecycle hook @ 08/01/25 02:21:10.748
  STEP: delete the pod with lifecycle hook @ 08/01/25 02:21:12.77
  STEP: check prestop hook @ 08/01/25 02:21:14.791
  I0801 02:21:14.804671 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7349" for this suite. @ 08/01/25 02:21:14.808
â€¢ [6.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 08/01/25 02:21:14.823
  I0801 02:21:14.823345 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 02:21:14.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:14.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:14.855
  STEP: Creating Pod @ 08/01/25 02:21:14.86
  STEP: Reading file content from the nginx-container @ 08/01/25 02:21:16.895
  I0801 02:21:16.895637 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8784 PodName:pod-sharedvolume-8cd41e31-e401-48f4-96f2-afc3c30d149e ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:21:16.895655 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:21:16.895704 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/emptydir-8784/pods/pod-sharedvolume-8cd41e31-e401-48f4-96f2-afc3c30d149e/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0801 02:21:16.992029 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:21:16.992178 23 exec_util.go:112] Exec stderr: ""
  I0801 02:21:16.992294 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8784" for this suite. @ 08/01/25 02:21:16.995
â€¢ [2.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 08/01/25 02:21:17.003
  I0801 02:21:17.003733 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 02:21:17.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:17.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:17.031
  STEP: Setting up server cert @ 08/01/25 02:21:17.084
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 02:21:18.566
  STEP: Deploying the webhook pod @ 08/01/25 02:21:18.582
  STEP: Wait for the deployment to be ready @ 08/01/25 02:21:18.607
  I0801 02:21:18.623511 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 02:21:20.646
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 02:21:20.684
  I0801 02:21:21.685737 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 08/01/25 02:21:21.688
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 08/01/25 02:21:21.727
  STEP: Creating a dummy validating-webhook-configuration object @ 08/01/25 02:21:21.77
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 08/01/25 02:21:21.791
  STEP: Creating a dummy mutating-webhook-configuration object @ 08/01/25 02:21:21.8
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 08/01/25 02:21:21.814
  I0801 02:21:21.972598 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6871" for this suite. @ 08/01/25 02:21:21.976
  STEP: Destroying namespace "webhook-markers-9712" for this suite. @ 08/01/25 02:21:21.986
â€¢ [4.993 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 08/01/25 02:21:21.996
  I0801 02:21:21.996409 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename sched-pred @ 08/01/25 02:21:21.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:22.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:22.029
  I0801 02:21:22.034322 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0801 02:21:22.082492 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0801 02:21:22.089051 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc before test
  I0801 02:21:22.097906 23 predicates.go:958] svclb-traefik-f3709a6a-mfw2z from kube-system started at 2025-08-01 01:29:02 +0000 UTC (2 container statuses recorded)
  I0801 02:21:22.097954 23 predicates.go:960] 	Container lb-tcp-443 ready: true, restart count 0
  I0801 02:21:22.097984 23 predicates.go:960] 	Container lb-tcp-80 ready: true, restart count 0
  I0801 02:21:22.097997 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-08-01 01:30:06 +0000 UTC (1 container statuses recorded)
  I0801 02:21:22.098006 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0801 02:21:22.098016 23 predicates.go:958] sonobuoy-e2e-job-df5b01beee5e4694 from sonobuoy started at 2025-08-01 01:30:13 +0000 UTC (2 container statuses recorded)
  I0801 02:21:22.098026 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0801 02:21:22.098037 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0801 02:21:22.098049 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-17f975e496f9456c-s2s2c from sonobuoy started at 2025-08-01 01:30:13 +0000 UTC (2 container statuses recorded)
  I0801 02:21:22.098061 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0801 02:21:22.098072 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0801 02:21:22.098088 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3k-k3kcluster-server-0 before test
  I0801 02:21:22.109734 23 predicates.go:958] coredns-5688667fd4-6pnmp from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:21:22.109787 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0801 02:21:22.109801 23 predicates.go:958] helm-install-traefik-2697s from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:21:22.109812 23 predicates.go:960] 	Container helm ready: false, restart count 1
  I0801 02:21:22.109821 23 predicates.go:958] helm-install-traefik-crd-mr72s from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:21:22.109833 23 predicates.go:960] 	Container helm ready: false, restart count 0
  I0801 02:21:22.109842 23 predicates.go:958] local-path-provisioner-774c6665dc-bldhg from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:21:22.109852 23 predicates.go:960] 	Container local-path-provisioner ready: true, restart count 0
  I0801 02:21:22.109861 23 predicates.go:958] metrics-server-6f4c6675d5-86tpl from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:21:22.109871 23 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0801 02:21:22.109882 23 predicates.go:958] svclb-traefik-f3709a6a-2x7fk from kube-system started at 2025-08-01 01:28:56 +0000 UTC (2 container statuses recorded)
  I0801 02:21:22.109892 23 predicates.go:960] 	Container lb-tcp-443 ready: true, restart count 0
  I0801 02:21:22.109903 23 predicates.go:960] 	Container lb-tcp-80 ready: true, restart count 0
  I0801 02:21:22.109916 23 predicates.go:958] traefik-c98fdf6fb-f9b8t from kube-system started at 2025-08-01 01:28:56 +0000 UTC (1 container statuses recorded)
  I0801 02:21:22.109932 23 predicates.go:960] 	Container traefik ready: true, restart count 0
  I0801 02:21:22.109944 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-17f975e496f9456c-mjcrm from sonobuoy started at 2025-08-01 01:30:13 +0000 UTC (2 container statuses recorded)
  I0801 02:21:22.109953 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0801 02:21:22.109964 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc @ 08/01/25 02:21:22.173
  STEP: verifying the node has the label node k3k-k3kcluster-server-0 @ 08/01/25 02:21:22.21
  I0801 02:21:22.221127 23 predicates.go:373] Pod coredns-5688667fd4-6pnmp requesting resource cpu=100m on Node k3k-k3kcluster-server-0
  I0801 02:21:22.221288 23 predicates.go:373] Pod local-path-provisioner-774c6665dc-bldhg requesting resource cpu=0m on Node k3k-k3kcluster-server-0
  I0801 02:21:22.221355 23 predicates.go:373] Pod metrics-server-6f4c6675d5-86tpl requesting resource cpu=100m on Node k3k-k3kcluster-server-0
  I0801 02:21:22.221426 23 predicates.go:373] Pod svclb-traefik-f3709a6a-2x7fk requesting resource cpu=0m on Node k3k-k3kcluster-server-0
  I0801 02:21:22.221504 23 predicates.go:373] Pod svclb-traefik-f3709a6a-mfw2z requesting resource cpu=0m on Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc
  I0801 02:21:22.221575 23 predicates.go:373] Pod traefik-c98fdf6fb-f9b8t requesting resource cpu=0m on Node k3k-k3kcluster-server-0
  I0801 02:21:22.221654 23 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc
  I0801 02:21:22.221726 23 predicates.go:373] Pod sonobuoy-e2e-job-df5b01beee5e4694 requesting resource cpu=0m on Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc
  I0801 02:21:22.221804 23 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-17f975e496f9456c-mjcrm requesting resource cpu=0m on Node k3k-k3kcluster-server-0
  I0801 02:21:22.221880 23 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-17f975e496f9456c-s2s2c requesting resource cpu=0m on Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc
  STEP: Starting Pods to consume most of the cluster CPU. @ 08/01/25 02:21:22.221
  I0801 02:21:22.222032 23 predicates.go:383] Creating a pod which consumes cpu=2800m on Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc
  I0801 02:21:22.234226 23 predicates.go:383] Creating a pod which consumes cpu=2660m on Node k3k-k3kcluster-server-0
  STEP: Creating another pod that requires unavailable amount of CPU. @ 08/01/25 02:21:26.274
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-47f61a7b-227d-457e-85f5-6bb1009993b2.1857833e03e73727], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3366/filler-pod-47f61a7b-227d-457e-85f5-6bb1009993b2 to k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc] @ 08/01/25 02:21:26.277
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-47f61a7b-227d-457e-85f5-6bb1009993b2.1857833e3167e671], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 08/01/25 02:21:26.277
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-47f61a7b-227d-457e-85f5-6bb1009993b2.1857833e46b287f1], Reason = [Created], Message = [Created container: filler-pod-47f61a7b-227d-457e-85f5-6bb1009993b2] @ 08/01/25 02:21:26.277
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-47f61a7b-227d-457e-85f5-6bb1009993b2.1857833e5ecaf917], Reason = [Started], Message = [Started container filler-pod-47f61a7b-227d-457e-85f5-6bb1009993b2] @ 08/01/25 02:21:26.277
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b80e3dfc-81ba-472b-ad03-075a8deadfed.1857833e04b4b211], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3366/filler-pod-b80e3dfc-81ba-472b-ad03-075a8deadfed to k3k-k3kcluster-server-0] @ 08/01/25 02:21:26.277
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b80e3dfc-81ba-472b-ad03-075a8deadfed.1857833e3426d053], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 08/01/25 02:21:26.277
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b80e3dfc-81ba-472b-ad03-075a8deadfed.1857833e5f25589d], Reason = [Created], Message = [Created container: filler-pod-b80e3dfc-81ba-472b-ad03-075a8deadfed] @ 08/01/25 02:21:26.277
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b80e3dfc-81ba-472b-ad03-075a8deadfed.1857833e6d48091e], Reason = [Started], Message = [Started container filler-pod-b80e3dfc-81ba-472b-ad03-075a8deadfed] @ 08/01/25 02:21:26.278
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1857833ef4d7ab56], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 08/01/25 02:21:26.311
  STEP: removing the label node off the node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc @ 08/01/25 02:21:27.319
  STEP: verifying the node doesn't have the label node @ 08/01/25 02:21:27.353
  STEP: removing the label node off the node k3k-k3kcluster-server-0 @ 08/01/25 02:21:27.359
  STEP: verifying the node doesn't have the label node @ 08/01/25 02:21:27.384
  I0801 02:21:27.401877 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3366" for this suite. @ 08/01/25 02:21:27.418
â€¢ [5.444 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 08/01/25 02:21:27.44
  I0801 02:21:27.441001 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/01/25 02:21:27.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:27.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:27.543
  STEP: create the container to handle the HTTPGet hook request. @ 08/01/25 02:21:27.551
  STEP: create the pod with lifecycle hook @ 08/01/25 02:21:29.594
  STEP: check poststart hook @ 08/01/25 02:21:31.625
  STEP: delete the pod with lifecycle hook @ 08/01/25 02:21:31.635
  I0801 02:21:35.672980 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6704" for this suite. @ 08/01/25 02:21:35.678
â€¢ [8.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 08/01/25 02:21:35.691
  I0801 02:21:35.691774 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename proxy @ 08/01/25 02:21:35.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:35.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:35.724
  STEP: starting an echo server on multiple ports @ 08/01/25 02:21:35.76
  I0801 02:21:35.788701 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0801 02:21:37.792122 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 21, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 21, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 21, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 21, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"proxy-service-488fp-6c5b4fd95c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:21:39.802462      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 02:21:39.802575 23 proxy.go:273] setup took 4.074892336s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 08/01/25 02:21:39.802
  I0801 02:21:39.830756 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 27.833684ms)
  I0801 02:21:39.830815 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 27.639201ms)
  I0801 02:21:39.830877 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 28.162277ms)
  I0801 02:21:39.830904 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 27.86419ms)
  I0801 02:21:39.830921 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 27.374062ms)
  I0801 02:21:39.830938 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 26.584272ms)
  I0801 02:21:39.830970 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 27.607308ms)
  I0801 02:21:39.831376 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 27.443196ms)
  I0801 02:21:39.831527 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 28.253519ms)
  I0801 02:21:39.831638 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 28.174825ms)
  I0801 02:21:39.841946 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 37.764833ms)
  I0801 02:21:39.849220 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 44.938342ms)
  I0801 02:21:39.849281 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 45.60763ms)
  I0801 02:21:39.857442 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 53.582031ms)
  I0801 02:21:39.857505 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 53.494656ms)
  I0801 02:21:39.865245 23 proxy.go:601] (0) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 61.481911ms)
  I0801 02:21:39.874771 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 9.336123ms)
  I0801 02:21:39.874817 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 9.270522ms)
  I0801 02:21:39.879416 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 13.873217ms)
  I0801 02:21:39.879453 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 13.833229ms)
  I0801 02:21:39.879534 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 13.773794ms)
  I0801 02:21:39.879538 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 13.847688ms)
  I0801 02:21:39.879564 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 13.917908ms)
  I0801 02:21:39.879569 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 13.873353ms)
  I0801 02:21:39.879589 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 13.918365ms)
  I0801 02:21:39.879594 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 13.879918ms)
  I0801 02:21:39.879610 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 13.873757ms)
  I0801 02:21:39.880158 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 14.398207ms)
  I0801 02:21:39.880201 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 14.566753ms)
  I0801 02:21:39.880629 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 14.910359ms)
  I0801 02:21:39.881299 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 15.517183ms)
  I0801 02:21:39.899852 23 proxy.go:601] (1) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 34.10832ms)
  I0801 02:21:39.906654 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 6.269094ms)
  I0801 02:21:39.906721 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 6.495209ms)
  I0801 02:21:39.906852 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 6.596131ms)
  I0801 02:21:39.907240 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 7.042898ms)
  I0801 02:21:39.925723 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 25.24212ms)
  I0801 02:21:39.925790 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 25.764372ms)
  I0801 02:21:39.925909 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 25.99103ms)
  I0801 02:21:39.925939 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 25.368083ms)
  I0801 02:21:39.926195 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 26.131206ms)
  I0801 02:21:39.926314 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 26.383571ms)
  I0801 02:21:39.926348 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 26.028458ms)
  I0801 02:21:39.926383 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 25.983892ms)
  I0801 02:21:39.927124 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 26.842974ms)
  I0801 02:21:39.927307 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 26.85896ms)
  I0801 02:21:39.927451 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 27.029937ms)
  I0801 02:21:39.927713 23 proxy.go:601] (2) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 27.165748ms)
  I0801 02:21:39.937682 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 9.913663ms)
  I0801 02:21:39.937913 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 9.73668ms)
  I0801 02:21:39.937959 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 9.012037ms)
  I0801 02:21:39.938070 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 10.101762ms)
  I0801 02:21:39.938459 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 9.567096ms)
  I0801 02:21:39.938983 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 10.939949ms)
  I0801 02:21:39.939024 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 10.775114ms)
  I0801 02:21:39.939043 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 10.217358ms)
  I0801 02:21:39.939411 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 10.96155ms)
  I0801 02:21:39.939452 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 10.806114ms)
  I0801 02:21:39.939657 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 11.273599ms)
  I0801 02:21:39.940150 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 11.83136ms)
  I0801 02:21:39.940896 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 13.000541ms)
  I0801 02:21:39.941387 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 12.672596ms)
  I0801 02:21:39.943992 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 15.21249ms)
  I0801 02:21:39.945205 23 proxy.go:601] (3) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 16.623205ms)
  I0801 02:21:39.948879 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 3.577921ms)
  I0801 02:21:39.951416 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 5.93484ms)
  I0801 02:21:39.951896 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 6.319767ms)
  I0801 02:21:39.951943 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 5.808493ms)
  I0801 02:21:39.952585 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 6.483633ms)
  I0801 02:21:39.953376 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 7.695608ms)
  I0801 02:21:39.953663 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 7.595968ms)
  I0801 02:21:39.953903 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 8.080514ms)
  I0801 02:21:39.955388 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 9.642874ms)
  I0801 02:21:39.955478 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 9.544557ms)
  I0801 02:21:39.955392 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 9.415714ms)
  I0801 02:21:39.955399 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 9.394014ms)
  I0801 02:21:39.955446 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 9.667532ms)
  I0801 02:21:39.955654 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 9.793022ms)
  I0801 02:21:39.955712 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 9.819307ms)
  I0801 02:21:39.956759 23 proxy.go:601] (4) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 10.720274ms)
  I0801 02:21:39.961413 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 4.594605ms)
  I0801 02:21:39.962493 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 4.74934ms)
  I0801 02:21:39.962541 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 5.494313ms)
  I0801 02:21:39.963036 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 5.167715ms)
  I0801 02:21:39.963282 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 6.152176ms)
  I0801 02:21:39.963533 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 6.330823ms)
  I0801 02:21:39.964117 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 6.091605ms)
  I0801 02:21:39.964323 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 7.363596ms)
  I0801 02:21:39.964437 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 6.949257ms)
  I0801 02:21:39.964470 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 6.664495ms)
  I0801 02:21:39.965523 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 7.962742ms)
  I0801 02:21:39.966013 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 7.938424ms)
  I0801 02:21:39.966312 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 8.34097ms)
  I0801 02:21:39.966649 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 9.027165ms)
  I0801 02:21:39.966666 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 8.750032ms)
  I0801 02:21:39.966700 23 proxy.go:601] (5) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 9.027537ms)
  I0801 02:21:39.970482 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 3.616007ms)
  I0801 02:21:39.970551 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 3.601892ms)
  I0801 02:21:39.970656 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 3.772396ms)
  I0801 02:21:39.972882 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 6.129205ms)
  I0801 02:21:39.973525 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 6.501999ms)
  I0801 02:21:39.974532 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 7.481114ms)
  I0801 02:21:39.974611 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 7.711434ms)
  I0801 02:21:39.975236 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 8.238149ms)
  I0801 02:21:39.975233 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 8.176478ms)
  I0801 02:21:39.975349 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 8.3532ms)
  I0801 02:21:39.975402 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 8.440628ms)
  I0801 02:21:39.975438 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 8.545777ms)
  I0801 02:21:39.975440 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 8.457505ms)
  I0801 02:21:39.975466 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 8.446173ms)
  I0801 02:21:39.975471 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 8.527896ms)
  I0801 02:21:39.975487 23 proxy.go:601] (6) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 8.436526ms)
  I0801 02:21:39.982138 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 6.603355ms)
  I0801 02:21:39.982279 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 6.604584ms)
  I0801 02:21:39.982308 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 6.088729ms)
  I0801 02:21:39.983303 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 7.418837ms)
  I0801 02:21:39.983361 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 7.352025ms)
  I0801 02:21:39.983455 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 7.164477ms)
  I0801 02:21:39.983592 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 6.949639ms)
  I0801 02:21:39.983806 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 7.457769ms)
  I0801 02:21:39.984159 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 8.339224ms)
  I0801 02:21:39.984641 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 8.693028ms)
  I0801 02:21:39.984716 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 8.259212ms)
  I0801 02:21:39.984992 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 8.591777ms)
  I0801 02:21:39.985047 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 8.918014ms)
  I0801 02:21:39.985054 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 8.475427ms)
  I0801 02:21:39.985277 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 8.5683ms)
  I0801 02:21:39.986085 23 proxy.go:601] (7) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 10.327917ms)
  I0801 02:21:39.990115 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 3.968502ms)
  I0801 02:21:39.992595 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 6.229755ms)
  I0801 02:21:39.997629 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 11.331851ms)
  I0801 02:21:40.001022 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 14.591999ms)
  I0801 02:21:40.001900 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 15.083896ms)
  I0801 02:21:40.001914 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 14.810621ms)
  I0801 02:21:40.002318 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 15.392522ms)
  I0801 02:21:40.002326 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 15.573846ms)
  I0801 02:21:40.002583 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 15.903644ms)
  I0801 02:21:40.002624 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 15.470467ms)
  I0801 02:21:40.002909 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 16.371694ms)
  I0801 02:21:40.002991 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 16.518966ms)
  I0801 02:21:40.004352 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 17.482319ms)
  I0801 02:21:40.004818 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 17.836753ms)
  I0801 02:21:40.005034 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 17.990923ms)
  I0801 02:21:40.005264 23 proxy.go:601] (8) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 18.645926ms)
  I0801 02:21:40.008599 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 3.269274ms)
  I0801 02:21:40.009205 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 3.602956ms)
  I0801 02:21:40.009895 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 4.203083ms)
  I0801 02:21:40.010896 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 5.346237ms)
  I0801 02:21:40.011516 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 5.784084ms)
  I0801 02:21:40.013313 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 7.37438ms)
  I0801 02:21:40.013477 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 7.582184ms)
  I0801 02:21:40.014911 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 8.889258ms)
  I0801 02:21:40.014938 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 9.084229ms)
  I0801 02:21:40.014920 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 9.271518ms)
  I0801 02:21:40.014920 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 9.441883ms)
  I0801 02:21:40.014960 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 9.189941ms)
  I0801 02:21:40.014998 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 8.882706ms)
  I0801 02:21:40.015225 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 9.413026ms)
  I0801 02:21:40.015391 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 9.333395ms)
  I0801 02:21:40.015651 23 proxy.go:601] (9) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 9.67028ms)
  I0801 02:21:40.021664 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 5.000671ms)
  I0801 02:21:40.022604 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 6.255184ms)
  I0801 02:21:40.022831 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 6.987245ms)
  I0801 02:21:40.022844 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 6.4ms)
  I0801 02:21:40.022866 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 6.324599ms)
  I0801 02:21:40.022881 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 6.853754ms)
  I0801 02:21:40.023581 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 6.854577ms)
  I0801 02:21:40.023601 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 7.360394ms)
  I0801 02:21:40.024185 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 7.582606ms)
  I0801 02:21:40.024300 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 8.129869ms)
  I0801 02:21:40.024695 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 8.782124ms)
  I0801 02:21:40.024801 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 8.412423ms)
  I0801 02:21:40.024973 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 8.684037ms)
  I0801 02:21:40.025620 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 8.824044ms)
  I0801 02:21:40.025859 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 9.881103ms)
  I0801 02:21:40.026115 23 proxy.go:601] (10) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 10.418836ms)
  I0801 02:21:40.032991 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 6.351188ms)
  I0801 02:21:40.033207 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 7.044165ms)
  I0801 02:21:40.033494 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 7.194997ms)
  I0801 02:21:40.033730 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 7.237744ms)
  I0801 02:21:40.034551 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 7.953239ms)
  I0801 02:21:40.034592 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 7.918587ms)
  I0801 02:21:40.034876 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 7.983015ms)
  I0801 02:21:40.035427 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 8.59047ms)
  I0801 02:21:40.035515 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 9.164838ms)
  I0801 02:21:40.035848 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 8.863638ms)
  I0801 02:21:40.035888 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 9.448122ms)
  I0801 02:21:40.035914 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 9.122582ms)
  I0801 02:21:40.036135 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 9.734288ms)
  I0801 02:21:40.036636 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 10.083731ms)
  I0801 02:21:40.036673 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 9.959447ms)
  I0801 02:21:40.036934 23 proxy.go:601] (11) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 10.179729ms)
  I0801 02:21:40.043149 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 6.014775ms)
  I0801 02:21:40.043157 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 6.048631ms)
  I0801 02:21:40.043193 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 6.033962ms)
  I0801 02:21:40.043506 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 6.402672ms)
  I0801 02:21:40.043530 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 6.313074ms)
  I0801 02:21:40.046240 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 9.212718ms)
  I0801 02:21:40.046407 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 9.266896ms)
  I0801 02:21:40.046436 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 9.163576ms)
  I0801 02:21:40.046451 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 9.278472ms)
  I0801 02:21:40.046468 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 9.401417ms)
  I0801 02:21:40.046488 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 9.490738ms)
  I0801 02:21:40.047507 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 10.243899ms)
  I0801 02:21:40.047523 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 10.318783ms)
  I0801 02:21:40.047934 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 10.696058ms)
  I0801 02:21:40.047972 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 10.746119ms)
  I0801 02:21:40.048065 23 proxy.go:601] (12) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 11.070051ms)
  I0801 02:21:40.050706 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 2.517992ms)
  I0801 02:21:40.053261 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 4.677642ms)
  I0801 02:21:40.053312 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 4.879684ms)
  I0801 02:21:40.054346 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 6.011649ms)
  I0801 02:21:40.054980 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 5.926783ms)
  I0801 02:21:40.055023 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 6.032956ms)
  I0801 02:21:40.055016 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 6.294351ms)
  I0801 02:21:40.055069 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 6.418973ms)
  I0801 02:21:40.057810 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 9.032238ms)
  I0801 02:21:40.057884 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 8.946577ms)
  I0801 02:21:40.057910 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 8.67856ms)
  I0801 02:21:40.057931 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 9.106646ms)
  I0801 02:21:40.057996 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 9.108971ms)
  I0801 02:21:40.058023 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 8.920422ms)
  I0801 02:21:40.058051 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 8.753468ms)
  I0801 02:21:40.059537 23 proxy.go:601] (13) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 10.366696ms)
  I0801 02:21:40.070800 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 10.874118ms)
  I0801 02:21:40.070864 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 10.2841ms)
  I0801 02:21:40.070884 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 11.285082ms)
  I0801 02:21:40.071212 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 11.24345ms)
  I0801 02:21:40.071255 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 10.813535ms)
  I0801 02:21:40.071578 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 10.964038ms)
  I0801 02:21:40.071807 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 11.227947ms)
  I0801 02:21:40.072719 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 12.857339ms)
  I0801 02:21:40.073213 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 12.869055ms)
  I0801 02:21:40.073644 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 13.875716ms)
  I0801 02:21:40.073680 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 13.118444ms)
  I0801 02:21:40.073961 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 13.694577ms)
  I0801 02:21:40.074649 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 14.253068ms)
  I0801 02:21:40.075055 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 14.416568ms)
  I0801 02:21:40.075096 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 15.079525ms)
  I0801 02:21:40.093214 23 proxy.go:601] (14) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 32.697528ms)
  I0801 02:21:40.101320 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 7.9039ms)
  I0801 02:21:40.101654 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 8.171192ms)
  I0801 02:21:40.101699 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 8.160456ms)
  I0801 02:21:40.101728 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 8.158651ms)
  I0801 02:21:40.101767 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 8.060749ms)
  I0801 02:21:40.101795 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 8.036378ms)
  I0801 02:21:40.101829 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 7.999883ms)
  I0801 02:21:40.101957 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 8.67936ms)
  I0801 02:21:40.101994 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 8.714676ms)
  I0801 02:21:40.102022 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 8.223821ms)
  I0801 02:21:40.102035 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 8.387849ms)
  I0801 02:21:40.102046 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 8.675246ms)
  I0801 02:21:40.102069 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 8.460595ms)
  I0801 02:21:40.103029 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 9.348664ms)
  I0801 02:21:40.103116 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 9.604786ms)
  I0801 02:21:40.103171 23 proxy.go:601] (15) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 9.727145ms)
  I0801 02:21:40.113217 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 9.774981ms)
  I0801 02:21:40.116762 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 13.321393ms)
  I0801 02:21:40.116818 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 13.484925ms)
  I0801 02:21:40.117218 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 13.359037ms)
  I0801 02:21:40.117924 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 14.375406ms)
  I0801 02:21:40.118317 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 14.911977ms)
  I0801 02:21:40.122403 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 18.68025ms)
  I0801 02:21:40.122532 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 19.072201ms)
  I0801 02:21:40.122605 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 18.653186ms)
  I0801 02:21:40.122594 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 18.76691ms)
  I0801 02:21:40.122638 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 18.864124ms)
  I0801 02:21:40.122653 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 18.774534ms)
  I0801 02:21:40.122661 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 18.924508ms)
  I0801 02:21:40.122677 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 19.363769ms)
  I0801 02:21:40.122690 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 18.777071ms)
  I0801 02:21:40.138618 23 proxy.go:601] (16) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 35.262965ms)
  I0801 02:21:40.151949 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 12.567692ms)
  I0801 02:21:40.152190 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 12.880958ms)
  I0801 02:21:40.153410 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 13.788745ms)
  I0801 02:21:40.153535 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 14.346184ms)
  I0801 02:21:40.154037 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 14.788987ms)
  I0801 02:21:40.155068 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 15.93265ms)
  I0801 02:21:40.156568 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 16.835435ms)
  I0801 02:21:40.157157 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 17.720968ms)
  I0801 02:21:40.157195 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 18.507615ms)
  I0801 02:21:40.159373 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 19.813183ms)
  I0801 02:21:40.160167 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 21.156911ms)
  I0801 02:21:40.160664 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 21.174042ms)
  I0801 02:21:40.160763 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 21.911405ms)
  I0801 02:21:40.165429 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 26.500445ms)
  I0801 02:21:40.167619 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 27.937986ms)
  I0801 02:21:40.170619 23 proxy.go:601] (17) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 31.538992ms)
  I0801 02:21:40.181977 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 10.900924ms)
  I0801 02:21:40.182046 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 11.12174ms)
  I0801 02:21:40.182072 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 11.236137ms)
  I0801 02:21:40.182095 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 11.097681ms)
  I0801 02:21:40.185353 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 14.208653ms)
  I0801 02:21:40.189027 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 17.258958ms)
  I0801 02:21:40.189026 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 18.331482ms)
  I0801 02:21:40.189670 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 18.463716ms)
  I0801 02:21:40.190317 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 18.614289ms)
  I0801 02:21:40.190498 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 18.662458ms)
  I0801 02:21:40.191125 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 19.761107ms)
  I0801 02:21:40.191159 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 19.522147ms)
  I0801 02:21:40.191450 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 19.941622ms)
  I0801 02:21:40.191767 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 20.497433ms)
  I0801 02:21:40.192702 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 21.2583ms)
  I0801 02:21:40.198822 23 proxy.go:601] (18) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 27.242143ms)
  I0801 02:21:40.204614 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 5.464859ms)
  I0801 02:21:40.206163 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:462/proxy/: tls qux (200; 6.517659ms)
  I0801 02:21:40.207722 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname2/proxy/: bar (200; 8.824463ms)
  I0801 02:21:40.207758 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:162/proxy/: bar (200; 8.53907ms)
  I0801 02:21:40.208904 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/rewri... (200; 9.00789ms)
  I0801 02:21:40.208949 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:460/proxy/: tls baz (200; 9.662393ms)
  I0801 02:21:40.212339 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname2/proxy/: bar (200; 12.876307ms)
  I0801 02:21:40.212396 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname1/proxy/: tls baz (200; 12.6866ms)
  I0801 02:21:40.212425 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/services/https:proxy-service-488fp:tlsportname2/proxy/: tls qux (200; 12.656416ms)
  I0801 02:21:40.212446 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q/proxy/rewriteme"... (200; 12.613364ms)
  I0801 02:21:40.212470 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/pods/proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 12.520199ms)
  I0801 02:21:40.212532 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:160/proxy/: foo (200; 13.484268ms)
  I0801 02:21:40.212554 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/services/proxy-service-488fp:portname1/proxy/: foo (200; 13.211516ms)
  I0801 02:21:40.212573 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/https:proxy-service-488fp-6c5b4fd95c-99l9q:443/proxy/... (200; 13.009026ms)
  I0801 02:21:40.212592 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/: <a href="/api/v1/namespaces/proxy-4495/pods/http:proxy-service-488fp-6c5b4fd95c-99l9q:1080/proxy/... (200; 13.076191ms)
  I0801 02:21:40.212615 23 proxy.go:601] (19) /api/v1/namespaces/proxy-4495/services/http:proxy-service-488fp:portname1/proxy/: foo (200; 13.216946ms)
  I0801 02:21:40.222080 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4495" for this suite. @ 08/01/25 02:21:40.225
â€¢ [4.545 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 08/01/25 02:21:40.237
  I0801 02:21:40.237699 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pods @ 08/01/25 02:21:40.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:40.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:40.282
  STEP: creating pod @ 08/01/25 02:21:40.29
  I0801 02:21:44.378108 23 pods.go:83] Pod pod-hostip-70788ab0-5448-4419-8e45-1278bac3daa4 has hostIP: 10.42.0.16
  I0801 02:21:44.378259 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8854" for this suite. @ 08/01/25 02:21:44.382
â€¢ [4.154 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 08/01/25 02:21:44.392
  I0801 02:21:44.392584 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-runtime @ 08/01/25 02:21:44.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:44.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:44.474
  STEP: create the container @ 08/01/25 02:21:44.483
  I0801 02:21:44.518165      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 08/01/25 02:21:44.518
  STEP: get the container status @ 08/01/25 02:21:47.543
  STEP: the container should be terminated @ 08/01/25 02:21:47.546
  STEP: the termination message should be set @ 08/01/25 02:21:47.546
  I0801 02:21:47.546536 23 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 08/01/25 02:21:47.546
  I0801 02:21:47.575869 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2044" for this suite. @ 08/01/25 02:21:47.581
â€¢ [3.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 08/01/25 02:21:47.591
  I0801 02:21:47.591134 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename csiinlinevolumes @ 08/01/25 02:21:47.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:47.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:47.628
  STEP: creating @ 08/01/25 02:21:47.631
  STEP: getting @ 08/01/25 02:21:47.673
  STEP: listing in namespace @ 08/01/25 02:21:47.682
  STEP: patching @ 08/01/25 02:21:47.685
  STEP: deleting @ 08/01/25 02:21:47.718
  I0801 02:21:47.759014 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-10" for this suite. @ 08/01/25 02:21:47.766
â€¢ [0.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 08/01/25 02:21:47.786
  I0801 02:21:47.786571 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename init-container @ 08/01/25 02:21:47.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:47.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:47.816
  STEP: creating the pod @ 08/01/25 02:21:47.825
  I0801 02:21:47.825683 23 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0801 02:21:51.848619 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5993" for this suite. @ 08/01/25 02:21:51.852
â€¢ [4.076 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 08/01/25 02:21:51.862
  I0801 02:21:51.862920 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename secrets @ 08/01/25 02:21:51.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:51.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:51.911
  STEP: Creating secret with name secret-test-map-77ec6777-72ec-49f0-b592-d8ae16e0b0f0 @ 08/01/25 02:21:51.915
  STEP: Creating a pod to test consume secrets @ 08/01/25 02:21:51.929
  STEP: Saw pod success @ 08/01/25 02:21:55.964
  I0801 02:21:55.968253 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-secrets-27bf5624-5204-4316-8d1a-36fa14a44e7e container secret-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 02:21:55.978
  I0801 02:21:56.012789 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4877" for this suite. @ 08/01/25 02:21:56.017
â€¢ [4.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 08/01/25 02:21:56.04
  I0801 02:21:56.040653 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename volumeattachment @ 08/01/25 02:21:56.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:56.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:56.083
  STEP: Create VolumeAttachment "va-e2e-hjblb" on node "k3k-k3kcluster-server-0" @ 08/01/25 02:21:56.117
  STEP: Get VolumeAttachment "va-e2e-hjblb" on node "k3k-k3kcluster-server-0" @ 08/01/25 02:21:56.141
  STEP: Patch VolumeAttachment "va-e2e-hjblb" on node "k3k-k3kcluster-server-0" @ 08/01/25 02:21:56.147
  STEP: List VolumeAttachments with "va-e2e-hjblb=patched" label @ 08/01/25 02:21:56.163
  STEP: Delete VolumeAttachment "va-e2e-hjblb" on node "k3k-k3kcluster-server-0" @ 08/01/25 02:21:56.176
  STEP: Confirm deletion of VolumeAttachment "va-e2e-hjblb" on node "k3k-k3kcluster-server-0" @ 08/01/25 02:21:56.189
  STEP: Create VolumeAttachment "va-e2e-m22qb" on node "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc" @ 08/01/25 02:21:56.217
  STEP: Update the VolumeAttachment "va-e2e-m22qb" on node "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc" with label "va-e2e=updated" @ 08/01/25 02:21:56.226
  STEP: Create VolumeAttachment "va-e2e-g7gg4" on node "k3k-k3kcluster-server-0" @ 08/01/25 02:21:56.318
  STEP: Update the VolumeAttachment "va-e2e-g7gg4" on node "k3k-k3kcluster-server-0" with label "va-e2e=updated" @ 08/01/25 02:21:56.333
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 08/01/25 02:21:56.345
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 08/01/25 02:21:56.374
  I0801 02:21:56.377432 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-8935" for this suite. @ 08/01/25 02:21:56.421
â€¢ [0.401 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 08/01/25 02:21:56.442
  I0801 02:21:56.442031 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename limitrange @ 08/01/25 02:21:56.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:56.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:56.501
  STEP: Creating LimitRange "e2e-limitrange-fdj22" in namespace "limitrange-7459" @ 08/01/25 02:21:56.512
  STEP: Creating another limitRange in another namespace @ 08/01/25 02:21:56.522
  I0801 02:21:56.553169 23 limit_range.go:299] Namespace "e2e-limitrange-fdj22-4749" created
  I0801 02:21:56.553216 23 limit_range.go:300] Creating LimitRange "e2e-limitrange-fdj22" in namespace "e2e-limitrange-fdj22-4749"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-fdj22" @ 08/01/25 02:21:56.562
  I0801 02:21:56.567510 23 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-fdj22" in "limitrange-7459" namespace @ 08/01/25 02:21:56.567
  I0801 02:21:56.599329 23 limit_range.go:335] LimitRange "e2e-limitrange-fdj22" has been patched
  STEP: Delete LimitRange "e2e-limitrange-fdj22" by Collection with labelSelector: "e2e-limitrange-fdj22=patched" @ 08/01/25 02:21:56.599
  STEP: Confirm that the limitRange "e2e-limitrange-fdj22" has been deleted @ 08/01/25 02:21:56.623
  I0801 02:21:56.623689 23 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0801 02:21:56.627570 23 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-fdj22=patched"
  I0801 02:21:56.627623 23 limit_range.go:344] LimitRange "e2e-limitrange-fdj22" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-fdj22" @ 08/01/25 02:21:56.627
  I0801 02:21:56.632803 23 limit_range.go:350] Found 1 limitRange
  I0801 02:21:56.632984 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7459" for this suite. @ 08/01/25 02:21:56.635
  STEP: Destroying namespace "e2e-limitrange-fdj22-4749" for this suite. @ 08/01/25 02:21:56.652
â€¢ [0.222 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 08/01/25 02:21:56.664
  I0801 02:21:56.664137 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename var-expansion @ 08/01/25 02:21:56.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:21:56.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:21:56.751
  STEP: Creating a pod to test substitution in volume subpath @ 08/01/25 02:21:56.757
  STEP: Saw pod success @ 08/01/25 02:22:00.838
  I0801 02:22:00.841480 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod var-expansion-50c45fe9-6303-4888-aa6a-55379a8f083d container dapi-container: <nil>
  STEP: delete the pod @ 08/01/25 02:22:00.847
  I0801 02:22:00.902005 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5835" for this suite. @ 08/01/25 02:22:00.91
â€¢ [4.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 08/01/25 02:22:00.927
  I0801 02:22:00.927684 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename statefulset @ 08/01/25 02:22:00.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:22:00.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:22:00.987
  STEP: Creating service test in namespace statefulset-2887 @ 08/01/25 02:22:00.994
  STEP: Creating statefulset ss in namespace statefulset-2887 @ 08/01/25 02:22:01.013
  I0801 02:22:01.049044 23 wait.go:44] Found 0 stateful pods, waiting for 1
  I0801 02:22:11.054943 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 08/01/25 02:22:11.061
  STEP: updating a scale subresource @ 08/01/25 02:22:11.065
  STEP: verifying the statefulset Spec.Replicas was modified @ 08/01/25 02:22:11.08
  STEP: Patch a scale subresource @ 08/01/25 02:22:11.09
  STEP: verifying the statefulset Spec.Replicas was modified @ 08/01/25 02:22:11.123
  I0801 02:22:11.131684 23 statefulset.go:138] Deleting all statefulset in ns statefulset-2887
  I0801 02:22:11.134962 23 rest.go:153] Scaling statefulset ss to 0
  I0801 02:22:21.167674 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0801 02:22:21.170096 23 rest.go:91] Deleting statefulset ss
  I0801 02:22:21.185380 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2887" for this suite. @ 08/01/25 02:22:21.188
â€¢ [20.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 08/01/25 02:22:21.214
  I0801 02:22:21.214951 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 02:22:21.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:22:21.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:22:21.246
  STEP: Setting up server cert @ 08/01/25 02:22:21.301
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 02:22:22.109
  STEP: Deploying the webhook pod @ 08/01/25 02:22:22.118
  STEP: Wait for the deployment to be ready @ 08/01/25 02:22:22.146
  I0801 02:22:22.163189 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 02:22:24.178
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 02:22:24.252
  I0801 02:22:25.253812 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0801 02:22:25.257247 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5365-crds.webhook.example.com via the AdmissionRegistration API @ 08/01/25 02:22:25.77
  STEP: Creating a custom resource while v1 is storage version @ 08/01/25 02:22:25.8
  STEP: Patching Custom Resource Definition to set v2 as storage @ 08/01/25 02:22:27.857
  STEP: Patching the custom resource while v2 is storage version @ 08/01/25 02:22:27.882
  I0801 02:22:28.602637 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6261" for this suite. @ 08/01/25 02:22:28.605
  STEP: Destroying namespace "webhook-markers-7770" for this suite. @ 08/01/25 02:22:28.615
â€¢ [7.411 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 08/01/25 02:22:28.625
  I0801 02:22:28.625947 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename disruption @ 08/01/25 02:22:28.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:22:28.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:22:28.671
  STEP: Creating a kubernetes client @ 08/01/25 02:22:28.676
  I0801 02:22:28.676150 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename disruption-2 @ 08/01/25 02:22:28.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:22:28.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:22:28.702
  STEP: Waiting for the pdb to be processed @ 08/01/25 02:22:28.727
  STEP: Waiting for the pdb to be processed @ 08/01/25 02:22:30.742
  STEP: Waiting for the pdb to be processed @ 08/01/25 02:22:32.755
  STEP: listing a collection of PDBs across all namespaces @ 08/01/25 02:22:32.774
  STEP: listing a collection of PDBs in namespace disruption-7704 @ 08/01/25 02:22:32.776
  STEP: deleting a collection of PDBs @ 08/01/25 02:22:32.784
  STEP: Waiting for the PDB collection to be deleted @ 08/01/25 02:22:32.801
  I0801 02:22:32.815874 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-7900" for this suite. @ 08/01/25 02:22:32.826
  I0801 02:22:32.841971 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7704" for this suite. @ 08/01/25 02:22:32.927
â€¢ [4.317 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 08/01/25 02:22:32.944
  I0801 02:22:32.944196 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 02:22:32.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:22:32.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:22:32.982
  STEP: creating service endpoint-test2 in namespace services-8256 @ 08/01/25 02:22:32.986
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8256 to expose endpoints map[] @ 08/01/25 02:22:33.016
  I0801 02:22:33.033057      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 02:22:33.033138 23 service.go:4613] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0801 02:22:34.042366      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 02:22:34.069774 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-8256 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8256 @ 08/01/25 02:22:34.07
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8256 to expose endpoints map[pod1:[80]] @ 08/01/25 02:22:36.095
  I0801 02:22:36.103713      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 02:22:36.108288 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-8256 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 08/01/25 02:22:36.108
  I0801 02:22:36.108394 23 resource.go:361] Creating new exec pod
  I0801 02:22:38.159585 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-8256 exec execpod4kf9f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0801 02:22:38.411770 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.53.112.169) 80 port [tcp/http] succeeded!\n"
  I0801 02:22:38.411832 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 02:22:38.411922 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-8256 exec execpod4kf9f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.112.169 80'
  I0801 02:22:38.666821 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.112.169 80\nConnection to 10.53.112.169 80 port [tcp/http] succeeded!\n"
  I0801 02:22:38.666884 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-8256 @ 08/01/25 02:22:38.666
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8256 to expose endpoints map[pod1:[80] pod2:[80]] @ 08/01/25 02:22:40.684
  I0801 02:22:40.692883      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 02:22:40.696973 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-8256 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 08/01/25 02:22:40.697
  I0801 02:22:40.700719 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-8256 exec execpod4kf9f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0801 02:22:40.849453 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.53.112.169) 80 port [tcp/http] succeeded!\n"
  I0801 02:22:40.849498 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 02:22:40.849570 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-8256 exec execpod4kf9f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.112.169 80'
  I0801 02:22:41.003771 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.112.169 80\nConnection to 10.53.112.169 80 port [tcp/http] succeeded!\n"
  I0801 02:22:41.003823 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8256 @ 08/01/25 02:22:41.003
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8256 to expose endpoints map[pod2:[80]] @ 08/01/25 02:22:41.037
  I0801 02:22:41.048441      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 02:22:41.059896 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-8256 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 08/01/25 02:22:41.059
  I0801 02:22:41.063105 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-8256 exec execpod4kf9f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0801 02:22:41.241488 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.53.112.169) 80 port [tcp/http] succeeded!\n"
  I0801 02:22:41.241540 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 02:22:41.241605 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-8256 exec execpod4kf9f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.112.169 80'
  I0801 02:22:41.553407 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.112.169 80\nConnection to 10.53.112.169 80 port [tcp/http] succeeded!\n"
  I0801 02:22:41.553461 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-8256 @ 08/01/25 02:22:41.553
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8256 to expose endpoints map[] @ 08/01/25 02:22:41.601
  I0801 02:22:41.604965      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 02:22:41.693002 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-8256 exposes endpoints map[]
  I0801 02:22:41.766316 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8256" for this suite. @ 08/01/25 02:22:41.78
â€¢ [8.914 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 08/01/25 02:22:41.858
  I0801 02:22:41.858307 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename containers @ 08/01/25 02:22:41.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:22:41.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:22:41.923
  STEP: Creating a pod to test override all @ 08/01/25 02:22:41.933
  STEP: Saw pod success @ 08/01/25 02:22:46.008
  I0801 02:22:46.012173 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod client-containers-4939cb7b-66fb-45ea-ab36-d38c3857077f container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 02:22:46.017
  I0801 02:22:46.052997 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-50" for this suite. @ 08/01/25 02:22:46.084
â€¢ [4.241 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 08/01/25 02:22:46.099
  I0801 02:22:46.099806 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 02:22:46.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:22:46.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:22:46.157
  I0801 02:22:46.249471 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-329" for this suite. @ 08/01/25 02:22:46.256
â€¢ [0.166 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 08/01/25 02:22:46.266
  I0801 02:22:46.266177 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename sysctl @ 08/01/25 02:22:46.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:22:46.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:22:46.305
  STEP: Creating a pod with one valid and two invalid sysctls @ 08/01/25 02:22:46.313
  I0801 02:22:46.318369 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3446" for this suite. @ 08/01/25 02:22:46.33
â€¢ [0.074 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 08/01/25 02:22:46.34
  I0801 02:22:46.340817 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename sysctl @ 08/01/25 02:22:46.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:22:46.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:22:46.383
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 08/01/25 02:22:46.388
  STEP: Watching for error events or started pod @ 08/01/25 02:22:46.43
  STEP: Waiting for pod completion @ 08/01/25 02:22:48.448
  STEP: Checking that the pod succeeded @ 08/01/25 02:22:50.476
  STEP: Getting logs from the pod @ 08/01/25 02:22:50.476
  STEP: Checking that the sysctl is actually updated @ 08/01/25 02:22:50.482
  I0801 02:22:50.482229 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8039" for this suite. @ 08/01/25 02:22:50.485
â€¢ [4.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 08/01/25 02:22:50.511
  I0801 02:22:50.511923 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename taint-multiple-pods @ 08/01/25 02:22:50.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:22:50.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:22:50.585
  I0801 02:22:50.606919 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0801 02:23:50.608691 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0801 02:23:50.617764 23 taints.go:144] Starting informer...
  STEP: Starting pods... @ 08/01/25 02:23:50.617
  I0801 02:23:50.867064 23 taints.go:463] Pod1 is running on k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc. Tainting Node
  I0801 02:24:09.151036 23 taints.go:471] Pod2 is running on k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc. Tainting Node
  STEP: Trying to apply a taint on the Node @ 08/01/25 02:24:09.151
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/01/25 02:24:09.172
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 08/01/25 02:24:09.176
  I0801 02:24:15.434368 23 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0801 02:24:35.520856 23 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/01/25 02:24:35.561
  I0801 02:24:35.566159 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-8531" for this suite. @ 08/01/25 02:24:35.587
â€¢ [105.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 08/01/25 02:24:35.614
  I0801 02:24:35.614086 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 02:24:35.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:24:35.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:24:35.657
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 08/01/25 02:24:35.662
  STEP: Saw pod success @ 08/01/25 02:24:39.738
  I0801 02:24:39.741721 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-fdcb9df1-d447-45c6-b5c0-d1d134e6eedb container test-container: <nil>
  STEP: delete the pod @ 08/01/25 02:24:39.764
  I0801 02:24:39.800383 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-458" for this suite. @ 08/01/25 02:24:39.804
â€¢ [4.205 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 08/01/25 02:24:39.819
  I0801 02:24:39.819802 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename containers @ 08/01/25 02:24:39.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:24:39.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:24:39.851
  STEP: Creating a pod to test override arguments @ 08/01/25 02:24:39.856
  STEP: Saw pod success @ 08/01/25 02:24:43.891
  I0801 02:24:43.895875 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod client-containers-5800219e-67d5-4eb1-946a-76cd7bb0b827 container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 02:24:43.902
  I0801 02:24:43.945707 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-417" for this suite. @ 08/01/25 02:24:43.949
â€¢ [4.146 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 08/01/25 02:24:43.966
  I0801 02:24:43.966773 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename sched-preemption @ 08/01/25 02:24:43.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:24:44.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:24:44.029
  I0801 02:24:44.098136 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0801 02:25:44.107147 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 08/01/25 02:25:44.113
  I0801 02:25:44.113686 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename sched-preemption-path @ 08/01/25 02:25:44.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:25:44.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:25:44.174
  STEP: Finding an available node @ 08/01/25 02:25:44.195
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/01/25 02:25:44.196
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/01/25 02:25:46.233
  I0801 02:25:46.256749 23 preemption.go:717] found a healthy node: k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc
  STEP: Adding a custom resource @ 08/01/25 02:25:46.259
  I0801 02:25:52.418437 23 preemption.go:836] pods created so far: [1 1 1]
  I0801 02:25:52.418476 23 preemption.go:837] length of pods created so far: 3
  I0801 02:25:54.442166 23 preemption.go:854] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 08/01/25 02:26:01.444
  STEP: Removing a custom resource @ 08/01/25 02:26:01.616
  STEP: Removing a custom resource @ 08/01/25 02:26:01.626
  I0801 02:26:01.650793 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9097" for this suite. @ 08/01/25 02:26:01.666
  I0801 02:26:01.677027 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1180" for this suite. @ 08/01/25 02:26:01.78
â€¢ [77.832 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 08/01/25 02:26:01.798
  I0801 02:26:01.798737 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename namespaces @ 08/01/25 02:26:01.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:26:01.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:26:01.855
  STEP: Creating namespace "e2e-ns-h555l" @ 08/01/25 02:26:01.863
  I0801 02:26:01.911219 23 namespace.go:412] Namespace "e2e-ns-h555l-8409" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-h555l-8409" @ 08/01/25 02:26:01.911
  I0801 02:26:01.936984 23 namespace.go:435] Namespace "e2e-ns-h555l-8409" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-h555l-8409" @ 08/01/25 02:26:01.937
  I0801 02:26:01.953042 23 namespace.go:464] Namespace "e2e-ns-h555l-8409" has []v1.FinalizerName{"kubernetes"}
  I0801 02:26:01.953236 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4998" for this suite. @ 08/01/25 02:26:01.957
  STEP: Destroying namespace "e2e-ns-h555l-8409" for this suite. @ 08/01/25 02:26:01.972
â€¢ [0.184 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 08/01/25 02:26:01.982
  I0801 02:26:01.982902 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 02:26:01.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:26:02.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:26:02.024
  STEP: Creating a pod to test downward api env vars @ 08/01/25 02:26:02.028
  STEP: Saw pod success @ 08/01/25 02:26:06.102
  I0801 02:26:06.107834 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod downward-api-c8e1ec17-5eb9-4111-adb1-bd43a929fadb container dapi-container: <nil>
  STEP: delete the pod @ 08/01/25 02:26:06.158
  I0801 02:26:06.197099 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5881" for this suite. @ 08/01/25 02:26:06.224
â€¢ [4.259 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 08/01/25 02:26:06.246
  I0801 02:26:06.246477 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 02:26:06.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:26:06.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:26:06.288
  STEP: Setting up server cert @ 08/01/25 02:26:06.338
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 02:26:08.343
  STEP: Deploying the webhook pod @ 08/01/25 02:26:08.358
  STEP: Wait for the deployment to be ready @ 08/01/25 02:26:08.395
  I0801 02:26:08.418953 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 02:26:10.437
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 02:26:10.484
  I0801 02:26:11.485171 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 08/01/25 02:26:11.489
  STEP: create a pod @ 08/01/25 02:26:11.539
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 08/01/25 02:26:13.581
  I0801 02:26:13.581641 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=webhook-8612 attach --namespace=webhook-8612 to-be-attached-pod -i -c=container1'
  I0801 02:26:13.755368 23 builder.go:135] rc: 1
  I0801 02:26:13.889499 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8612" for this suite. @ 08/01/25 02:26:13.904
  STEP: Destroying namespace "webhook-markers-8046" for this suite. @ 08/01/25 02:26:13.936
â€¢ [7.709 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 08/01/25 02:26:13.955
  I0801 02:26:13.955421 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/01/25 02:26:13.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:26:14.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:26:14.009
  I0801 02:26:14.015948 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 02:26:17.315610 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6099" for this suite. @ 08/01/25 02:26:17.322
â€¢ [3.378 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 08/01/25 02:26:17.333
  I0801 02:26:17.333655 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 08/01/25 02:26:17.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:26:17.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:26:17.389
  STEP: creating a target pod @ 08/01/25 02:26:17.393
  STEP: adding an ephemeral container @ 08/01/25 02:26:19.466
  STEP: verifying the pod's generation is 2 @ 08/01/25 02:26:21.537
  STEP: checking pod container endpoints @ 08/01/25 02:26:21.543
  I0801 02:26:21.543767 23 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4182 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:26:21.543869 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:26:21.544019 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/ephemeral-containers-test-4182/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0801 02:26:21.714220 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:26:21.714423 23 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 08/01/25 02:26:21.725
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 08/01/25 02:26:21.729
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 08/01/25 02:26:21.807
  I0801 02:26:21.816674 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4182" for this suite. @ 08/01/25 02:26:21.827
â€¢ [4.509 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 08/01/25 02:26:21.842
  I0801 02:26:21.842818 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:26:21.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:26:21.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:26:21.892
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 02:26:21.899
  STEP: Saw pod success @ 08/01/25 02:26:25.962
  I0801 02:26:25.967534 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-e1e7910e-60dc-4201-acde-d39a543e7fc6 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 02:26:25.986
  I0801 02:26:26.028362 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8532" for this suite. @ 08/01/25 02:26:26.032
â€¢ [4.200 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 08/01/25 02:26:26.042
  I0801 02:26:26.042705 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 02:26:26.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:26:26.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:26:26.085
  STEP: Setting up server cert @ 08/01/25 02:26:26.202
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 02:26:27.437
  STEP: Deploying the webhook pod @ 08/01/25 02:26:27.447
  STEP: Wait for the deployment to be ready @ 08/01/25 02:26:27.513
  I0801 02:26:27.557779 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 02:26:29.569
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 02:26:29.617
  I0801 02:26:30.617869 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0801 02:26:30.621628 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2817-crds.webhook.example.com via the AdmissionRegistration API @ 08/01/25 02:26:31.147
  STEP: Creating a custom resource that should be mutated by the webhook @ 08/01/25 02:26:31.192
  I0801 02:26:33.962649 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4790" for this suite. @ 08/01/25 02:26:33.967
  STEP: Destroying namespace "webhook-markers-1622" for this suite. @ 08/01/25 02:26:33.978
â€¢ [7.966 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 08/01/25 02:26:34.008
  I0801 02:26:34.008726 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-probe @ 08/01/25 02:26:34.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:26:34.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:26:34.06
  STEP: Creating pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159 @ 08/01/25 02:26:34.082
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/01/25 02:26:38.136
  I0801 02:26:38.138917 23 container_probe.go:1748] Initial restart count of pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 is 0
  I0801 02:26:38.144337 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:26:40.148225 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:26:42.155550 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:26:44.163504 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:26:46.169803 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:26:48.175203 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:26:50.194158 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:26:52.197758 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:26:54.215191 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:26:56.226866 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:26:58.239702 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:00.257076 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:02.278597 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:04.300132 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:06.308121 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:08.315180 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:10.329945 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:12.343255 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:14.365199 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:16.380603 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:18.397376 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:20.424209 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:22.431526 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:24.448168 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:26.452056 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:28.470790 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:30.475814 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:32.480156 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:34.485105 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:36.488666 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:38.496168 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:40.503126 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:42.509987 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:44.513792 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:46.520324 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:48.526307 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:50.531498 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:52.540423 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:54.547369 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:56.552275 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:27:58.590954 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:00.612106 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:02.630017 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:04.638697 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:06.647671 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:08.658363 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:10.663443 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:12.668215 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:14.676374 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:16.682732 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:18.688243 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:20.696052 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:22.713742 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:24.718466 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:26.725920 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:28.731517 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:30.738247 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:32.741589 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:34.747327 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:36.759741 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:38.766668 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:40.780687 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:42.786129 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:44.789394 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:46.795301 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:48.800442 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:50.809359 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:52.813299 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:54.820131 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:56.828357 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:28:58.831450 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:00.836218 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:02.851811 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:04.858379 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:06.888400 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:08.894552 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:10.924953 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:12.936038 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:14.953144 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:16.959535 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:18.964653 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:20.969040 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:22.974203 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:24.978838 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:26.983123 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:28.992816 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:30.997903 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:33.010938 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:35.018578 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:37.044592 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:39.049840 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:41.055892 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:43.061332 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:45.066667 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:47.071405 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:49.080177 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:51.085390 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:53.096560 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:55.106687 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:57.110683 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:29:59.115423 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:01.119799 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:03.123669 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:05.139380 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:07.167288 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:09.173966 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:11.181191 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:13.192838 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:15.195918 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:17.203536 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:19.217336 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:21.232804 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:23.240406 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:25.246633 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:27.250597 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:29.255630 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:31.263634 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:33.282584 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:35.285844 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  I0801 02:30:37.294248 23 container_probe.go:1758] Get pod test-webserver-cad83483-34a3-4435-ad64-a5b294e1a039 in namespace container-probe-5159
  STEP: deleting the pod @ 08/01/25 02:30:39.298
  I0801 02:30:39.354894 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5159" for this suite. @ 08/01/25 02:30:39.373
â€¢ [245.377 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 08/01/25 02:30:39.386
  I0801 02:30:39.386189 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename replicaset @ 08/01/25 02:30:39.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:30:39.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:30:39.424
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 08/01/25 02:30:39.432
  STEP: When a replicaset with a matching selector is created @ 08/01/25 02:30:41.514
  STEP: Then the orphan pod is adopted @ 08/01/25 02:30:41.534
  STEP: When the matched label of one of its pods change @ 08/01/25 02:30:42.562
  I0801 02:30:42.575351 23 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 08/01/25 02:30:42.597
  I0801 02:30:43.605237 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6767" for this suite. @ 08/01/25 02:30:43.607
â€¢ [4.238 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 08/01/25 02:30:43.624
  I0801 02:30:43.624887 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename var-expansion @ 08/01/25 02:30:43.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:30:43.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:30:43.665
  STEP: creating the pod with failed condition @ 08/01/25 02:30:43.671
  STEP: updating the pod @ 08/01/25 02:32:43.692
  I0801 02:32:44.222069 23 pod_client.go:173] Successfully updated pod "var-expansion-c1a227bf-5858-4ff3-93e4-9f532f9156e1"
  STEP: waiting for pod running @ 08/01/25 02:32:44.222
  STEP: deleting the pod gracefully @ 08/01/25 02:32:46.253
  I0801 02:32:46.253584 23 delete.go:62] Deleting pod "var-expansion-c1a227bf-5858-4ff3-93e4-9f532f9156e1" in namespace "var-expansion-3910"
  I0801 02:32:46.280817 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-c1a227bf-5858-4ff3-93e4-9f532f9156e1" to be fully deleted
  I0801 02:33:18.513807 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3910" for this suite. @ 08/01/25 02:33:18.517
â€¢ [154.909 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 08/01/25 02:33:18.534
  I0801 02:33:18.534840 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 02:33:18.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:33:18.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:33:18.57
  STEP: Setting up server cert @ 08/01/25 02:33:18.661
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 02:33:19.384
  STEP: Deploying the webhook pod @ 08/01/25 02:33:19.395
  STEP: Wait for the deployment to be ready @ 08/01/25 02:33:19.43
  I0801 02:33:19.458439 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/01/25 02:33:21.473
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 02:33:21.561
  I0801 02:33:22.562916 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 08/01/25 02:33:22.568
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 08/01/25 02:33:22.614
  STEP: Creating a configMap that should not be mutated @ 08/01/25 02:33:22.639
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 08/01/25 02:33:22.668
  STEP: Creating a configMap that should be mutated @ 08/01/25 02:33:22.689
  I0801 02:33:22.854984 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5807" for this suite. @ 08/01/25 02:33:22.864
  STEP: Destroying namespace "webhook-markers-9828" for this suite. @ 08/01/25 02:33:22.897
â€¢ [4.382 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 08/01/25 02:33:22.917
  I0801 02:33:22.917477 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename secrets @ 08/01/25 02:33:22.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:33:22.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:33:22.959
  STEP: Creating projection with secret that has name secret-emptykey-test-f27fe67d-d467-4619-8d48-c08c4b778d58 @ 08/01/25 02:33:22.965
  I0801 02:33:22.968961 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4848" for this suite. @ 08/01/25 02:33:22.979
â€¢ [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 08/01/25 02:33:22.994
  I0801 02:33:22.994806 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename var-expansion @ 08/01/25 02:33:22.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:33:23.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:33:23.035
  I0801 02:33:25.063339 23 delete.go:62] Deleting pod "var-expansion-8625fd8e-06bd-4120-ada8-6717e333ed0e" in namespace "var-expansion-5819"
  I0801 02:33:25.087266 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-8625fd8e-06bd-4120-ada8-6717e333ed0e" to be fully deleted
  I0801 02:33:27.115232 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5819" for this suite. @ 08/01/25 02:33:27.127
â€¢ [4.153 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 08/01/25 02:33:27.148
  I0801 02:33:27.148932 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename podtemplate @ 08/01/25 02:33:27.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:33:27.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:33:27.181
  STEP: Create set of pod templates @ 08/01/25 02:33:27.188
  I0801 02:33:27.199671 23 podtemplates.go:143] created test-podtemplate-1
  I0801 02:33:27.217535 23 podtemplates.go:143] created test-podtemplate-2
  I0801 02:33:27.233502 23 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 08/01/25 02:33:27.233
  STEP: delete collection of pod templates @ 08/01/25 02:33:27.236
  I0801 02:33:27.236792 23 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 08/01/25 02:33:27.296
  I0801 02:33:27.296772 23 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0801 02:33:27.301243 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2208" for this suite. @ 08/01/25 02:33:27.305
â€¢ [0.172 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 08/01/25 02:33:27.321
  I0801 02:33:27.321033 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 02:33:27.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:33:27.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:33:27.381
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 08/01/25 02:33:27.384
  STEP: Saw pod success @ 08/01/25 02:33:31.427
  I0801 02:33:31.430088 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-70e40612-c9d8-4d6f-9c5e-dd353b6d46a7 container test-container: <nil>
  STEP: delete the pod @ 08/01/25 02:33:31.456
  I0801 02:33:31.483914 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-923" for this suite. @ 08/01/25 02:33:31.487
â€¢ [4.183 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 08/01/25 02:33:31.504
  I0801 02:33:31.504654 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 02:33:31.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:33:31.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:33:31.573
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 08/01/25 02:33:31.577
  STEP: Saw pod success @ 08/01/25 02:33:35.655
  I0801 02:33:35.672903 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-c80edd24-0e93-45bd-969d-1edfc3fad07b container test-container: <nil>
  STEP: delete the pod @ 08/01/25 02:33:35.716
  I0801 02:33:35.772793 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3776" for this suite. @ 08/01/25 02:33:35.785
â€¢ [4.302 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 08/01/25 02:33:35.806
  I0801 02:33:35.806806 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename security-context-test @ 08/01/25 02:33:35.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:33:35.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:33:35.853
  I0801 02:33:39.916529 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7421" for this suite. @ 08/01/25 02:33:39.922
â€¢ [4.126 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 08/01/25 02:33:39.933
  I0801 02:33:39.933400 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename runtimeclass @ 08/01/25 02:33:39.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:33:39.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:33:40.012
  STEP: Deleting RuntimeClass runtimeclass-5827-delete-me @ 08/01/25 02:33:40.044
  STEP: Waiting for the RuntimeClass to disappear @ 08/01/25 02:33:40.058
  I0801 02:33:40.081564 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5827" for this suite. @ 08/01/25 02:33:40.098
â€¢ [0.191 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 08/01/25 02:33:40.127
  I0801 02:33:40.127153 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pv @ 08/01/25 02:33:40.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:33:40.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:33:40.174
  STEP: Creating initial PV and PVC @ 08/01/25 02:33:40.178
  I0801 02:33:40.178766 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4374" @ 08/01/25 02:33:40.226
  STEP: Listing PVCs in namespace "pv-4374" @ 08/01/25 02:33:40.238
  STEP: Patching the PV "pv-4374-bv2tb" @ 08/01/25 02:33:40.253
  STEP: Patching the PVC "pvc-hbpmr" @ 08/01/25 02:33:40.364
  STEP: Getting PV "pv-4374-bv2tb" @ 08/01/25 02:33:40.479
  STEP: Getting PVC "pvc-hbpmr" @ 08/01/25 02:33:40.497
  STEP: Deleting PVC "pvc-hbpmr" @ 08/01/25 02:33:40.5
  STEP: Confirm deletion of PVC "pvc-hbpmr" @ 08/01/25 02:33:40.511
  STEP: Deleting PV "pv-4374-bv2tb" @ 08/01/25 02:33:42.557
  STEP: Confirm deletion of PV "pv-4374-bv2tb" @ 08/01/25 02:33:42.572
  STEP: Recreating another PV & PVC @ 08/01/25 02:33:44.6
  I0801 02:33:44.600470 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-4374-g6fxr" @ 08/01/25 02:33:44.628
  STEP: Updating the PVC "pvc-n4426" @ 08/01/25 02:33:44.657
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-n4426=updated" @ 08/01/25 02:33:44.722
  STEP: Deleting PVC "pvc-n4426" via DeleteCollection @ 08/01/25 02:33:44.738
  STEP: Confirm deletion of PVC "pvc-n4426" @ 08/01/25 02:33:44.769
  STEP: Deleting PV "pv-4374-g6fxr" via DeleteCollection @ 08/01/25 02:33:46.809
  STEP: Confirm deletion of PV "pv-4374-g6fxr" @ 08/01/25 02:33:46.819
  I0801 02:33:48.830753 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0801 02:33:48.830805 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-n4426"
  I0801 02:33:48.833640 23 pv.go:193] Deleting PersistentVolume "pv-4374-g6fxr"
  I0801 02:33:48.839657 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4374" for this suite. @ 08/01/25 02:33:48.845
â€¢ [8.733 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 08/01/25 02:33:48.86
  I0801 02:33:48.860222 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:33:48.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:33:48.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:33:48.894
  STEP: Creating configMap with name configmap-projected-all-test-volume-c0ed8982-52ac-4d40-96ed-adcb909e9e9f @ 08/01/25 02:33:48.907
  STEP: Creating secret with name secret-projected-all-test-volume-d0780224-c2c4-4598-a6e8-590d9fb144b1 @ 08/01/25 02:33:48.918
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 08/01/25 02:33:48.933
  I0801 02:33:48.953188      23 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  STEP: Saw pod success @ 08/01/25 02:33:52.974
  I0801 02:33:52.994185 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod projected-volume-8200ef75-6167-483b-a4bd-09c3c0cbe344 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 02:33:53.045
  I0801 02:33:53.081015 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2840" for this suite. @ 08/01/25 02:33:53.085
â€¢ [4.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 08/01/25 02:33:53.101
  I0801 02:33:53.101606 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename replicaset @ 08/01/25 02:33:53.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:33:53.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:33:53.159
  I0801 02:33:53.163821 23 replica_set.go:192] Creating ReplicaSet my-hostname-basic-62fac6ab-1331-4047-b30a-74b859b14822
  I0801 02:33:53.185136 23 resource.go:81] Pod name my-hostname-basic-62fac6ab-1331-4047-b30a-74b859b14822: Found 0 pods out of 1
  I0801 02:33:58.191246 23 resource.go:81] Pod name my-hostname-basic-62fac6ab-1331-4047-b30a-74b859b14822: Found 1 pods out of 1
  I0801 02:33:58.191301 23 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-62fac6ab-1331-4047-b30a-74b859b14822" is running
  I0801 02:33:58.193882 23 replica_set.go:221] Pod "my-hostname-basic-62fac6ab-1331-4047-b30a-74b859b14822-nq2nj" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-08-01 02:33:55 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-08-01 02:33:53 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-08-01 02:33:55 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-08-01 02:33:55 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-08-01 02:33:53 +0000 UTC Reason: Message:}])
  I0801 02:33:58.193928 23 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 08/01/25 02:33:58.193
  I0801 02:33:58.241695 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4147" for this suite. @ 08/01/25 02:33:58.249
â€¢ [5.162 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 08/01/25 02:33:58.263
  I0801 02:33:58.263270 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:33:58.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:33:58.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:33:58.312
  STEP: Creating the pod @ 08/01/25 02:33:58.318
  I0801 02:34:02.937102 23 pod_client.go:173] Successfully updated pod "annotationupdate95a1fe5e-a4f4-4415-854b-86a0e297d976"
  I0801 02:34:05.038717 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3474" for this suite. @ 08/01/25 02:34:05.061
â€¢ [6.816 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 08/01/25 02:34:05.079
  I0801 02:34:05.079023 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 02:34:05.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:34:05.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:34:05.14
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 08/01/25 02:34:05.146
  STEP: Saw pod success @ 08/01/25 02:34:09.233
  I0801 02:34:09.239061 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-89e22228-4626-4a97-8906-4ac104ba0caf container test-container: <nil>
  STEP: delete the pod @ 08/01/25 02:34:09.253
  I0801 02:34:09.348867 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8410" for this suite. @ 08/01/25 02:34:09.353
â€¢ [4.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 08/01/25 02:34:09.378
  I0801 02:34:09.378268 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 02:34:09.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:34:09.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:34:09.522
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/01/25 02:34:09.539
  I0801 02:34:09.539397 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-1079 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0801 02:34:09.707473 23 builder.go:146] stderr: ""
  I0801 02:34:09.707528 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 08/01/25 02:34:09.707
  I0801 02:34:09.749027 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-1079 delete pods e2e-test-httpd-pod'
  I0801 02:34:11.597596 23 builder.go:146] stderr: ""
  I0801 02:34:11.597652 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0801 02:34:11.597788 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1079" for this suite. @ 08/01/25 02:34:11.614
â€¢ [2.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 08/01/25 02:34:11.643
  I0801 02:34:11.643576 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename sched-pred @ 08/01/25 02:34:11.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:34:11.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:34:11.724
  I0801 02:34:11.741106 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0801 02:34:11.810406 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0801 02:34:11.846954 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc before test
  I0801 02:34:11.861073 23 predicates.go:958] svclb-traefik-f3709a6a-vjnff from kube-system started at 2025-08-01 02:24:35 +0000 UTC (2 container statuses recorded)
  I0801 02:34:11.861124 23 predicates.go:960] 	Container lb-tcp-443 ready: true, restart count 0
  I0801 02:34:11.861137 23 predicates.go:960] 	Container lb-tcp-80 ready: true, restart count 0
  I0801 02:34:11.861150 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-08-01 01:30:06 +0000 UTC (1 container statuses recorded)
  I0801 02:34:11.861160 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0801 02:34:11.861170 23 predicates.go:958] sonobuoy-e2e-job-df5b01beee5e4694 from sonobuoy started at 2025-08-01 01:30:13 +0000 UTC (2 container statuses recorded)
  I0801 02:34:11.861180 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0801 02:34:11.861189 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0801 02:34:11.861200 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-17f975e496f9456c-s2s2c from sonobuoy started at 2025-08-01 01:30:13 +0000 UTC (2 container statuses recorded)
  I0801 02:34:11.861208 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0801 02:34:11.861216 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0801 02:34:11.861226 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3k-k3kcluster-server-0 before test
  I0801 02:34:11.878638 23 predicates.go:958] coredns-5688667fd4-6pnmp from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:34:11.878683 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0801 02:34:11.878698 23 predicates.go:958] helm-install-traefik-2697s from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:34:11.878710 23 predicates.go:960] 	Container helm ready: false, restart count 1
  I0801 02:34:11.878722 23 predicates.go:958] helm-install-traefik-crd-mr72s from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:34:11.878732 23 predicates.go:960] 	Container helm ready: false, restart count 0
  I0801 02:34:11.878744 23 predicates.go:958] local-path-provisioner-774c6665dc-bldhg from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:34:11.878754 23 predicates.go:960] 	Container local-path-provisioner ready: true, restart count 0
  I0801 02:34:11.878764 23 predicates.go:958] metrics-server-6f4c6675d5-86tpl from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 02:34:11.878772 23 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0801 02:34:11.878782 23 predicates.go:958] svclb-traefik-f3709a6a-2x7fk from kube-system started at 2025-08-01 01:28:56 +0000 UTC (2 container statuses recorded)
  I0801 02:34:11.878790 23 predicates.go:960] 	Container lb-tcp-443 ready: true, restart count 0
  I0801 02:34:11.878799 23 predicates.go:960] 	Container lb-tcp-80 ready: true, restart count 0
  I0801 02:34:11.878810 23 predicates.go:958] traefik-c98fdf6fb-f9b8t from kube-system started at 2025-08-01 01:28:56 +0000 UTC (1 container statuses recorded)
  I0801 02:34:11.878819 23 predicates.go:960] 	Container traefik ready: true, restart count 0
  I0801 02:34:11.878831 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-17f975e496f9456c-mjcrm from sonobuoy started at 2025-08-01 01:30:13 +0000 UTC (2 container statuses recorded)
  I0801 02:34:11.878840 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0801 02:34:11.878850 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/01/25 02:34:11.878
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/01/25 02:34:13.949
  STEP: Trying to apply a random label on the found node. @ 08/01/25 02:34:13.989
  STEP: verifying the node has the label kubernetes.io/e2e-2d5928a9-794f-4199-bd39-10e4d92267ed 42 @ 08/01/25 02:34:14.017
  STEP: Trying to relaunch the pod, now with labels. @ 08/01/25 02:34:14.023
  STEP: removing the label kubernetes.io/e2e-2d5928a9-794f-4199-bd39-10e4d92267ed off the node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc @ 08/01/25 02:34:18.096
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-2d5928a9-794f-4199-bd39-10e4d92267ed @ 08/01/25 02:34:18.183
  I0801 02:34:18.222737 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1482" for this suite. @ 08/01/25 02:34:18.233
â€¢ [6.618 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 08/01/25 02:34:18.259
  I0801 02:34:18.259362 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename aggregator @ 08/01/25 02:34:18.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:34:18.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:34:18.325
  I0801 02:34:18.333359 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Registering the sample API server. @ 08/01/25 02:34:18.333
  I0801 02:34:19.431247 23 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0801 02:34:19.569194 23 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0801 02:34:21.761634 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:34:23.777790 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:34:25.770818 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:34:28.174713 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:34:29.770528 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:34:31.785464 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:34:33.767605 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:34:35.769056 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:34:37.778016 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:34:39.769700 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:34:41.769710 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:34:43.773326 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:34:45.766111 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:34:47.960808 23 aggregator.go:756] Waited 169.372942ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 08/01/25 02:34:48.164
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 08/01/25 02:34:48.171
  STEP: List APIServices @ 08/01/25 02:34:48.184
  I0801 02:34:48.191838 23 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 08/01/25 02:34:48.191
  I0801 02:34:48.245294 23 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 08/01/25 02:34:48.245
  I0801 02:34:48.272290 23 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.August, 1, 2, 34, 47, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 08/01/25 02:34:48.272
  I0801 02:34:48.275089 23 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-08-01 02:34:47 +0000 UTC Passed all checks passed}
  I0801 02:34:48.275158 23 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0801 02:34:48.275174 23 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 08/01/25 02:34:48.275
  I0801 02:34:48.294800 23 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1376262640" @ 08/01/25 02:34:48.294
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 08/01/25 02:34:48.375
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 08/01/25 02:34:48.397
  STEP: Patch APIService Status @ 08/01/25 02:34:48.4
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 08/01/25 02:34:48.422
  I0801 02:34:48.435058 23 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-08-01 02:34:47 +0000 UTC Passed all checks passed}
  I0801 02:34:48.435256 23 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0801 02:34:48.435355 23 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0801 02:34:48.435470 23 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 08/01/25 02:34:48.435
  STEP: Confirm that the generated APIService has been deleted @ 08/01/25 02:34:48.447
  I0801 02:34:48.447941 23 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0801 02:34:48.453412 23 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0801 02:34:48.453463 23 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0801 02:34:48.776840 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2496" for this suite. @ 08/01/25 02:34:48.781
â€¢ [30.537 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 08/01/25 02:34:48.799
  I0801 02:34:48.799827 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:34:48.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:34:48.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:34:48.868
  STEP: Creating configMap with name projected-configmap-test-volume-map-5f7f00d3-3607-4630-aebc-d78645e3a6b5 @ 08/01/25 02:34:48.92
  STEP: Creating a pod to test consume configMaps @ 08/01/25 02:34:48.943
  STEP: Saw pod success @ 08/01/25 02:34:55.01
  I0801 02:34:55.028086 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-projected-configmaps-5cb7b1d2-ac87-488e-ae4f-cb927dd22394 container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 02:34:55.058
  I0801 02:34:55.132094 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-834" for this suite. @ 08/01/25 02:34:55.149
â€¢ [6.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 08/01/25 02:34:55.188
  I0801 02:34:55.188153 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename gc @ 08/01/25 02:34:55.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:34:55.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:34:55.267
  STEP: create the deployment @ 08/01/25 02:34:55.296
  I0801 02:34:55.342837      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 08/01/25 02:34:55.342
  STEP: delete the deployment @ 08/01/25 02:34:55.87
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 08/01/25 02:34:55.914
  STEP: Gathering metrics @ 08/01/25 02:34:56.543
  W0801 02:34:56.566234      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0801 02:34:56.566296 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0801 02:34:56.576330 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7160" for this suite. @ 08/01/25 02:34:56.585
â€¢ [1.416 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 08/01/25 02:34:56.606
  I0801 02:34:56.606695 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:34:56.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:34:56.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:34:56.651
  STEP: Creating the pod @ 08/01/25 02:34:56.655
  I0801 02:34:59.255126 23 pod_client.go:173] Successfully updated pod "labelsupdatee77e1aac-a850-4fd1-8f2e-39e05547da85"
  I0801 02:35:01.304145 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9905" for this suite. @ 08/01/25 02:35:01.32
â€¢ [4.732 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 08/01/25 02:35:01.339
  I0801 02:35:01.339855 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:35:01.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:35:01.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:35:01.413
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 02:35:01.436
  STEP: Saw pod success @ 08/01/25 02:35:05.498
  I0801 02:35:05.501486 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-479387fe-48f0-4a41-8b86-66b9a38b78ea container client-container: <nil>
  STEP: delete the pod @ 08/01/25 02:35:05.509
  I0801 02:35:05.640702 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6545" for this suite. @ 08/01/25 02:35:05.649
â€¢ [4.327 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 08/01/25 02:35:05.667
  I0801 02:35:05.667566 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:35:05.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:35:05.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:35:05.786
  STEP: Creating projection with secret that has name projected-secret-test-bf509a3e-caec-488f-a149-23eb585ec2a2 @ 08/01/25 02:35:05.822
  STEP: Creating a pod to test consume secrets @ 08/01/25 02:35:05.851
  STEP: Saw pod success @ 08/01/25 02:35:09.923
  I0801 02:35:09.929947 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod pod-projected-secrets-bb7eb2c6-895d-4826-b536-0029a360226c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 02:35:09.945
  I0801 02:35:10.029474 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4092" for this suite. @ 08/01/25 02:35:10.034
â€¢ [4.391 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 08/01/25 02:35:10.059
  I0801 02:35:10.059149 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename crd-selectable-fields @ 08/01/25 02:35:10.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:35:10.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:35:10.104
  STEP: Setting up server cert @ 08/01/25 02:35:10.11
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 08/01/25 02:35:13.261
  STEP: Deploying the custom resource conversion webhook pod @ 08/01/25 02:35:13.301
  STEP: Wait for the deployment to be ready @ 08/01/25 02:35:13.373
  I0801 02:35:13.452679 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  I0801 02:35:15.476117 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 35, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 35, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 35, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 35, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 08/01/25 02:35:17.536
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 02:35:17.62
  I0801 02:35:18.621313 23 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 08/01/25 02:35:18.631
  I0801 02:35:18.631271 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Creating a custom resource conversion webhook @ 08/01/25 02:35:19.158
  STEP: Watching with field selectors @ 08/01/25 02:35:21.301
  STEP: Registering informers with field selectors @ 08/01/25 02:35:21.323
  STEP: Creating custom resources @ 08/01/25 02:35:21.323
  STEP: Listing v2 custom resources with field selector host=host1 @ 08/01/25 02:35:21.431
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 08/01/25 02:35:21.433
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 08/01/25 02:35:21.435
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 08/01/25 02:35:21.444
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 08/01/25 02:35:21.454
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 08/01/25 02:35:21.46
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 08/01/25 02:35:21.46
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 08/01/25 02:35:21.46
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 08/01/25 02:35:21.462
  STEP: Deleting one custom resources to ensure that deletions are observed @ 08/01/25 02:35:21.463
  STEP: Updating one custom resources to ensure that deletions are observed @ 08/01/25 02:35:21.497
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 08/01/25 02:35:21.553
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 08/01/25 02:35:21.556
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 08/01/25 02:35:21.558
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 08/01/25 02:35:21.564
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 08/01/25 02:35:21.564
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 08/01/25 02:35:21.564
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 08/01/25 02:35:21.565
  I0801 02:35:22.237542 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-6920" for this suite. @ 08/01/25 02:35:22.244
â€¢ [12.207 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 08/01/25 02:35:22.266
  I0801 02:35:22.266193 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename containers @ 08/01/25 02:35:22.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:35:22.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:35:22.313
  I0801 02:35:26.380544 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7246" for this suite. @ 08/01/25 02:35:26.383
â€¢ [4.133 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 08/01/25 02:35:26.399
  I0801 02:35:26.399381 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 02:35:26.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:35:26.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:35:26.433
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 08/01/25 02:35:26.441
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 08/01/25 02:35:26.477
  STEP: Ensure that the job reaches completions @ 08/01/25 02:35:32.525
  STEP: Verifying that the only appropriately index succeeded @ 08/01/25 02:35:32.544
  I0801 02:35:32.548052 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7034" for this suite. @ 08/01/25 02:35:32.551
â€¢ [6.180 seconds]
------------------------------
S
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 08/01/25 02:35:32.579
  I0801 02:35:32.579191 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 08/01/25 02:35:32.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:35:32.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:35:32.643
  STEP: Setting up the test @ 08/01/25 02:35:32.65
  STEP: Creating hostNetwork=false pod @ 08/01/25 02:35:32.65
  STEP: Creating hostNetwork=true pod @ 08/01/25 02:35:36.726
  STEP: Running the test @ 08/01/25 02:35:38.76
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 08/01/25 02:35:38.76
  I0801 02:35:38.760789 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5711 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:35:38.760819 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:35:38.760974 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5711/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0801 02:35:38.944629 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:35:38.944684 23 exec_util.go:112] Exec stderr: ""
  I0801 02:35:38.944715 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5711 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:35:38.944727 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:35:38.944799 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5711/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0801 02:35:39.071927 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:35:39.071989 23 exec_util.go:112] Exec stderr: ""
  I0801 02:35:39.072023 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5711 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:35:39.072035 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:35:39.072179 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5711/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0801 02:35:39.182594 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:35:39.182648 23 exec_util.go:112] Exec stderr: ""
  I0801 02:35:39.182682 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5711 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:35:39.182695 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:35:39.182766 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5711/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0801 02:35:39.393697 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:35:39.393747 23 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 08/01/25 02:35:39.393
  I0801 02:35:39.393801 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5711 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:35:39.393817 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:35:39.394224 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5711/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0801 02:35:39.580227 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:35:39.580282 23 exec_util.go:112] Exec stderr: ""
  I0801 02:35:39.580312 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5711 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:35:39.580324 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:35:39.580401 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5711/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0801 02:35:39.721065 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:35:39.725064 23 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 08/01/25 02:35:39.725
  I0801 02:35:39.725193 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5711 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:35:39.725206 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:35:39.725282 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5711/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0801 02:35:39.889120 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:35:39.889175 23 exec_util.go:112] Exec stderr: ""
  I0801 02:35:39.889198 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5711 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:35:39.889207 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:35:39.889260 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5711/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0801 02:35:40.021692 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:35:40.021748 23 exec_util.go:112] Exec stderr: ""
  I0801 02:35:40.021776 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5711 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:35:40.021927 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:35:40.022000 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5711/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0801 02:35:40.177861 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:35:40.177927 23 exec_util.go:112] Exec stderr: ""
  I0801 02:35:40.177955 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5711 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:35:40.177967 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:35:40.178042 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5711/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0801 02:35:40.385998 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:35:40.386053 23 exec_util.go:112] Exec stderr: ""
  I0801 02:35:40.386216 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-5711" for this suite. @ 08/01/25 02:35:40.389
â€¢ [7.822 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 08/01/25 02:35:40.401
  I0801 02:35:40.401393 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename var-expansion @ 08/01/25 02:35:40.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:35:40.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:35:40.469
  STEP: Creating a pod to test env composition @ 08/01/25 02:35:40.474
  STEP: Saw pod success @ 08/01/25 02:35:44.507
  I0801 02:35:44.510550 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod var-expansion-43bbfd4d-cbd4-40f4-a20e-988e0cbdc6db container dapi-container: <nil>
  STEP: delete the pod @ 08/01/25 02:35:44.522
  I0801 02:35:44.551412 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1965" for this suite. @ 08/01/25 02:35:44.556
â€¢ [4.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 08/01/25 02:35:44.579
  I0801 02:35:44.579688 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename watch @ 08/01/25 02:35:44.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:35:44.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:35:44.649
  STEP: creating a watch on configmaps with label A @ 08/01/25 02:35:44.653
  STEP: creating a watch on configmaps with label B @ 08/01/25 02:35:44.654
  STEP: creating a watch on configmaps with label A or B @ 08/01/25 02:35:44.656
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 08/01/25 02:35:44.657
  I0801 02:35:44.667235 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-576  bb3e0f5c-9391-4d1e-91b2-d37b697e2dfb 23370 0 2025-08-01 02:35:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-08-01 02:35:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 02:35:44.667901 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-576  bb3e0f5c-9391-4d1e-91b2-d37b697e2dfb 23370 0 2025-08-01 02:35:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-08-01 02:35:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 08/01/25 02:35:44.667
  I0801 02:35:44.683436 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-576  bb3e0f5c-9391-4d1e-91b2-d37b697e2dfb 23371 0 2025-08-01 02:35:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-08-01 02:35:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 02:35:44.683745 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-576  bb3e0f5c-9391-4d1e-91b2-d37b697e2dfb 23371 0 2025-08-01 02:35:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-08-01 02:35:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 08/01/25 02:35:44.683
  I0801 02:35:44.711717 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-576  bb3e0f5c-9391-4d1e-91b2-d37b697e2dfb 23373 0 2025-08-01 02:35:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-08-01 02:35:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 02:35:44.712290 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-576  bb3e0f5c-9391-4d1e-91b2-d37b697e2dfb 23373 0 2025-08-01 02:35:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-08-01 02:35:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 08/01/25 02:35:44.713
  I0801 02:35:44.726248 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-576  bb3e0f5c-9391-4d1e-91b2-d37b697e2dfb 23374 0 2025-08-01 02:35:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-08-01 02:35:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 02:35:44.726461 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-576  bb3e0f5c-9391-4d1e-91b2-d37b697e2dfb 23374 0 2025-08-01 02:35:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-08-01 02:35:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 08/01/25 02:35:44.726
  I0801 02:35:44.737145 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-576  1fb681f6-b2a0-476d-8e06-85bb2b72d89c 23375 0 2025-08-01 02:35:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-08-01 02:35:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 02:35:44.737269 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-576  1fb681f6-b2a0-476d-8e06-85bb2b72d89c 23375 0 2025-08-01 02:35:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-08-01 02:35:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 08/01/25 02:35:54.738
  I0801 02:35:54.748894 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-576  1fb681f6-b2a0-476d-8e06-85bb2b72d89c 23441 0 2025-08-01 02:35:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-08-01 02:35:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 02:35:54.748976 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-576  1fb681f6-b2a0-476d-8e06-85bb2b72d89c 23441 0 2025-08-01 02:35:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-08-01 02:35:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 02:36:04.750160 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-576" for this suite. @ 08/01/25 02:36:04.756
â€¢ [20.188 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 08/01/25 02:36:04.767
  I0801 02:36:04.767831 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename field-validation @ 08/01/25 02:36:04.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:36:04.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:36:04.802
  I0801 02:36:04.826447 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 02:36:07.440853      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0801 02:36:07.440889      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0801 02:36:07.440901      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0801 02:36:07.440913      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0801 02:36:07.440925      23 warnings.go:110] "Warning: unknown field \"gamma\""
  I0801 02:36:08.102730 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3632" for this suite. @ 08/01/25 02:36:08.119
â€¢ [3.383 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 08/01/25 02:36:08.151
  I0801 02:36:08.151656 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 02:36:08.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:36:08.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:36:08.251
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 02:36:08.277
  STEP: Saw pod success @ 08/01/25 02:36:12.334
  I0801 02:36:12.342141 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-67e18372-3720-4ea7-8b79-b5550bed2d9c container client-container: <nil>
  STEP: delete the pod @ 08/01/25 02:36:12.347
  I0801 02:36:12.411017 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2085" for this suite. @ 08/01/25 02:36:12.423
â€¢ [4.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 08/01/25 02:36:12.443
  I0801 02:36:12.444013 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename deployment @ 08/01/25 02:36:12.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:36:12.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:36:12.489
  I0801 02:36:12.494450 23 deployment.go:1215] Creating deployment "webserver-deployment"
  I0801 02:36:12.529325 23 deployment.go:1219] Waiting for observed generation 1
  I0801 02:36:14.579300 23 deployment.go:1224] Waiting for all required pods to come up
  I0801 02:36:14.590343 23 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 08/01/25 02:36:14.59
  I0801 02:36:22.715637 23 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0801 02:36:22.754436 23 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0801 02:36:22.785032 23 deployment.go:314] Updating deployment webserver-deployment
  I0801 02:36:22.785095 23 deployment.go:1243] Waiting for observed generation 2
  I0801 02:36:24.880087 23 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0801 02:36:24.894746 23 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0801 02:36:24.903476 23 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0801 02:36:24.938627 23 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0801 02:36:24.938676 23 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0801 02:36:24.945125 23 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0801 02:36:24.957616 23 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0801 02:36:24.957728 23 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0801 02:36:25.002920 23 deployment.go:314] Updating deployment webserver-deployment
  I0801 02:36:25.002982 23 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0801 02:36:25.199177 23 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0801 02:36:25.242952 23 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0801 02:36:25.382086 23 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5d33a42-a7f9-499b-8ac1-955bfbf9767d",
      ResourceVersion: (string) (len=5) "23767",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0801 02:36:25.671810 23 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d184963-9bd8-441c-b864-070e5e8673b1",
      ResourceVersion: (string) (len=5) "23760",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "e5d33a42-a7f9-499b-8ac1-955bfbf9767d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 35 64 33 33 61  34 32 2d 61 37 66 39 2d  |\"e5d33a42-a7f9-|
              00000120  34 39 39 62 2d 38 61 63  31 2d 39 35 35 62 66 62  |499b-8ac1-955bfb|
              00000130  66 39 37 36 37 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f9767d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0801 02:36:25.673124 23 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0801 02:36:25.673482 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
      ResourceVersion: (string) (len=5) "23757",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "e5d33a42-a7f9-499b-8ac1-955bfbf9767d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 35 64 33 33 61  34 32 2d 61 37 66 39 2d  |\"e5d33a42-a7f9-|
              00000120  34 39 39 62 2d 38 61 63  31 2d 39 35 35 62 66 62  |499b-8ac1-955bfb|
              00000130  66 39 37 36 37 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f9767d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0801 02:36:25.900701 23 deployment.go:68] Pod "webserver-deployment-685b768f58-4nnsg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4nnsg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac9dddc3-dfd7-4b1d-b8dd-0333406124da",
      ResourceVersion: (string) (len=5) "23675",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 30 2e 31 34  36 5c 22 7d 22 3a 7b 22  |.52.0.146\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s45r4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s45r4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) (len=11) "10.52.0.146",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.0.146"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889612579,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://19811d5617d0bf387794b4696603659dfe42f4e3173ec5ff25b6903937f515b7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s45r4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.903541 23 deployment.go:68] Pod "webserver-deployment-685b768f58-4z5s7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4z5s7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72bacae6-ae79-4e89-abc7-e18781778209",
      ResourceVersion: (string) (len=5) "23779",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zqp6q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zqp6q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.905989 23 deployment.go:68] Pod "webserver-deployment-685b768f58-5xpf7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5xpf7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48efb597-f81f-4b1c-bb18-c34c137508f7",
      ResourceVersion: (string) (len=5) "23657",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 30 2e 31 34  35 5c 22 7d 22 3a 7b 22  |.52.0.145\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lhtjw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lhtjw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) (len=11) "10.52.0.145",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.0.145"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889612579,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7b5245f57b1ecdb11a1af44a9c56c6c8298778a21c9304da366b38cb249aa87a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lhtjw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.909699 23 deployment.go:68] Pod "webserver-deployment-685b768f58-6pdhn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6pdhn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9171b8c-27d7-4f0e-a58e-91112d4cfea4",
      ResourceVersion: (string) (len=5) "23633",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 31 2e 32 32  38 5c 22 7d 22 3a 7b 22  |.52.1.228\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dqvcm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dqvcm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.16",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.16"
        }
      },
      PodIP: (string) (len=11) "10.52.1.228",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.1.228"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889612576,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a0dfa2af52b1233ab9e9986c7430544a552eb6c66583066b6d7aff43d5cdf267",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dqvcm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.912818 23 deployment.go:68] Pod "webserver-deployment-685b768f58-7lbcn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-7lbcn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64d1bbce-e23b-4d1a-858c-f7b04ba6f545",
      ResourceVersion: (string) (len=5) "23807",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lvqpq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lvqpq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.914517 23 deployment.go:68] Pod "webserver-deployment-685b768f58-8gjxp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8gjxp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "757fc18f-548c-48c7-8872-941429c0e299",
      ResourceVersion: (string) (len=5) "23805",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jblt5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jblt5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.916432 23 deployment.go:68] Pod "webserver-deployment-685b768f58-9xtgh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9xtgh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "efe7fd62-0404-47d6-9a4a-705600b33cd5",
      ResourceVersion: (string) (len=5) "23617",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 31 2e 32 32  35 5c 22 7d 22 3a 7b 22  |.52.1.225\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h4b8z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h4b8z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612575,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612575,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612575,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.16",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.16"
        }
      },
      PodIP: (string) (len=11) "10.52.1.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.1.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889612574,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a5fe133ec82ce5fb6cfc5f5a0396ccdc8ee62b2a5784968182210dd72a88a8e0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h4b8z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.920938 23 deployment.go:68] Pod "webserver-deployment-685b768f58-fcln5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-fcln5",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3a8157e-bdec-4c77-8eed-97be30014d64",
      ResourceVersion: (string) (len=5) "23801",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v8wl2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v8wl2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.922598 23 deployment.go:68] Pod "webserver-deployment-685b768f58-gxkcn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gxkcn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c654e0df-31b8-4df5-958e-95257259a19e",
      ResourceVersion: (string) (len=5) "23799",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jj5vx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jj5vx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.924437 23 deployment.go:68] Pod "webserver-deployment-685b768f58-kd9nv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kd9nv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b877ce3-cc0f-4b8a-be4e-ebb0db097ee7",
      ResourceVersion: (string) (len=5) "23636",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 31 2e 32 32  37 5c 22 7d 22 3a 7b 22  |.52.1.227\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6wh2x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6wh2x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.16",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.16"
        }
      },
      PodIP: (string) (len=11) "10.52.1.227",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.1.227"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889612576,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8b66d6f80a679afcc6cede037e4d64ccac81b5b597b5be22fcec019575bdea66",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6wh2x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.927681 23 deployment.go:68] Pod "webserver-deployment-685b768f58-l9z5t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-l9z5t",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "842537f4-00ed-4b31-b4b3-fb948fc78623",
      ResourceVersion: (string) (len=5) "23780",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bg8xw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bg8xw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.930820 23 deployment.go:68] Pod "webserver-deployment-685b768f58-ld8lj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ld8lj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5315ee5-77ae-4c12-85ca-7244577cec2d",
      ResourceVersion: (string) (len=5) "23796",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vhqq9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vhqq9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vhqq9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.933566 23 deployment.go:68] Pod "webserver-deployment-685b768f58-p46tx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-p46tx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a9ac8a1-5d21-4bd4-9f32-efaa68ecb139",
      ResourceVersion: (string) (len=5) "23641",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612578,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 31 2e 32 32  39 5c 22 7d 22 3a 7b 22  |.52.1.229\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b27dc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b27dc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612578,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612578,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612578,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.16",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.16"
        }
      },
      PodIP: (string) (len=11) "10.52.1.229",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.1.229"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889612576,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a84eccfcd888b3fe3a7fe38abe32cfcd5b4d13b138bb48a0f65983ed22a2005c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b27dc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.936858 23 deployment.go:68] Pod "webserver-deployment-685b768f58-pjljn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pjljn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d9285a0-764e-446c-ad5f-1eec5adc579f",
      ResourceVersion: (string) (len=5) "23628",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 31 2e 32 32  36 5c 22 7d 22 3a 7b 22  |.52.1.226\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-87dcc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-87dcc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.16",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.16"
        }
      },
      PodIP: (string) (len=11) "10.52.1.226",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.1.226"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889612576,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://793c1033862a0b7e82425d1813201d7f6927ebc5ea88a5a45fa31100a5c0d6ed",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-87dcc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.940698 23 deployment.go:68] Pod "webserver-deployment-685b768f58-qn6pw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qn6pw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff552ecd-c678-4c8f-8e8d-d3555e4d564a",
      ResourceVersion: (string) (len=5) "23802",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vvghr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vvghr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.943285 23 deployment.go:68] Pod "webserver-deployment-685b768f58-r6nc4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-r6nc4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "395e4a71-e956-442a-8428-687ff507d135",
      ResourceVersion: (string) (len=5) "23672",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 30 2e 31 34  38 5c 22 7d 22 3a 7b 22  |.52.0.148\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-74grh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-74grh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) (len=11) "10.52.0.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.0.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889612580,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7cbe2239f2ae85864fb859ad2b53cc489950dbb2ab49fd03f1ada69c79bd30fd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-74grh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.946122 23 deployment.go:68] Pod "webserver-deployment-685b768f58-sclfk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-sclfk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dba827bc-a1a0-40ad-a413-47cf6c5b2acf",
      ResourceVersion: (string) (len=5) "23806",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q5zxf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q5zxf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.947849 23 deployment.go:68] Pod "webserver-deployment-685b768f58-stzzt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-stzzt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5905b5f-0c8f-471f-b0b3-63f3838ee0e8",
      ResourceVersion: (string) (len=5) "23800",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c4fgz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c4fgz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.949558 23 deployment.go:68] Pod "webserver-deployment-685b768f58-tn9td" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-tn9td",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3037d78-fd76-4a7c-8f21-993aa261189d",
      ResourceVersion: (string) (len=5) "23804",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gbhx2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gbhx2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.952267 23 deployment.go:68] Pod "webserver-deployment-685b768f58-vvpvw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-vvpvw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f3fb3cd5-6035-4d10-b7ae-22e7070aa2d0",
      ResourceVersion: (string) (len=5) "23803",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "36442399-676b-4aa8-b016-971553225168",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 36  34 34 32 33 39 39 2d 36  |d\":\"36442399-6|
              00000090  37 36 62 2d 34 61 61 38  2d 62 30 31 36 2d 39 37  |76b-4aa8-b016-97|
              000000a0  31 35 35 33 32 32 35 31  36 38 5c 22 7d 22 3a 7b  |1553225168\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6sjfq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6sjfq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.954790 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9qdgm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9qdgm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2581852f-c9e8-4143-9e09-7ae23181aa39",
      ResourceVersion: (string) (len=5) "23717",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5d184963-9bd8-441c-b864-070e5e8673b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  31 38 34 39 36 33 2d 39  |d\":\"5d184963-9|
              00000090  62 64 38 2d 34 34 31 63  2d 62 38 36 34 2d 30 37  |bd8-441c-b864-07|
              000000a0  30 65 35 65 38 36 37 33  62 31 5c 22 7d 22 3a 7b  |0e5e8673b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7v827",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7v827",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.16",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.16"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7v827",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.957584 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-cswb6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-cswb6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe66d6e8-cba9-41d0-bba8-56b75521235a",
      ResourceVersion: (string) (len=5) "23725",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5d184963-9bd8-441c-b864-070e5e8673b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  31 38 34 39 36 33 2d 39  |d\":\"5d184963-9|
              00000090  62 64 38 2d 34 34 31 63  2d 62 38 36 34 2d 30 37  |bd8-441c-b864-07|
              000000a0  30 65 35 65 38 36 37 33  62 31 5c 22 7d 22 3a 7b  |0e5e8673b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mfxfb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mfxfb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mfxfb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.963295 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-f7t6c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-f7t6c",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c2ba6d6-a1ed-44df-8bb6-57494a1835ce",
      ResourceVersion: (string) (len=5) "23787",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5d184963-9bd8-441c-b864-070e5e8673b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  31 38 34 39 36 33 2d 39  |d\":\"5d184963-9|
              00000090  62 64 38 2d 34 34 31 63  2d 62 38 36 34 2d 30 37  |bd8-441c-b864-07|
              000000a0  30 65 35 65 38 36 37 33  62 31 5c 22 7d 22 3a 7b  |0e5e8673b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-66p4s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-66p4s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.965312 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-f9bhl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-f9bhl",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1610562-3c60-4ac8-98f8-732300cbefb3",
      ResourceVersion: (string) (len=5) "23762",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5d184963-9bd8-441c-b864-070e5e8673b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  31 38 34 39 36 33 2d 39  |d\":\"5d184963-9|
              00000090  62 64 38 2d 34 34 31 63  2d 62 38 36 34 2d 30 37  |bd8-441c-b864-07|
              000000a0  30 65 35 65 38 36 37 33  62 31 5c 22 7d 22 3a 7b  |0e5e8673b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 35 32  |:{\"ip\":\"10.52|
              00000290  2e 31 2e 32 33 30 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.230\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kdw6d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kdw6d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.16",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.16"
        }
      },
      PodIP: (string) (len=11) "10.52.1.230",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.1.230"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kdw6d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.967981 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-gdx2t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-gdx2t",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28971b91-11d6-4971-bbb2-f2669114be12",
      ResourceVersion: (string) (len=5) "23794",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5d184963-9bd8-441c-b864-070e5e8673b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  31 38 34 39 36 33 2d 39  |d\":\"5d184963-9|
              00000090  62 64 38 2d 34 34 31 63  2d 62 38 36 34 2d 30 37  |bd8-441c-b864-07|
              000000a0  30 65 35 65 38 36 37 33  62 31 5c 22 7d 22 3a 7b  |0e5e8673b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ckbb8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ckbb8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.971730 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-gjpgj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-gjpgj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa9bdc19-f44b-4ea8-876b-c6e6c5aab16e",
      ResourceVersion: (string) (len=5) "23746",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5d184963-9bd8-441c-b864-070e5e8673b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  31 38 34 39 36 33 2d 39  |d\":\"5d184963-9|
              00000090  62 64 38 2d 34 34 31 63  2d 62 38 36 34 2d 30 37  |bd8-441c-b864-07|
              000000a0  30 65 35 65 38 36 37 33  62 31 5c 22 7d 22 3a 7b  |0e5e8673b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l82zp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l82zp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l82zp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.974815 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jgmfc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jgmfc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48b36f0b-43f7-4916-92cd-d72d926c895a",
      ResourceVersion: (string) (len=5) "23791",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5d184963-9bd8-441c-b864-070e5e8673b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  31 38 34 39 36 33 2d 39  |d\":\"5d184963-9|
              00000090  62 64 38 2d 34 34 31 63  2d 62 38 36 34 2d 30 37  |bd8-441c-b864-07|
              000000a0  30 65 35 65 38 36 37 33  62 31 5c 22 7d 22 3a 7b  |0e5e8673b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gb7s9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gb7s9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.976847 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-knw6n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-knw6n",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "236f2ae3-6b44-41ec-9a08-cd15e0a036fd",
      ResourceVersion: (string) (len=5) "23772",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5d184963-9bd8-441c-b864-070e5e8673b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  31 38 34 39 36 33 2d 39  |d\":\"5d184963-9|
              00000090  62 64 38 2d 34 34 31 63  2d 62 38 36 34 2d 30 37  |bd8-441c-b864-07|
              000000a0  30 65 35 65 38 36 37 33  62 31 5c 22 7d 22 3a 7b  |0e5e8673b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nglw2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nglw2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.978817 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-l9c9n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-l9c9n",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ffcfbbdd-5c8d-47da-81d6-1532a44cc95b",
      ResourceVersion: (string) (len=5) "23743",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5d184963-9bd8-441c-b864-070e5e8673b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  31 38 34 39 36 33 2d 39  |d\":\"5d184963-9|
              00000090  62 64 38 2d 34 34 31 63  2d 62 38 36 34 2d 30 37  |bd8-441c-b864-07|
              000000a0  30 65 35 65 38 36 37 33  62 31 5c 22 7d 22 3a 7b  |0e5e8673b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vqbt8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vqbt8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vqbt8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.983868 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mtk92" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mtk92",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "437d90ff-5fb1-4f2f-b382-a4136ab205e4",
      ResourceVersion: (string) (len=5) "23789",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5d184963-9bd8-441c-b864-070e5e8673b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  31 38 34 39 36 33 2d 39  |d\":\"5d184963-9|
              00000090  62 64 38 2d 34 34 31 63  2d 62 38 36 34 2d 30 37  |bd8-441c-b864-07|
              000000a0  30 65 35 65 38 36 37 33  62 31 5c 22 7d 22 3a 7b  |0e5e8673b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-998b7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-998b7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.985720 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-rzghb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-rzghb",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "059907d7-59ed-4e1b-afbd-90430d5d5447",
      ResourceVersion: (string) (len=5) "23793",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5d184963-9bd8-441c-b864-070e5e8673b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  31 38 34 39 36 33 2d 39  |d\":\"5d184963-9|
              00000090  62 64 38 2d 34 34 31 63  2d 62 38 36 34 2d 30 37  |bd8-441c-b864-07|
              000000a0  30 65 35 65 38 36 37 33  62 31 5c 22 7d 22 3a 7b  |0e5e8673b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gsgt2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gsgt2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.987514 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-z9zqb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-z9zqb",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52bdd219-4429-4926-8744-3cd80499558e",
      ResourceVersion: (string) (len=5) "23788",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5d184963-9bd8-441c-b864-070e5e8673b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889612585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  31 38 34 39 36 33 2d 39  |d\":\"5d184963-9|
              00000090  62 64 38 2d 34 34 31 63  2d 62 38 36 34 2d 30 37  |bd8-441c-b864-07|
              000000a0  30 65 35 65 38 36 37 33  62 31 5c 22 7d 22 3a 7b  |0e5e8673b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p2nt9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p2nt9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:36:25.989106 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4355" for this suite. @ 08/01/25 02:36:26.154
â€¢ [14.091 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 08/01/25 02:36:26.553
  I0801 02:36:26.553214 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 02:36:26.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:36:26.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:36:27.017
  STEP: creating service multiprotocol-test in namespace services-4301 @ 08/01/25 02:36:27.021
  STEP: creating pod pod1 in namespace services-4301 @ 08/01/25 02:36:27.759
  STEP: Creating pod pod1 in namespace services-4301 @ 08/01/25 02:36:27.76
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-4301 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 08/01/25 02:36:35.144
  I0801 02:36:35.326672      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 02:36:35.388785 23 service.go:4729] successfully validated that service multiprotocol-test in namespace services-4301 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 08/01/25 02:36:35.388
  I0801 02:36:35.388874 23 resource.go:361] Creating new exec pod
  I0801 02:36:41.999224 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-4301 exec execpodzl8th -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.181.177 80'
  I0801 02:36:42.444679 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.181.177 80\nConnection to 10.53.181.177 80 port [tcp/http] succeeded!\n"
  I0801 02:36:42.444738 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 02:36:42.444825 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-4301 exec execpodzl8th -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.53.181.177 80'
  I0801 02:36:44.696400 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.53.181.177 80\n"
  I0801 02:36:44.696458 23 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 08/01/25 02:36:44.696
  I0801 02:36:44.710033 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-4301 exec execpodzl8th -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.181.177 80'
  I0801 02:36:44.999209 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.181.177 80\nConnection to 10.53.181.177 80 port [tcp/http] succeeded!\n"
  I0801 02:36:44.999265 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 02:36:44.999368 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-4301 exec execpodzl8th -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.53.181.177 80'
  I0801 02:36:47.303923 23 builder.go:146] stderr: "+ nc -v -u -w 2 10.53.181.177 80\n+ echo hostName\n"
  I0801 02:36:47.303984 23 builder.go:147] stdout: ""
  I0801 02:36:47.304155 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-4301 exec execpodzl8th -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.53.181.177 80'
  I0801 02:36:49.540881 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.53.181.177 80\n"
  I0801 02:36:49.540942 23 builder.go:147] stdout: ""
  I0801 02:36:49.541008 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-4301 exec execpodzl8th -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.53.181.177 80'
  I0801 02:36:51.852576 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.53.181.177 80\n"
  I0801 02:36:51.852642 23 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 08/01/25 02:36:51.852
  I0801 02:36:51.879354 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-4301 exec execpodzl8th -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.53.181.177 80'
  I0801 02:36:54.252830 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.53.181.177 80\n"
  I0801 02:36:54.252880 23 builder.go:147] stdout: "pod1"
  I0801 02:36:54.252978 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-4301 exec execpodzl8th -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.181.177 80'
  I0801 02:36:56.536227 23 builder.go:135] rc: 1
  I0801 02:36:56.536308 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-4301 exec execpodzl8th -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.181.177 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.53.181.177 80
  nc: connect to 10.53.181.177 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0801 02:36:56.536659 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-4301 exec execpodzl8th -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.181.177 80'
  I0801 02:36:58.886910 23 builder.go:135] rc: 1
  I0801 02:36:58.886990 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-4301 exec execpodzl8th -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.181.177 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.53.181.177 80
  + echo hostName
  nc: connect to 10.53.181.177 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0801 02:36:58.887088 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-4301 exec execpodzl8th -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.181.177 80'
  I0801 02:37:01.230653 23 builder.go:135] rc: 1
  I0801 02:37:01.230734 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-4301 exec execpodzl8th -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.181.177 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.53.181.177 80
  nc: connect to 10.53.181.177 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0801 02:37:01.240147 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4301" for this suite. @ 08/01/25 02:37:01.27
â€¢ [34.734 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 08/01/25 02:37:01.287
  I0801 02:37:01.287263 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename resourcequota @ 08/01/25 02:37:01.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:37:01.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:37:01.354
  STEP: Creating a ResourceQuota with terminating scope @ 08/01/25 02:37:01.359
  STEP: Ensuring ResourceQuota status is calculated @ 08/01/25 02:37:01.369
  STEP: Creating a ResourceQuota with not terminating scope @ 08/01/25 02:37:03.378
  STEP: Ensuring ResourceQuota status is calculated @ 08/01/25 02:37:03.391
  STEP: Creating a long running pod @ 08/01/25 02:37:05.397
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 08/01/25 02:37:05.456
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 08/01/25 02:37:07.474
  STEP: Deleting the pod @ 08/01/25 02:37:09.484
  STEP: Ensuring resource quota status released the pod usage @ 08/01/25 02:37:09.504
  STEP: Creating a terminating pod @ 08/01/25 02:37:11.52
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 08/01/25 02:37:11.556
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 08/01/25 02:37:13.559
  STEP: Deleting the pod @ 08/01/25 02:37:15.564
  STEP: Ensuring resource quota status released the pod usage @ 08/01/25 02:37:15.587
  I0801 02:37:17.601311 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9719" for this suite. @ 08/01/25 02:37:17.604
â€¢ [16.337 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 08/01/25 02:37:17.624
  I0801 02:37:17.624945 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename aggregateddiscovery @ 08/01/25 02:37:17.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:37:17.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:37:17.668
  I0801 02:37:17.731486 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8385" for this suite. @ 08/01/25 02:37:17.739
â€¢ [0.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 08/01/25 02:37:17.759
  I0801 02:37:17.759977 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 02:37:17.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:37:17.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:37:17.805
  STEP: creating service in namespace services-530 @ 08/01/25 02:37:17.826
  STEP: creating service affinity-clusterip-transition in namespace services-530 @ 08/01/25 02:37:17.826
  I0801 02:37:17.931123 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0801 02:37:19.947817 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 37, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 37, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 37, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 37, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0801 02:37:21.957204 23 resource.go:361] Creating new exec pod
  I0801 02:37:24.008464 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-530 exec execpod-affinityprntq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0801 02:37:24.253345 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.53.121.215) 80 port [tcp/http] succeeded!\n"
  I0801 02:37:24.253432 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 02:37:24.253529 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-530 exec execpod-affinityprntq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.121.215 80'
  I0801 02:37:24.531520 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.121.215 80\nConnection to 10.53.121.215 80 port [tcp/http] succeeded!\n"
  I0801 02:37:24.531700 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 02:37:24.552911 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-530 exec execpod-affinityprntq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/ ; done'
  I0801 02:37:25.047227 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n"
  I0801 02:37:25.047303 23 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-zszf7\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-zszf7\naffinity-clusterip-transition-5cffb65545-vmfxf\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-vmfxf\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-vmfxf\naffinity-clusterip-transition-5cffb65545-vmfxf\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-zszf7\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-vmfxf\naffinity-clusterip-transition-5cffb65545-vmfxf"
  I0801 02:37:25.047326 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.047341 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.047351 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zszf7
  I0801 02:37:25.047423 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.047445 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zszf7
  I0801 02:37:25.047461 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vmfxf
  I0801 02:37:25.047478 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.047489 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vmfxf
  I0801 02:37:25.047505 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.047521 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vmfxf
  I0801 02:37:25.047531 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vmfxf
  I0801 02:37:25.047543 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.047555 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zszf7
  I0801 02:37:25.047564 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.047576 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vmfxf
  I0801 02:37:25.047586 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vmfxf
  I0801 02:37:25.089256 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-530 exec execpod-affinityprntq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/ ; done'
  I0801 02:37:25.570748 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.53.121.215:80/\n"
  I0801 02:37:25.570808 23 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8\naffinity-clusterip-transition-5cffb65545-57sp8"
  I0801 02:37:25.570829 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570843 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570853 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570863 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570874 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570884 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570897 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570914 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570926 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570934 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570940 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570948 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570954 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570961 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570968 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.570975 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-57sp8
  I0801 02:37:25.571040 23 service.go:4352] Cleaning up the exec pod
  I0801 02:37:25.705402 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-530" for this suite. @ 08/01/25 02:37:25.784
â€¢ [8.065 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 08/01/25 02:37:25.825
  I0801 02:37:25.825510 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename namespaces @ 08/01/25 02:37:25.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:37:25.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:37:25.854
  STEP: Creating a test namespace @ 08/01/25 02:37:25.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:37:25.886
  STEP: Creating a pod in the namespace @ 08/01/25 02:37:25.89
  STEP: Waiting for the pod to have running status @ 08/01/25 02:37:25.915
  STEP: Deleting the namespace @ 08/01/25 02:37:29.928
  STEP: Waiting for the namespace to be removed. @ 08/01/25 02:37:29.96
  STEP: Recreating the namespace @ 08/01/25 02:37:40.968
  STEP: Verifying there are no pods in the namespace @ 08/01/25 02:37:41.026
  I0801 02:37:41.031714 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3365" for this suite. @ 08/01/25 02:37:41.037
  STEP: Destroying namespace "nsdeletetest-6752" for this suite. @ 08/01/25 02:37:41.056
  I0801 02:37:41.078098 23 framework.go:370] Namespace nsdeletetest-6752 was already deleted
  STEP: Destroying namespace "nsdeletetest-5046" for this suite. @ 08/01/25 02:37:41.078
â€¢ [15.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 08/01/25 02:37:41.094
  I0801 02:37:41.094767 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename cronjob @ 08/01/25 02:37:41.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:37:41.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:37:41.143
  STEP: Creating a cronjob @ 08/01/25 02:37:41.165
  STEP: Ensuring more than one job is running at a time @ 08/01/25 02:37:41.188
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 08/01/25 02:39:01.199
  STEP: Removing cronjob @ 08/01/25 02:39:01.212
  I0801 02:39:01.231340 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5314" for this suite. @ 08/01/25 02:39:01.238
â€¢ [80.172 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 08/01/25 02:39:01.268
  I0801 02:39:01.268131 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:39:01.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:39:01.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:39:01.317
  STEP: Creating projection with secret that has name projected-secret-test-40f7d1ec-4028-4af4-a953-639889fc76f9 @ 08/01/25 02:39:01.325
  STEP: Creating a pod to test consume secrets @ 08/01/25 02:39:01.345
  STEP: Saw pod success @ 08/01/25 02:39:05.451
  I0801 02:39:05.456586 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-projected-secrets-bc50eea7-c42e-4d6f-b14d-6522a30a8b6b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 02:39:05.623
  I0801 02:39:05.793480 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6439" for this suite. @ 08/01/25 02:39:05.797
â€¢ [4.541 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 08/01/25 02:39:05.809
  I0801 02:39:05.809751 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pods @ 08/01/25 02:39:05.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:39:05.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:39:05.837
  STEP: Create a pod @ 08/01/25 02:39:05.849
  STEP: patching /status @ 08/01/25 02:39:07.881
  I0801 02:39:07.903315 23 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0801 02:39:07.904814 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9848" for this suite. @ 08/01/25 02:39:07.935
â€¢ [2.155 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 08/01/25 02:39:07.965
  I0801 02:39:07.965486 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 02:39:07.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:39:07.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:39:08.011
  STEP: Creating configMap with name configmap-test-volume-map-e098574c-d436-4d8f-91d4-5710a61913e2 @ 08/01/25 02:39:08.017
  STEP: Creating a pod to test consume configMaps @ 08/01/25 02:39:08.033
  STEP: Saw pod success @ 08/01/25 02:39:12.094
  I0801 02:39:12.105061 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-configmaps-0fdd8b46-68e6-40a7-ba5d-35e53b7783be container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 02:39:12.231
  I0801 02:39:12.271810 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-205" for this suite. @ 08/01/25 02:39:12.275
â€¢ [4.323 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 08/01/25 02:39:12.291
  I0801 02:39:12.292011 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename taint-single-pod @ 08/01/25 02:39:12.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:39:12.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:39:12.377
  I0801 02:39:12.385325 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0801 02:40:12.385804 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0801 02:40:12.389220 23 taints.go:144] Starting informer...
  STEP: Starting pod... @ 08/01/25 02:40:12.389
  I0801 02:40:12.616722 23 taints.go:294] Pod is running on k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc. Tainting Node
  STEP: Trying to apply a taint on the Node @ 08/01/25 02:40:12.616
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/01/25 02:40:12.649
  STEP: Waiting short time to make sure Pod is queued for deletion @ 08/01/25 02:40:12.653
  I0801 02:40:12.653986 23 taints.go:313] Pod wasn't evicted. Proceeding
  I0801 02:40:12.654006 23 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/01/25 02:40:12.704
  STEP: Waiting some time to make sure that toleration time passed. @ 08/01/25 02:40:12.735
  I0801 02:41:27.735458 23 taints.go:329] Pod wasn't evicted. Test successful
  I0801 02:41:27.735837 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3591" for this suite. @ 08/01/25 02:41:27.744
â€¢ [135.469 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 08/01/25 02:41:27.761
  I0801 02:41:27.761095 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename disruption @ 08/01/25 02:41:27.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:41:27.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:41:27.835
  STEP: Creating a pdb that targets all three pods in a test replica set @ 08/01/25 02:41:27.84
  STEP: Waiting for the pdb to be processed @ 08/01/25 02:41:27.85
  STEP: First trying to evict a pod which shouldn't be evictable @ 08/01/25 02:41:29.879
  STEP: Waiting for all pods to be running @ 08/01/25 02:41:29.879
  I0801 02:41:29.893001 23 disruption.go:680] pods: 0 < 3
  I0801 02:41:31.891583 23 disruption.go:691] running pods: 1 < 3
  STEP: locating a running pod @ 08/01/25 02:41:33.885
  STEP: Updating the pdb to allow a pod to be evicted @ 08/01/25 02:41:33.896
  STEP: Waiting for the pdb to be processed @ 08/01/25 02:41:33.932
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 08/01/25 02:41:33.96
  STEP: Waiting for all pods to be running @ 08/01/25 02:41:33.962
  STEP: Waiting for the pdb to observed all healthy pods @ 08/01/25 02:41:33.987
  STEP: Patching the pdb to disallow a pod to be evicted @ 08/01/25 02:41:34.071
  STEP: Waiting for the pdb to be processed @ 08/01/25 02:41:34.129
  STEP: Waiting for all pods to be running @ 08/01/25 02:41:36.135
  STEP: locating a running pod @ 08/01/25 02:41:36.152
  STEP: Deleting the pdb to allow a pod to be evicted @ 08/01/25 02:41:36.161
  STEP: Waiting for the pdb to be deleted @ 08/01/25 02:41:36.17
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 08/01/25 02:41:36.174
  STEP: Waiting for all pods to be running @ 08/01/25 02:41:36.174
  I0801 02:41:36.208101 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8592" for this suite. @ 08/01/25 02:41:36.249
â€¢ [8.530 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 08/01/25 02:41:36.291
  I0801 02:41:36.291360 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename runtimeclass @ 08/01/25 02:41:36.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:41:36.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:41:36.346
  I0801 02:41:38.417938 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7338" for this suite. @ 08/01/25 02:41:38.428
â€¢ [2.155 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 08/01/25 02:41:38.446
  I0801 02:41:38.446500 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename svcaccounts @ 08/01/25 02:41:38.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:41:38.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:41:38.509
  I0801 02:41:38.548906 23 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0801 02:41:38.548971 23 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0801 02:41:38.570429 23 service_accounts.go:281] created pod pod-service-account-mountsa
  I0801 02:41:38.570601 23 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0801 02:41:38.610250 23 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0801 02:41:38.610378 23 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0801 02:41:38.628589 23 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0801 02:41:38.628632 23 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0801 02:41:38.646532 23 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0801 02:41:38.646581 23 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0801 02:41:38.672192 23 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0801 02:41:38.672382 23 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0801 02:41:38.690851 23 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0801 02:41:38.691019 23 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0801 02:41:38.825952 23 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0801 02:41:38.826165 23 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0801 02:41:38.982099 23 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0801 02:41:38.982297 23 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0801 02:41:38.982505 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-928" for this suite. @ 08/01/25 02:41:39.113
â€¢ [0.922 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 08/01/25 02:41:39.369
  I0801 02:41:39.369203 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 02:41:39.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:41:39.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:41:39.782
  STEP: Creating Indexed job @ 08/01/25 02:41:39.798
  STEP: Ensuring job reaches completions @ 08/01/25 02:41:39.967
  STEP: Ensuring pods with index for job exist @ 08/01/25 02:41:57.012
  I0801 02:41:57.022954 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6429" for this suite. @ 08/01/25 02:41:57.047
â€¢ [17.696 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 08/01/25 02:41:57.066
  I0801 02:41:57.066688 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename dns @ 08/01/25 02:41:57.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:41:57.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:41:57.122
  STEP: Creating a test headless service @ 08/01/25 02:41:57.133
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1441.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-1441.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1441.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-1441.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-1441.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-1441.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-1441.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-1441.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 243.92.53.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.53.92.243_udp@PTR;check="$$(dig +tcp +noall +answer +search 243.92.53.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.53.92.243_tcp@PTR;sleep 1; done
   @ 08/01/25 02:41:57.198
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1441.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1441.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1441.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1441.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1441.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1441.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1441.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1441.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 243.92.53.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.53.92.243_udp@PTR;check="$$(dig +tcp +noall +answer +search 243.92.53.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.53.92.243_tcp@PTR;sleep 1; done
   @ 08/01/25 02:41:57.198
  STEP: creating a pod to probe DNS @ 08/01/25 02:41:57.198
  STEP: submitting the pod to kubernetes @ 08/01/25 02:41:57.198
  STEP: retrieving the pod @ 08/01/25 02:42:01.277
  STEP: looking for the results for each expected name from probers @ 08/01/25 02:42:01.281
  I0801 02:42:01.291945 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-1441.svc.cluster.local from pod dns-1441/dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db: the server could not find the requested resource (get pods dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db)
  I0801 02:42:01.296376 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-1441.svc.cluster.local from pod dns-1441/dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db: the server could not find the requested resource (get pods dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db)
  I0801 02:42:01.301638 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-1441.svc.cluster.local from pod dns-1441/dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db: the server could not find the requested resource (get pods dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db)
  I0801 02:42:01.308568 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-1441.svc.cluster.local from pod dns-1441/dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db: the server could not find the requested resource (get pods dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db)
  I0801 02:42:01.344622 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-1441.svc.cluster.local from pod dns-1441/dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db: the server could not find the requested resource (get pods dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db)
  I0801 02:42:01.367542 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-1441.svc.cluster.local from pod dns-1441/dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db: the server could not find the requested resource (get pods dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db)
  I0801 02:42:01.379253 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1441.svc.cluster.local from pod dns-1441/dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db: the server could not find the requested resource (get pods dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db)
  I0801 02:42:01.383951 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1441.svc.cluster.local from pod dns-1441/dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db: the server could not find the requested resource (get pods dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db)
  I0801 02:42:01.424649 23 dns_common.go:506] Lookups using dns-1441/dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db failed for: [agnhost_udp@dns-test-service.dns-1441.svc.cluster.local agnhost_tcp@dns-test-service.dns-1441.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-1441.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-1441.svc.cluster.local jessie_udp@dns-test-service.dns-1441.svc.cluster.local jessie_tcp@dns-test-service.dns-1441.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1441.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1441.svc.cluster.local]

  I0801 02:42:01.449120 23 dns_common.go:514] Pod client logs for webserver: 
  I0801 02:42:01.461836 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0801 02:42:01.474362 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0801 02:42:06.413691 23 dns_common.go:546] DNS probes using dns-1441/dns-test-4024f2ca-4f94-4462-8ad6-d54b4ebe10db succeeded

  STEP: deleting the pod @ 08/01/25 02:42:06.413
  STEP: deleting the test service @ 08/01/25 02:42:06.476
  STEP: deleting the test headless service @ 08/01/25 02:42:06.66
  I0801 02:42:06.752878 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1441" for this suite. @ 08/01/25 02:42:06.771
â€¢ [9.717 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 08/01/25 02:42:06.8
  I0801 02:42:06.801038 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 02:42:06.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:42:06.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:42:06.861
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 02:42:06.87
  STEP: Saw pod success @ 08/01/25 02:42:10.95
  I0801 02:42:10.955182 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-4e4ea76a-706b-4cc6-869b-c8d90547e3d8 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 02:42:10.971
  I0801 02:42:11.007636 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7196" for this suite. @ 08/01/25 02:42:11.013
â€¢ [4.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 08/01/25 02:42:11.027
  I0801 02:42:11.027736 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename podtemplate @ 08/01/25 02:42:11.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:42:11.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:42:11.071
  STEP: Create a pod template @ 08/01/25 02:42:11.084
  STEP: Replace a pod template @ 08/01/25 02:42:11.096
  I0801 02:42:11.147470 23 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0801 02:42:11.147625 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-550" for this suite. @ 08/01/25 02:42:11.151
â€¢ [0.191 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 08/01/25 02:42:11.219
  I0801 02:42:11.219313 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename resourcequota @ 08/01/25 02:42:11.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:42:11.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:42:11.253
  STEP: Discovering how many secrets are in namespace by default @ 08/01/25 02:42:11.26
  STEP: Counting existing ResourceQuota @ 08/01/25 02:42:16.264
  STEP: Creating a ResourceQuota @ 08/01/25 02:42:21.268
  STEP: Ensuring resource quota status is calculated @ 08/01/25 02:42:21.3
  STEP: Creating a Secret @ 08/01/25 02:42:23.307
  STEP: Ensuring resource quota status captures secret creation @ 08/01/25 02:42:23.349
  STEP: Deleting a secret @ 08/01/25 02:42:25.354
  STEP: Ensuring resource quota status released usage @ 08/01/25 02:42:25.369
  I0801 02:42:27.373969 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9883" for this suite. @ 08/01/25 02:42:27.38
â€¢ [16.178 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 08/01/25 02:42:27.397
  I0801 02:42:27.397096 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename init-container @ 08/01/25 02:42:27.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:42:27.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:42:27.484
  STEP: creating the pod @ 08/01/25 02:42:27.501
  I0801 02:42:27.501271 23 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0801 02:43:11.987119 23 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-6ac483cb-7563-4110-9ba3-4000e3ebf571", GenerateName:"", Namespace:"init-container-3332", SelfLink:"", UID:"f436ebf1-d93e-454a-8c75-ec0ff96dc74c", ResourceVersion:"26246", Generation:1, CreationTimestamp:time.Date(2025, time.August, 1, 2, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"501240387"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005023980), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.August, 1, 2, 43, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050239b0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-rrfg5", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0007bc660), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-rrfg5", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-rrfg5", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-rrfg5", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc006a7d9c8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0023d1d40), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc006a7da40)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc006a7da60)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc006a7da68), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc006a7da6c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc005df6f20), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.August, 1, 2, 42, 29, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.August, 1, 2, 42, 27, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.August, 1, 2, 42, 27, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.August, 1, 2, 42, 27, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.August, 1, 2, 42, 27, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.42.0.16", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.42.0.16"}}, PodIP:"10.52.1.2", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.52.1.2"}}, StartTime:time.Date(2025, time.August, 1, 2, 42, 27, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0062a3570)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0062a35e0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://92d7e9c4d904f8b8d04371e9e1cda3cd34405669a7a1973ecf5cf7b14bf961ab", Started:(*bool)(0xc006a7db1a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc000805a40), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-rrfg5", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc005df6f40)}}, User:(*v1.ContainerUser)(0xc0000422d8), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0007bc6c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc006a7db45), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-rrfg5", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc005df6f50)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0007bc6a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc006a7daef), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-rrfg5", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc005df6f30)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0801 02:43:11.987313 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3332" for this suite. @ 08/01/25 02:43:11.995
â€¢ [44.618 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 08/01/25 02:43:12.016
  I0801 02:43:12.016717 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 02:43:12.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:43:12.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:43:12.057
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 02:43:12.063
  STEP: Saw pod success @ 08/01/25 02:43:16.096
  I0801 02:43:16.101049 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod downwardapi-volume-11d07ed6-65da-4d79-92a0-0ba67c2be94e container client-container: <nil>
  STEP: delete the pod @ 08/01/25 02:43:16.138
  I0801 02:43:16.165993 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6074" for this suite. @ 08/01/25 02:43:16.169
â€¢ [4.165 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 08/01/25 02:43:16.181
  I0801 02:43:16.181191 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename deployment @ 08/01/25 02:43:16.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:43:16.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:43:16.216
  STEP: creating a Deployment @ 08/01/25 02:43:16.222
  STEP: waiting for Deployment to be created @ 08/01/25 02:43:16.233
  STEP: waiting for all Replicas to be Ready @ 08/01/25 02:43:16.242
  I0801 02:43:16.243804 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0801 02:43:16.243852 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0801 02:43:16.272123 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0801 02:43:16.272175 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0801 02:43:16.287265 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0801 02:43:16.287328 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0801 02:43:16.430260 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0801 02:43:16.430404 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0801 02:43:18.179904 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0801 02:43:18.179944 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0801 02:43:18.274428 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 08/01/25 02:43:18.274
  I0801 02:43:18.299378 23 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 08/01/25 02:43:18.299
  I0801 02:43:18.303233 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0
  I0801 02:43:18.303520 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0
  I0801 02:43:18.303599 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0
  I0801 02:43:18.303728 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0
  I0801 02:43:18.303808 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0
  I0801 02:43:18.303868 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0
  I0801 02:43:18.303934 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0
  I0801 02:43:18.303988 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 0
  I0801 02:43:18.304046 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1
  I0801 02:43:18.304157 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1
  I0801 02:43:18.304223 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2
  I0801 02:43:18.304283 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2
  I0801 02:43:18.304359 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2
  I0801 02:43:18.304427 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2
  I0801 02:43:18.351189 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2
  I0801 02:43:18.351379 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2
  I0801 02:43:18.402082 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2
  I0801 02:43:18.402266 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2
  I0801 02:43:18.436374 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1
  I0801 02:43:18.436628 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1
  I0801 02:43:18.468189 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1
  I0801 02:43:18.468384 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1
  I0801 02:43:20.286042 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2
  I0801 02:43:20.286232 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2
  I0801 02:43:20.360374 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1
  STEP: listing Deployments @ 08/01/25 02:43:20.36
  I0801 02:43:20.370627 23 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 08/01/25 02:43:20.37
  I0801 02:43:20.405215 23 deployment.go:360] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 08/01/25 02:43:20.405
  I0801 02:43:20.414461 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0801 02:43:20.461929 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0801 02:43:20.589417 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0801 02:43:20.669751 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0801 02:43:22.291807 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0801 02:43:22.371024 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0801 02:43:22.525872 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0801 02:43:22.568772 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0801 02:43:24.254196 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 08/01/25 02:43:24.318
  STEP: fetching the DeploymentStatus @ 08/01/25 02:43:24.358
  I0801 02:43:24.369420 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1
  I0801 02:43:24.369474 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1
  I0801 02:43:24.369490 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1
  I0801 02:43:24.369654 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 1
  I0801 02:43:24.369669 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2
  I0801 02:43:24.369684 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 3
  I0801 02:43:24.369811 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2
  I0801 02:43:24.369825 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 2
  I0801 02:43:24.369840 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-2517 with ReadyReplicas 3
  STEP: deleting the Deployment @ 08/01/25 02:43:24.369
  I0801 02:43:24.415732 23 deployment.go:474] observed event type MODIFIED
  I0801 02:43:24.416908 23 deployment.go:474] observed event type MODIFIED
  I0801 02:43:24.417007 23 deployment.go:474] observed event type MODIFIED
  I0801 02:43:24.421446 23 deployment.go:474] observed event type MODIFIED
  I0801 02:43:24.421652 23 deployment.go:474] observed event type MODIFIED
  I0801 02:43:24.421799 23 deployment.go:474] observed event type MODIFIED
  I0801 02:43:24.421893 23 deployment.go:474] observed event type MODIFIED
  I0801 02:43:24.421993 23 deployment.go:474] observed event type MODIFIED
  I0801 02:43:24.422134 23 deployment.go:474] observed event type MODIFIED
  I0801 02:43:24.422321 23 deployment.go:474] observed event type MODIFIED
  I0801 02:43:24.422685 23 deployment.go:474] observed event type MODIFIED
  I0801 02:43:24.422781 23 deployment.go:474] observed event type MODIFIED
  I0801 02:43:24.426493 23 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0801 02:43:24.431452 23 deployment.go:656] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3f58521-1cd0-4654-a140-0441803dd6ee",
      ResourceVersion: (string) (len=5) "26363",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "78d4f24f-27db-42f3-99d1-a6a26e8bb036",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 38 64 34  66 32 34 66 2d 32 37 64  |":\"78d4f24f-27d|
              00000130  62 2d 34 32 66 33 2d 39  39 64 31 2d 61 36 61 32  |b-42f3-99d1-a6a2|
              00000140  36 65 38 62 62 30 33 36  5c 22 7d 22 3a 7b 7d 7d  |6e8bb036\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0801 02:43:24.448701 23 deployment.go:656] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba012490-41a4-43db-818f-be58596b0c8e",
      ResourceVersion: (string) (len=5) "26455",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613000,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "78d4f24f-27db-42f3-99d1-a6a26e8bb036",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613002,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 38 64 34  66 32 34 66 2d 32 37 64  |":\"78d4f24f-27d|
              00000130  62 2d 34 32 66 33 2d 39  39 64 31 2d 61 36 61 32  |b-42f3-99d1-a6a2|
              00000140  36 65 38 62 62 30 33 36  5c 22 7d 22 3a 7b 7d 7d  |6e8bb036\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0801 02:43:24.484953 23 deployment.go:668] pod: "test-deployment-79899bcfcc-cs8lz":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-cs8lz",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-2517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f264a29-bbe5-4b82-8fa7-309d7da5dde8",
      ResourceVersion: (string) (len=5) "26454",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613002,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "ba012490-41a4-43db-818f-be58596b0c8e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613002,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 61 30 31 32 34 39 30  |uid\":\"ba012490|
              000000a0  2d 34 31 61 34 2d 34 33  64 62 2d 38 31 38 66 2d  |-41a4-43db-818f-|
              000000b0  62 65 35 38 35 39 36 62  30 63 38 65 5c 22 7d 22  |be58596b0c8e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 30 2e 31 37  32 5c 22 7d 22 3a 7b 22  |.52.0.172\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jrc2s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jrc2s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613002,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613002,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) (len=11) "10.52.0.172",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.0.172"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613002,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889613003,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5c503fd6cf765f54452f750fd6a80f2a6a9723a6da8d59b505a6ab2b301dcb6b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jrc2s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0801 02:43:24.490610 23 deployment.go:668] pod: "test-deployment-79899bcfcc-jxsgf":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-jxsgf",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-2517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d673eb1-8789-4c2e-9396-a6c7376e6b49",
      ResourceVersion: (string) (len=5) "26471",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613000,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613005,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "ba012490-41a4-43db-818f-be58596b0c8e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 61 30 31 32 34 39 30  |uid\":\"ba012490|
              000000a0  2d 34 31 61 34 2d 34 33  64 62 2d 38 31 38 66 2d  |-41a4-43db-818f-|
              000000b0  62 65 35 38 35 39 36 62  30 63 38 65 5c 22 7d 22  |be58596b0c8e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613002,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 31 2e 37 5c  22 7d 22 3a 7b 22 2e 22  |.52.1.7\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2bnxh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2bnxh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613002,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613002,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613002,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.16",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.16"
        }
      },
      PodIP: (string) (len=9) "10.52.1.7",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.52.1.7"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613000,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889613001,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1f5938ddf56073ae1c66acb5838edb1d2bcc1d94d533cb1e4a886f4be91bc960",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2bnxh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0801 02:43:24.494043 23 deployment.go:656] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a03c444-8643-4716-bee8-f39e8db081e4",
      ResourceVersion: (string) (len=5) "26463",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889612998,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "78d4f24f-27db-42f3-99d1-a6a26e8bb036",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 38 64 34  66 32 34 66 2d 32 37 64  |":\"78d4f24f-27d|
              00000130  62 2d 34 32 66 33 2d 39  39 64 31 2d 61 36 61 32  |b-42f3-99d1-a6a2|
              00000140  36 65 38 62 62 30 33 36  5c 22 7d 22 3a 7b 7d 7d  |6e8bb036\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0801 02:43:24.555115 23 deployment.go:668] pod: "test-deployment-f78d658f9-dfbk7":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-dfbk7",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-2517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "225c510f-6724-46ac-86e7-3baaa83413fb",
      ResourceVersion: (string) (len=5) "26459",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613000,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613006,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "5a03c444-8643-4716-bee8-f39e8db081e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 61 30 33 63 34 34 34  |uid\":\"5a03c444|
              000000a0  2d 38 36 34 33 2d 34 37  31 36 2d 62 65 65 38 2d  |-8643-4716-bee8-|
              000000b0  66 33 39 65 38 64 62 30  38 31 65 34 5c 22 7d 22  |f39e8db081e4\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613002,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 30 2e 31 37  31 5c 22 7d 22 3a 7b 22  |.52.0.171\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7thn8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7thn8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613002,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613002,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613002,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) (len=11) "10.52.0.171",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.0.171"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613000,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889613001,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://76d0c84c909443a163a9b2dc027a36cb7a79c5ab669c90cf0ff2587c1cd64be2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7thn8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 65535,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=1) {
                (int64) 0
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0801 02:43:24.558243 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2517" for this suite. @ 08/01/25 02:43:24.561
â€¢ [8.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 08/01/25 02:43:24.58
  I0801 02:43:24.580625 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename init-container @ 08/01/25 02:43:24.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:43:24.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:43:24.645
  STEP: creating the pod @ 08/01/25 02:43:24.674
  I0801 02:43:24.674650 23 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0801 02:43:28.422456 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4486" for this suite. @ 08/01/25 02:43:28.433
â€¢ [3.875 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 08/01/25 02:43:28.457
  I0801 02:43:28.457765 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:43:28.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:43:28.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:43:28.502
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 02:43:28.511
  STEP: Saw pod success @ 08/01/25 02:43:32.552
  I0801 02:43:32.557615 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod downwardapi-volume-91532158-b769-4b59-ac84-c364e2db1cba container client-container: <nil>
  STEP: delete the pod @ 08/01/25 02:43:32.566
  I0801 02:43:32.593057 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7602" for this suite. @ 08/01/25 02:43:32.596
â€¢ [4.166 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 08/01/25 02:43:32.624
  I0801 02:43:32.624633 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename replication-controller @ 08/01/25 02:43:32.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:43:32.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:43:32.67
  STEP: Creating replication controller my-hostname-basic-494e821c-7276-4b83-8d4d-44ee1672458e @ 08/01/25 02:43:32.674
  I0801 02:43:32.700554 23 resource.go:81] Pod name my-hostname-basic-494e821c-7276-4b83-8d4d-44ee1672458e: Found 0 pods out of 1
  I0801 02:43:37.703916 23 resource.go:81] Pod name my-hostname-basic-494e821c-7276-4b83-8d4d-44ee1672458e: Found 1 pods out of 1
  I0801 02:43:37.703963 23 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-494e821c-7276-4b83-8d4d-44ee1672458e" are running
  I0801 02:43:37.707008 23 rc.go:525] Pod "my-hostname-basic-494e821c-7276-4b83-8d4d-44ee1672458e-v56rf" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-08-01 02:43:34 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-08-01 02:43:32 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-08-01 02:43:34 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-08-01 02:43:34 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-08-01 02:43:32 +0000 UTC Reason: Message:}])
  I0801 02:43:37.707125 23 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 08/01/25 02:43:37.707
  I0801 02:43:37.719555 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9228" for this suite. @ 08/01/25 02:43:37.728
â€¢ [5.123 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 08/01/25 02:43:37.747
  I0801 02:43:37.747850 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename aggregateddiscovery @ 08/01/25 02:43:37.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:43:37.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:43:37.795
  I0801 02:43:37.802969 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 02:43:40.926723 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4197" for this suite. @ 08/01/25 02:43:40.933
â€¢ [3.198 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 08/01/25 02:43:40.946
  I0801 02:43:40.946062 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename daemonsets @ 08/01/25 02:43:40.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:43:40.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:43:40.989
  STEP: Creating a simple DaemonSet "daemon-set" @ 08/01/25 02:43:41.042
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/01/25 02:43:41.057
  I0801 02:43:41.156314 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 02:43:41.156366 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:43:42.063052 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 02:43:42.063103 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:43:43.099286 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 02:43:43.099447 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:43:44.063650 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0801 02:43:44.063820 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 08/01/25 02:43:44.066
  I0801 02:43:44.275858 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 02:43:44.276118 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:43:45.130832 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 02:43:45.131054 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:43:46.147319 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 02:43:46.147364 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  I0801 02:43:47.143877 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0801 02:43:47.143976 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 08/01/25 02:43:47.144
  STEP: Deleting DaemonSet "daemon-set" @ 08/01/25 02:43:47.154
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3928, will wait for the garbage collector to delete the pods @ 08/01/25 02:43:47.154
  I0801 02:43:47.223134 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 12.049453ms
  I0801 02:43:47.328772 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 105.632681ms
  I0801 02:43:49.747789 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 02:43:49.747842 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0801 02:43:49.756983 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26776"},"items":null}

  I0801 02:43:49.761500 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26776"},"items":null}

  I0801 02:43:49.790777 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3928" for this suite. @ 08/01/25 02:43:49.805
â€¢ [8.875 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 08/01/25 02:43:49.821
  I0801 02:43:49.821261 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename secrets @ 08/01/25 02:43:49.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:43:49.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:43:49.848
  STEP: Creating secret with name secret-test-9bd323f0-4fd6-4610-a04e-da28eb2c6827 @ 08/01/25 02:43:49.921
  STEP: Creating a pod to test consume secrets @ 08/01/25 02:43:49.947
  STEP: Saw pod success @ 08/01/25 02:43:54.046
  I0801 02:43:54.052645 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-secrets-3b162832-19d9-48ab-a0f8-13390af3102e container secret-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 02:43:54.07
  I0801 02:43:54.125043 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4649" for this suite. @ 08/01/25 02:43:54.146
  STEP: Destroying namespace "secret-namespace-2347" for this suite. @ 08/01/25 02:43:54.171
â€¢ [4.385 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 08/01/25 02:43:54.206
  I0801 02:43:54.206992 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename namespaces @ 08/01/25 02:43:54.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:43:54.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:43:54.241
  STEP: Read namespace status @ 08/01/25 02:43:54.247
  I0801 02:43:54.258905 23 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 08/01/25 02:43:54.26
  I0801 02:43:54.281473 23 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 08/01/25 02:43:54.281
  I0801 02:43:54.310240 23 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0801 02:43:54.310403 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2853" for this suite. @ 08/01/25 02:43:54.313
â€¢ [0.128 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 08/01/25 02:43:54.335
  I0801 02:43:54.335191 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename events @ 08/01/25 02:43:54.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:43:54.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:43:54.365
  STEP: creating a test event @ 08/01/25 02:43:54.37
  STEP: listing events in all namespaces @ 08/01/25 02:43:54.385
  STEP: listing events in test namespace @ 08/01/25 02:43:54.414
  STEP: listing events with field selection filtering on source @ 08/01/25 02:43:54.424
  STEP: listing events with field selection filtering on reportingController @ 08/01/25 02:43:54.428
  STEP: getting the test event @ 08/01/25 02:43:54.431
  STEP: patching the test event @ 08/01/25 02:43:54.443
  STEP: getting the test event @ 08/01/25 02:43:54.454
  STEP: updating the test event @ 08/01/25 02:43:54.47
  STEP: getting the test event @ 08/01/25 02:43:54.483
  STEP: deleting the test event @ 08/01/25 02:43:54.512
  STEP: listing events in all namespaces @ 08/01/25 02:43:54.533
  STEP: listing events in test namespace @ 08/01/25 02:43:54.54
  I0801 02:43:54.589122 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2390" for this suite. @ 08/01/25 02:43:54.592
â€¢ [0.278 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 08/01/25 02:43:54.612
  I0801 02:43:54.612735 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 02:43:54.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:43:54.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:43:54.689
  STEP: Setting up server cert @ 08/01/25 02:43:54.745
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 02:43:55.508
  STEP: Deploying the webhook pod @ 08/01/25 02:43:55.521
  STEP: Wait for the deployment to be ready @ 08/01/25 02:43:55.563
  I0801 02:43:55.577990 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0801 02:43:57.594501 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 2, 43, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 43, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 2, 43, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 2, 43, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 08/01/25 02:43:59.608
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 02:43:59.639
  I0801 02:44:00.639684 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 08/01/25 02:44:00.647
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/01/25 02:44:00.681
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 08/01/25 02:44:00.694
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/01/25 02:44:00.722
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 08/01/25 02:44:00.746
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/01/25 02:44:00.766
  I0801 02:44:00.919732 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9571" for this suite. @ 08/01/25 02:44:00.935
  STEP: Destroying namespace "webhook-markers-6262" for this suite. @ 08/01/25 02:44:00.961
â€¢ [6.359 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 08/01/25 02:44:00.972
  I0801 02:44:00.972356 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename cronjob @ 08/01/25 02:44:00.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:44:00.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:44:01.005
  STEP: Creating a suspended cronjob @ 08/01/25 02:44:01.02
  STEP: Ensuring no jobs are scheduled @ 08/01/25 02:44:01.041
  STEP: Ensuring no job exists by listing jobs explicitly @ 08/01/25 02:49:01.042
  STEP: Removing cronjob @ 08/01/25 02:49:01.046
  I0801 02:49:01.055532 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2120" for this suite. @ 08/01/25 02:49:01.059
â€¢ [300.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 08/01/25 02:49:01.076
  I0801 02:49:01.076539 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pod-network-test @ 08/01/25 02:49:01.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:49:01.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:49:01.109
  STEP: Performing setup for networking test in namespace pod-network-test-1347 @ 08/01/25 02:49:01.114
  STEP: creating a selector @ 08/01/25 02:49:01.114
  STEP: Creating the service pods in kubernetes @ 08/01/25 02:49:01.114
  I0801 02:49:01.114667 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 08/01/25 02:49:15.323
  I0801 02:49:17.371769 23 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0801 02:49:17.371812 23 networking.go:42] Breadth first check of 10.52.1.13 on host 10.42.0.16...
  I0801 02:49:17.374820 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.52.1.14:9080/dial?request=hostname&protocol=http&host=10.52.1.13&port=8083&tries=1'] Namespace:pod-network-test-1347 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:49:17.374862 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:49:17.374929 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/pod-network-test-1347/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.52.1.14%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.52.1.13%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0801 02:49:17.522316 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:49:17.522397 23 utils.go:355] Waiting for responses: map[]
  I0801 02:49:17.522411 23 utils.go:359] reached 10.52.1.13 after 0/1 tries
  I0801 02:49:17.522426 23 networking.go:42] Breadth first check of 10.52.0.176 on host 10.42.0.18...
  I0801 02:49:17.529423 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.52.1.14:9080/dial?request=hostname&protocol=http&host=10.52.0.176&port=8083&tries=1'] Namespace:pod-network-test-1347 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 02:49:17.529637 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 02:49:17.529751 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/pod-network-test-1347/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.52.1.14%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.52.0.176%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0801 02:49:17.628659 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 02:49:17.628741 23 utils.go:355] Waiting for responses: map[]
  I0801 02:49:17.628757 23 utils.go:359] reached 10.52.0.176 after 0/1 tries
  I0801 02:49:17.628770 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0801 02:49:17.628921 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1347" for this suite. @ 08/01/25 02:49:17.632
â€¢ [16.570 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 08/01/25 02:49:17.646
  I0801 02:49:17.646928 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename watch @ 08/01/25 02:49:17.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:49:17.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:49:17.68
  STEP: creating a new configmap @ 08/01/25 02:49:17.684
  STEP: modifying the configmap once @ 08/01/25 02:49:17.695
  STEP: modifying the configmap a second time @ 08/01/25 02:49:17.717
  STEP: deleting the configmap @ 08/01/25 02:49:17.76
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 08/01/25 02:49:17.77
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 08/01/25 02:49:17.771
  I0801 02:49:17.771754 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1950  6106d067-e46c-435a-bf79-00f1e29c46af 27922 0 2025-08-01 02:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-08-01 02:49:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 02:49:17.771910 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1950  6106d067-e46c-435a-bf79-00f1e29c46af 27923 0 2025-08-01 02:49:17 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-08-01 02:49:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 02:49:17.772038 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1950" for this suite. @ 08/01/25 02:49:17.775
â€¢ [0.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 08/01/25 02:49:17.785
  I0801 02:49:17.785179 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename dns @ 08/01/25 02:49:17.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:49:17.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:49:17.811
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7248.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-7248.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 08/01/25 02:49:17.815
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7248.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-7248.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 08/01/25 02:49:17.815
  STEP: creating a pod to probe /etc/hosts @ 08/01/25 02:49:17.815
  STEP: submitting the pod to kubernetes @ 08/01/25 02:49:17.815
  STEP: retrieving the pod @ 08/01/25 02:49:21.888
  STEP: looking for the results for each expected name from probers @ 08/01/25 02:49:21.894
  I0801 02:49:21.916455 23 dns_common.go:546] DNS probes using dns-7248/dns-test-95af9e40-a6e6-4909-8539-620e4df4a6fb succeeded

  STEP: deleting the pod @ 08/01/25 02:49:21.916
  I0801 02:49:21.951166 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7248" for this suite. @ 08/01/25 02:49:21.956
â€¢ [4.181 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 08/01/25 02:49:21.967
  I0801 02:49:21.967168 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubelet-test @ 08/01/25 02:49:21.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:49:21.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:49:22.013
  I0801 02:49:26.072139 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4523" for this suite. @ 08/01/25 02:49:26.074
â€¢ [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 08/01/25 02:49:26.085
  I0801 02:49:26.085322 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename svcaccounts @ 08/01/25 02:49:26.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:49:26.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:49:26.16
  STEP: Creating a Serviceaccount "e2e-sa-mljjj" in namespace "svcaccounts-907" @ 08/01/25 02:49:26.165
  STEP: Creating a ServiceaccountToken "e2e-sa-mljjj" in namespace "svcaccounts-907" @ 08/01/25 02:49:26.176
  STEP: Creating a TokenReview for "e2e-sa-mljjj" in namespace "svcaccounts-907" @ 08/01/25 02:49:26.185
  I0801 02:49:26.189285 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-907" for this suite. @ 08/01/25 02:49:26.193
â€¢ [0.118 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 08/01/25 02:49:26.203
  I0801 02:49:26.203547 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename subpath @ 08/01/25 02:49:26.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:49:26.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:49:26.249
  STEP: Setting up data @ 08/01/25 02:49:26.253
  STEP: Creating pod pod-subpath-test-configmap-8q9v @ 08/01/25 02:49:26.279
  STEP: Creating a pod to test atomic-volume-subpath @ 08/01/25 02:49:26.279
  STEP: Saw pod success @ 08/01/25 02:49:50.399
  I0801 02:49:50.403723 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-subpath-test-configmap-8q9v container test-container-subpath-configmap-8q9v: <nil>
  STEP: delete the pod @ 08/01/25 02:49:50.425
  STEP: Deleting pod pod-subpath-test-configmap-8q9v @ 08/01/25 02:49:50.468
  I0801 02:49:50.468855 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-8q9v" in namespace "subpath-1368"
  I0801 02:49:50.471653 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1368" for this suite. @ 08/01/25 02:49:50.475
â€¢ [24.281 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 08/01/25 02:49:50.484
  I0801 02:49:50.484865 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 02:49:50.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:49:50.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:49:50.534
  STEP: creating a Service @ 08/01/25 02:49:50.543
  STEP: watching for the Service to be added @ 08/01/25 02:49:50.618
  I0801 02:49:50.621474 23 service.go:3456] Found Service test-service-59jkx in namespace services-5752 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32736}]
  I0801 02:49:50.621626 23 service.go:3463] Service test-service-59jkx created
  STEP: Getting /status @ 08/01/25 02:49:50.621
  I0801 02:49:50.627791 23 service.go:3474] Service test-service-59jkx has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 08/01/25 02:49:50.627
  STEP: watching for the Service to be patched @ 08/01/25 02:49:50.637
  I0801 02:49:50.639635 23 service.go:3497] observed Service test-service-59jkx in namespace services-5752 with annotations: map[] & LoadBalancer: {[]}
  I0801 02:49:50.639695 23 service.go:3500] Found Service test-service-59jkx in namespace services-5752 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000d82e30 []}]}
  I0801 02:49:50.639716 23 service.go:3507] Service test-service-59jkx has service status patched
  STEP: updating the ServiceStatus @ 08/01/25 02:49:50.639
  I0801 02:49:50.655950 23 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 08/01/25 02:49:50.656
  I0801 02:49:50.658086 23 service.go:3538] Observed Service test-service-59jkx in namespace services-5752 with annotations: map[] & Conditions: []
  I0801 02:49:50.658136 23 service.go:3549] Observed Service test-service-59jkx in namespace services-5752 with annotations: map[patchedstatus:true] & Conditions: []
  I0801 02:49:50.658175 23 service.go:3545] Found Service test-service-59jkx in namespace services-5752 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0801 02:49:50.658194 23 service.go:3556] Service test-service-59jkx has service status updated
  STEP: patching the service @ 08/01/25 02:49:50.658
  STEP: watching for the Service to be patched @ 08/01/25 02:49:50.681
  I0801 02:49:50.689094 23 service.go:3579] observed Service test-service-59jkx in namespace services-5752 with labels: map[test-service-static:true]
  I0801 02:49:50.689282 23 service.go:3579] observed Service test-service-59jkx in namespace services-5752 with labels: map[test-service-static:true]
  I0801 02:49:50.689341 23 service.go:3579] observed Service test-service-59jkx in namespace services-5752 with labels: map[test-service-static:true]
  I0801 02:49:50.689386 23 service.go:3582] Found Service test-service-59jkx in namespace services-5752 with labels: map[test-service:patched test-service-static:true]
  I0801 02:49:50.689407 23 service.go:3589] Service test-service-59jkx patched
  STEP: deleting the service @ 08/01/25 02:49:50.689
  STEP: watching for the Service to be deleted @ 08/01/25 02:49:50.737
  I0801 02:49:50.739926 23 service.go:3613] Observed event: ADDED
  I0801 02:49:50.739977 23 service.go:3613] Observed event: MODIFIED
  I0801 02:49:50.740244 23 service.go:3613] Observed event: MODIFIED
  I0801 02:49:50.740272 23 service.go:3613] Observed event: MODIFIED
  I0801 02:49:50.740299 23 service.go:3609] Found Service test-service-59jkx in namespace services-5752 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0801 02:49:50.740318 23 service.go:3618] Service test-service-59jkx deleted
  I0801 02:49:50.740464 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5752" for this suite. @ 08/01/25 02:49:50.745
â€¢ [0.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 08/01/25 02:49:50.755
  I0801 02:49:50.755517 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 02:49:50.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:49:50.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:49:50.804
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-9573 @ 08/01/25 02:49:50.809
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 08/01/25 02:49:50.85
  STEP: creating service externalsvc in namespace services-9573 @ 08/01/25 02:49:50.85
  I0801 02:49:50.916237 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the ClusterIP service to type=ExternalName @ 08/01/25 02:49:52.928
  I0801 02:49:52.963764 23 resource.go:361] Creating new exec pod
  I0801 02:49:55.001153 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-9573 exec execpodn829g -- /bin/sh -x -c nslookup clusterip-service.services-9573.svc.cluster.local'
  I0801 02:49:55.296353 23 builder.go:146] stderr: "+ nslookup clusterip-service.services-9573.svc.cluster.local\n"
  I0801 02:49:55.296417 23 builder.go:147] stdout: "Server:\t\t10.53.0.10\nAddress:\t10.53.0.10#53\n\nclusterip-service.services-9573.svc.cluster.local\tcanonical name = externalsvc.services-9573.svc.cluster.local.\nName:\texternalsvc.services-9573.svc.cluster.local\nAddress: 10.53.217.205\n\n"
  I0801 02:49:55.376642 23 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0801 02:49:55.450898 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9573" for this suite. @ 08/01/25 02:49:55.463
â€¢ [4.723 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 08/01/25 02:49:55.489
  I0801 02:49:55.489568 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename namespaces @ 08/01/25 02:49:55.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:49:55.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:49:55.579
  STEP: Updating Namespace "namespaces-2381" @ 08/01/25 02:49:55.584
  I0801 02:49:55.604889 23 namespace.go:390] Namespace "namespaces-2381" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"76f7947d-4280-45a5-99d3-e8336dd2b590", "kubernetes.io/metadata.name":"namespaces-2381", "namespaces-2381":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0801 02:49:55.605331 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2381" for this suite. @ 08/01/25 02:49:55.609
â€¢ [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 08/01/25 02:49:55.62
  I0801 02:49:55.620292 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename resourcequota @ 08/01/25 02:49:55.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:49:55.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:49:55.707
  STEP: Counting existing ResourceQuota @ 08/01/25 02:49:55.71
  STEP: Creating a ResourceQuota @ 08/01/25 02:50:00.767
  STEP: Ensuring resource quota status is calculated @ 08/01/25 02:50:00.812
  STEP: Creating a ReplicationController @ 08/01/25 02:50:02.816
  STEP: Ensuring resource quota status captures replication controller creation @ 08/01/25 02:50:02.851
  STEP: Deleting a ReplicationController @ 08/01/25 02:50:04.864
  STEP: Ensuring resource quota status released usage @ 08/01/25 02:50:04.9
  I0801 02:50:06.905282 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2751" for this suite. @ 08/01/25 02:50:06.908
â€¢ [11.301 seconds]
------------------------------
S
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 08/01/25 02:50:06.92
  I0801 02:50:06.921007 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 02:50:06.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:50:06.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:50:06.977
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 08/01/25 02:50:06.991
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 08/01/25 02:50:07.034
  STEP: Ensure that the job reaches completions @ 08/01/25 02:50:11.056
  STEP: Verifying that the job status to ensure correct final state @ 08/01/25 02:50:11.062
  I0801 02:50:11.068342 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6235" for this suite. @ 08/01/25 02:50:11.071
â€¢ [4.164 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 08/01/25 02:50:11.085
  I0801 02:50:11.085555 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename deployment @ 08/01/25 02:50:11.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:50:11.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:50:11.145
  I0801 02:50:11.154392 23 deployment.go:1664] Creating simple deployment test-new-deployment
  I0801 02:50:11.202139 23 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 08/01/25 02:50:13.244
  STEP: updating a scale subresource @ 08/01/25 02:50:13.255
  STEP: verifying the deployment Spec.Replicas was modified @ 08/01/25 02:50:13.266
  STEP: Patch a scale subresource @ 08/01/25 02:50:13.289
  I0801 02:50:13.361624 23 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6095",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edf3c33c-747c-42e2-9330-84304f2afb2e",
      ResourceVersion: (string) (len=5) "28421",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613411,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0801 02:50:13.367082 23 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6095",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4bd8811b-7ae4-4a32-9565-6259decac18f",
      ResourceVersion: (string) (len=5) "28422",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613411,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "edf3c33c-747c-42e2-9330-84304f2afb2e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 64 66 33 63 33  33 63 2d 37 34 37 63 2d  |\"edf3c33c-747c-|
              00000120  34 32 65 32 2d 39 33 33  30 2d 38 34 33 30 34 66  |42e2-9330-84304f|
              00000130  32 61 66 62 32 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |2afb2e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0801 02:50:13.400554 23 deployment.go:68] Pod "test-new-deployment-685b768f58-d77pt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-d77pt",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6095",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7ae7710-81bc-405c-bccd-de90fd8e40a6",
      ResourceVersion: (string) (len=5) "28424",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613413,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bd8811b-7ae4-4a32-9565-6259decac18f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  64 38 38 31 31 62 2d 37  |d\":\"4bd8811b-7|
              00000090  61 65 34 2d 34 61 33 32  2d 39 35 36 35 2d 36 32  |ae4-4a32-9565-62|
              000000a0  35 39 64 65 63 61 63 31  38 66 5c 22 7d 22 3a 7b  |59decac18f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qhs25",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qhs25",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613413,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qhs25",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:50:13.416547 23 deployment.go:68] Pod "test-new-deployment-685b768f58-xwpb7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-xwpb7",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6095",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c53add9-ccc5-4b34-8a55-090008590fd3",
      ResourceVersion: (string) (len=5) "28408",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613411,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "4bd8811b-7ae4-4a32-9565-6259decac18f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  64 38 38 31 31 62 2d 37  |d\":\"4bd8811b-7|
              00000090  61 65 34 2d 34 61 33 32  2d 39 35 36 35 2d 36 32  |ae4-4a32-9565-62|
              000000a0  35 39 64 65 63 61 63 31  38 66 5c 22 7d 22 3a 7b  |59decac18f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 31 2e 32 31  5c 22 7d 22 3a 7b 22 2e  |.52.1.21\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qsdcx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qsdcx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.16",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.16"
        }
      },
      PodIP: (string) (len=10) "10.52.1.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.52.1.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613411,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889613412,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9c88a2d1e043e2c5ebd0e6450520e6bc0ccd0093155d0f8625d56fea1fc8544d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qsdcx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:50:13.419219 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6095" for this suite. @ 08/01/25 02:50:13.434
â€¢ [2.378 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 08/01/25 02:50:13.464
  I0801 02:50:13.464327 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/01/25 02:50:13.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:50:13.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:50:13.529
  I0801 02:50:13.533890 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 02:50:20.039535 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7261" for this suite. @ 08/01/25 02:50:20.042
â€¢ [6.588 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 08/01/25 02:50:20.052
  I0801 02:50:20.052440 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename svcaccounts @ 08/01/25 02:50:20.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:50:20.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:50:20.089
  STEP: Creating a pod to test service account token:  @ 08/01/25 02:50:20.097
  STEP: Saw pod success @ 08/01/25 02:50:24.131
  I0801 02:50:24.135801 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod test-pod-6f25fd06-2557-434f-86f8-d908cc271a02 container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 02:50:24.154
  I0801 02:50:24.193213 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9663" for this suite. @ 08/01/25 02:50:24.2
â€¢ [4.177 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 08/01/25 02:50:24.23
  I0801 02:50:24.230157 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 02:50:24.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:50:24.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:50:24.262
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 08/01/25 02:50:24.267
  STEP: Saw pod success @ 08/01/25 02:50:28.316
  I0801 02:50:28.319269 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-651893d4-eed9-433b-b77d-ff6a2c01efb8 container test-container: <nil>
  STEP: delete the pod @ 08/01/25 02:50:28.326
  I0801 02:50:28.364664 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4314" for this suite. @ 08/01/25 02:50:28.368
â€¢ [4.155 seconds]
------------------------------
SSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 08/01/25 02:50:28.384
  I0801 02:50:28.384811 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename ingressclass @ 08/01/25 02:50:28.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:50:28.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:50:28.441
  STEP: getting /apis @ 08/01/25 02:50:28.445
  STEP: getting /apis/networking.k8s.io @ 08/01/25 02:50:28.45
  STEP: getting /apis/networking.k8s.iov1 @ 08/01/25 02:50:28.451
  STEP: creating @ 08/01/25 02:50:28.453
  STEP: getting @ 08/01/25 02:50:28.515
  STEP: listing @ 08/01/25 02:50:28.534
  STEP: watching @ 08/01/25 02:50:28.538
  I0801 02:50:28.538496 23 ingressclass.go:348] starting watch
  STEP: patching @ 08/01/25 02:50:28.54
  STEP: updating @ 08/01/25 02:50:28.55
  I0801 02:50:28.561518 23 ingressclass.go:364] waiting for watch events with expected annotations
  I0801 02:50:28.561716 23 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 08/01/25 02:50:28.561
  STEP: deleting a collection @ 08/01/25 02:50:28.578
  I0801 02:50:28.602319 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9098" for this suite. @ 08/01/25 02:50:28.605
â€¢ [0.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 08/01/25 02:50:28.62
  I0801 02:50:28.620766 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 02:50:28.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:50:28.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:50:28.677
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 08/01/25 02:50:28.684
  STEP: Awaiting for the job to fail as all indexes are failed @ 08/01/25 02:50:28.699
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 08/01/25 02:50:34.725
  I0801 02:50:34.730240 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5832" for this suite. @ 08/01/25 02:50:34.734
â€¢ [6.145 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 08/01/25 02:50:34.766
  I0801 02:50:34.766131 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/01/25 02:50:34.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:50:34.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:50:34.807
  STEP: set up a multi version CRD @ 08/01/25 02:50:34.822
  I0801 02:50:34.823258 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: mark a version not serverd @ 08/01/25 02:50:39.161
  STEP: check the unserved version gets removed @ 08/01/25 02:50:39.206
  STEP: check the other version is not changed @ 08/01/25 02:50:40.272
  I0801 02:50:43.517700 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6931" for this suite. @ 08/01/25 02:50:43.525
â€¢ [8.772 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 08/01/25 02:50:43.538
  I0801 02:50:43.538277 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:50:43.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:50:43.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:50:43.578
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 02:50:43.583
  STEP: Saw pod success @ 08/01/25 02:50:47.626
  I0801 02:50:47.629406 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-ccfd7706-9384-4838-a5db-d2950acfe6c3 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 02:50:47.635
  I0801 02:50:47.666471 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-103" for this suite. @ 08/01/25 02:50:47.67
â€¢ [4.142 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 08/01/25 02:50:47.68
  I0801 02:50:47.680782 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pv @ 08/01/25 02:50:47.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:50:47.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:50:47.741
  STEP: Creating initial PV and PVC @ 08/01/25 02:50:47.75
  I0801 02:50:47.750094 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2396" @ 08/01/25 02:50:47.783
  STEP: Listing PVCs in namespace "pv-2396" @ 08/01/25 02:50:47.787
  STEP: Reading "pvc-4lkwr" Status @ 08/01/25 02:50:47.793
  STEP: Reading "pv-2396-bsrw4" Status @ 08/01/25 02:50:47.798
  STEP: Patching "pvc-4lkwr" Status @ 08/01/25 02:50:47.815
  STEP: Patching "pv-2396-bsrw4" Status @ 08/01/25 02:50:47.855
  STEP: Updating "pvc-4lkwr" Status @ 08/01/25 02:50:47.87
  STEP: Updating "pv-2396-bsrw4" Status @ 08/01/25 02:50:47.896
  I0801 02:50:47.916607 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0801 02:50:47.916656 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-4lkwr"
  I0801 02:50:47.938216 23 pv.go:193] Deleting PersistentVolume "pv-2396-bsrw4"
  I0801 02:50:47.948995 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2396" for this suite. @ 08/01/25 02:50:47.959
â€¢ [0.295 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 08/01/25 02:50:47.975
  I0801 02:50:47.975562 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 02:50:47.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:50:48.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:50:48.023
  STEP: Creating a pod to test emptydir volume type on node default medium @ 08/01/25 02:50:48.027
  STEP: Saw pod success @ 08/01/25 02:50:52.061
  I0801 02:50:52.064646 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-58109442-c2e7-4c8f-b8d2-e7d9eb0e1542 container test-container: <nil>
  STEP: delete the pod @ 08/01/25 02:50:52.07
  I0801 02:50:52.103478 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7725" for this suite. @ 08/01/25 02:50:52.123
â€¢ [4.163 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 08/01/25 02:50:52.138
  I0801 02:50:52.138402 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-probe @ 08/01/25 02:50:52.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:50:52.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:50:52.181
  STEP: Creating pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035 @ 08/01/25 02:50:52.185
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/01/25 02:50:54.21
  I0801 02:50:54.214607 23 container_probe.go:1748] Initial restart count of pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 is 0
  I0801 02:50:54.217096 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:50:56.221921 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:50:58.233610 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:00.237437 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:02.241857 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:04.246738 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:06.264297 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:08.269277 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:10.279888 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:12.283198 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:14.287014 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:16.290888 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:18.298226 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:20.301599 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:22.306323 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:24.316299 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:26.321864 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:28.325328 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:30.334151 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:32.341744 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:34.346942 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:36.355127 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:38.358781 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:40.364580 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:42.368771 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:44.375363 23 container_probe.go:1758] Get pod busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 in namespace container-probe-1035
  I0801 02:51:44.375849 23 container_probe.go:1762] Restart count of pod container-probe-1035/busybox-2481d96a-e282-439a-8dd6-f8d393d33d43 is now 1 (50.161193593s elapsed)
  STEP: deleting the pod @ 08/01/25 02:51:44.375
  I0801 02:51:44.425254 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1035" for this suite. @ 08/01/25 02:51:44.431
â€¢ [52.302 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 08/01/25 02:51:44.44
  I0801 02:51:44.440998 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename endpointslice @ 08/01/25 02:51:44.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:51:44.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:51:44.469
  I0801 02:51:44.487698      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 02:51:44.490520 23 endpointslice.go:1045] Endpoints addresses: [10.42.0.18] , ports: [6443]
  I0801 02:51:44.490571 23 endpointslice.go:1075] EndpointSlices addresses: [10.42.0.18] , ports: [6443]
  I0801 02:51:44.490664 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4605" for this suite. @ 08/01/25 02:51:44.533
â€¢ [0.108 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 08/01/25 02:51:44.548
  I0801 02:51:44.548919 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pods @ 08/01/25 02:51:44.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:51:44.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:51:44.573
  I0801 02:51:44.578656 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: creating the pod @ 08/01/25 02:51:44.579
  STEP: submitting the pod to kubernetes @ 08/01/25 02:51:44.579
  I0801 02:51:46.715066 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8301" for this suite. @ 08/01/25 02:51:46.718
â€¢ [2.179 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 08/01/25 02:51:46.728
  I0801 02:51:46.728280 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename events @ 08/01/25 02:51:46.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:51:46.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:51:46.763
  STEP: Create set of events @ 08/01/25 02:51:46.767
  I0801 02:51:46.784726 23 core_events.go:198] created test-event-1
  I0801 02:51:46.793356 23 core_events.go:198] created test-event-2
  I0801 02:51:46.804050 23 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 08/01/25 02:51:46.804
  STEP: delete collection of events @ 08/01/25 02:51:46.806
  I0801 02:51:46.806701 23 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 08/01/25 02:51:46.832
  I0801 02:51:46.832602 23 core_events.go:230] requesting list of events to confirm quantity
  I0801 02:51:46.836241 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5737" for this suite. @ 08/01/25 02:51:46.839
â€¢ [0.121 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 08/01/25 02:51:46.849
  I0801 02:51:46.849131 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename dns @ 08/01/25 02:51:46.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:51:46.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:51:46.891
  STEP: Creating a test headless service @ 08/01/25 02:51:46.895
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4501.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-4501.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 08/01/25 02:51:46.909
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4501.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-4501.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 08/01/25 02:51:46.909
  STEP: creating a pod to probe DNS @ 08/01/25 02:51:46.909
  STEP: submitting the pod to kubernetes @ 08/01/25 02:51:46.909
  STEP: retrieving the pod @ 08/01/25 02:51:50.968
  STEP: looking for the results for each expected name from probers @ 08/01/25 02:51:50.98
  I0801 02:51:51.025303 23 dns_common.go:546] DNS probes using dns-4501/dns-test-f7e56a07-e91d-4437-bdd4-28f0d3e0bdae succeeded

  STEP: deleting the pod @ 08/01/25 02:51:51.025
  STEP: deleting the test headless service @ 08/01/25 02:51:51.092
  I0801 02:51:51.118018 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4501" for this suite. @ 08/01/25 02:51:51.125
â€¢ [4.312 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 08/01/25 02:51:51.161
  I0801 02:51:51.161629 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename cronjob @ 08/01/25 02:51:51.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:51:51.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:51:51.189
  STEP: Creating a ReplaceConcurrent cronjob @ 08/01/25 02:51:51.193
  STEP: Ensuring a job is scheduled @ 08/01/25 02:51:51.214
  STEP: Ensuring exactly one is scheduled @ 08/01/25 02:52:01.22
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 08/01/25 02:52:01.223
  STEP: Ensuring the job is replaced with a new one @ 08/01/25 02:52:01.226
  STEP: Removing cronjob @ 08/01/25 02:53:01.231
  I0801 02:53:01.240457 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-181" for this suite. @ 08/01/25 02:53:01.243
â€¢ [70.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 08/01/25 02:53:01.263
  I0801 02:53:01.263864 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename security-context-test @ 08/01/25 02:53:01.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:53:01.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:53:01.306
  I0801 02:53:05.367179 23 security_context.go:619] Got logs for pod "busybox-privileged-false-db0c3d59-e2d2-4d20-92c1-43a1385694f2": "ip: RTNETLINK answers: Operation not permitted\n"
  I0801 02:53:05.367376 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9192" for this suite. @ 08/01/25 02:53:05.373
â€¢ [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 08/01/25 02:53:05.399
  I0801 02:53:05.399841 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:53:05.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:53:05.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:53:05.441
  STEP: Creating secret with name projected-secret-test-dae2e302-8354-44f3-8e83-575e79592642 @ 08/01/25 02:53:05.453
  STEP: Creating a pod to test consume secrets @ 08/01/25 02:53:05.472
  STEP: Saw pod success @ 08/01/25 02:53:09.55
  I0801 02:53:09.554984 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-projected-secrets-fffeb67e-64ce-4a7c-989a-01cd7b5b0610 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 02:53:09.563
  I0801 02:53:09.601534 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9438" for this suite. @ 08/01/25 02:53:09.605
â€¢ [4.216 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 08/01/25 02:53:09.615
  I0801 02:53:09.615861 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 02:53:09.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:53:09.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:53:09.65
  STEP: Setting up server cert @ 08/01/25 02:53:09.69
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 02:53:10.969
  STEP: Deploying the webhook pod @ 08/01/25 02:53:10.984
  STEP: Wait for the deployment to be ready @ 08/01/25 02:53:11.033
  I0801 02:53:11.038913 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 08/01/25 02:53:13.057
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 02:53:13.091
  I0801 02:53:14.091775 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 08/01/25 02:53:14.098
  STEP: create a pod that should be denied by the webhook @ 08/01/25 02:53:14.157
  STEP: create a pod that causes the webhook to hang @ 08/01/25 02:53:14.176
  STEP: create a configmap that should be denied by the webhook @ 08/01/25 02:53:24.189
  STEP: create a configmap that should be admitted by the webhook @ 08/01/25 02:53:24.201
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 08/01/25 02:53:24.247
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 08/01/25 02:53:24.263
  STEP: create a namespace that bypass the webhook @ 08/01/25 02:53:24.272
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 08/01/25 02:53:24.291
  I0801 02:53:24.504223 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9054" for this suite. @ 08/01/25 02:53:24.529
  STEP: Destroying namespace "webhook-markers-6458" for this suite. @ 08/01/25 02:53:24.545
  STEP: Destroying namespace "exempted-namespace-980" for this suite. @ 08/01/25 02:53:24.555
â€¢ [14.951 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 08/01/25 02:53:24.567
  I0801 02:53:24.567622 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename replication-controller @ 08/01/25 02:53:24.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:53:24.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:53:24.666
  STEP: Given a ReplicationController is created @ 08/01/25 02:53:24.671
  STEP: When the matched label of one of its pods change @ 08/01/25 02:53:24.691
  I0801 02:53:24.694073 23 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  I0801 02:53:29.698481 23 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 08/01/25 02:53:29.72
  I0801 02:53:30.731782 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2105" for this suite. @ 08/01/25 02:53:30.735
â€¢ [6.182 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 08/01/25 02:53:30.752
  I0801 02:53:30.752354 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pods @ 08/01/25 02:53:30.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:53:30.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:53:30.812
  STEP: creating a Pod with a static label @ 08/01/25 02:53:30.819
  STEP: watching for Pod to be ready @ 08/01/25 02:53:30.841
  I0801 02:53:30.843553 23 pods.go:947] observed Pod pod-test in namespace pods-8105 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0801 02:53:30.853349 23 pods.go:947] observed Pod pod-test in namespace pods-8105 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:53:30 +0000 UTC  }]
  I0801 02:53:30.948649 23 pods.go:947] observed Pod pod-test in namespace pods-8105 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:53:30 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:53:30 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:53:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:53:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:53:30 +0000 UTC  }]
  I0801 02:53:32.618912 23 pods.go:950] Found Pod pod-test in namespace pods-8105 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:53:32 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:53:30 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:53:32 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:53:32 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-08-01 02:53:30 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 08/01/25 02:53:32.622
  STEP: getting the Pod and ensuring that it's patched @ 08/01/25 02:53:32.653
  STEP: replacing the Pod's status Ready condition to False @ 08/01/25 02:53:32.658
  STEP: check the Pod again to ensure its Ready conditions are False @ 08/01/25 02:53:32.681
  STEP: deleting the Pod via a Collection with a LabelSelector @ 08/01/25 02:53:32.681
  STEP: watching for the Pod to be deleted @ 08/01/25 02:53:32.707
  I0801 02:53:32.711643 23 pods.go:1060] observed event type MODIFIED
  I0801 02:53:33.557267 23 pods.go:1060] observed event type MODIFIED
  I0801 02:53:34.610803 23 pods.go:1060] observed event type MODIFIED
  I0801 02:53:34.785215 23 pods.go:1060] observed event type MODIFIED
  I0801 02:53:35.626575 23 pods.go:1060] observed event type MODIFIED
  I0801 02:53:35.652080 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8105" for this suite. @ 08/01/25 02:53:35.657
â€¢ [4.923 seconds]
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 08/01/25 02:53:35.673
  I0801 02:53:35.673558 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename gc @ 08/01/25 02:53:35.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:53:35.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:53:35.707
  STEP: create the rc1 @ 08/01/25 02:53:35.767
  STEP: create the rc2 @ 08/01/25 02:53:35.778
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 08/01/25 02:53:42.053
  STEP: delete the rc simpletest-rc-to-be-deleted @ 08/01/25 02:53:54.779
  STEP: wait for the rc to be deleted @ 08/01/25 02:53:55.143
  I0801 02:54:00.608012 23 garbage_collector.go:770] 73 pods remaining
  I0801 02:54:00.608075 23 garbage_collector.go:777] 69 pods has nil DeletionTimestamp
  I0801 02:54:00.608086 23 garbage_collector.go:778] 
  STEP: Gathering metrics @ 08/01/25 02:54:05.239
  W0801 02:54:05.430603      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0801 02:54:05.430827 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0801 02:54:05.431261 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2cjmp" in namespace "gc-5503"
  I0801 02:54:05.813846 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2tx89" in namespace "gc-5503"
  I0801 02:54:06.475605 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4n7fw" in namespace "gc-5503"
  I0801 02:54:06.997918 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4vwsm" in namespace "gc-5503"
  I0801 02:54:07.488831 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-52c6f" in namespace "gc-5503"
  I0801 02:54:08.363660 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-54sdn" in namespace "gc-5503"
  I0801 02:54:08.804535 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-57vxt" in namespace "gc-5503"
  I0801 02:54:09.117339 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5g8b5" in namespace "gc-5503"
  I0801 02:54:09.319063 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5hpqk" in namespace "gc-5503"
  I0801 02:54:09.484548 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5tk65" in namespace "gc-5503"
  I0801 02:54:09.949120 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5xdsq" in namespace "gc-5503"
  I0801 02:54:10.584995 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-679lf" in namespace "gc-5503"
  I0801 02:54:11.062252 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-69blw" in namespace "gc-5503"
  I0801 02:54:11.591664 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6tpb6" in namespace "gc-5503"
  I0801 02:54:12.077968 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6w6kf" in namespace "gc-5503"
  I0801 02:54:12.314531 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-798l5" in namespace "gc-5503"
  I0801 02:54:12.843799 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7ppcf" in namespace "gc-5503"
  I0801 02:54:13.441046 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-867rb" in namespace "gc-5503"
  I0801 02:54:13.698304 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-86vd5" in namespace "gc-5503"
  I0801 02:54:14.223398 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8l46d" in namespace "gc-5503"
  I0801 02:54:14.565079 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8mvl4" in namespace "gc-5503"
  I0801 02:54:14.896030 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-94m72" in namespace "gc-5503"
  I0801 02:54:15.067889 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-99l48" in namespace "gc-5503"
  I0801 02:54:15.546519 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9d84s" in namespace "gc-5503"
  I0801 02:54:15.748355 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b6l97" in namespace "gc-5503"
  I0801 02:54:15.945821 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b9pst" in namespace "gc-5503"
  I0801 02:54:16.182933 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bkmg5" in namespace "gc-5503"
  I0801 02:54:16.353053 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bqk2k" in namespace "gc-5503"
  I0801 02:54:16.626182 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bqvqr" in namespace "gc-5503"
  I0801 02:54:16.868262 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bs7jr" in namespace "gc-5503"
  I0801 02:54:17.242933 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-btjzv" in namespace "gc-5503"
  I0801 02:54:17.338183 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c8jtc" in namespace "gc-5503"
  I0801 02:54:17.817796 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c8xn6" in namespace "gc-5503"
  I0801 02:54:18.002963 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ch5qw" in namespace "gc-5503"
  I0801 02:54:18.167817 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cjp5k" in namespace "gc-5503"
  I0801 02:54:18.423346 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cwlfn" in namespace "gc-5503"
  I0801 02:54:19.148606 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d4whk" in namespace "gc-5503"
  I0801 02:54:19.555231 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d5rwf" in namespace "gc-5503"
  I0801 02:54:19.830801 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dfff8" in namespace "gc-5503"
  I0801 02:54:20.099113 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-djfhl" in namespace "gc-5503"
  I0801 02:54:20.516257 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dlj2w" in namespace "gc-5503"
  I0801 02:54:20.603185 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dwc8l" in namespace "gc-5503"
  I0801 02:54:20.914588 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f96vm" in namespace "gc-5503"
  I0801 02:54:21.484013 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-frt86" in namespace "gc-5503"
  I0801 02:54:21.895892 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g47vn" in namespace "gc-5503"
  I0801 02:54:22.840430 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gk8k5" in namespace "gc-5503"
  I0801 02:54:23.933386 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h945m" in namespace "gc-5503"
  I0801 02:54:24.459067 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hgb9n" in namespace "gc-5503"
  I0801 02:54:25.058852 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hjpxs" in namespace "gc-5503"
  I0801 02:54:25.626364 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hnlwb" in namespace "gc-5503"
  I0801 02:54:26.989863 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5503" for this suite. @ 08/01/25 02:54:27.002
â€¢ [51.968 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 08/01/25 02:54:27.642
  I0801 02:54:27.643020 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl-logs @ 08/01/25 02:54:27.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:54:28.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:54:28.824
  STEP: creating a pod @ 08/01/25 02:54:28.849
  I0801 02:54:28.850075 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-logs-6787 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0801 02:54:29.733391 23 builder.go:146] stderr: ""
  I0801 02:54:29.733444 23 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 08/01/25 02:54:29.733
  I0801 02:54:29.733559 23 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0801 02:55:18.522570 23 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 08/01/25 02:55:18.522
  I0801 02:55:18.522963 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-logs-6787 logs logs-generator logs-generator'
  I0801 02:55:19.007032 23 builder.go:146] stderr: ""
  I0801 02:55:19.007084 23 builder.go:147] stdout: "I0801 02:55:17.673916       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/q882 226\nI0801 02:55:17.873995       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/q5lf 574\nI0801 02:55:18.075440       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/pv7j 311\nI0801 02:55:18.274928       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/cc45 278\nI0801 02:55:18.474486       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/mpgd 359\nI0801 02:55:18.674749       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/c7fj 365\nI0801 02:55:18.874425       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/6mtw 564\n"
  STEP: limiting log lines @ 08/01/25 02:55:19.007
  I0801 02:55:19.007155 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-logs-6787 logs logs-generator logs-generator --tail=1'
  I0801 02:55:19.244149 23 builder.go:146] stderr: ""
  I0801 02:55:19.244217 23 builder.go:147] stdout: "I0801 02:55:19.074065       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/mh5x 314\n"
  I0801 02:55:19.244234 23 logs.go:180] got output "I0801 02:55:19.074065       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/mh5x 314\n"
  STEP: limiting log bytes @ 08/01/25 02:55:19.244
  I0801 02:55:19.244333 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-logs-6787 logs logs-generator logs-generator --limit-bytes=1'
  I0801 02:55:19.354257 23 builder.go:146] stderr: ""
  I0801 02:55:19.354388 23 builder.go:147] stdout: "I"
  I0801 02:55:19.354401 23 logs.go:186] got output "I"
  STEP: exposing timestamps @ 08/01/25 02:55:19.354
  I0801 02:55:19.354483 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-logs-6787 logs logs-generator logs-generator --tail=1 --timestamps'
  I0801 02:55:19.532795 23 builder.go:146] stderr: ""
  I0801 02:55:19.532857 23 builder.go:147] stdout: "2025-08-01T02:55:19.475711139Z I0801 02:55:19.474823       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/8g8z 386\n"
  I0801 02:55:19.532875 23 logs.go:192] got output "2025-08-01T02:55:19.475711139Z I0801 02:55:19.474823       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/8g8z 386\n"
  STEP: restricting to a time range @ 08/01/25 02:55:19.532
  I0801 02:55:22.033477 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-logs-6787 logs logs-generator logs-generator --since=1s'
  I0801 02:55:22.172876 23 builder.go:146] stderr: ""
  I0801 02:55:22.172952 23 builder.go:147] stdout: "I0801 02:55:21.274510       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/l2c9 438\nI0801 02:55:21.474836       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/wg9 532\nI0801 02:55:21.674528       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/57h 470\nI0801 02:55:21.874733       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/dkc 216\nI0801 02:55:22.074381       1 logs_generator.go:76] 22 GET /api/v1/namespaces/kube-system/pods/ljf 439\n"
  I0801 02:55:22.173013 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-logs-6787 logs logs-generator logs-generator --since=24h'
  I0801 02:55:22.287454 23 builder.go:146] stderr: ""
  I0801 02:55:22.287522 23 builder.go:147] stdout: "I0801 02:55:17.673916       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/q882 226\nI0801 02:55:17.873995       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/q5lf 574\nI0801 02:55:18.075440       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/pv7j 311\nI0801 02:55:18.274928       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/cc45 278\nI0801 02:55:18.474486       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/mpgd 359\nI0801 02:55:18.674749       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/c7fj 365\nI0801 02:55:18.874425       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/6mtw 564\nI0801 02:55:19.074065       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/mh5x 314\nI0801 02:55:19.274438       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/l5q6 336\nI0801 02:55:19.474823       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/8g8z 386\nI0801 02:55:19.675127       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/nfq 381\nI0801 02:55:19.874507       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/qdbg 371\nI0801 02:55:20.074811       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/q9zx 497\nI0801 02:55:20.273988       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/sp2 537\nI0801 02:55:20.480097       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/2c6d 580\nI0801 02:55:20.675342       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/hhtp 399\nI0801 02:55:20.874824       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/gf6q 595\nI0801 02:55:21.074117       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/hgs 505\nI0801 02:55:21.274510       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/l2c9 438\nI0801 02:55:21.474836       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/wg9 532\nI0801 02:55:21.674528       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/57h 470\nI0801 02:55:21.874733       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/dkc 216\nI0801 02:55:22.074381       1 logs_generator.go:76] 22 GET /api/v1/namespaces/kube-system/pods/ljf 439\nI0801 02:55:22.274407       1 logs_generator.go:76] 23 PUT /api/v1/namespaces/ns/pods/l85 516\n"
  I0801 02:55:22.287613 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-logs-6787 delete pod logs-generator'
  I0801 02:55:24.810744 23 builder.go:146] stderr: ""
  I0801 02:55:24.810795 23 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0801 02:55:24.810939 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6787" for this suite. @ 08/01/25 02:55:24.832
â€¢ [57.230 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 08/01/25 02:55:24.873
  I0801 02:55:24.873140 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-runtime @ 08/01/25 02:55:24.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:55:25.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:55:25.19
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 08/01/25 02:55:25.246
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 08/01/25 02:55:45.751
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 08/01/25 02:55:45.755
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 08/01/25 02:55:45.761
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 08/01/25 02:55:45.761
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 08/01/25 02:55:45.81
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 08/01/25 02:55:48.846
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 08/01/25 02:55:49.854
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 08/01/25 02:55:49.859
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 08/01/25 02:55:49.86
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 08/01/25 02:55:49.931
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 08/01/25 02:55:50.95
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 08/01/25 02:55:52.959
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 08/01/25 02:55:52.967
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 08/01/25 02:55:52.967
  I0801 02:55:53.032743 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6668" for this suite. @ 08/01/25 02:55:53.038
â€¢ [28.175 seconds]
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 08/01/25 02:55:53.048
  I0801 02:55:53.048286 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 02:55:53.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:55:53.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:55:53.078
  STEP: Creating a job @ 08/01/25 02:55:53.082
  STEP: Ensuring active pods == parallelism @ 08/01/25 02:55:53.096
  STEP: delete a job @ 08/01/25 02:55:55.104
  STEP: deleting Job.batch foo in namespace job-1902, will wait for the garbage collector to delete the pods @ 08/01/25 02:55:55.104
  I0801 02:55:55.174835 23 resources.go:139] Deleting Job.batch foo took: 17.196259ms
  I0801 02:55:55.575396 23 resources.go:163] Terminating Job.batch foo pods took: 400.558879ms
  STEP: Ensuring job was deleted @ 08/01/25 02:55:57.076
  I0801 02:55:57.101698 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1902" for this suite. @ 08/01/25 02:55:57.105
â€¢ [4.081 seconds]
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 08/01/25 02:55:57.13
  I0801 02:55:57.130087 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename events @ 08/01/25 02:55:57.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:55:57.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:55:57.217
  STEP: Create set of events @ 08/01/25 02:55:57.222
  STEP: get a list of Events with a label in the current namespace @ 08/01/25 02:55:57.433
  STEP: delete a list of events @ 08/01/25 02:55:57.436
  I0801 02:55:57.436432 23 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 08/01/25 02:55:57.618
  I0801 02:55:57.620708 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8502" for this suite. @ 08/01/25 02:55:57.626
â€¢ [0.518 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 08/01/25 02:55:57.648
  I0801 02:55:57.648397 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 02:55:57.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:55:57.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:55:57.846
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 02:55:57.85
  STEP: Saw pod success @ 08/01/25 02:56:04.085
  I0801 02:56:04.088518 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-ff99eaa8-c257-41e6-b7ff-e1ab1017fd87 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 02:56:04.094
  I0801 02:56:04.143359 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2168" for this suite. @ 08/01/25 02:56:04.154
â€¢ [6.518 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 08/01/25 02:56:04.166
  I0801 02:56:04.166441 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:56:04.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:56:04.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:56:04.228
  STEP: Creating configMap with name cm-test-opt-del-72a097be-80fe-42b4-8827-54e3de01a875 @ 08/01/25 02:56:04.273
  STEP: Creating configMap with name cm-test-opt-upd-68e197bf-6747-4b8f-9885-f95fedadcee1 @ 08/01/25 02:56:04.378
  STEP: Creating the pod @ 08/01/25 02:56:04.413
  STEP: Deleting configmap cm-test-opt-del-72a097be-80fe-42b4-8827-54e3de01a875 @ 08/01/25 02:56:10.519
  STEP: Updating configmap cm-test-opt-upd-68e197bf-6747-4b8f-9885-f95fedadcee1 @ 08/01/25 02:56:10.527
  STEP: Creating configMap with name cm-test-opt-create-998ad891-d3b0-43fb-9b99-c3d2662bb77c @ 08/01/25 02:56:10.545
  STEP: waiting to observe update in volume @ 08/01/25 02:56:10.564
  I0801 02:57:12.842317 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2595" for this suite. @ 08/01/25 02:57:12.845
â€¢ [68.687 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 08/01/25 02:57:12.853
  I0801 02:57:12.853685 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 02:57:12.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:57:12.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:57:12.886
  STEP: creating all guestbook components @ 08/01/25 02:57:12.906
  I0801 02:57:12.906193 23 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0801 02:57:12.906299 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-7449 create -f -'
  I0801 02:57:13.180656 23 builder.go:146] stderr: ""
  I0801 02:57:13.180715 23 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0801 02:57:13.180773 23 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0801 02:57:13.180887 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-7449 create -f -'
  I0801 02:57:13.539845 23 builder.go:146] stderr: ""
  I0801 02:57:13.539904 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0801 02:57:13.539962 23 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0801 02:57:13.540084 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-7449 create -f -'
  I0801 02:57:13.772067 23 builder.go:146] stderr: ""
  I0801 02:57:13.772248 23 builder.go:147] stdout: "service/frontend created\n"
  I0801 02:57:13.772346 23 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0801 02:57:13.772573 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-7449 create -f -'
  I0801 02:57:13.948247 23 builder.go:146] stderr: ""
  I0801 02:57:13.948292 23 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0801 02:57:13.948377 23 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0801 02:57:13.948551 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-7449 create -f -'
  I0801 02:57:14.241614 23 builder.go:146] stderr: ""
  I0801 02:57:14.241670 23 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0801 02:57:14.241752 23 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0801 02:57:14.241895 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-7449 create -f -'
  I0801 02:57:14.416718 23 builder.go:146] stderr: ""
  I0801 02:57:14.416766 23 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 08/01/25 02:57:14.416
  I0801 02:57:14.416830 23 kubectl.go:2275] Waiting for all frontend pods to be Running.
  I0801 02:57:19.467905 23 kubectl.go:2279] Waiting for frontend to serve content.
  I0801 02:57:19.478012 23 kubectl.go:2302] Failed to get response from guestbook. err: the server responded with the status code 417 but did not return more information (get services frontend), response: 
  I0801 02:57:24.493636 23 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0801 02:57:24.506123 23 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 08/01/25 02:57:24.521
  I0801 02:57:24.521104 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-7449 delete --grace-period=0 --force -f -'
  I0801 02:57:24.646673 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0801 02:57:24.646722 23 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 08/01/25 02:57:24.646
  I0801 02:57:24.646847 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-7449 delete --grace-period=0 --force -f -'
  I0801 02:57:24.804380 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0801 02:57:24.804438 23 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 08/01/25 02:57:24.804
  I0801 02:57:24.804597 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-7449 delete --grace-period=0 --force -f -'
  I0801 02:57:24.940622 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0801 02:57:24.940683 23 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 08/01/25 02:57:24.94
  I0801 02:57:24.940849 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-7449 delete --grace-period=0 --force -f -'
  I0801 02:57:25.021675 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0801 02:57:25.021719 23 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 08/01/25 02:57:25.021
  I0801 02:57:25.021842 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-7449 delete --grace-period=0 --force -f -'
  I0801 02:57:25.137140 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0801 02:57:25.137285 23 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 08/01/25 02:57:25.137
  I0801 02:57:25.137449 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-7449 delete --grace-period=0 --force -f -'
  I0801 02:57:25.258702 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0801 02:57:25.258766 23 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0801 02:57:25.258917 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7449" for this suite. @ 08/01/25 02:57:25.261
â€¢ [12.440 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 08/01/25 02:57:25.293
  I0801 02:57:25.293622 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:57:25.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:57:25.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:57:25.322
  STEP: Creating projection with secret that has name projected-secret-test-map-8a5e24e5-be11-4f54-8e3c-e3dcd043c413 @ 08/01/25 02:57:25.327
  STEP: Creating a pod to test consume secrets @ 08/01/25 02:57:25.342
  STEP: Saw pod success @ 08/01/25 02:57:29.395
  I0801 02:57:29.397937 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-projected-secrets-064fd313-a0ea-454b-bed0-5e093693a72d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 02:57:29.402
  I0801 02:57:29.446518 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5646" for this suite. @ 08/01/25 02:57:29.454
â€¢ [4.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 08/01/25 02:57:29.464
  I0801 02:57:29.464805 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:57:29.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:57:29.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:57:29.505
  STEP: Creating secret with name s-test-opt-del-36bc7d84-7020-47f6-8f21-6d73a8ae290d @ 08/01/25 02:57:29.554
  STEP: Creating secret with name s-test-opt-upd-9a3ce33c-9d40-4878-85dc-dbedfb7dfb87 @ 08/01/25 02:57:29.568
  STEP: Creating the pod @ 08/01/25 02:57:29.578
  STEP: Deleting secret s-test-opt-del-36bc7d84-7020-47f6-8f21-6d73a8ae290d @ 08/01/25 02:57:33.645
  STEP: Updating secret s-test-opt-upd-9a3ce33c-9d40-4878-85dc-dbedfb7dfb87 @ 08/01/25 02:57:33.656
  STEP: Creating secret with name s-test-opt-create-c034b973-d997-49c2-ae46-064842537148 @ 08/01/25 02:57:33.671
  STEP: waiting to observe update in volume @ 08/01/25 02:57:33.681
  I0801 02:58:49.991925 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6773" for this suite. @ 08/01/25 02:58:49.997
â€¢ [80.552 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 08/01/25 02:58:50.017
  I0801 02:58:50.017271 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/01/25 02:58:50.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:58:50.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:58:50.046
  STEP: create the container to handle the HTTPGet hook request. @ 08/01/25 02:58:50.098
  STEP: create the pod with lifecycle hook @ 08/01/25 02:58:52.125
  STEP: delete the pod with lifecycle hook @ 08/01/25 02:58:54.157
  STEP: check prestop hook @ 08/01/25 02:58:56.177
  I0801 02:58:56.183880 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3229" for this suite. @ 08/01/25 02:58:56.187
â€¢ [6.185 seconds]
------------------------------
SS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 08/01/25 02:58:56.202
  I0801 02:58:56.202096 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename servicecidr @ 08/01/25 02:58:56.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:58:56.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:58:56.227
  STEP: creating @ 08/01/25 02:58:56.233
  STEP: patching @ 08/01/25 02:58:56.251
  STEP: updating @ 08/01/25 02:58:56.267
  STEP: getting @ 08/01/25 02:58:56.277
  STEP: listing @ 08/01/25 02:58:56.279
  STEP: watching @ 08/01/25 02:58:56.281
  STEP: deleting @ 08/01/25 02:58:56.281
  STEP: deleting a collection @ 08/01/25 02:58:56.289
  I0801 02:58:56.299943 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-6067" for this suite. @ 08/01/25 02:58:56.302
â€¢ [0.109 seconds]
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 08/01/25 02:58:56.311
  I0801 02:58:56.311602 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 02:58:56.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:58:56.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:58:56.332
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 02:58:56.339
  STEP: Saw pod success @ 08/01/25 02:59:00.358
  I0801 02:59:00.364466 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod downwardapi-volume-2cc70050-5f17-484a-9c4d-131b4e69abb9 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 02:59:00.376
  I0801 02:59:00.411187 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1835" for this suite. @ 08/01/25 02:59:00.415
â€¢ [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 08/01/25 02:59:00.426
  I0801 02:59:00.426152 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename disruption @ 08/01/25 02:59:00.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:00.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:00.499
  STEP: Waiting for the pdb to be processed @ 08/01/25 02:59:00.513
  STEP: Updating PodDisruptionBudget status @ 08/01/25 02:59:02.516
  STEP: Waiting for all pods to be running @ 08/01/25 02:59:02.526
  I0801 02:59:02.528781 23 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 08/01/25 02:59:04.532
  STEP: Waiting for the pdb to be processed @ 08/01/25 02:59:04.554
  STEP: Patching PodDisruptionBudget status @ 08/01/25 02:59:04.562
  STEP: Waiting for the pdb to be processed @ 08/01/25 02:59:04.578
  I0801 02:59:04.581266 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3334" for this suite. @ 08/01/25 02:59:04.592
â€¢ [4.175 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 08/01/25 02:59:04.6
  I0801 02:59:04.600713 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 02:59:04.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:04.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:04.661
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 02:59:04.666
  STEP: Saw pod success @ 08/01/25 02:59:08.694
  I0801 02:59:08.697405 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod downwardapi-volume-7dc3be47-6c52-49a3-9386-9d27aa1fe624 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 02:59:08.702
  I0801 02:59:08.731499 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5037" for this suite. @ 08/01/25 02:59:08.734
â€¢ [4.144 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 08/01/25 02:59:08.744
  I0801 02:59:08.744840 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename ingress @ 08/01/25 02:59:08.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:08.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:08.79
  STEP: getting /apis @ 08/01/25 02:59:08.794
  STEP: getting /apis/networking.k8s.io @ 08/01/25 02:59:08.799
  STEP: getting /apis/networking.k8s.iov1 @ 08/01/25 02:59:08.8
  STEP: creating @ 08/01/25 02:59:08.802
  STEP: getting @ 08/01/25 02:59:08.837
  STEP: listing @ 08/01/25 02:59:08.842
  STEP: watching @ 08/01/25 02:59:08.843
  I0801 02:59:08.844090 23 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 08/01/25 02:59:08.845
  STEP: cluster-wide watching @ 08/01/25 02:59:08.861
  I0801 02:59:08.861522 23 ingress.go:198] starting watch
  STEP: patching @ 08/01/25 02:59:08.863
  STEP: updating @ 08/01/25 02:59:08.885
  I0801 02:59:08.896686 23 ingress.go:221] waiting for watch events with expected annotations
  I0801 02:59:08.896742 23 ingress.go:238] missing expected annotations, waiting: map[string]string(nil)
  I0801 02:59:08.896790 23 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 08/01/25 02:59:08.896
  STEP: updating /status @ 08/01/25 02:59:08.906
  STEP: get /status @ 08/01/25 02:59:08.949
  STEP: deleting @ 08/01/25 02:59:08.951
  STEP: deleting a collection @ 08/01/25 02:59:08.977
  I0801 02:59:09.003692 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3566" for this suite. @ 08/01/25 02:59:09.005
â€¢ [0.269 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 08/01/25 02:59:09.014
  I0801 02:59:09.014493 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename resourcequota @ 08/01/25 02:59:09.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:09.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:09.047
  STEP: Creating a ResourceQuota with best effort scope @ 08/01/25 02:59:09.052
  STEP: Ensuring ResourceQuota status is calculated @ 08/01/25 02:59:09.065
  STEP: Creating a ResourceQuota with not best effort scope @ 08/01/25 02:59:11.069
  STEP: Ensuring ResourceQuota status is calculated @ 08/01/25 02:59:11.077
  STEP: Creating a best-effort pod @ 08/01/25 02:59:13.08
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 08/01/25 02:59:13.108
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 08/01/25 02:59:15.111
  STEP: Deleting the pod @ 08/01/25 02:59:17.114
  STEP: Ensuring resource quota status released the pod usage @ 08/01/25 02:59:17.141
  STEP: Creating a not best-effort pod @ 08/01/25 02:59:19.145
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 08/01/25 02:59:19.167
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 08/01/25 02:59:21.171
  STEP: Deleting the pod @ 08/01/25 02:59:23.175
  STEP: Ensuring resource quota status released the pod usage @ 08/01/25 02:59:23.218
  I0801 02:59:25.222958 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9390" for this suite. @ 08/01/25 02:59:25.226
â€¢ [16.220 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 08/01/25 02:59:25.234
  I0801 02:59:25.234613 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename secrets @ 08/01/25 02:59:25.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:25.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:25.272
  I0801 02:59:25.338614 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6097" for this suite. @ 08/01/25 02:59:25.35
â€¢ [0.124 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 08/01/25 02:59:25.361
  I0801 02:59:25.361310 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/01/25 02:59:25.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:25.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:25.39
  I0801 02:59:25.400288 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/01/25 02:59:26.801
  I0801 02:59:26.801765 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-618 --namespace=crd-publish-openapi-618 create -f -'
  I0801 02:59:28.893057 23 builder.go:146] stderr: ""
  I0801 02:59:28.893130 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7576-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0801 02:59:28.893187 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-618 --namespace=crd-publish-openapi-618 delete e2e-test-crd-publish-openapi-7576-crds test-cr'
  I0801 02:59:28.974994 23 builder.go:146] stderr: ""
  I0801 02:59:28.975051 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7576-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0801 02:59:28.975101 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-618 --namespace=crd-publish-openapi-618 apply -f -'
  I0801 02:59:29.057031 23 builder.go:146] stderr: ""
  I0801 02:59:29.057103 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7576-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0801 02:59:29.057175 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-618 --namespace=crd-publish-openapi-618 delete e2e-test-crd-publish-openapi-7576-crds test-cr'
  I0801 02:59:29.143442 23 builder.go:146] stderr: ""
  I0801 02:59:29.143503 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7576-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 08/01/25 02:59:29.143
  I0801 02:59:29.143604 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-618 explain e2e-test-crd-publish-openapi-7576-crds'
  I0801 02:59:29.210667 23 builder.go:146] stderr: ""
  I0801 02:59:29.210742 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7576-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0801 02:59:30.719708 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-618" for this suite. @ 08/01/25 02:59:30.725
â€¢ [5.374 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 08/01/25 02:59:30.735
  I0801 02:59:30.735509 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/01/25 02:59:30.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:30.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:30.761
  I0801 02:59:30.764370 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/01/25 02:59:32.244
  I0801 02:59:32.244251 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-7360 --namespace=crd-publish-openapi-7360 create -f -'
  I0801 02:59:32.341875 23 builder.go:146] stderr: ""
  I0801 02:59:32.341931 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7054-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0801 02:59:32.341983 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-7360 --namespace=crd-publish-openapi-7360 delete e2e-test-crd-publish-openapi-7054-crds test-cr'
  I0801 02:59:32.464894 23 builder.go:146] stderr: ""
  I0801 02:59:32.464958 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7054-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0801 02:59:32.465029 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-7360 --namespace=crd-publish-openapi-7360 apply -f -'
  I0801 02:59:32.557956 23 builder.go:146] stderr: ""
  I0801 02:59:32.558004 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7054-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0801 02:59:32.558056 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-7360 --namespace=crd-publish-openapi-7360 delete e2e-test-crd-publish-openapi-7054-crds test-cr'
  I0801 02:59:32.631393 23 builder.go:146] stderr: ""
  I0801 02:59:32.631443 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7054-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 08/01/25 02:59:32.631
  I0801 02:59:32.631522 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-7360 explain e2e-test-crd-publish-openapi-7054-crds'
  I0801 02:59:32.699419 23 builder.go:146] stderr: ""
  I0801 02:59:32.699493 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-7054-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0801 02:59:34.182915 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7360" for this suite. @ 08/01/25 02:59:34.188
â€¢ [3.461 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 08/01/25 02:59:34.196
  I0801 02:59:34.196590 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 02:59:34.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:34.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:34.221
  STEP: fetching services @ 08/01/25 02:59:34.225
  I0801 02:59:34.229312 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2041" for this suite. @ 08/01/25 02:59:34.298
â€¢ [0.111 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 08/01/25 02:59:34.307
  I0801 02:59:34.307845 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-runtime @ 08/01/25 02:59:34.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:34.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:34.339
  STEP: create the container @ 08/01/25 02:59:34.343
  I0801 02:59:34.354701      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 08/01/25 02:59:34.354
  STEP: get the container status @ 08/01/25 02:59:37.367
  STEP: the container should be terminated @ 08/01/25 02:59:37.372
  STEP: the termination message should be set @ 08/01/25 02:59:37.372
  I0801 02:59:37.372248 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 08/01/25 02:59:37.372
  I0801 02:59:37.402653 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7888" for this suite. @ 08/01/25 02:59:37.405
â€¢ [3.113 seconds]
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 08/01/25 02:59:37.421
  I0801 02:59:37.421252 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename servicecidr @ 08/01/25 02:59:37.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:37.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:37.459
  STEP: getting @ 08/01/25 02:59:37.463
  STEP: patching @ 08/01/25 02:59:37.465
  STEP: updating @ 08/01/25 02:59:37.48
  STEP: listing @ 08/01/25 02:59:37.517
  STEP: watching @ 08/01/25 02:59:37.528
  I0801 02:59:37.530702 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-2710" for this suite. @ 08/01/25 02:59:37.535
â€¢ [0.129 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 08/01/25 02:59:37.55
  I0801 02:59:37.550705 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename deployment @ 08/01/25 02:59:37.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:37.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:37.575
  I0801 02:59:37.579712 23 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0801 02:59:37.603160 23 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0801 02:59:37.611980 23 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0801 02:59:39.618476 23 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0801 02:59:39.620665 23 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0801 02:59:39.637589 23 deployment.go:314] Updating deployment test-recreate-deployment
  I0801 02:59:39.637634 23 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0801 02:59:39.842313 23 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7151",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "efbcae85-d629-40e5-896d-ca6020615333",
      ResourceVersion: (string) (len=5) "32518",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613977,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0801 02:59:39.856850 23 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7151",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c89c4eb-cb7d-4027-8a57-f10f1786a2a2",
      ResourceVersion: (string) (len=5) "32516",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613979,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "efbcae85-d629-40e5-896d-ca6020615333",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 66 62 63 61 65  38 35 2d 64 36 32 39 2d  |\"efbcae85-d629-|
              00000120  34 30 65 35 2d 38 39 36  64 2d 63 61 36 30 32 30  |40e5-896d-ca6020|
              00000130  36 31 35 33 33 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |615333\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0801 02:59:39.858018 23 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0801 02:59:39.858358 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7151",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5174689-5462-47e8-b1c1-1cf8d522d289",
      ResourceVersion: (string) (len=5) "32507",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613977,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "efbcae85-d629-40e5-896d-ca6020615333",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 66 62 63 61 65  38 35 2d 64 36 32 39 2d  |\"efbcae85-d629-|
              00000120  34 30 65 35 2d 38 39 36  64 2d 63 61 36 30 32 30  |40e5-896d-ca6020|
              00000130  36 31 35 33 33 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |615333\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0801 02:59:39.864775 23 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-mvz7r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-mvz7r",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-7151",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0bbbb529-f34e-4539-8324-624e0983ed9a",
      ResourceVersion: (string) (len=5) "32519",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613979,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "1c89c4eb-cb7d-4027-8a57-f10f1786a2a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  38 39 63 34 65 62 2d 63  |d\":\"1c89c4eb-c|
              00000090  62 37 64 2d 34 30 32 37  2d 38 61 35 37 2d 66 31  |b7d-4027-8a57-f1|
              000000a0  30 66 31 37 38 36 61 32  61 32 5c 22 7d 22 3a 7b  |0f1786a2a2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2nqsr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2nqsr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=45) "k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889613979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.16",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.16"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889613979,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2nqsr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 02:59:39.867163 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7151" for this suite. @ 08/01/25 02:59:39.877
â€¢ [2.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 08/01/25 02:59:39.887
  I0801 02:59:39.887433 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename secrets @ 08/01/25 02:59:39.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:39.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:39.928
  STEP: Creating secret with name secret-test-6faedcfc-d12c-497d-b35e-39d56413a299 @ 08/01/25 02:59:39.931
  STEP: Creating a pod to test consume secrets @ 08/01/25 02:59:39.94
  STEP: Saw pod success @ 08/01/25 02:59:43.99
  I0801 02:59:43.993688 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod pod-secrets-366dc8da-0014-4fee-af2e-ba357f579f0d container secret-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 02:59:43.998
  I0801 02:59:44.033648 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2365" for this suite. @ 08/01/25 02:59:44.038
â€¢ [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 08/01/25 02:59:44.052
  I0801 02:59:44.052605 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename var-expansion @ 08/01/25 02:59:44.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:44.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:44.087
  STEP: Creating a pod to test substitution in container's command @ 08/01/25 02:59:44.091
  STEP: Saw pod success @ 08/01/25 02:59:48.167
  I0801 02:59:48.171960 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod var-expansion-4e18927d-4934-4faa-b23c-f33a59806189 container dapi-container: <nil>
  STEP: delete the pod @ 08/01/25 02:59:48.177
  I0801 02:59:48.213929 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6474" for this suite. @ 08/01/25 02:59:48.226
â€¢ [4.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 08/01/25 02:59:48.255
  I0801 02:59:48.255627 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 02:59:48.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:48.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:48.299
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/01/25 02:59:48.303
  I0801 02:59:48.303266 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-6155 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0801 02:59:48.419121 23 builder.go:146] stderr: ""
  I0801 02:59:48.419164 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 08/01/25 02:59:48.419
  I0801 02:59:48.419240 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-6155 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0801 02:59:48.526306 23 builder.go:146] stderr: ""
  I0801 02:59:48.526356 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/01/25 02:59:48.526
  I0801 02:59:48.528969 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-6155 delete pods e2e-test-httpd-pod'
  I0801 02:59:50.657555 23 builder.go:146] stderr: ""
  I0801 02:59:50.657613 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0801 02:59:50.657750 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6155" for this suite. @ 08/01/25 02:59:50.661
â€¢ [2.420 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 08/01/25 02:59:50.675
  I0801 02:59:50.675407 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename subpath @ 08/01/25 02:59:50.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 02:59:50.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 02:59:50.705
  STEP: Setting up data @ 08/01/25 02:59:50.709
  STEP: Creating pod pod-subpath-test-configmap-fvtc @ 08/01/25 02:59:50.735
  STEP: Creating a pod to test atomic-volume-subpath @ 08/01/25 02:59:50.735
  STEP: Saw pod success @ 08/01/25 03:00:14.808
  I0801 03:00:14.810869 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-subpath-test-configmap-fvtc container test-container-subpath-configmap-fvtc: <nil>
  STEP: delete the pod @ 08/01/25 03:00:14.816
  STEP: Deleting pod pod-subpath-test-configmap-fvtc @ 08/01/25 03:00:14.849
  I0801 03:00:14.849206 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-fvtc" in namespace "subpath-50"
  I0801 03:00:14.851260 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-50" for this suite. @ 08/01/25 03:00:14.855
â€¢ [24.197 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 08/01/25 03:00:14.873
  I0801 03:00:14.873116 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename secrets @ 08/01/25 03:00:14.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:00:14.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:00:14.914
  STEP: Creating secret with name secret-test-953f61eb-ddba-49a7-9ebf-3a74e9bb35cc @ 08/01/25 03:00:14.918
  STEP: Creating a pod to test consume secrets @ 08/01/25 03:00:14.926
  STEP: Saw pod success @ 08/01/25 03:00:18.948
  I0801 03:00:18.950921 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-secrets-c48459a1-e4c2-43c9-9fa9-1772c10ccc72 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 03:00:18.957
  I0801 03:00:18.991042 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3980" for this suite. @ 08/01/25 03:00:18.993
â€¢ [4.139 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 08/01/25 03:00:19.011
  I0801 03:00:19.011870 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/01/25 03:00:19.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:00:19.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:00:19.058
  I0801 03:00:19.063138 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 08/01/25 03:00:20.734
  I0801 03:00:20.734450 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 --namespace=crd-publish-openapi-8525 create -f -'
  I0801 03:00:22.830119 23 builder.go:146] stderr: ""
  I0801 03:00:22.830169 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9947-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0801 03:00:22.830215 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 --namespace=crd-publish-openapi-8525 delete e2e-test-crd-publish-openapi-9947-crds test-foo'
  I0801 03:00:22.911613 23 builder.go:146] stderr: ""
  I0801 03:00:22.911666 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9947-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0801 03:00:22.911717 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 --namespace=crd-publish-openapi-8525 apply -f -'
  I0801 03:00:22.995816 23 builder.go:146] stderr: ""
  I0801 03:00:22.995863 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9947-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0801 03:00:22.995910 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 --namespace=crd-publish-openapi-8525 delete e2e-test-crd-publish-openapi-9947-crds test-foo'
  I0801 03:00:23.064559 23 builder.go:146] stderr: ""
  I0801 03:00:23.064601 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9947-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 08/01/25 03:00:23.064
  I0801 03:00:23.064695 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 --namespace=crd-publish-openapi-8525 create -f -'
  I0801 03:00:23.131213 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 08/01/25 03:00:23.131
  I0801 03:00:23.131352 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 --namespace=crd-publish-openapi-8525 create -f -'
  I0801 03:00:23.209314 23 builder.go:135] rc: 1
  I0801 03:00:23.209501 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 --namespace=crd-publish-openapi-8525 apply -f -'
  I0801 03:00:23.278377 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 08/01/25 03:00:23.278
  I0801 03:00:23.278498 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 --namespace=crd-publish-openapi-8525 create -f -'
  I0801 03:00:23.372947 23 builder.go:135] rc: 1
  I0801 03:00:23.373116 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 --namespace=crd-publish-openapi-8525 apply -f -'
  I0801 03:00:23.451664 23 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 08/01/25 03:00:23.451
  I0801 03:00:23.451802 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 explain e2e-test-crd-publish-openapi-9947-crds'
  I0801 03:00:23.545295 23 builder.go:146] stderr: ""
  I0801 03:00:23.545363 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9947-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 08/01/25 03:00:23.545
  I0801 03:00:23.545716 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 explain e2e-test-crd-publish-openapi-9947-crds.metadata'
  I0801 03:00:23.607595 23 builder.go:146] stderr: ""
  I0801 03:00:23.607718 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9947-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0801 03:00:23.607890 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 explain e2e-test-crd-publish-openapi-9947-crds.spec'
  I0801 03:00:23.675259 23 builder.go:146] stderr: ""
  I0801 03:00:23.675333 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9947-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0801 03:00:23.675463 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 explain e2e-test-crd-publish-openapi-9947-crds.spec.bars'
  I0801 03:00:23.741758 23 builder.go:146] stderr: ""
  I0801 03:00:23.741812 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9947-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 08/01/25 03:00:23.741
  I0801 03:00:23.741995 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=crd-publish-openapi-8525 explain e2e-test-crd-publish-openapi-9947-crds.spec.bars2'
  I0801 03:00:23.805654 23 builder.go:135] rc: 1
  I0801 03:00:25.241631 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8525" for this suite. @ 08/01/25 03:00:25.25
â€¢ [6.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 08/01/25 03:00:25.26
  I0801 03:00:25.260050 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename replication-controller @ 08/01/25 03:00:25.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:00:25.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:00:25.297
  STEP: creating a ReplicationController @ 08/01/25 03:00:25.304
  STEP: waiting for RC to be added @ 08/01/25 03:00:25.32
  STEP: waiting for available Replicas @ 08/01/25 03:00:25.32
  STEP: patching ReplicationController @ 08/01/25 03:00:26.719
  STEP: waiting for RC to be modified @ 08/01/25 03:00:26.743
  STEP: patching ReplicationController status @ 08/01/25 03:00:26.743
  STEP: waiting for RC to be modified @ 08/01/25 03:00:26.753
  STEP: waiting for available Replicas @ 08/01/25 03:00:26.753
  STEP: fetching ReplicationController status @ 08/01/25 03:00:26.766
  STEP: patching ReplicationController scale @ 08/01/25 03:00:26.768
  STEP: waiting for RC to be modified @ 08/01/25 03:00:26.786
  STEP: waiting for ReplicationController's scale to be the max amount @ 08/01/25 03:00:26.787
  STEP: fetching ReplicationController; ensuring that it's patched @ 08/01/25 03:00:27.842
  STEP: updating ReplicationController status @ 08/01/25 03:00:27.844
  STEP: waiting for RC to be modified @ 08/01/25 03:00:27.857
  STEP: listing all ReplicationControllers @ 08/01/25 03:00:27.857
  STEP: checking that ReplicationController has expected values @ 08/01/25 03:00:27.86
  STEP: deleting ReplicationControllers by collection @ 08/01/25 03:00:27.86
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 08/01/25 03:00:27.887
  I0801 03:00:27.963981 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0801 03:00:27.964396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8711" for this suite. @ 08/01/25 03:00:27.966
â€¢ [2.715 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 08/01/25 03:00:27.975
  I0801 03:00:27.975912 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/01/25 03:00:27.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:00:28.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:00:28.017
  STEP: set up a multi version CRD @ 08/01/25 03:00:28.021
  I0801 03:00:28.022310 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  E0801 03:00:28.964819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:29.965368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:30.966329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: rename a version @ 08/01/25 03:00:31.66
  STEP: check the new version name is served @ 08/01/25 03:00:31.688
  E0801 03:00:31.967368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 08/01/25 03:00:32.689
  E0801 03:00:32.968848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 08/01/25 03:00:33.558
  E0801 03:00:33.969623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:34.969802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:35.971934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:00:36.559235 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2054" for this suite. @ 08/01/25 03:00:36.568
â€¢ [8.611 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 08/01/25 03:00:36.587
  I0801 03:00:36.587167 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 03:00:36.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:00:36.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:00:36.61
  STEP: Creating configMap with name configmap-test-volume-7b6e7d57-0182-4dd9-b297-e3878713c773 @ 08/01/25 03:00:36.646
  STEP: Creating a pod to test consume configMaps @ 08/01/25 03:00:36.663
  E0801 03:00:36.972791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:37.972995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:38.973164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:39.973264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:00:40.681
  I0801 03:00:40.683638 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-configmaps-5049f4a4-b827-4f33-b52b-b67ba37b2fa1 container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 03:00:40.689
  I0801 03:00:40.718730 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5391" for this suite. @ 08/01/25 03:00:40.722
â€¢ [4.150 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 08/01/25 03:00:40.737
  I0801 03:00:40.737531 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename security-context @ 08/01/25 03:00:40.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:00:40.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:00:40.763
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 08/01/25 03:00:40.765
  E0801 03:00:40.973746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:41.974941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:42.975088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:43.975376      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:00:44.791
  I0801 03:00:44.793831 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod security-context-16615455-6de2-45b5-8400-fd4ce7c0eacb container test-container: <nil>
  STEP: delete the pod @ 08/01/25 03:00:44.798
  I0801 03:00:44.832748 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7288" for this suite. @ 08/01/25 03:00:44.834
â€¢ [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 08/01/25 03:00:44.842
  I0801 03:00:44.842491 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 03:00:44.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:00:44.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:00:44.871
  STEP: Setting up server cert @ 08/01/25 03:00:44.904
  E0801 03:00:44.976289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 03:00:45.454
  STEP: Deploying the webhook pod @ 08/01/25 03:00:45.463
  STEP: Wait for the deployment to be ready @ 08/01/25 03:00:45.497
  I0801 03:00:45.523303 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0801 03:00:45.977008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:46.977093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/01/25 03:00:47.53
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 03:00:47.564
  E0801 03:00:47.977765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:00:48.565378 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 08/01/25 03:00:48.725
  STEP: Creating a configMap that should be mutated @ 08/01/25 03:00:48.74
  STEP: Deleting the collection of validation webhooks @ 08/01/25 03:00:48.785
  STEP: Creating a configMap that should not be mutated @ 08/01/25 03:00:48.864
  I0801 03:00:48.972599 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6292" for this suite. @ 08/01/25 03:00:48.974
  E0801 03:00:48.978663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-1045" for this suite. @ 08/01/25 03:00:49.007
â€¢ [4.183 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 08/01/25 03:00:49.026
  I0801 03:00:49.026263 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename var-expansion @ 08/01/25 03:00:49.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:00:49.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:00:49.053
  STEP: Creating a pod to test substitution in container's args @ 08/01/25 03:00:49.057
  E0801 03:00:49.979249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:50.980213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:51.980296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:52.980654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:00:53.08
  I0801 03:00:53.082368 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod var-expansion-fe562333-8ae2-426f-8c5a-2508f62440fd container dapi-container: <nil>
  STEP: delete the pod @ 08/01/25 03:00:53.085
  I0801 03:00:53.124383 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9039" for this suite. @ 08/01/25 03:00:53.127
â€¢ [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 08/01/25 03:00:53.137
  I0801 03:00:53.137372 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 03:00:53.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:00:53.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:00:53.163
  STEP: Creating configMap with name configmap-test-upd-d70ce83c-8220-4a20-b03f-96d1f5bfb6d7 @ 08/01/25 03:00:53.233
  STEP: Creating the pod @ 08/01/25 03:00:53.242
  E0801 03:00:53.981672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:54.981831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 08/01/25 03:00:55.275
  STEP: Waiting for pod with binary data @ 08/01/25 03:00:55.281
  I0801 03:00:55.286320 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-901" for this suite. @ 08/01/25 03:00:55.29
â€¢ [2.162 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 08/01/25 03:00:55.299
  I0801 03:00:55.299709 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-probe @ 08/01/25 03:00:55.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:00:55.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:00:55.33
  E0801 03:00:55.981926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:56.982537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:57.982680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:58.983522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:00:59.983681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:00.984338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:01.985105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:02.986012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:03.987134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:04.987372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:05.988068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:06.989033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:07.989438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:08.989718      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:09.990614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:10.991210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:11.991554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:12.991639      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:13.991783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:14.992564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:15.992680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:16.992723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:17.993646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:18.994220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:19.994509      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:20.994858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:21.995754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:22.996723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:23.997546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:24.997646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:25.997799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:26.998319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:27.998430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:28.999264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:29.999996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:31.000352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:32.001048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:33.001722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:34.001973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:35.002551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:36.003031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:37.003026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:38.003715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:39.004015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:40.004091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:41.005159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:42.005798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:43.005998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:44.006704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:45.007152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:46.007762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:47.008093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:48.008916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:49.009091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:50.009482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:51.009570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:52.011686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:53.010707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:54.010953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:55.011408      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:01:55.349624 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3586" for this suite. @ 08/01/25 03:01:55.352
â€¢ [60.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 08/01/25 03:01:55.363
  I0801 03:01:55.363452 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 03:01:55.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:01:55.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:01:55.396
  STEP: creating service nodeport-test with type=NodePort in namespace services-5090 @ 08/01/25 03:01:55.399
  I0801 03:01:55.471328 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0801 03:01:56.011709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:57.016083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:01:57.478030 23 resource.go:361] Creating new exec pod
  E0801 03:01:58.020427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:01:59.020606      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:01:59.533920 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5090 exec execpod4fqvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0801 03:01:59.686549 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.53.7.12) 80 port [tcp/http] succeeded!\n"
  I0801 03:01:59.686607 23 builder.go:147] stdout: ""
  E0801 03:02:00.021313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:02:00.534948 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5090 exec execpod4fqvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0801 03:02:00.724908 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.53.7.12) 80 port [tcp/http] succeeded!\n"
  I0801 03:02:00.724959 23 builder.go:147] stdout: ""
  E0801 03:02:01.021351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:02:01.534862 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5090 exec execpod4fqvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0801 03:02:01.688359 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.53.7.12) 80 port [tcp/http] succeeded!\n"
  I0801 03:02:01.688437 23 builder.go:147] stdout: ""
  E0801 03:02:02.021805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:02:02.534000 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5090 exec execpod4fqvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0801 03:02:02.675468 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.53.7.12) 80 port [tcp/http] succeeded!\n"
  I0801 03:02:02.675519 23 builder.go:147] stdout: ""
  E0801 03:02:03.022796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:02:03.534061 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5090 exec execpod4fqvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0801 03:02:03.695365 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.53.7.12) 80 port [tcp/http] succeeded!\n"
  I0801 03:02:03.695424 23 builder.go:147] stdout: ""
  E0801 03:02:04.022887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:02:04.534376 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5090 exec execpod4fqvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0801 03:02:04.683055 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.53.7.12) 80 port [tcp/http] succeeded!\n"
  I0801 03:02:04.683105 23 builder.go:147] stdout: ""
  E0801 03:02:05.023905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:02:05.534139 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5090 exec execpod4fqvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0801 03:02:05.729923 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.53.7.12) 80 port [tcp/http] succeeded!\n"
  I0801 03:02:05.729974 23 builder.go:147] stdout: "nodeport-test-7cbd796499-hnlfv"
  I0801 03:02:05.730046 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5090 exec execpod4fqvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.7.12 80'
  I0801 03:02:05.901838 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.7.12 80\nConnection to 10.53.7.12 80 port [tcp/http] succeeded!\n"
  I0801 03:02:05.901891 23 builder.go:147] stdout: "nodeport-test-7cbd796499-c6m2v"
  I0801 03:02:05.901991 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5090 exec execpod4fqvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.42.0.16 32033'
  E0801 03:02:06.024699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:02:06.050817 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.42.0.16 32033\nConnection to 10.42.0.16 32033 port [tcp/*] succeeded!\n"
  I0801 03:02:06.050863 23 builder.go:147] stdout: "nodeport-test-7cbd796499-hnlfv"
  I0801 03:02:06.050938 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5090 exec execpod4fqvd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.42.0.18 32033'
  I0801 03:02:06.239910 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.42.0.18 32033\nConnection to 10.42.0.18 32033 port [tcp/*] succeeded!\n"
  I0801 03:02:06.239967 23 builder.go:147] stdout: "nodeport-test-7cbd796499-hnlfv"
  I0801 03:02:06.240119 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5090" for this suite. @ 08/01/25 03:02:06.242
â€¢ [10.889 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 08/01/25 03:02:06.252
  I0801 03:02:06.252770 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename runtimeclass @ 08/01/25 03:02:06.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:02:06.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:02:06.289
  E0801 03:02:07.025740      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:08.026838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:02:08.352648 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9272" for this suite. @ 08/01/25 03:02:08.355
â€¢ [2.110 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 08/01/25 03:02:08.363
  I0801 03:02:08.363167 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 03:02:08.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:02:08.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:02:08.393
  STEP: Starting the proxy @ 08/01/25 03:02:08.397
  I0801 03:02:08.397616 23 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-1517 proxy --unix-socket=/tmp/kubectl-proxy-unix839135674/test'
  STEP: retrieving proxy /api/ output @ 08/01/25 03:02:08.463
  I0801 03:02:08.463858 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1517" for this suite. @ 08/01/25 03:02:08.469
â€¢ [0.116 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 08/01/25 03:02:08.479
  I0801 03:02:08.479300 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 03:02:08.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:02:08.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:02:08.507
  STEP: Creating a suspended job @ 08/01/25 03:02:08.513
  STEP: Patching the Job @ 08/01/25 03:02:08.522
  STEP: Watching for Job to be patched @ 08/01/25 03:02:08.56
  I0801 03:02:08.566388 23 job.go:1369] Event ADDED observed for Job e2e-nf248 in namespace job-6802 with labels: map[e2e-job-label:e2e-nf248] and annotations: map[]
  I0801 03:02:08.566436 23 job.go:1369] Event MODIFIED observed for Job e2e-nf248 in namespace job-6802 with labels: map[e2e-job-label:e2e-nf248] and annotations: map[]
  I0801 03:02:08.566458 23 job.go:1372] Event MODIFIED found for Job e2e-nf248 in namespace job-6802 with labels: map[e2e-job-label:e2e-nf248 e2e-nf248:patched] and annotations: map[]
  STEP: Updating the job @ 08/01/25 03:02:08.566
  STEP: Watching for Job to be updated @ 08/01/25 03:02:08.583
  I0801 03:02:08.585256 23 job.go:1372] Event MODIFIED found for Job e2e-nf248 in namespace job-6802 with labels: map[e2e-job-label:e2e-nf248 e2e-nf248:patched] and annotations: map[updated:true]
  I0801 03:02:08.585320 23 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 08/01/25 03:02:08.585
  I0801 03:02:08.587200 23 job.go:1247] Job: e2e-nf248 as labels: map[e2e-job-label:e2e-nf248 e2e-nf248:patched]
  STEP: Waiting for job to complete @ 08/01/25 03:02:08.587
  E0801 03:02:09.027408      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:10.027637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:11.028151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:12.028409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:13.028900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:14.028994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:15.029770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:16.029973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 08/01/25 03:02:16.621
  STEP: Watching for Job to be deleted @ 08/01/25 03:02:16.635
  I0801 03:02:16.637313 23 job.go:1369] Event MODIFIED observed for Job e2e-nf248 in namespace job-6802 with labels: map[e2e-job-label:e2e-nf248 e2e-nf248:patched] and annotations: map[updated:true]
  I0801 03:02:16.637374 23 job.go:1369] Event MODIFIED observed for Job e2e-nf248 in namespace job-6802 with labels: map[e2e-job-label:e2e-nf248 e2e-nf248:patched] and annotations: map[updated:true]
  I0801 03:02:16.637400 23 job.go:1369] Event MODIFIED observed for Job e2e-nf248 in namespace job-6802 with labels: map[e2e-job-label:e2e-nf248 e2e-nf248:patched] and annotations: map[updated:true]
  I0801 03:02:16.637567 23 job.go:1369] Event MODIFIED observed for Job e2e-nf248 in namespace job-6802 with labels: map[e2e-job-label:e2e-nf248 e2e-nf248:patched] and annotations: map[updated:true]
  I0801 03:02:16.637595 23 job.go:1369] Event MODIFIED observed for Job e2e-nf248 in namespace job-6802 with labels: map[e2e-job-label:e2e-nf248 e2e-nf248:patched] and annotations: map[updated:true]
  I0801 03:02:16.637615 23 job.go:1372] Event DELETED found for Job e2e-nf248 in namespace job-6802 with labels: map[e2e-job-label:e2e-nf248 e2e-nf248:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 08/01/25 03:02:16.637
  I0801 03:02:16.639825 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6802" for this suite. @ 08/01/25 03:02:16.642
â€¢ [8.178 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 08/01/25 03:02:16.657
  I0801 03:02:16.657589 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename resourcequota @ 08/01/25 03:02:16.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:02:16.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:02:16.728
  STEP: Creating a ResourceQuota @ 08/01/25 03:02:16.732
  STEP: Getting a ResourceQuota @ 08/01/25 03:02:16.755
  STEP: Updating a ResourceQuota @ 08/01/25 03:02:16.758
  STEP: Verifying a ResourceQuota was modified @ 08/01/25 03:02:16.783
  STEP: Deleting a ResourceQuota @ 08/01/25 03:02:16.785
  STEP: Verifying the deleted ResourceQuota @ 08/01/25 03:02:16.812
  I0801 03:02:16.814716 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-566" for this suite. @ 08/01/25 03:02:16.818
â€¢ [0.171 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 08/01/25 03:02:16.828
  I0801 03:02:16.828758 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 03:02:16.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:02:16.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:02:16.861
  STEP: Setting up server cert @ 08/01/25 03:02:16.898
  E0801 03:02:17.030232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 03:02:17.831
  STEP: Deploying the webhook pod @ 08/01/25 03:02:17.839
  STEP: Wait for the deployment to be ready @ 08/01/25 03:02:17.863
  I0801 03:02:17.878459 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0801 03:02:18.030551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:19.030768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/01/25 03:02:19.884
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 03:02:19.927
  E0801 03:02:20.030938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:02:20.927787 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 08/01/25 03:02:20.93
  STEP: verifying the mutating webhook match conditions @ 08/01/25 03:02:20.945
  STEP: updating the mutating webhook match conditions @ 08/01/25 03:02:20.95
  STEP: verifying the mutating webhook match conditions @ 08/01/25 03:02:20.967
  E0801 03:02:21.031013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:02:21.075742 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-195" for this suite. @ 08/01/25 03:02:21.078
  STEP: Destroying namespace "webhook-markers-6478" for this suite. @ 08/01/25 03:02:21.101
â€¢ [4.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 08/01/25 03:02:21.12
  I0801 03:02:21.120935 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename runtimeclass @ 08/01/25 03:02:21.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:02:21.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:02:21.15
  STEP: getting /apis @ 08/01/25 03:02:21.153
  STEP: getting /apis/node.k8s.io @ 08/01/25 03:02:21.157
  STEP: getting /apis/node.k8s.io/v1 @ 08/01/25 03:02:21.158
  STEP: creating @ 08/01/25 03:02:21.159
  STEP: watching @ 08/01/25 03:02:21.19
  I0801 03:02:21.190250 23 runtimeclass.go:278] starting watch
  STEP: getting @ 08/01/25 03:02:21.199
  STEP: listing @ 08/01/25 03:02:21.202
  STEP: patching @ 08/01/25 03:02:21.204
  STEP: updating @ 08/01/25 03:02:21.216
  I0801 03:02:21.242684 23 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 08/01/25 03:02:21.242
  STEP: deleting a collection @ 08/01/25 03:02:21.256
  I0801 03:02:21.280432 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3601" for this suite. @ 08/01/25 03:02:21.282
â€¢ [0.172 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 08/01/25 03:02:21.292
  I0801 03:02:21.292768 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubelet-test @ 08/01/25 03:02:21.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:02:21.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:02:21.314
  I0801 03:02:21.412997 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2205" for this suite. @ 08/01/25 03:02:21.422
â€¢ [0.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 08/01/25 03:02:21.451
  I0801 03:02:21.451428 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/01/25 03:02:21.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:02:21.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:02:21.491
  STEP: fetching the /apis discovery document @ 08/01/25 03:02:21.497
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 08/01/25 03:02:21.535
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 08/01/25 03:02:21.535
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 08/01/25 03:02:21.535
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 08/01/25 03:02:21.562
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 08/01/25 03:02:21.562
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 08/01/25 03:02:21.574
  I0801 03:02:21.574526 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4485" for this suite. @ 08/01/25 03:02:21.621
â€¢ [0.190 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 08/01/25 03:02:21.641
  I0801 03:02:21.641742 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename subpath @ 08/01/25 03:02:21.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:02:21.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:02:21.693
  STEP: Setting up data @ 08/01/25 03:02:21.708
  STEP: Creating pod pod-subpath-test-projected-2l55 @ 08/01/25 03:02:21.743
  STEP: Creating a pod to test atomic-volume-subpath @ 08/01/25 03:02:21.744
  E0801 03:02:22.031488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:23.031804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:24.031991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:25.032757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:26.033363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:27.033459      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:28.033813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:29.035059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:30.035705      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:31.036692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:32.037209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:33.038003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:34.038420      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:35.038569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:36.039378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:37.039765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:38.039641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:39.039878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:40.040652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:41.040794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:42.040878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:43.041326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:44.042304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:45.042438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:02:45.797
  I0801 03:02:45.798907 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-subpath-test-projected-2l55 container test-container-subpath-projected-2l55: <nil>
  STEP: delete the pod @ 08/01/25 03:02:45.807
  STEP: Deleting pod pod-subpath-test-projected-2l55 @ 08/01/25 03:02:45.838
  I0801 03:02:45.838577 23 delete.go:62] Deleting pod "pod-subpath-test-projected-2l55" in namespace "subpath-8785"
  I0801 03:02:45.841636 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8785" for this suite. @ 08/01/25 03:02:45.845
â€¢ [24.214 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 08/01/25 03:02:45.855
  I0801 03:02:45.855735 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 03:02:45.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:02:45.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:02:45.877
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 08/01/25 03:02:45.884
  E0801 03:02:46.042626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:47.042731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:48.044374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:49.044749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:02:49.902
  I0801 03:02:49.905325 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-f50c2190-9670-4d15-b78e-4d3848bda64a container test-container: <nil>
  STEP: delete the pod @ 08/01/25 03:02:49.915
  I0801 03:02:49.947598 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9677" for this suite. @ 08/01/25 03:02:49.95
â€¢ [4.104 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 08/01/25 03:02:49.96
  I0801 03:02:49.960345 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename deployment @ 08/01/25 03:02:49.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:02:49.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:02:50.018
  I0801 03:02:50.037486 23 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  E0801 03:02:50.045733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:51.046273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:52.046971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:53.047102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:54.048095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:55.048848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:02:55.069910 23 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/01/25 03:02:55.069
  I0801 03:02:55.070009 23 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 08/01/25 03:02:55.081
  E0801 03:02:56.048981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:57.049157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:02:57.100265 23 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7258",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ba618c4-a646-4408-b3cb-657e26046002",
      ResourceVersion: (string) (len=5) "34008",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889614175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0801 03:02:57.104232 23 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7258",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a84bdd8-494b-446f-8234-0019fb60ab48",
      ResourceVersion: (string) (len=5) "33998",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889614175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "5ba618c4-a646-4408-b3cb-657e26046002",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 62 61 36 31 38  63 34 2d 61 36 34 36 2d  |\"5ba618c4-a646-|
              00000120  34 34 30 38 2d 62 33 63  62 2d 36 35 37 65 32 36  |4408-b3cb-657e26|
              00000130  30 34 36 30 30 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |046002\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0801 03:02:57.109226 23 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-fjlqs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-fjlqs",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-7258",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f2c6cfb-0e3e-4a98-b926-3c4621cc87b0",
      ResourceVersion: (string) (len=5) "33997",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889614175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "9a84bdd8-494b-446f-8234-0019fb60ab48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 61  38 34 62 64 64 38 2d 34  |d\":\"9a84bdd8-4|
              00000090  39 34 62 2d 34 34 36 66  2d 38 32 33 34 2d 30 30  |94b-446f-8234-00|
              000000a0  31 39 66 62 36 30 61 62  34 38 5c 22 7d 22 3a 7b  |19fb60ab48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 35 32 2e 30 2e 32 34  37 5c 22 7d 22 3a 7b 22  |.52.0.247\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rb4gh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rb4gh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=23) "k3k-k3kcluster-server-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889614175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.42.0.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.42.0.18"
        }
      },
      PodIP: (string) (len=11) "10.52.0.247",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.52.0.247"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889614175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889614176,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://c570819765e504cbacce89436cf5d4c7e2f9e28eb3b45668f6f369e7e6152cc1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rb4gh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0801 03:02:57.111571 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7258" for this suite. @ 08/01/25 03:02:57.115
â€¢ [7.180 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 08/01/25 03:02:57.14
  I0801 03:02:57.140806 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 03:02:57.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:02:57.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:02:57.159
  STEP: Creating the pod @ 08/01/25 03:02:57.162
  E0801 03:02:58.049403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:02:59.049557      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:02:59.721969 23 pod_client.go:173] Successfully updated pod "labelsupdate115376b8-422f-4f39-85e3-29d49df6b1a7"
  E0801 03:03:00.050310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:01.050430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:03:01.733702 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7443" for this suite. @ 08/01/25 03:03:01.736
â€¢ [4.611 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 08/01/25 03:03:01.751
  I0801 03:03:01.751966 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 03:03:01.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:03:01.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:03:01.773
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/01/25 03:03:01.777
  I0801 03:03:01.777749 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-8615 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0801 03:03:01.879745 23 builder.go:146] stderr: ""
  I0801 03:03:01.879784 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 08/01/25 03:03:01.879
  E0801 03:03:02.050502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:03.051270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:04.051601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:05.052369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:06.052346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 08/01/25 03:03:06.93
  I0801 03:03:06.930202 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-8615 get pod e2e-test-httpd-pod -o json'
  I0801 03:03:07.007965 23 builder.go:146] stderr: ""
  I0801 03:03:07.008064 23 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-08-01T03:03:01Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8615\",\n        \"resourceVersion\": \"34078\",\n        \"uid\": \"254e01b7-b27d-47be-a30a-70bfb37e312d\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-dg4hp\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-dg4hp\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-08-01T03:03:03Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-08-01T03:03:01Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-08-01T03:03:03Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-08-01T03:03:03Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-08-01T03:03:01Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://c06afb9b8ca18341b646a52d80975d352232120318a3688120dd9d8d5111a2fb\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-08-01T03:03:02Z\"\n                    }\n                },\n                \"user\": {\n                    \"linux\": {\n                        \"gid\": 0,\n                        \"supplementalGroups\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            6,\n                            10,\n                            11,\n                            20,\n                            26,\n                            27\n                        ],\n                        \"uid\": 0\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-dg4hp\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"10.42.0.16\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.42.0.16\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.52.1.118\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.52.1.118\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-08-01T03:03:01Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 08/01/25 03:03:07.008
  I0801 03:03:07.008146 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-8615 replace -f -'
  E0801 03:03:07.052561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:03:07.215213 23 builder.go:146] stderr: ""
  I0801 03:03:07.215265 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 08/01/25 03:03:07.215
  I0801 03:03:07.222559 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-8615 delete pods e2e-test-httpd-pod'
  E0801 03:03:08.053371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:09.053521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:03:09.313359 23 builder.go:146] stderr: ""
  I0801 03:03:09.313415 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0801 03:03:09.313541 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8615" for this suite. @ 08/01/25 03:03:09.326
â€¢ [7.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 08/01/25 03:03:09.338
  I0801 03:03:09.338538 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pods @ 08/01/25 03:03:09.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:03:09.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:03:09.376
  STEP: creating the pod @ 08/01/25 03:03:09.383
  STEP: submitting the pod to kubernetes @ 08/01/25 03:03:09.383
  I0801 03:03:09.396447      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  E0801 03:03:10.053663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:11.053800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 08/01/25 03:03:11.418
  STEP: updating the pod @ 08/01/25 03:03:11.42
  I0801 03:03:11.934490 23 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-c81b76db-2c76-48ad-940c-4d1ba6c58ded"
  E0801 03:03:12.054277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:13.055533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:14.056423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:15.056652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:03:15.942886 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5386" for this suite. @ 08/01/25 03:03:15.945
â€¢ [6.615 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 08/01/25 03:03:15.954
  I0801 03:03:15.954086 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pod-network-test @ 08/01/25 03:03:15.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:03:15.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:03:15.974
  STEP: Performing setup for networking test in namespace pod-network-test-6251 @ 08/01/25 03:03:15.986
  STEP: creating a selector @ 08/01/25 03:03:15.986
  STEP: Creating the service pods in kubernetes @ 08/01/25 03:03:15.986
  I0801 03:03:15.986380 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0801 03:03:16.057193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:17.058162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:18.058623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:19.058744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:20.059030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:21.059121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:22.059426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:23.059809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:24.060256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:25.061045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:26.061780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:27.062367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:28.063465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:29.063792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:30.064010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/01/25 03:03:30.132
  E0801 03:03:31.064666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:32.065780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:03:32.156832 23 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0801 03:03:32.156880 23 networking.go:42] Breadth first check of 10.52.1.120 on host 10.42.0.16...
  I0801 03:03:32.159352 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.52.1.121:9080/dial?request=hostname&protocol=udp&host=10.52.1.120&port=8081&tries=1'] Namespace:pod-network-test-6251 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 03:03:32.159392 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 03:03:32.159445 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/pod-network-test-6251/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.52.1.121%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.52.1.120%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0801 03:03:32.224440 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 03:03:32.224551 23 utils.go:355] Waiting for responses: map[]
  I0801 03:03:32.224567 23 utils.go:359] reached 10.52.1.120 after 0/1 tries
  I0801 03:03:32.224582 23 networking.go:42] Breadth first check of 10.52.0.248 on host 10.42.0.18...
  I0801 03:03:32.227128 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.52.1.121:9080/dial?request=hostname&protocol=udp&host=10.52.0.248&port=8081&tries=1'] Namespace:pod-network-test-6251 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 03:03:32.227169 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 03:03:32.227233 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/pod-network-test-6251/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.52.1.121%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.52.0.248%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0801 03:03:32.295336 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 03:03:32.295412 23 utils.go:355] Waiting for responses: map[]
  I0801 03:03:32.295424 23 utils.go:359] reached 10.52.0.248 after 0/1 tries
  I0801 03:03:32.295435 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0801 03:03:32.295559 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6251" for this suite. @ 08/01/25 03:03:32.299
â€¢ [16.354 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 08/01/25 03:03:32.308
  I0801 03:03:32.308403 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename security-context-test @ 08/01/25 03:03:32.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:03:32.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:03:32.346
  E0801 03:03:33.066028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:34.066302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:35.066577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:36.066811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:37.067690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:38.068685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:03:38.421144 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3225" for this suite. @ 08/01/25 03:03:38.441
â€¢ [6.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 08/01/25 03:03:38.466
  I0801 03:03:38.466227 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename dns @ 08/01/25 03:03:38.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:03:38.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:03:38.498
  STEP: Creating a test headless service @ 08/01/25 03:03:38.502
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1921.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-1921.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1921.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-1921.svc.cluster.local;sleep 1; done
   @ 08/01/25 03:03:38.517
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1921.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-1921.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1921.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-1921.svc.cluster.local;sleep 1; done
   @ 08/01/25 03:03:38.517
  STEP: creating a pod to probe DNS @ 08/01/25 03:03:38.517
  STEP: submitting the pod to kubernetes @ 08/01/25 03:03:38.517
  E0801 03:03:39.069218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:40.069388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:41.070377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:42.070769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/01/25 03:03:42.576
  STEP: looking for the results for each expected name from probers @ 08/01/25 03:03:42.579
  I0801 03:03:42.586057 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local from pod dns-1921/dns-test-5ca3d884-8f12-451c-a79d-95a65d359484: the server could not find the requested resource (get pods dns-test-5ca3d884-8f12-451c-a79d-95a65d359484)
  I0801 03:03:42.588946 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local from pod dns-1921/dns-test-5ca3d884-8f12-451c-a79d-95a65d359484: the server could not find the requested resource (get pods dns-test-5ca3d884-8f12-451c-a79d-95a65d359484)
  I0801 03:03:42.593342 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-1921.svc.cluster.local from pod dns-1921/dns-test-5ca3d884-8f12-451c-a79d-95a65d359484: the server could not find the requested resource (get pods dns-test-5ca3d884-8f12-451c-a79d-95a65d359484)
  I0801 03:03:42.595555 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-1921.svc.cluster.local from pod dns-1921/dns-test-5ca3d884-8f12-451c-a79d-95a65d359484: the server could not find the requested resource (get pods dns-test-5ca3d884-8f12-451c-a79d-95a65d359484)
  I0801 03:03:42.597938 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local from pod dns-1921/dns-test-5ca3d884-8f12-451c-a79d-95a65d359484: the server could not find the requested resource (get pods dns-test-5ca3d884-8f12-451c-a79d-95a65d359484)
  I0801 03:03:42.599642 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local from pod dns-1921/dns-test-5ca3d884-8f12-451c-a79d-95a65d359484: the server could not find the requested resource (get pods dns-test-5ca3d884-8f12-451c-a79d-95a65d359484)
  I0801 03:03:42.601180 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-1921.svc.cluster.local from pod dns-1921/dns-test-5ca3d884-8f12-451c-a79d-95a65d359484: the server could not find the requested resource (get pods dns-test-5ca3d884-8f12-451c-a79d-95a65d359484)
  I0801 03:03:42.602622 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-1921.svc.cluster.local from pod dns-1921/dns-test-5ca3d884-8f12-451c-a79d-95a65d359484: the server could not find the requested resource (get pods dns-test-5ca3d884-8f12-451c-a79d-95a65d359484)
  I0801 03:03:42.602725 23 dns_common.go:506] Lookups using dns-1921/dns-test-5ca3d884-8f12-451c-a79d-95a65d359484 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local agnhost_udp@dns-test-service-2.dns-1921.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-1921.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1921.svc.cluster.local jessie_udp@dns-test-service-2.dns-1921.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1921.svc.cluster.local]

  I0801 03:03:42.606380 23 dns_common.go:514] Pod client logs for webserver: 
  I0801 03:03:42.615966 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0801 03:03:42.623007 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0801 03:03:43.071834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:44.072860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:45.073700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:46.074756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:47.075754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:03:47.605479 23 dns_common.go:546] DNS probes using dns-1921/dns-test-5ca3d884-8f12-451c-a79d-95a65d359484 succeeded

  STEP: deleting the pod @ 08/01/25 03:03:47.605
  STEP: deleting the test headless service @ 08/01/25 03:03:47.654
  I0801 03:03:47.681407 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1921" for this suite. @ 08/01/25 03:03:47.703
â€¢ [9.246 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 08/01/25 03:03:47.712
  I0801 03:03:47.712269 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename containers @ 08/01/25 03:03:47.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:03:47.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:03:47.74
  STEP: Creating a pod to test override command @ 08/01/25 03:03:47.743
  E0801 03:03:48.076313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:49.076375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:50.076695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:51.077747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:03:51.774
  I0801 03:03:51.776570 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod client-containers-7034c127-ab79-4781-8264-913cf67f401d container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 03:03:51.781
  I0801 03:03:51.822380 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3912" for this suite. @ 08/01/25 03:03:51.828
â€¢ [4.138 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 08/01/25 03:03:51.85
  I0801 03:03:51.850224 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename resourcequota @ 08/01/25 03:03:51.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:03:51.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:03:51.872
  STEP: Counting existing ResourceQuota @ 08/01/25 03:03:51.874
  E0801 03:03:52.078461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:53.079038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:54.079988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:55.080450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:56.080860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/01/25 03:03:56.882
  STEP: Ensuring resource quota status is calculated @ 08/01/25 03:03:56.895
  E0801 03:03:57.081465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:03:58.081640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 08/01/25 03:03:58.898
  STEP: Ensuring resource quota status captures replicaset creation @ 08/01/25 03:03:58.92
  E0801 03:03:59.082372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:00.082624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 08/01/25 03:04:00.923
  STEP: Ensuring resource quota status released usage @ 08/01/25 03:04:00.937
  E0801 03:04:01.082619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:02.082906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:04:02.940589 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1804" for this suite. @ 08/01/25 03:04:02.945
â€¢ [11.110 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 08/01/25 03:04:02.96
  I0801 03:04:02.960214 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubelet-test @ 08/01/25 03:04:02.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:02.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:02.989
  E0801 03:04:03.083390      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:04.083546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:04:05.035619 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2222" for this suite. @ 08/01/25 03:04:05.039
â€¢ [2.088 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 08/01/25 03:04:05.048
  I0801 03:04:05.048574 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename proxy @ 08/01/25 03:04:05.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:05.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:05.082
  E0801 03:04:05.084009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:04:05.084877 23 proxy.go:336] Creating pod...
  E0801 03:04:06.084777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:07.084859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:04:07.124116 23 proxy.go:360] Creating service...
  I0801 03:04:07.157249 23 proxy.go:397] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/pods/agnhost/proxy/some/path/with/DELETE
  I0801 03:04:07.164680 23 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0801 03:04:07.164730 23 proxy.go:397] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/pods/agnhost/proxy/some/path/with/GET
  I0801 03:04:07.173398 23 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0801 03:04:07.173566 23 proxy.go:397] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/pods/agnhost/proxy/some/path/with/HEAD
  I0801 03:04:07.175781 23 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0801 03:04:07.175825 23 proxy.go:397] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/pods/agnhost/proxy/some/path/with/OPTIONS
  I0801 03:04:07.178570 23 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0801 03:04:07.178628 23 proxy.go:397] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/pods/agnhost/proxy/some/path/with/PATCH
  I0801 03:04:07.181292 23 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0801 03:04:07.181336 23 proxy.go:397] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/pods/agnhost/proxy/some/path/with/POST
  I0801 03:04:07.183632 23 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0801 03:04:07.183682 23 proxy.go:397] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/pods/agnhost/proxy/some/path/with/PUT
  I0801 03:04:07.186287 23 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0801 03:04:07.186343 23 proxy.go:408] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/services/test-service/proxy/some/path/with/DELETE
  I0801 03:04:07.189363 23 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0801 03:04:07.189497 23 proxy.go:408] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/services/test-service/proxy/some/path/with/GET
  I0801 03:04:07.194903 23 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0801 03:04:07.194955 23 proxy.go:408] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/services/test-service/proxy/some/path/with/HEAD
  I0801 03:04:07.197981 23 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0801 03:04:07.198027 23 proxy.go:408] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/services/test-service/proxy/some/path/with/OPTIONS
  I0801 03:04:07.200753 23 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0801 03:04:07.200808 23 proxy.go:408] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/services/test-service/proxy/some/path/with/PATCH
  I0801 03:04:07.206648 23 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0801 03:04:07.206709 23 proxy.go:408] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/services/test-service/proxy/some/path/with/POST
  I0801 03:04:07.210836 23 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0801 03:04:07.210896 23 proxy.go:408] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-1532/services/test-service/proxy/some/path/with/PUT
  I0801 03:04:07.215671 23 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0801 03:04:07.215811 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1532" for this suite. @ 08/01/25 03:04:07.218
â€¢ [2.179 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 08/01/25 03:04:07.228
  I0801 03:04:07.228055 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 03:04:07.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:07.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:07.258
  STEP: Creating configMap configmap-3172/configmap-test-9283a081-8ace-4a7a-980c-86564defa537 @ 08/01/25 03:04:07.261
  STEP: Creating a pod to test consume configMaps @ 08/01/25 03:04:07.269
  E0801 03:04:08.086294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:09.087335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:10.087837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:11.087901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:04:11.289
  I0801 03:04:11.292349 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-configmaps-a694415e-2ff0-4976-972c-f45c92946d11 container env-test: <nil>
  STEP: delete the pod @ 08/01/25 03:04:11.298
  I0801 03:04:11.328041 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3172" for this suite. @ 08/01/25 03:04:11.33
â€¢ [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 08/01/25 03:04:11.348
  I0801 03:04:11.348841 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename field-validation @ 08/01/25 03:04:11.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:11.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:11.376
  STEP: apply creating a deployment @ 08/01/25 03:04:11.38
  I0801 03:04:11.394442 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4237" for this suite. @ 08/01/25 03:04:11.431
â€¢ [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 08/01/25 03:04:11.443
  I0801 03:04:11.443049 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename dns @ 08/01/25 03:04:11.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:11.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:11.525
  STEP: Creating a test externalName service @ 08/01/25 03:04:11.529
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-21.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-21.svc.cluster.local; sleep 1; done
   @ 08/01/25 03:04:11.538
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-21.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-21.svc.cluster.local; sleep 1; done
   @ 08/01/25 03:04:11.538
  STEP: creating a pod to probe DNS @ 08/01/25 03:04:11.538
  STEP: submitting the pod to kubernetes @ 08/01/25 03:04:11.538
  E0801 03:04:12.088985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:13.089752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/01/25 03:04:13.562
  STEP: looking for the results for each expected name from probers @ 08/01/25 03:04:13.564
  I0801 03:04:13.591030 23 dns_common.go:571] DNS probes using dns-test-15791018-908c-4d5d-969b-1e5675b86703 succeeded

  STEP: changing the externalName to bar.example.com @ 08/01/25 03:04:13.591
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-21.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-21.svc.cluster.local; sleep 1; done
   @ 08/01/25 03:04:13.605
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-21.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-21.svc.cluster.local; sleep 1; done
   @ 08/01/25 03:04:13.605
  STEP: creating a second pod to probe DNS @ 08/01/25 03:04:13.605
  STEP: submitting the pod to kubernetes @ 08/01/25 03:04:13.605
  E0801 03:04:14.089935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:15.092940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:16.093224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:17.096808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:18.097086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:19.097808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:20.097944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:21.098691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/01/25 03:04:21.654
  STEP: looking for the results for each expected name from probers @ 08/01/25 03:04:21.662
  I0801 03:04:21.674357 23 dns_common.go:571] DNS probes using dns-test-1348f6ea-31c9-4379-b1b7-389986bf6165 succeeded

  STEP: changing the service to type=ClusterIP @ 08/01/25 03:04:21.674
  I0801 03:04:21.710462      23 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-21.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-21.svc.cluster.local; sleep 1; done
   @ 08/01/25 03:04:21.71
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-21.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-21.svc.cluster.local; sleep 1; done
   @ 08/01/25 03:04:21.71
  STEP: creating a third pod to probe DNS @ 08/01/25 03:04:21.71
  STEP: submitting the pod to kubernetes @ 08/01/25 03:04:21.726
  E0801 03:04:22.099737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:23.099938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/01/25 03:04:23.751
  STEP: looking for the results for each expected name from probers @ 08/01/25 03:04:23.754
  I0801 03:04:23.764393 23 dns_common.go:571] DNS probes using dns-test-e3bf7d60-f8af-4f1c-8ea3-9c9181e61f6b succeeded

  STEP: deleting the pod @ 08/01/25 03:04:23.764
  STEP: deleting the pod @ 08/01/25 03:04:23.792
  STEP: deleting the pod @ 08/01/25 03:04:23.814
  STEP: deleting the test externalName service @ 08/01/25 03:04:23.848
  I0801 03:04:23.905828 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-21" for this suite. @ 08/01/25 03:04:23.908
â€¢ [12.471 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 08/01/25 03:04:23.913
  I0801 03:04:23.913785 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename tables @ 08/01/25 03:04:23.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:23.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:23.951
  I0801 03:04:23.955447 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-5317" for this suite. @ 08/01/25 03:04:24.01
â€¢ [0.103 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 08/01/25 03:04:24.016
  I0801 03:04:24.016677 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename server-version @ 08/01/25 03:04:24.017
  E0801 03:04:24.100042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:24.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:24.206
  STEP: Request ServerVersion @ 08/01/25 03:04:24.208
  STEP: Confirm major version @ 08/01/25 03:04:24.209
  I0801 03:04:24.209497 23 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 08/01/25 03:04:24.209
  I0801 03:04:24.209522 23 server_version.go:58] cleanMinorVersion: 33
  I0801 03:04:24.209537 23 server_version.go:62] Minor version: 33
  I0801 03:04:24.209613 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-472" for this suite. @ 08/01/25 03:04:24.211
â€¢ [0.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 08/01/25 03:04:24.243
  I0801 03:04:24.243386 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 03:04:24.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:24.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:24.407
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 08/01/25 03:04:24.41
  E0801 03:04:25.100285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:26.100679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:27.101096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:28.101367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:29.103670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:30.103780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:31.104404      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:32.105279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:33.106261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:34.106363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:35.106812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:36.107070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:37.107623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:38.107621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:04:38.773
  I0801 03:04:38.776010 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod pod-98522597-5aa4-400c-8f73-4bbe9110a32d container test-container: <nil>
  STEP: delete the pod @ 08/01/25 03:04:38.782
  I0801 03:04:38.818744 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1831" for this suite. @ 08/01/25 03:04:38.822
â€¢ [14.588 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 08/01/25 03:04:38.831
  I0801 03:04:38.831936 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename subjectreview @ 08/01/25 03:04:38.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:38.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:38.858
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6117" @ 08/01/25 03:04:38.861
  I0801 03:04:38.869318 23 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-6117:e2e"
  I0801 03:04:38.869370 23 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6117"}
  I0801 03:04:38.869381 23 subjectreviews.go:71] saUID: "bd8f6c75-eb07-4d1a-94b7-a57f2c6b734e"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6117:e2e" @ 08/01/25 03:04:38.869
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6117:e2e" @ 08/01/25 03:04:38.869
  I0801 03:04:38.872025 23 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6117:e2e" api 'list' configmaps in "subjectreview-6117" namespace @ 08/01/25 03:04:38.872
  I0801 03:04:38.873929 23 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6117:e2e" @ 08/01/25 03:04:38.873
  I0801 03:04:38.876764 23 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0801 03:04:38.876808 23 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0801 03:04:38.876959 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-6117" for this suite. @ 08/01/25 03:04:38.922
â€¢ [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 08/01/25 03:04:38.932
  I0801 03:04:38.932757 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename dns @ 08/01/25 03:04:38.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:38.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:38.998
  STEP: Creating a test headless service @ 08/01/25 03:04:39
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6151 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-6151;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6151 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-6151;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6151.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-6151.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6151.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-6151.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6151.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-6151.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6151.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-6151.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6151.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-6151.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6151.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-6151.svc;check="$$(dig +notcp +noall +answer +search 202.75.53.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.53.75.202_udp@PTR;check="$$(dig +tcp +noall +answer +search 202.75.53.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.53.75.202_tcp@PTR;sleep 1; done
   @ 08/01/25 03:04:39.074
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6151 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6151;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6151 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6151;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6151.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6151.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6151.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6151.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6151.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6151.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6151.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6151.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6151.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6151.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6151.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6151.svc;check="$$(dig +notcp +noall +answer +search 202.75.53.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.53.75.202_udp@PTR;check="$$(dig +tcp +noall +answer +search 202.75.53.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.53.75.202_tcp@PTR;sleep 1; done
   @ 08/01/25 03:04:39.074
  STEP: creating a pod to probe DNS @ 08/01/25 03:04:39.074
  STEP: submitting the pod to kubernetes @ 08/01/25 03:04:39.074
  E0801 03:04:39.108288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:40.112666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:41.112908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:42.113730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:43.114163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/01/25 03:04:43.34
  STEP: looking for the results for each expected name from probers @ 08/01/25 03:04:43.342
  I0801 03:04:43.348333 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.351825 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.354859 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6151 from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.357552 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6151 from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.367688 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6151.svc from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.373323 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6151.svc from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.375885 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-6151.svc from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.379093 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-6151.svc from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.399192 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.400956 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.403123 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6151 from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.405032 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6151 from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.406855 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6151.svc from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.408836 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6151.svc from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.411588 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6151.svc from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.414751 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6151.svc from pod dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7: the server could not find the requested resource (get pods dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7)
  I0801 03:04:43.426025 23 dns_common.go:506] Lookups using dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-6151 agnhost_tcp@dns-test-service.dns-6151 agnhost_udp@dns-test-service.dns-6151.svc agnhost_tcp@dns-test-service.dns-6151.svc agnhost_udp@_http._tcp.dns-test-service.dns-6151.svc agnhost_tcp@_http._tcp.dns-test-service.dns-6151.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6151 jessie_tcp@dns-test-service.dns-6151 jessie_udp@dns-test-service.dns-6151.svc jessie_tcp@dns-test-service.dns-6151.svc jessie_udp@_http._tcp.dns-test-service.dns-6151.svc jessie_tcp@_http._tcp.dns-test-service.dns-6151.svc]

  I0801 03:04:43.431250 23 dns_common.go:514] Pod client logs for webserver: 
  I0801 03:04:43.436071 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0801 03:04:43.440858 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0801 03:04:44.114282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:45.114771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:46.114948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:47.115141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:48.115290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:04:48.457319 23 dns_common.go:546] DNS probes using dns-6151/dns-test-debc0a8f-64e3-4659-8f13-49714cc07ca7 succeeded

  STEP: deleting the pod @ 08/01/25 03:04:48.457
  STEP: deleting the test service @ 08/01/25 03:04:48.503
  STEP: deleting the test headless service @ 08/01/25 03:04:48.586
  I0801 03:04:48.617289 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6151" for this suite. @ 08/01/25 03:04:48.625
â€¢ [9.702 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 08/01/25 03:04:48.634
  I0801 03:04:48.634588 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 03:04:48.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:48.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:48.673
  STEP: Creating a job @ 08/01/25 03:04:48.679
  STEP: Ensure pods equal to parallelism count is attached to the job @ 08/01/25 03:04:48.692
  E0801 03:04:49.116031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:50.116871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 08/01/25 03:04:50.7
  STEP: updating /status @ 08/01/25 03:04:50.72
  STEP: get /status @ 08/01/25 03:04:50.74
  I0801 03:04:50.744091 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1653" for this suite. @ 08/01/25 03:04:50.749
â€¢ [2.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 08/01/25 03:04:50.759
  I0801 03:04:50.759152 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 03:04:50.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:50.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:50.797
  STEP: creating a ConfigMap @ 08/01/25 03:04:50.8
  STEP: fetching the ConfigMap @ 08/01/25 03:04:50.816
  STEP: patching the ConfigMap @ 08/01/25 03:04:50.833
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 08/01/25 03:04:50.847
  STEP: deleting the ConfigMap by collection with a label selector @ 08/01/25 03:04:50.85
  STEP: listing all ConfigMaps in test namespace @ 08/01/25 03:04:50.861
  I0801 03:04:50.864655 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5687" for this suite. @ 08/01/25 03:04:50.867
â€¢ [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 08/01/25 03:04:50.876
  I0801 03:04:50.876539 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 03:04:50.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:50.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:50.909
  STEP: Creating configMap configmap-2422/configmap-test-6263b36f-3db6-4c13-bc58-9c74c276a4a1 @ 08/01/25 03:04:50.912
  STEP: Creating a pod to test consume configMaps @ 08/01/25 03:04:50.921
  E0801 03:04:51.117253      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:52.117297      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:53.118307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:54.119236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:04:54.941
  I0801 03:04:54.944094 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-configmaps-a0e71255-21ce-4384-be06-9d93f3567ab2 container env-test: <nil>
  STEP: delete the pod @ 08/01/25 03:04:54.949
  I0801 03:04:54.981447 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2422" for this suite. @ 08/01/25 03:04:54.984
â€¢ [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 08/01/25 03:04:54.996
  I0801 03:04:54.996968 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir-wrapper @ 08/01/25 03:04:54.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:55.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:55.033
  E0801 03:04:55.119712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:56.119736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 08/01/25 03:04:57.099
  STEP: Cleaning up the configmap @ 08/01/25 03:04:57.114
  E0801 03:04:57.120434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the pod @ 08/01/25 03:04:57.124
  I0801 03:04:57.151802 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8526" for this suite. @ 08/01/25 03:04:57.154
â€¢ [2.167 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 08/01/25 03:04:57.164
  I0801 03:04:57.164226 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 03:04:57.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:04:57.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:04:57.195
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 03:04:57.202
  E0801 03:04:58.120666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:04:59.121748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:00.122597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:01.122876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:05:01.229
  I0801 03:05:01.240779 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-2118a4e3-ec84-4d60-b192-4d3d1fb1db51 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 03:05:01.244
  I0801 03:05:01.273756 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9898" for this suite. @ 08/01/25 03:05:01.277
â€¢ [4.124 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 08/01/25 03:05:01.288
  I0801 03:05:01.288472 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 03:05:01.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:05:01.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:05:01.319
  STEP: creating Agnhost RC @ 08/01/25 03:05:01.322
  I0801 03:05:01.322199 23 kubectl.go:1540] namespace kubectl-2404
  I0801 03:05:01.322243 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-2404 create -f -'
  I0801 03:05:01.480989 23 builder.go:146] stderr: ""
  I0801 03:05:01.481041 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/01/25 03:05:01.481
  E0801 03:05:02.124706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:02.486365 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0801 03:05:02.486408 23 framework.go:733] Found 0 / 1
  E0801 03:05:03.125796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:03.484317 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0801 03:05:03.484354 23 framework.go:733] Found 1 / 1
  I0801 03:05:03.484369 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0801 03:05:03.485750 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0801 03:05:03.485776 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0801 03:05:03.485784 23 kubectl.go:1547] wait on agnhost-primary startup in kubectl-2404 
  I0801 03:05:03.485814 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-2404 logs agnhost-primary-sfdgx agnhost-primary'
  I0801 03:05:03.616149 23 builder.go:146] stderr: ""
  I0801 03:05:03.616266 23 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 08/01/25 03:05:03.616
  I0801 03:05:03.616356 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-2404 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0801 03:05:03.754974 23 builder.go:146] stderr: ""
  I0801 03:05:03.755029 23 builder.go:147] stdout: "service/rm2 exposed\n"
  I0801 03:05:03.769138 23 utils.go:1115] Service rm2 in namespace kubectl-2404 found.
  E0801 03:05:04.126675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:05.126961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: exposing service @ 08/01/25 03:05:05.774
  I0801 03:05:05.775042 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-2404 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0801 03:05:05.886942 23 builder.go:146] stderr: ""
  I0801 03:05:05.886991 23 builder.go:147] stdout: "service/rm3 exposed\n"
  I0801 03:05:05.897602 23 utils.go:1115] Service rm3 in namespace kubectl-2404 found.
  E0801 03:05:06.127969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:07.130848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:07.902833 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2404" for this suite. @ 08/01/25 03:05:07.905
â€¢ [6.628 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 08/01/25 03:05:07.917
  I0801 03:05:07.917285 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-probe @ 08/01/25 03:05:07.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:05:07.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:05:07.949
  STEP: Creating pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664 @ 08/01/25 03:05:07.969
  E0801 03:05:08.131259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:09.131366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/01/25 03:05:10.008
  I0801 03:05:10.017515 23 container_probe.go:1748] Initial restart count of pod liveness-7911e062-e77f-4088-8ffb-951aa142514e is 0
  I0801 03:05:10.022034 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:10.131722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:11.131964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:12.031450 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:12.132688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:13.133235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:14.034696 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:14.136437      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:15.135602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:16.037499 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:16.136681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:17.137747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:18.040044 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:18.138483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:19.138670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:20.042976 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:20.139375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:21.139610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:22.045298 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:22.140405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:23.140968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:24.048072 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:24.141183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:25.141278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:26.051254 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:26.141449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:27.141525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:28.055191 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:28.142399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:29.142602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:30.058583 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  I0801 03:05:30.058623 23 container_probe.go:1762] Restart count of pod container-probe-9664/liveness-7911e062-e77f-4088-8ffb-951aa142514e is now 1 (20.041059186s elapsed)
  E0801 03:05:30.142708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:31.142835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:32.061826 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:32.142927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:33.143105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:34.064977 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:34.144043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:35.145149      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:36.068157 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:36.145648      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:37.145989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:38.071298 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:38.146646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:39.147366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:40.075058 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:40.148426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:41.148686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:42.078644 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:42.148824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:43.149789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:44.081382 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:44.150521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:45.150747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:46.083938 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:46.151014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:47.151122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:48.086632 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:48.151196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:49.151428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:50.090724 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  I0801 03:05:50.090773 23 container_probe.go:1762] Restart count of pod container-probe-9664/liveness-7911e062-e77f-4088-8ffb-951aa142514e is now 2 (40.073208543s elapsed)
  E0801 03:05:50.151880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:51.152700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:52.093339 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:52.153573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:53.153771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:54.096235 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:54.154224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:55.154815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:56.098975 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:56.155158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:57.155244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:05:58.101925 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:05:58.156041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:05:59.156548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:00.106007 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:00.157458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:01.157627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:02.117978 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:02.158457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:03.158661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:04.121244 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:04.159597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:05.159680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:06.124224 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:06.160807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:07.160938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:08.127260 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:08.161144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:09.161237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:10.134756 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  I0801 03:06:10.134820 23 container_probe.go:1762] Restart count of pod container-probe-9664/liveness-7911e062-e77f-4088-8ffb-951aa142514e is now 3 (1m0.117254204s elapsed)
  E0801 03:06:10.162171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:11.162516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:12.138264 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:12.162613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:13.162820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:14.141336 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:14.163456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:15.163659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:16.144730 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:16.164309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:17.164432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:18.148526 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:18.164544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:19.164651      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:20.152304 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:20.165422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:21.165512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:22.155564 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:22.165726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:23.165906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:24.160672 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:24.165950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:25.166193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:26.166452      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:26.166583 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:27.167044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:28.167089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:28.182663 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:29.168001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:30.168311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:30.186392 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  I0801 03:06:30.186439 23 container_probe.go:1762] Restart count of pod container-probe-9664/liveness-7911e062-e77f-4088-8ffb-951aa142514e is now 4 (1m20.168873109s elapsed)
  E0801 03:06:31.168971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:32.169703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:32.189582 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:33.170028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:34.170906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:34.192198 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:35.171387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:36.172337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:36.194755 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:37.172733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:38.173083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:38.197219 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:39.173732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:40.173868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:40.200274 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:41.173982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:42.175000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:42.203058 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:43.175123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:44.175862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:44.206012 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:45.176307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:46.176652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:46.208800 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:47.177777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:48.178715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:48.213821 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:49.179733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:50.179989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:50.217045 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:51.180131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:52.180505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:52.220660 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:53.180681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:54.180800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:54.223466 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:55.181777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:56.182006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:56.226883 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:57.182761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:06:58.182946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:06:58.229649 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:06:59.183075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:00.183298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:00.241804 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:01.183509      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:02.183723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:02.246594 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:03.183865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:04.184197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:04.252381 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:05.184899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:06.185797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:06.263747 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:07.187042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:08.187555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:08.269409 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:09.187887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:10.188463      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:10.272058 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:11.188729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:12.189763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:12.275073 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:13.190324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:14.191265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:14.277495 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:15.191468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:16.191680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:16.279854 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:17.192724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:18.193765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:18.282882 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:19.194007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:20.194153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:20.285454 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:21.194263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:22.195049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:22.288095 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:23.195255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:24.195438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:24.290942 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:25.195678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:26.195919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:26.297541 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:27.196430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:28.196613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:28.301064 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  E0801 03:07:29.200336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:30.199799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:30.305279 23 container_probe.go:1758] Get pod liveness-7911e062-e77f-4088-8ffb-951aa142514e in namespace container-probe-9664
  I0801 03:07:30.305329 23 container_probe.go:1762] Restart count of pod container-probe-9664/liveness-7911e062-e77f-4088-8ffb-951aa142514e is now 5 (2m20.287763953s elapsed)
  STEP: deleting the pod @ 08/01/25 03:07:30.305
  I0801 03:07:30.329187 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9664" for this suite. @ 08/01/25 03:07:30.35
â€¢ [142.451 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 08/01/25 03:07:30.368
  I0801 03:07:30.368723 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename secrets @ 08/01/25 03:07:30.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:07:30.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:07:30.422
  STEP: Creating secret with name secret-test-f9f10d18-62e6-4405-9350-c23db55df4e2 @ 08/01/25 03:07:30.427
  STEP: Creating a pod to test consume secrets @ 08/01/25 03:07:30.436
  E0801 03:07:31.200252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:32.200472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:33.201490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:34.201688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:07:34.48
  I0801 03:07:34.482895 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-secrets-766e4398-b9d4-4a10-9edd-4ef349fb6730 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 03:07:34.494
  I0801 03:07:34.524544 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7496" for this suite. @ 08/01/25 03:07:34.527
â€¢ [4.176 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 08/01/25 03:07:34.544
  I0801 03:07:34.544355 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename statefulset @ 08/01/25 03:07:34.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:07:34.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:07:34.568
  STEP: Creating service test in namespace statefulset-9597 @ 08/01/25 03:07:34.571
  I0801 03:07:34.594985 23 wait.go:44] Found 0 stateful pods, waiting for 1
  E0801 03:07:35.201838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:36.202024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:37.202279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:38.202410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:39.202650      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:40.203325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:41.203527      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:42.203610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:43.204368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:44.204591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:44.596255 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 08/01/25 03:07:44.599
  I0801 03:07:44.630155 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0801 03:07:44.630193 23 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0801 03:07:45.204694      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:46.205683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:47.205898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:48.206341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:49.206982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:50.207164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:51.207355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:52.207703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:53.207956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:54.208035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:07:54.612760 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0801 03:07:54.612808 23 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 08/01/25 03:07:54.617
  STEP: Delete all of the StatefulSets @ 08/01/25 03:07:54.619
  STEP: Verify that StatefulSets have been deleted @ 08/01/25 03:07:54.629
  I0801 03:07:54.631685 23 statefulset.go:138] Deleting all statefulset in ns statefulset-9597
  I0801 03:07:54.638404 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9597" for this suite. @ 08/01/25 03:07:54.654
â€¢ [20.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 08/01/25 03:07:54.673
  I0801 03:07:54.673651 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pods @ 08/01/25 03:07:54.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:07:54.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:07:54.709
  E0801 03:07:55.208889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:56.211113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:57.212286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:58.212428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:07:59.213257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:00.213853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:08:00.829
  I0801 03:08:00.831773 23 output.go:207] Trying to get logs from node k3k-k3kcluster-server-0 pod client-envvars-bea2add7-9450-4006-98f3-2ec0996881d5 container env3cont: <nil>
  STEP: delete the pod @ 08/01/25 03:08:00.839
  I0801 03:08:00.884385 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4551" for this suite. @ 08/01/25 03:08:00.891
â€¢ [6.241 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 08/01/25 03:08:00.915
  I0801 03:08:00.915089 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename sched-preemption @ 08/01/25 03:08:00.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:08:00.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:08:00.941
  I0801 03:08:00.986878 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0801 03:08:01.214359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:02.214562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:03.215366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:04.215499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:05.216604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:06.216778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:07.217605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:08.218803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:09.218936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:10.219226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:11.219882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:12.220913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:13.223305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:14.224427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:15.224565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:16.224702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:17.225787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:18.226873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:19.227836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:20.227931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:21.228524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:22.230378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:23.231036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:24.231352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:25.231555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:26.232374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:27.233170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:28.233778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:29.234817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:30.235445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:31.236364      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:32.236594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:33.236668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:34.238132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:35.238601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:36.238864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:37.239336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:38.239910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:39.240898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:40.240969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:41.241473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:42.241695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:43.242075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:44.242277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:45.242506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:46.242853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:47.243507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:48.244019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:49.245000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:50.245224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:51.245900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:52.246128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:53.246610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:54.246770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:55.246863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:56.247055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:57.248089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:58.248346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:08:59.249133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:00.250258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:00.992308 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 08/01/25 03:09:00.994
  STEP: Adding a custom resource @ 08/01/25 03:09:00.994
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 08/01/25 03:09:01.011
  I0801 03:09:01.030600 23 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 08/01/25 03:09:01.03
  E0801 03:09:01.252090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:02.252837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 08/01/25 03:09:03.047
  I0801 03:09:03.066065 23 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 08/01/25 03:09:03.066
  E0801 03:09:03.253754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:04.256666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 08/01/25 03:09:05.077
  I0801 03:09:05.080569 23 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0801 03:09:05.256761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:05.606302 23 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 08/01/25 03:09:05.662
  STEP: Removing a custom resource @ 08/01/25 03:09:05.687
  I0801 03:09:05.708626 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4601" for this suite. @ 08/01/25 03:09:05.712
â€¢ [64.806 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 08/01/25 03:09:05.721
  I0801 03:09:05.721113 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-probe @ 08/01/25 03:09:05.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:09:05.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:09:05.765
  STEP: Creating pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114 @ 08/01/25 03:09:05.769
  E0801 03:09:06.257193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:07.257782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/01/25 03:09:07.798
  I0801 03:09:07.800070 23 container_probe.go:1748] Initial restart count of pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a is 0
  I0801 03:09:07.801699 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:08.258615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:09.258969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:09.805788 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:10.259246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:11.259575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:11.807520 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:12.260637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:13.260688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:13.817954 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:14.261784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:15.261856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:15.821911 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:16.262359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:17.262664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:17.825187 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:18.262996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:19.263117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:19.833138 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:20.263493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:21.263578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:21.840526 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:22.264032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:23.264465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:23.844827 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:24.268466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:25.270115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:25.850012 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:26.270221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:27.271286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:27.854753 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:28.271167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:29.271696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:29.858113 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:30.272462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:31.272744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:31.860837 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:32.273283      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:33.273744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:33.863651 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:34.274067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:35.274849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:35.872738 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:36.275155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:37.275389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:37.875661 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:38.276111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:39.276581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:39.879471 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:40.276630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:41.276720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:41.882079 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:42.277667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:43.277880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:43.884712 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:44.278071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:45.278361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:45.888043 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:46.278425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:47.278952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:47.890896 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:48.279034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:49.279524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:49.894019 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:50.280119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:51.280463      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:51.898418 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:52.281133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:53.281829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:53.902066 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:54.282492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:55.282798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:55.906108 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:56.283492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:57.283726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:57.909189 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:09:58.284629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:09:59.284710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:09:59.912925 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:00.285177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:01.286099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:01.920234 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:02.286599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:03.289885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:03.924759 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:04.287468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:05.287802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:05.929327 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:06.289029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:07.289214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:07.933619 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:08.289790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:09.290130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:09.937278 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:10.290429      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:11.290673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:11.941494 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:12.290872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:13.290945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:13.949065 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:14.291257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:15.291629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:15.952726 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:16.292672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:17.292850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:17.964884 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:18.293454      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:19.294364      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:19.967890 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:20.295437      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:21.295844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:21.971350 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:22.296924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:23.296962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:23.974780 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:24.299233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:25.299565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:25.978123 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:26.300594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:27.300735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:27.987140 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:28.301832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:29.302951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:29.991846 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:30.306299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:31.306674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:31.995229 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:32.307736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:33.307832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:33.998148 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:34.308810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:35.309863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:36.001416 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:36.310794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:37.311159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:38.009235 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:38.311652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:39.311931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:40.013187 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:40.312584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:41.312654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:42.017089 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:42.313488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:43.313675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:44.020191 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:44.314394      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:45.315474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:46.023498 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:46.315774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:47.315976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:48.027286 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:48.316707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:49.316774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:50.031163 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:50.317474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:51.317652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:52.034413 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:52.318513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:53.319058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:54.036758 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:54.319169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:55.319358      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:56.039866 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:56.320410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:57.320641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:10:58.042409 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:10:58.321820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:10:59.322768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:00.045031 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:00.323436      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:01.323521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:02.047782 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:02.324906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:03.325717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:04.051481 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:04.325914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:05.325993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:06.055207 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:06.326703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:07.327584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:08.067442 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:08.328731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:09.328946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:10.078236 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:10.329349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:11.329746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:12.082123 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:12.330614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:13.330738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:14.102145 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:14.331791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:15.332047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:16.105902 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:16.333082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:17.333940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:18.118753 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:18.334230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:19.334482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:20.131239 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:20.334866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:21.338473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:22.136089 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:22.335667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:23.335885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:24.139996 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:24.336348      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:25.336565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:26.143990 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:26.337499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:27.337709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:28.147613 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:28.337822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:29.338036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:30.150675 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:30.338898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:31.339170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:32.154518 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:32.339791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:33.339931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:34.159017 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:34.339974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:35.340767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:36.165425 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:36.341781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:37.341973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:38.168548 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:38.344088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:39.344296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:40.171580 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:40.345006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:41.345091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:42.175897 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:42.346844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:43.345948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:44.180591 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:44.346791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:45.346950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:46.185310 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:46.347569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:47.347876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:48.188100 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:48.348402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:49.348673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:50.191356 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:50.348853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:51.348998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:52.194051 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:52.349419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:53.349880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:54.196325 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:54.350604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:55.350910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:56.199104 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:56.351203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:57.351435      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:11:58.202238 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:11:58.351700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:11:59.351967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:00.204743 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:00.352041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:01.352834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:02.207794 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:02.352926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:03.355137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:04.219209 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:04.355662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:05.355921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:06.224455 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:06.356778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:07.358260      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:08.238393 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:08.359034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:09.359188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:10.245287 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:10.359178      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:11.359771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:12.249621 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:12.360847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:13.362609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:14.266492 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:14.363549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:15.364032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:16.269523 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:16.364677      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:17.364729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:18.274358 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:18.365647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:19.366004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:20.281455 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:20.366587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:21.366755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:22.283724 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:22.366811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:23.367543      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:24.286112 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:24.367275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:25.367960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:26.288855 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:26.367960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:27.368243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:28.293042 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:28.369200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:29.369364      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:30.301557 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:30.375300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:31.375708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:32.306232 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:32.376376      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:33.376771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:34.310099 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:34.377285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:35.377747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:36.313651 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:36.378831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:37.380341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:38.318798 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:38.380226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:39.380744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:40.323822 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:40.380796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:41.380928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:42.328040 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:42.381038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:43.381279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:44.331473 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:44.381750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:45.382818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:46.337421 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:46.383685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:47.384370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:48.340807 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:48.385149      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:49.385740      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:50.344903 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:50.387143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:51.386413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:52.348841 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:52.386975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:53.387764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:54.351984 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:54.388333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:55.388592      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:56.354698 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:56.389114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:57.389754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:12:58.357215 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:12:58.390558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:12:59.390651      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:00.359404 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:13:00.391924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:01.392843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:02.362396 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:13:02.393633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:03.393987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:04.364974 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:13:04.395359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:05.395731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:06.369781 23 container_probe.go:1758] Get pod test-grpc-4f6d045a-09aa-4a69-9bd7-0a65b178330a in namespace container-probe-7114
  E0801 03:13:06.395837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:07.395932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 08/01/25 03:13:08.37
  E0801 03:13:08.396975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:08.410585 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7114" for this suite. @ 08/01/25 03:13:08.416
â€¢ [242.710 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 08/01/25 03:13:08.432
  I0801 03:13:08.432322 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 03:13:08.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:13:08.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:13:08.456
  STEP: creating a collection of services @ 08/01/25 03:13:08.465
  I0801 03:13:08.465201 23 service.go:3666] Creating e2e-svc-a-cq2dp
  I0801 03:13:08.512102 23 service.go:3666] Creating e2e-svc-b-mg2bs
  I0801 03:13:08.563592 23 service.go:3666] Creating e2e-svc-c-dbblp
  STEP: deleting service collection @ 08/01/25 03:13:08.609
  I0801 03:13:08.720423 23 service.go:3701] Collection of services has been deleted
  I0801 03:13:08.720666 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1205" for this suite. @ 08/01/25 03:13:08.724
â€¢ [0.309 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 08/01/25 03:13:08.742
  I0801 03:13:08.742263 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename runtimeclass @ 08/01/25 03:13:08.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:13:08.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:13:08.765
  I0801 03:13:08.793848 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9687" for this suite. @ 08/01/25 03:13:08.826
â€¢ [0.104 seconds]
------------------------------
S
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 08/01/25 03:13:08.846
  I0801 03:13:08.846234 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename fake-node @ 08/01/25 03:13:08.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:13:08.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:13:08.882
  STEP: Create "e2e-fake-node-ql88v" @ 08/01/25 03:13:08.89
  STEP: Getting "e2e-fake-node-ql88v" @ 08/01/25 03:13:08.908
  STEP: Patching "e2e-fake-node-ql88v" @ 08/01/25 03:13:08.915
  STEP: Listing nodes with LabelSelector "e2e-fake-node-ql88v=patched" @ 08/01/25 03:13:08.931
  STEP: Updating "e2e-fake-node-ql88v" @ 08/01/25 03:13:08.947
  STEP: Delete "e2e-fake-node-ql88v" @ 08/01/25 03:13:09.029
  STEP: Confirm deletion of "e2e-fake-node-ql88v" @ 08/01/25 03:13:09.05
  E0801 03:13:09.397498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:10.399306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:11.398062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:12.399081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:13.399334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:14.060685 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-4018" for this suite. @ 08/01/25 03:13:14.066
â€¢ [5.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 08/01/25 03:13:14.081
  I0801 03:13:14.081714 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 03:13:14.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:13:14.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:13:14.118
  STEP: Creating configMap that has name configmap-test-emptyKey-d3c7d354-05e7-4192-b831-b6f5e62fbfb3 @ 08/01/25 03:13:14.126
  I0801 03:13:14.131250 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7524" for this suite. @ 08/01/25 03:13:14.166
â€¢ [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 08/01/25 03:13:14.186
  I0801 03:13:14.186688 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 03:13:14.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:13:14.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:13:14.228
  STEP: Setting up server cert @ 08/01/25 03:13:14.262
  E0801 03:13:14.400028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 03:13:14.629
  STEP: Deploying the webhook pod @ 08/01/25 03:13:14.658
  STEP: Wait for the deployment to be ready @ 08/01/25 03:13:14.682
  I0801 03:13:14.690071 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0801 03:13:15.400568      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:16.400746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/01/25 03:13:16.699
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 03:13:16.735
  E0801 03:13:17.401681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:17.735205 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 08/01/25 03:13:17.738
  STEP: verifying the validating webhook match conditions @ 08/01/25 03:13:17.754
  STEP: updating the validating webhook match conditions @ 08/01/25 03:13:17.765
  STEP: verifying the validating webhook match conditions @ 08/01/25 03:13:17.786
  I0801 03:13:17.893758 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8877" for this suite. @ 08/01/25 03:13:17.896
  STEP: Destroying namespace "webhook-markers-2962" for this suite. @ 08/01/25 03:13:17.906
â€¢ [3.736 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 08/01/25 03:13:17.923
  I0801 03:13:17.923466 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 03:13:17.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:13:17.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:13:17.966
  STEP: creating service multi-endpoint-test in namespace services-5864 @ 08/01/25 03:13:17.97
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5864 to expose endpoints map[] @ 08/01/25 03:13:18.017
  I0801 03:13:18.022790      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 03:13:18.022874 23 service.go:4613] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0801 03:13:18.401818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:19.025755      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 03:13:19.029591 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5864 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5864 @ 08/01/25 03:13:19.029
  E0801 03:13:19.402596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:20.402912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5864 to expose endpoints map[pod1:[100]] @ 08/01/25 03:13:21.05
  I0801 03:13:21.057157      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 03:13:21.061244 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5864 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5864 @ 08/01/25 03:13:21.061
  E0801 03:13:21.403078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:22.403185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5864 to expose endpoints map[pod1:[100] pod2:[101]] @ 08/01/25 03:13:23.091
  I0801 03:13:23.098293      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 03:13:23.101882 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5864 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 08/01/25 03:13:23.101
  I0801 03:13:23.101960 23 resource.go:361] Creating new exec pod
  E0801 03:13:23.403759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:24.404712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:25.151619 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5864 exec execpodwst7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0801 03:13:25.347126 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.53.104.182) 80 port [tcp/http] succeeded!\n"
  I0801 03:13:25.347206 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 03:13:25.347298 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5864 exec execpodwst7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.104.182 80'
  E0801 03:13:25.404728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:25.527605 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.104.182 80\nConnection to 10.53.104.182 80 port [tcp/http] succeeded!\n"
  I0801 03:13:25.527668 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 03:13:25.527762 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5864 exec execpodwst7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0801 03:13:25.710924 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.53.104.182) 81 port [tcp/*] succeeded!\n"
  I0801 03:13:25.710976 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0801 03:13:25.711054 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-5864 exec execpodwst7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.104.182 81'
  I0801 03:13:25.873295 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.104.182 81\nConnection to 10.53.104.182 81 port [tcp/*] succeeded!\n"
  I0801 03:13:25.873350 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5864 @ 08/01/25 03:13:25.873
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5864 to expose endpoints map[pod2:[101]] @ 08/01/25 03:13:25.927
  I0801 03:13:25.935572      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 03:13:25.939945 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5864 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5864 @ 08/01/25 03:13:25.94
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5864 to expose endpoints map[] @ 08/01/25 03:13:26.003
  I0801 03:13:26.006922      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 03:13:26.021243 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5864 exposes endpoints map[]
  I0801 03:13:26.082174 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5864" for this suite. @ 08/01/25 03:13:26.085
â€¢ [8.175 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 08/01/25 03:13:26.098
  I0801 03:13:26.098267 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename replicaset @ 08/01/25 03:13:26.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:13:26.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:13:26.137
  STEP: Create a Replicaset @ 08/01/25 03:13:26.154
  STEP: Verify that the required pods have come up. @ 08/01/25 03:13:26.17
  I0801 03:13:26.175287 23 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0801 03:13:26.410167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:27.410864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:28.411103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:29.411338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:30.411584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:31.209470 23 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/01/25 03:13:31.209
  STEP: Getting /status @ 08/01/25 03:13:31.209
  I0801 03:13:31.212918 23 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 08/01/25 03:13:31.213
  I0801 03:13:31.231783 23 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 08/01/25 03:13:31.231
  I0801 03:13:31.234065 23 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0801 03:13:31.234172 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0801 03:13:31.234250 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0801 03:13:31.234475 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0801 03:13:31.234512 23 replica_set.go:688] Found replicaset test-rs in namespace replicaset-8343 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0801 03:13:31.234529 23 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 08/01/25 03:13:31.234
  I0801 03:13:31.234574 23 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0801 03:13:31.243635 23 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 08/01/25 03:13:31.243
  I0801 03:13:31.245565 23 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0801 03:13:31.245660 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0801 03:13:31.245735 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0801 03:13:31.245874 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0801 03:13:31.245912 23 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-8343 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0801 03:13:31.245976 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0801 03:13:31.245998 23 replica_set.go:724] Found replicaset test-rs in namespace replicaset-8343 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0801 03:13:31.246010 23 replica_set.go:735] Replicaset test-rs has a patched status
  I0801 03:13:31.246092 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8343" for this suite. @ 08/01/25 03:13:31.248
â€¢ [5.159 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 08/01/25 03:13:31.257
  I0801 03:13:31.257097 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 03:13:31.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:13:31.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:13:31.301
  STEP: Creating a pod to test downward api env vars @ 08/01/25 03:13:31.307
  E0801 03:13:31.413080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:32.414028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:33.415082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:34.415494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:13:35.354
  I0801 03:13:35.358130 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downward-api-c591bb9f-ec2f-4ce8-a0e5-9e702805bdb0 container dapi-container: <nil>
  STEP: delete the pod @ 08/01/25 03:13:35.387
  E0801 03:13:35.415904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:35.429038 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7064" for this suite. @ 08/01/25 03:13:35.432
â€¢ [4.188 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 08/01/25 03:13:35.444
  I0801 03:13:35.444856 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename daemonsets @ 08/01/25 03:13:35.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:13:35.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:13:35.487
  I0801 03:13:35.566686 23 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0801 03:13:35.583722 23 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0801 03:13:35.653992 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 03:13:35.654152 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  E0801 03:13:36.417854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:36.601032 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 03:13:36.601165 23 fixtures.go:131] Node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc is running 0 daemon pod, expected 1
  E0801 03:13:37.418920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:37.598307 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0801 03:13:37.598351 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0801 03:13:37.598367 23 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0801 03:13:37.610225 23 daemon_set.go:102] Updating DaemonSet daemon-set
  E0801 03:13:38.419444      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:39.421474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:40.421635      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:40.739339 23 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0801 03:13:40.751630 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0801 03:13:40.751692 23 daemon_set.go:499] Make sure DaemonSet rollback is complete
  E0801 03:13:41.421990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:42.423001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:42.754567 23 daemon_set.go:1198] Pod daemon-set-j2tq7 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 08/01/25 03:13:42.76
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2095, will wait for the garbage collector to delete the pods @ 08/01/25 03:13:42.76
  I0801 03:13:42.825603 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.318535ms
  I0801 03:13:42.926821 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.218481ms
  E0801 03:13:43.424042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:44.424426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:44.530671 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 03:13:44.530711 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0801 03:13:44.533904 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37357"},"items":null}

  I0801 03:13:44.536704 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37357"},"items":null}

  I0801 03:13:44.553763 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2095" for this suite. @ 08/01/25 03:13:44.641
â€¢ [9.207 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 08/01/25 03:13:44.652
  I0801 03:13:44.652749 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 03:13:44.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:13:44.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:13:44.675
  STEP: Setting up server cert @ 08/01/25 03:13:44.741
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 03:13:45.057
  STEP: Deploying the webhook pod @ 08/01/25 03:13:45.072
  STEP: Wait for the deployment to be ready @ 08/01/25 03:13:45.094
  I0801 03:13:45.111162 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0801 03:13:45.424643      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:46.424948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/01/25 03:13:47.118
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 03:13:47.161
  E0801 03:13:47.425892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:48.161599 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 08/01/25 03:13:48.166
  STEP: Creating a custom resource definition that should be denied by the webhook @ 08/01/25 03:13:48.193
  I0801 03:13:48.193340 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 03:13:48.330546 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8054" for this suite. @ 08/01/25 03:13:48.339
  STEP: Destroying namespace "webhook-markers-1533" for this suite. @ 08/01/25 03:13:48.349
â€¢ [3.707 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 08/01/25 03:13:48.359
  I0801 03:13:48.359716 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename watch @ 08/01/25 03:13:48.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:13:48.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:13:48.393
  STEP: getting a starting resourceVersion @ 08/01/25 03:13:48.397
  STEP: starting a background goroutine to produce watch events @ 08/01/25 03:13:48.401
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 08/01/25 03:13:48.401
  E0801 03:13:48.425942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:49.426447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:50.426783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:51.169195 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-40" for this suite. @ 08/01/25 03:13:51.215
â€¢ [2.912 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 08/01/25 03:13:51.271
  I0801 03:13:51.271899 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 03:13:51.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:13:51.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:13:51.307
  STEP: Setting up server cert @ 08/01/25 03:13:51.342
  E0801 03:13:51.426877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 03:13:52.055
  STEP: Deploying the webhook pod @ 08/01/25 03:13:52.064
  STEP: Wait for the deployment to be ready @ 08/01/25 03:13:52.101
  I0801 03:13:52.131299 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0801 03:13:52.427140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:53.427370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/01/25 03:13:54.15
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 03:13:54.179
  E0801 03:13:54.428054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:55.180052 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0801 03:13:55.183795 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  E0801 03:13:55.428630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1367-crds.webhook.example.com via the AdmissionRegistration API @ 08/01/25 03:13:55.7
  STEP: Creating a custom resource that should be mutated by the webhook @ 08/01/25 03:13:55.723
  E0801 03:13:56.429616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:13:57.429848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:13:58.390334 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9531" for this suite. @ 08/01/25 03:13:58.393
  STEP: Destroying namespace "webhook-markers-1169" for this suite. @ 08/01/25 03:13:58.402
â€¢ [7.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 08/01/25 03:13:58.411
  I0801 03:13:58.411962 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 03:13:58.412
  E0801 03:13:58.430114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:13:58.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:13:58.444
  STEP: Creating configMap with name configmap-test-volume-65298a24-887b-4a99-8577-c509f369dae3 @ 08/01/25 03:13:58.446
  STEP: Creating a pod to test consume configMaps @ 08/01/25 03:13:58.454
  E0801 03:13:59.430300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:00.430643      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:01.430890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:02.431977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:14:02.499
  I0801 03:14:02.502893 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-configmaps-63098144-55ff-4117-bb02-d6ee6b9b117a container configmap-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 03:14:02.509
  I0801 03:14:02.541151 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3386" for this suite. @ 08/01/25 03:14:02.545
â€¢ [4.149 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 08/01/25 03:14:02.563
  I0801 03:14:02.563316 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename events @ 08/01/25 03:14:02.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:14:02.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:14:02.591
  STEP: creating a test event @ 08/01/25 03:14:02.594
  STEP: listing all events in all namespaces @ 08/01/25 03:14:02.604
  STEP: patching the test event @ 08/01/25 03:14:02.607
  STEP: fetching the test event @ 08/01/25 03:14:02.621
  STEP: updating the test event @ 08/01/25 03:14:02.628
  STEP: getting the test event @ 08/01/25 03:14:02.669
  STEP: deleting the test event @ 08/01/25 03:14:02.672
  STEP: listing all events in all namespaces @ 08/01/25 03:14:02.689
  I0801 03:14:02.693060 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-43" for this suite. @ 08/01/25 03:14:02.697
â€¢ [0.145 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 08/01/25 03:14:02.707
  I0801 03:14:02.707309 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename configmap @ 08/01/25 03:14:02.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:14:02.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:14:02.76
  STEP: Creating configMap with name configmap-test-volume-map-27bb291f-cd12-49d2-9a4b-cbf2874a8d31 @ 08/01/25 03:14:02.763
  STEP: Creating a pod to test consume configMaps @ 08/01/25 03:14:02.773
  E0801 03:14:03.432098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:04.432503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:05.432832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:06.432978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:14:06.819
  I0801 03:14:06.826469 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-configmaps-512221fd-93dd-4980-a3db-a5c5b0d4c3cf container agnhost-container: <nil>
  STEP: delete the pod @ 08/01/25 03:14:06.836
  I0801 03:14:06.885083 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8890" for this suite. @ 08/01/25 03:14:06.891
â€¢ [4.205 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 08/01/25 03:14:06.912
  I0801 03:14:06.912856 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 03:14:06.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:14:06.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:14:06.968
  STEP: Creating a pod to test downward api env vars @ 08/01/25 03:14:06.976
  E0801 03:14:07.435649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:08.435789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:09.436295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:10.436552      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:14:10.998
  I0801 03:14:11.000414 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downward-api-932ea6f8-fc5e-44b0-ae7a-cc1ba1dcfe83 container dapi-container: <nil>
  STEP: delete the pod @ 08/01/25 03:14:11.005
  I0801 03:14:11.041571 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7118" for this suite. @ 08/01/25 03:14:11.044
â€¢ [4.142 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 08/01/25 03:14:11.054
  I0801 03:14:11.054945 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename field-validation @ 08/01/25 03:14:11.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:14:11.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:14:11.082
  STEP: apply creating a deployment @ 08/01/25 03:14:11.084
  I0801 03:14:11.103153 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2029" for this suite. @ 08/01/25 03:14:11.146
â€¢ [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 08/01/25 03:14:11.155
  I0801 03:14:11.155936 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 03:14:11.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:14:11.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:14:11.185
  STEP: create deployment with httpd image @ 08/01/25 03:14:11.189
  I0801 03:14:11.190079 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-4888 create -f -'
  I0801 03:14:11.324185 23 builder.go:146] stderr: ""
  I0801 03:14:11.324222 23 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 08/01/25 03:14:11.324
  I0801 03:14:11.324312 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-4888 diff -f -'
  E0801 03:14:11.446155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:12.437062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:13.437801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:14.438002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:15.438245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:14:15.869768 23 builder.go:135] rc: 1
  I0801 03:14:15.869917 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-4888 delete -f -'
  I0801 03:14:15.979453 23 builder.go:146] stderr: ""
  I0801 03:14:15.979505 23 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0801 03:14:15.979675 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4888" for this suite. @ 08/01/25 03:14:15.987
â€¢ [4.847 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 08/01/25 03:14:16.003
  I0801 03:14:16.003102 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename watch @ 08/01/25 03:14:16.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:14:16.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:14:16.033
  STEP: creating a watch on configmaps with a certain label @ 08/01/25 03:14:16.036
  STEP: creating a new configmap @ 08/01/25 03:14:16.037
  STEP: modifying the configmap once @ 08/01/25 03:14:16.045
  STEP: changing the label value of the configmap @ 08/01/25 03:14:16.069
  STEP: Expecting to observe a delete notification for the watched object @ 08/01/25 03:14:16.098
  I0801 03:14:16.098544 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2575  eb5f39be-9c22-4df3-9a9e-8ebc0d6fa02e 37852 0 2025-08-01 03:14:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-08-01 03:14:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 03:14:16.098734 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2575  eb5f39be-9c22-4df3-9a9e-8ebc0d6fa02e 37853 0 2025-08-01 03:14:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-08-01 03:14:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 03:14:16.098832 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2575  eb5f39be-9c22-4df3-9a9e-8ebc0d6fa02e 37854 0 2025-08-01 03:14:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-08-01 03:14:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 08/01/25 03:14:16.098
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 08/01/25 03:14:16.134
  E0801 03:14:16.439140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:17.440729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:18.441094      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:19.441250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:20.441709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:21.442077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:22.442159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:23.442240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:24.442554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:25.442805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 08/01/25 03:14:26.134
  STEP: modifying the configmap a third time @ 08/01/25 03:14:26.15
  STEP: deleting the configmap @ 08/01/25 03:14:26.164
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 08/01/25 03:14:26.175
  I0801 03:14:26.175156 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2575  eb5f39be-9c22-4df3-9a9e-8ebc0d6fa02e 37910 0 2025-08-01 03:14:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-08-01 03:14:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 03:14:26.175270 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2575  eb5f39be-9c22-4df3-9a9e-8ebc0d6fa02e 37911 0 2025-08-01 03:14:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-08-01 03:14:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 03:14:26.175398 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2575  eb5f39be-9c22-4df3-9a9e-8ebc0d6fa02e 37912 0 2025-08-01 03:14:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-08-01 03:14:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 03:14:26.175650 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2575" for this suite. @ 08/01/25 03:14:26.179
â€¢ [10.187 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 08/01/25 03:14:26.189
  I0801 03:14:26.189887 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 03:14:26.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:14:26.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:14:26.229
  STEP: Creating projection with secret that has name projected-secret-test-038f1901-1730-49ae-a1a2-fc08f72bdcbb @ 08/01/25 03:14:26.234
  STEP: Creating a pod to test consume secrets @ 08/01/25 03:14:26.243
  E0801 03:14:26.443550      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:27.444158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:28.444195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:29.444778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:14:30.271
  I0801 03:14:30.274217 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-projected-secrets-5719c6db-a210-4b7f-bbc1-830ef433be28 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 03:14:30.279
  I0801 03:14:30.306170 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9789" for this suite. @ 08/01/25 03:14:30.309
â€¢ [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 08/01/25 03:14:30.33
  I0801 03:14:30.330235 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 03:14:30.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:14:30.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:14:30.375
  I0801 03:14:30.382323      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 08/01/25 03:14:30.382
  I0801 03:14:30.394272      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 08/01/25 03:14:30.394
  I0801 03:14:30.395959      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 08/01/25 03:14:30.396
  I0801 03:14:30.398801      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 08/01/25 03:14:30.398
  I0801 03:14:30.409054      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 03:14:30.411525      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 08/01/25 03:14:30.411
  I0801 03:14:30.414369      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 08/01/25 03:14:30.414
  I0801 03:14:30.430369      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 03:14:30.433460      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 08/01/25 03:14:30.433
  I0801 03:14:30.439963      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 08/01/25 03:14:30.44
  E0801 03:14:30.445374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:14:30.450106      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 08/01/25 03:14:30.45
  I0801 03:14:30.454903      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 08/01/25 03:14:30.455
  I0801 03:14:30.457849      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 03:14:30.458238 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4535" for this suite. @ 08/01/25 03:14:30.461
â€¢ [0.147 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 08/01/25 03:14:30.477
  I0801 03:14:30.477328 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 03:14:30.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:14:30.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:14:30.514
  STEP: Creating configMap with name projected-configmap-test-volume-fd53d067-e7b9-4ef9-b1d7-514d817ef6e6 @ 08/01/25 03:14:30.521
  STEP: Creating a pod to test consume configMaps @ 08/01/25 03:14:30.552
  E0801 03:14:31.445963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:32.446972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:33.447136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:34.447472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:14:34.582
  I0801 03:14:34.585248 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-projected-configmaps-9606af25-1ad7-44fc-8c96-288b17976a89 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 03:14:34.59
  I0801 03:14:34.625941 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3454" for this suite. @ 08/01/25 03:14:34.629
â€¢ [4.173 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 08/01/25 03:14:34.651
  I0801 03:14:34.651262 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename projected @ 08/01/25 03:14:34.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:14:34.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:14:34.678
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 03:14:34.68
  E0801 03:14:35.450651      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:36.450774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:37.451466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:38.451735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:14:38.709
  I0801 03:14:38.712941 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-b817bc45-445c-495a-939a-a65f5a70ac99 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 03:14:38.731
  I0801 03:14:38.793696 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6167" for this suite. @ 08/01/25 03:14:38.797
â€¢ [4.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 08/01/25 03:14:38.814
  I0801 03:14:38.814312 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pods @ 08/01/25 03:14:38.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:14:38.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:14:38.839
  STEP: creating the pod @ 08/01/25 03:14:38.842
  STEP: submitting the pod to kubernetes @ 08/01/25 03:14:38.842
  E0801 03:14:39.452001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:40.453075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 08/01/25 03:14:40.873
  STEP: updating the pod @ 08/01/25 03:14:40.878
  I0801 03:14:41.399649 23 pod_client.go:173] Successfully updated pod "pod-update-e563f0a9-c21f-4ef7-89c5-fae883c8742a"
  STEP: verifying the updated pod is in kubernetes @ 08/01/25 03:14:41.402
  I0801 03:14:41.404550 23 pods.go:391] Pod update OK
  I0801 03:14:41.404695 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8094" for this suite. @ 08/01/25 03:14:41.406
â€¢ [2.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 08/01/25 03:14:41.422
  I0801 03:14:41.422252 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename lease-test @ 08/01/25 03:14:41.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:14:41.453
  E0801 03:14:41.453853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:14:41.458
  I0801 03:14:41.577570 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9209" for this suite. @ 08/01/25 03:14:41.581
â€¢ [0.181 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 08/01/25 03:14:41.603
  I0801 03:14:41.603751 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename statefulset @ 08/01/25 03:14:41.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:14:41.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:14:41.638
  STEP: Creating service test in namespace statefulset-3059 @ 08/01/25 03:14:41.64
  STEP: Creating a new StatefulSet @ 08/01/25 03:14:41.66
  I0801 03:14:41.678287 23 wait.go:44] Found 0 stateful pods, waiting for 3
  E0801 03:14:42.454206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:43.458610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:44.457891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:45.459341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:46.462265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:47.462894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:48.463343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:49.463726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:50.466941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:51.467954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:14:51.695064 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0801 03:14:51.695119 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0801 03:14:51.695132 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 08/01/25 03:14:51.705
  I0801 03:14:51.720667 23 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 08/01/25 03:14:51.72
  E0801 03:14:52.468387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:53.468654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:54.469806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:55.470634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:56.471209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:57.471753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:58.472082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:14:59.472319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:00.472451      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:01.472831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 08/01/25 03:15:01.727
  STEP: Performing a canary update @ 08/01/25 03:15:01.727
  I0801 03:15:01.761534 23 statefulset.go:2542] Updating stateful set ss2
  I0801 03:15:01.797567 23 wait.go:74] Waiting for Pod statefulset-3059/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0801 03:15:02.473593      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:03.474671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:04.475304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:05.475598      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:06.476337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:07.477066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:08.477229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:09.478354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:10.478457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:11.481163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 08/01/25 03:15:11.776
  I0801 03:15:11.937206 23 wait.go:44] Found 2 stateful pods, waiting for 3
  E0801 03:15:12.482613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:13.484075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:14.484598      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:15.486980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:16.487474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:17.487905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:18.488939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:19.488625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:20.488817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:21.489769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:15:21.905966 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0801 03:15:21.906386 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0801 03:15:21.906504 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 08/01/25 03:15:21.911
  I0801 03:15:21.933097 23 statefulset.go:2542] Updating stateful set ss2
  I0801 03:15:21.955308 23 wait.go:74] Waiting for Pod statefulset-3059/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0801 03:15:22.490441      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:23.490609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:24.491005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:25.496181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:26.497223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:27.497947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:28.498950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:29.499043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:30.499266      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:31.499426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:15:31.965178 23 statefulset.go:2542] Updating stateful set ss2
  I0801 03:15:32.042630 23 wait.go:56] Waiting for StatefulSet statefulset-3059/ss2 to complete update
  I0801 03:15:32.042678 23 wait.go:63] Waiting for Pod statefulset-3059/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0801 03:15:32.499559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:33.500341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:34.502853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:35.508380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:36.508737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:37.509537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:38.510121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:39.510203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:40.510473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:41.510559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:15:41.983842 23 wait.go:56] Waiting for StatefulSet statefulset-3059/ss2 to complete update
  E0801 03:15:42.512729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:43.518934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:44.519207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:45.519313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:46.519794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:47.520065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:48.520230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:49.520865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:50.521791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:51.521959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:15:51.972329 23 statefulset.go:138] Deleting all statefulset in ns statefulset-3059
  I0801 03:15:51.975572 23 rest.go:153] Scaling statefulset ss2 to 0
  E0801 03:15:52.521937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:53.522169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:54.522395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:55.522537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:56.523016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:57.524089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:58.525060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:15:59.525351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:00.525792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:01.528406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:16:02.011463 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0801 03:16:02.015050 23 rest.go:91] Deleting statefulset ss2
  I0801 03:16:02.036576 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3059" for this suite. @ 08/01/25 03:16:02.04
â€¢ [80.483 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 08/01/25 03:16:02.088
  I0801 03:16:02.089166 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename var-expansion @ 08/01/25 03:16:02.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:16:02.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:16:02.153
  STEP: creating the pod @ 08/01/25 03:16:02.159
  STEP: waiting for pod running @ 08/01/25 03:16:02.182
  E0801 03:16:02.531694      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:03.533225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 08/01/25 03:16:04.205
  I0801 03:16:04.207727 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1657 PodName:var-expansion-3811c274-e64a-4648-9f25-372a0e06c4ca ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 03:16:04.207768 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 03:16:04.207829 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/var-expansion-1657/pods/var-expansion-3811c274-e64a-4648-9f25-372a0e06c4ca/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0801 03:16:04.311480 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 08/01/25 03:16:04.311
  I0801 03:16:04.315260 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1657 PodName:var-expansion-3811c274-e64a-4648-9f25-372a0e06c4ca ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 03:16:04.315310 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 03:16:04.315377 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/var-expansion-1657/pods/var-expansion-3811c274-e64a-4648-9f25-372a0e06c4ca/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0801 03:16:04.413793 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 08/01/25 03:16:04.414
  E0801 03:16:04.534499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:16:04.945845 23 pod_client.go:173] Successfully updated pod "var-expansion-3811c274-e64a-4648-9f25-372a0e06c4ca"
  STEP: waiting for annotated pod running @ 08/01/25 03:16:04.945
  STEP: deleting the pod gracefully @ 08/01/25 03:16:04.96
  I0801 03:16:04.961007 23 delete.go:62] Deleting pod "var-expansion-3811c274-e64a-4648-9f25-372a0e06c4ca" in namespace "var-expansion-1657"
  I0801 03:16:04.986846 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-3811c274-e64a-4648-9f25-372a0e06c4ca" to be fully deleted
  E0801 03:16:05.535013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:06.535226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:07.535771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:08.537148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:09.537085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:10.537522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:11.538218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:12.539037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:13.539943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:14.545774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:15.545925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:16.547869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:17.547883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:18.548015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:19.550213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:20.549797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:21.550146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:22.551130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:23.551615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:24.552301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:25.557956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:26.558488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:27.558527      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:28.558762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:29.561159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:30.562962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:31.565162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:32.566071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:33.565851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:34.565983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:35.568446      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:36.568726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:37.568909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:38.570086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:16:39.138598 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1657" for this suite. @ 08/01/25 03:16:39.144
â€¢ [37.068 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 08/01/25 03:16:39.158
  I0801 03:16:39.158064 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename secrets @ 08/01/25 03:16:39.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:16:39.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:16:39.231
  STEP: Creating secret with name secret-test-427cdbad-f59e-4088-b88a-878a8800e0df @ 08/01/25 03:16:39.246
  STEP: Creating a pod to test consume secrets @ 08/01/25 03:16:39.293
  E0801 03:16:39.570368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:40.576425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:41.572659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:42.573005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:16:43.343
  I0801 03:16:43.374337 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-secrets-61f69e2e-c4f9-429b-a890-667d628c9fa4 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/01/25 03:16:43.408
  I0801 03:16:43.440906 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6093" for this suite. @ 08/01/25 03:16:43.451
â€¢ [4.310 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 08/01/25 03:16:43.469
  I0801 03:16:43.469494 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename sched-pred @ 08/01/25 03:16:43.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:16:43.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:16:43.542
  I0801 03:16:43.547395 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  E0801 03:16:43.573645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:16:43.587555 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0801 03:16:43.603673 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc before test
  I0801 03:16:43.609233 23 predicates.go:958] svclb-traefik-f3709a6a-bbx5s from kube-system started at 2025-08-01 02:40:13 +0000 UTC (2 container statuses recorded)
  I0801 03:16:43.609283 23 predicates.go:960] 	Container lb-tcp-443 ready: true, restart count 0
  I0801 03:16:43.609295 23 predicates.go:960] 	Container lb-tcp-80 ready: true, restart count 0
  I0801 03:16:43.609308 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-08-01 01:30:06 +0000 UTC (1 container statuses recorded)
  I0801 03:16:43.609317 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0801 03:16:43.609328 23 predicates.go:958] sonobuoy-e2e-job-df5b01beee5e4694 from sonobuoy started at 2025-08-01 01:30:13 +0000 UTC (2 container statuses recorded)
  I0801 03:16:43.609338 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0801 03:16:43.609346 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0801 03:16:43.609359 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-17f975e496f9456c-s2s2c from sonobuoy started at 2025-08-01 01:30:13 +0000 UTC (2 container statuses recorded)
  I0801 03:16:43.609369 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0801 03:16:43.609379 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0801 03:16:43.609390 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3k-k3kcluster-server-0 before test
  I0801 03:16:43.612607 23 predicates.go:958] coredns-5688667fd4-6pnmp from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 03:16:43.612651 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0801 03:16:43.612663 23 predicates.go:958] helm-install-traefik-2697s from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 03:16:43.612672 23 predicates.go:960] 	Container helm ready: false, restart count 1
  I0801 03:16:43.612685 23 predicates.go:958] helm-install-traefik-crd-mr72s from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 03:16:43.612694 23 predicates.go:960] 	Container helm ready: false, restart count 0
  I0801 03:16:43.612706 23 predicates.go:958] local-path-provisioner-774c6665dc-bldhg from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 03:16:43.612717 23 predicates.go:960] 	Container local-path-provisioner ready: true, restart count 0
  I0801 03:16:43.612729 23 predicates.go:958] metrics-server-6f4c6675d5-86tpl from kube-system started at 2025-08-01 01:28:22 +0000 UTC (1 container statuses recorded)
  I0801 03:16:43.612739 23 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0801 03:16:43.612767 23 predicates.go:958] svclb-traefik-f3709a6a-2x7fk from kube-system started at 2025-08-01 01:28:56 +0000 UTC (2 container statuses recorded)
  I0801 03:16:43.612782 23 predicates.go:960] 	Container lb-tcp-443 ready: true, restart count 0
  I0801 03:16:43.612791 23 predicates.go:960] 	Container lb-tcp-80 ready: true, restart count 0
  I0801 03:16:43.612801 23 predicates.go:958] traefik-c98fdf6fb-f9b8t from kube-system started at 2025-08-01 01:28:56 +0000 UTC (1 container statuses recorded)
  I0801 03:16:43.612810 23 predicates.go:960] 	Container traefik ready: true, restart count 0
  I0801 03:16:43.612820 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-17f975e496f9456c-mjcrm from sonobuoy started at 2025-08-01 01:30:13 +0000 UTC (2 container statuses recorded)
  I0801 03:16:43.612829 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0801 03:16:43.612837 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 08/01/25 03:16:43.612
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18578643570d6c26], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 08/01/25 03:16:43.704
  E0801 03:16:44.576081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:16:44.694903 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2890" for this suite. @ 08/01/25 03:16:44.72
â€¢ [1.301 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 08/01/25 03:16:44.77
  I0801 03:16:44.770287 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename limitrange @ 08/01/25 03:16:44.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:16:44.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:16:44.801
  STEP: Creating a LimitRange @ 08/01/25 03:16:44.806
  STEP: Setting up watch @ 08/01/25 03:16:44.806
  STEP: Submitting a LimitRange @ 08/01/25 03:16:44.912
  STEP: Verifying LimitRange creation was observed @ 08/01/25 03:16:44.927
  STEP: Fetching the LimitRange to ensure it has proper values @ 08/01/25 03:16:44.928
  I0801 03:16:44.931343 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0801 03:16:44.931390 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 08/01/25 03:16:44.931
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 08/01/25 03:16:44.955
  I0801 03:16:44.959936 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0801 03:16:44.960000 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 08/01/25 03:16:44.96
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 08/01/25 03:16:44.996
  I0801 03:16:45.000258 23 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0801 03:16:45.000310 23 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 08/01/25 03:16:45
  STEP: Failing to create a Pod with more than max resources @ 08/01/25 03:16:45.016
  STEP: Updating a LimitRange @ 08/01/25 03:16:45.025
  STEP: Verifying LimitRange updating is effective @ 08/01/25 03:16:45.039
  E0801 03:16:45.576458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:46.576706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 08/01/25 03:16:47.043
  STEP: Failing to create a Pod with more than max resources @ 08/01/25 03:16:47.057
  STEP: Deleting a LimitRange @ 08/01/25 03:16:47.067
  STEP: Verifying the LimitRange was deleted @ 08/01/25 03:16:47.096
  E0801 03:16:47.577886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:48.578037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:49.584634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:50.584680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:51.584803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:16:52.100737 23 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 08/01/25 03:16:52.1
  I0801 03:16:52.143813 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8190" for this suite. @ 08/01/25 03:16:52.17
â€¢ [7.425 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 08/01/25 03:16:52.195
  I0801 03:16:52.195930 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename services @ 08/01/25 03:16:52.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:16:52.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:16:52.237
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6015 @ 08/01/25 03:16:52.242
  STEP: changing the ExternalName service to type=NodePort @ 08/01/25 03:16:52.252
  I0801 03:16:52.361612 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0801 03:16:52.585131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:53.586137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:16:54.381497 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.August, 1, 3, 16, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 3, 16, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.August, 1, 3, 16, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.August, 1, 3, 16, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-85464df4c8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0801 03:16:54.586707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:55.589538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:16:56.371992 23 resource.go:361] Creating new exec pod
  E0801 03:16:56.591220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:57.592254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:58.594958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:16:59.595231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:17:00.468611 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-6015 exec execpodbb6d7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0801 03:17:00.607882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:17:00.893225 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.53.232.156) 80 port [tcp/http] succeeded!\n"
  I0801 03:17:00.893278 23 builder.go:147] stdout: "externalname-service-85464df4c8-pfrj6"
  I0801 03:17:00.893370 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-6015 exec execpodbb6d7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.232.156 80'
  I0801 03:17:01.187333 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.232.156 80\nConnection to 10.53.232.156 80 port [tcp/http] succeeded!\n"
  I0801 03:17:01.187382 23 builder.go:147] stdout: ""
  E0801 03:17:01.609791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:17:01.894472 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-6015 exec execpodbb6d7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.232.156 80'
  I0801 03:17:02.257847 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.232.156 80\nConnection to 10.53.232.156 80 port [tcp/http] succeeded!\n"
  I0801 03:17:02.257908 23 builder.go:147] stdout: ""
  E0801 03:17:02.610550      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:17:02.894473 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-6015 exec execpodbb6d7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.53.232.156 80'
  I0801 03:17:03.186920 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.53.232.156 80\nConnection to 10.53.232.156 80 port [tcp/http] succeeded!\n"
  I0801 03:17:03.186978 23 builder.go:147] stdout: "externalname-service-85464df4c8-pfrj6"
  I0801 03:17:03.187086 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-6015 exec execpodbb6d7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.42.0.16 32547'
  I0801 03:17:03.559353 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.42.0.16 32547\nConnection to 10.42.0.16 32547 port [tcp/*] succeeded!\n+ echo hostName\n"
  I0801 03:17:03.559450 23 builder.go:147] stdout: "externalname-service-85464df4c8-j8kbk"
  I0801 03:17:03.559540 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=services-6015 exec execpodbb6d7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.42.0.18 32547'
  E0801 03:17:03.611086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:17:03.763247 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.42.0.18 32547\nConnection to 10.42.0.18 32547 port [tcp/*] succeeded!\n"
  I0801 03:17:03.763315 23 builder.go:147] stdout: "externalname-service-85464df4c8-pfrj6"
  I0801 03:17:03.763411 23 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0801 03:17:03.870110 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6015" for this suite. @ 08/01/25 03:17:03.882
â€¢ [11.705 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 08/01/25 03:17:03.901
  I0801 03:17:03.901076 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 03:17:03.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:17:03.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:17:03.944
  STEP: Creating the pod @ 08/01/25 03:17:03.949
  E0801 03:17:04.611917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:05.612372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:17:06.527428 23 pod_client.go:173] Successfully updated pod "annotationupdate64bc004b-602c-4bf9-8aaa-627c889462b1"
  E0801 03:17:06.613849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:07.614039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:17:08.561930 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3086" for this suite. @ 08/01/25 03:17:08.565
â€¢ [4.683 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 08/01/25 03:17:08.584
  I0801 03:17:08.584210 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename secrets @ 08/01/25 03:17:08.585
  E0801 03:17:08.614837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:17:08.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:17:08.632
  STEP: Creating secret with name secret-test-164f2f73-82ae-488a-b9ea-49397bbac1a5 @ 08/01/25 03:17:08.638
  STEP: Creating a pod to test consume secrets @ 08/01/25 03:17:08.647
  E0801 03:17:09.615334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:10.615395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:11.615587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:12.615755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:17:12.693
  I0801 03:17:12.697233 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-secrets-056c92bc-82ec-450c-9749-9c8d6d1f94e0 container secret-env-test: <nil>
  STEP: delete the pod @ 08/01/25 03:17:12.743
  I0801 03:17:12.802749 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8192" for this suite. @ 08/01/25 03:17:12.806
â€¢ [4.233 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 08/01/25 03:17:12.817
  I0801 03:17:12.818004 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename secrets @ 08/01/25 03:17:12.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:17:12.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:17:12.844
  STEP: creating a secret @ 08/01/25 03:17:12.85
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 08/01/25 03:17:12.861
  STEP: patching the secret @ 08/01/25 03:17:12.871
  STEP: deleting the secret using a LabelSelector @ 08/01/25 03:17:12.911
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 08/01/25 03:17:12.933
  I0801 03:17:12.954711 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3071" for this suite. @ 08/01/25 03:17:12.958
â€¢ [0.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 08/01/25 03:17:13.024
  I0801 03:17:13.024401 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename gc @ 08/01/25 03:17:13.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:17:13.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:17:13.13
  STEP: create the rc @ 08/01/25 03:17:13.154
  I0801 03:17:13.183666      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0801 03:17:13.617312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:14.618269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:15.618682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:16.619342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:17.619555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:18.621114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 08/01/25 03:17:19.433
  E0801 03:17:19.624437      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 08/01/25 03:17:19.841
  E0801 03:17:20.625112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:21.626799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:22.627383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:23.627248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:24.627656      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 08/01/25 03:17:25.079
  E0801 03:17:25.628438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:26.628732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:27.630261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:28.630381      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:29.635342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:30.633943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:31.635073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:32.648537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:33.649006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:34.652037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:35.652139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:36.654138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:37.655077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:38.657243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:39.657569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:40.658556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:41.659534      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:42.659931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:43.660355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:44.660699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:45.661877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:46.662233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:47.663292      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:48.664285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:49.664637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:50.665157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:51.666331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:52.667305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:53.667640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:17:54.668779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/01/25 03:17:55.312
  W0801 03:17:55.336135      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0801 03:17:55.336204 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0801 03:17:55.336307 23 delete.go:95] Deleting pod "simpletest.rc-24qzc" in namespace "gc-6558"
  I0801 03:17:55.444678 23 delete.go:95] Deleting pod "simpletest.rc-2fggr" in namespace "gc-6558"
  E0801 03:17:55.697954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:17:56.205532 23 delete.go:95] Deleting pod "simpletest.rc-2jbxx" in namespace "gc-6558"
  E0801 03:17:56.698930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:17:56.699760 23 delete.go:95] Deleting pod "simpletest.rc-2kbg2" in namespace "gc-6558"
  I0801 03:17:56.986834 23 delete.go:95] Deleting pod "simpletest.rc-2mvzh" in namespace "gc-6558"
  I0801 03:17:57.605086 23 delete.go:95] Deleting pod "simpletest.rc-47whg" in namespace "gc-6558"
  E0801 03:17:57.702240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:17:57.922515 23 delete.go:95] Deleting pod "simpletest.rc-48bgk" in namespace "gc-6558"
  E0801 03:17:58.702773      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:17:58.826388 23 delete.go:95] Deleting pod "simpletest.rc-48dbn" in namespace "gc-6558"
  I0801 03:17:59.415389 23 delete.go:95] Deleting pod "simpletest.rc-4lwjm" in namespace "gc-6558"
  E0801 03:17:59.705256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:00.164227 23 delete.go:95] Deleting pod "simpletest.rc-55h6d" in namespace "gc-6558"
  E0801 03:18:00.705525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:01.364867 23 delete.go:95] Deleting pod "simpletest.rc-58nh9" in namespace "gc-6558"
  E0801 03:18:01.705664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:01.855265 23 delete.go:95] Deleting pod "simpletest.rc-59hx8" in namespace "gc-6558"
  I0801 03:18:02.207695 23 delete.go:95] Deleting pod "simpletest.rc-64p4d" in namespace "gc-6558"
  E0801 03:18:02.705975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:02.904767 23 delete.go:95] Deleting pod "simpletest.rc-6bdfq" in namespace "gc-6558"
  I0801 03:18:03.579873 23 delete.go:95] Deleting pod "simpletest.rc-6mkpd" in namespace "gc-6558"
  E0801 03:18:03.706599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:04.169045 23 delete.go:95] Deleting pod "simpletest.rc-6pb6f" in namespace "gc-6558"
  E0801 03:18:04.707994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:05.065731 23 delete.go:95] Deleting pod "simpletest.rc-6v9mz" in namespace "gc-6558"
  I0801 03:18:05.559179 23 delete.go:95] Deleting pod "simpletest.rc-7l8bh" in namespace "gc-6558"
  E0801 03:18:05.708678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:06.054608 23 delete.go:95] Deleting pod "simpletest.rc-7m5vp" in namespace "gc-6558"
  E0801 03:18:06.712330      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:07.712400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:07.760379 23 delete.go:95] Deleting pod "simpletest.rc-7zsn6" in namespace "gc-6558"
  I0801 03:18:08.638404 23 delete.go:95] Deleting pod "simpletest.rc-8btbb" in namespace "gc-6558"
  E0801 03:18:08.713477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:09.518565 23 delete.go:95] Deleting pod "simpletest.rc-8hmms" in namespace "gc-6558"
  E0801 03:18:09.713800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:10.102944 23 delete.go:95] Deleting pod "simpletest.rc-8mqmb" in namespace "gc-6558"
  I0801 03:18:10.634022 23 delete.go:95] Deleting pod "simpletest.rc-8zmdz" in namespace "gc-6558"
  E0801 03:18:10.715214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:11.037274 23 delete.go:95] Deleting pod "simpletest.rc-9qvrr" in namespace "gc-6558"
  I0801 03:18:11.329749 23 delete.go:95] Deleting pod "simpletest.rc-9srfp" in namespace "gc-6558"
  E0801 03:18:11.715941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:11.997155 23 delete.go:95] Deleting pod "simpletest.rc-9x2bl" in namespace "gc-6558"
  I0801 03:18:12.630897 23 delete.go:95] Deleting pod "simpletest.rc-9z79j" in namespace "gc-6558"
  E0801 03:18:12.724432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:13.533737 23 delete.go:95] Deleting pod "simpletest.rc-b7w2p" in namespace "gc-6558"
  E0801 03:18:13.728229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:14.343545 23 delete.go:95] Deleting pod "simpletest.rc-bbmn6" in namespace "gc-6558"
  E0801 03:18:14.729323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:15.311093 23 delete.go:95] Deleting pod "simpletest.rc-bks5t" in namespace "gc-6558"
  I0801 03:18:15.727729 23 delete.go:95] Deleting pod "simpletest.rc-bksgr" in namespace "gc-6558"
  E0801 03:18:15.732676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:16.735777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:17.100079 23 delete.go:95] Deleting pod "simpletest.rc-bmmnh" in namespace "gc-6558"
  E0801 03:18:17.736211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:18.738797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:18.741153 23 delete.go:95] Deleting pod "simpletest.rc-bz6nl" in namespace "gc-6558"
  E0801 03:18:19.744275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:20.744344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:21.593641 23 delete.go:95] Deleting pod "simpletest.rc-c5q26" in namespace "gc-6558"
  E0801 03:18:21.746070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:22.485148 23 delete.go:95] Deleting pod "simpletest.rc-cbtqb" in namespace "gc-6558"
  E0801 03:18:22.746500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:23.749573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:24.319170 23 delete.go:95] Deleting pod "simpletest.rc-cd28p" in namespace "gc-6558"
  E0801 03:18:24.747549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:25.275716 23 delete.go:95] Deleting pod "simpletest.rc-cfhrh" in namespace "gc-6558"
  E0801 03:18:25.749431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:26.114460 23 delete.go:95] Deleting pod "simpletest.rc-chfdd" in namespace "gc-6558"
  E0801 03:18:26.753383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:27.553772 23 delete.go:95] Deleting pod "simpletest.rc-cvr2m" in namespace "gc-6558"
  E0801 03:18:27.753721      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:28.754122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:28.853130 23 delete.go:95] Deleting pod "simpletest.rc-d9cgk" in namespace "gc-6558"
  E0801 03:18:29.761127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:30.666880 23 delete.go:95] Deleting pod "simpletest.rc-dgtsf" in namespace "gc-6558"
  E0801 03:18:30.761726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:31.764033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:32.673750 23 delete.go:95] Deleting pod "simpletest.rc-dp49x" in namespace "gc-6558"
  E0801 03:18:32.764638      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:33.374434 23 delete.go:95] Deleting pod "simpletest.rc-dtqcb" in namespace "gc-6558"
  E0801 03:18:33.765322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:34.242112 23 delete.go:95] Deleting pod "simpletest.rc-f886x" in namespace "gc-6558"
  E0801 03:18:34.770158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:35.653639 23 delete.go:95] Deleting pod "simpletest.rc-fcm54" in namespace "gc-6558"
  E0801 03:18:35.775613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:36.374464 23 delete.go:95] Deleting pod "simpletest.rc-fpkbk" in namespace "gc-6558"
  E0801 03:18:36.775891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:37.587573 23 delete.go:95] Deleting pod "simpletest.rc-ftmxn" in namespace "gc-6558"
  E0801 03:18:37.776813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:38.776802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:38.922904 23 delete.go:95] Deleting pod "simpletest.rc-fvnnm" in namespace "gc-6558"
  I0801 03:18:39.364870 23 delete.go:95] Deleting pod "simpletest.rc-g5lrj" in namespace "gc-6558"
  E0801 03:18:39.777290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:40.039379 23 delete.go:95] Deleting pod "simpletest.rc-g64gn" in namespace "gc-6558"
  I0801 03:18:40.515657 23 delete.go:95] Deleting pod "simpletest.rc-gbd7j" in namespace "gc-6558"
  I0801 03:18:40.735337 23 delete.go:95] Deleting pod "simpletest.rc-gkpmr" in namespace "gc-6558"
  E0801 03:18:40.780580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:41.168261 23 delete.go:95] Deleting pod "simpletest.rc-gkzvn" in namespace "gc-6558"
  E0801 03:18:41.781387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:41.941056 23 delete.go:95] Deleting pod "simpletest.rc-gvvx4" in namespace "gc-6558"
  E0801 03:18:42.789553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:42.983815 23 delete.go:95] Deleting pod "simpletest.rc-hs6kf" in namespace "gc-6558"
  E0801 03:18:43.789540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:43.789548 23 delete.go:95] Deleting pod "simpletest.rc-k2jtx" in namespace "gc-6558"
  I0801 03:18:44.592075 23 delete.go:95] Deleting pod "simpletest.rc-k64j2" in namespace "gc-6558"
  E0801 03:18:44.790082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:44.812768 23 delete.go:95] Deleting pod "simpletest.rc-k72fr" in namespace "gc-6558"
  I0801 03:18:44.862457 23 delete.go:95] Deleting pod "simpletest.rc-k8dcf" in namespace "gc-6558"
  I0801 03:18:44.889062 23 delete.go:95] Deleting pod "simpletest.rc-kwxvr" in namespace "gc-6558"
  I0801 03:18:45.278855 23 delete.go:95] Deleting pod "simpletest.rc-l2tmf" in namespace "gc-6558"
  I0801 03:18:45.415385 23 delete.go:95] Deleting pod "simpletest.rc-lcdwq" in namespace "gc-6558"
  I0801 03:18:45.614065 23 delete.go:95] Deleting pod "simpletest.rc-lstps" in namespace "gc-6558"
  E0801 03:18:45.790268      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:46.007910 23 delete.go:95] Deleting pod "simpletest.rc-mb4pc" in namespace "gc-6558"
  I0801 03:18:46.388264 23 delete.go:95] Deleting pod "simpletest.rc-mj4xc" in namespace "gc-6558"
  I0801 03:18:46.756541 23 delete.go:95] Deleting pod "simpletest.rc-mjz59" in namespace "gc-6558"
  E0801 03:18:46.800681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:46.806600 23 delete.go:95] Deleting pod "simpletest.rc-mtrr9" in namespace "gc-6558"
  I0801 03:18:46.924002 23 delete.go:95] Deleting pod "simpletest.rc-n2hqg" in namespace "gc-6558"
  I0801 03:18:47.114481 23 delete.go:95] Deleting pod "simpletest.rc-nvjfj" in namespace "gc-6558"
  I0801 03:18:47.147806 23 delete.go:95] Deleting pod "simpletest.rc-p7rs2" in namespace "gc-6558"
  I0801 03:18:47.232474 23 delete.go:95] Deleting pod "simpletest.rc-q2jh5" in namespace "gc-6558"
  I0801 03:18:47.466402 23 delete.go:95] Deleting pod "simpletest.rc-qjdv7" in namespace "gc-6558"
  I0801 03:18:47.570180 23 delete.go:95] Deleting pod "simpletest.rc-qmffk" in namespace "gc-6558"
  I0801 03:18:47.660397 23 delete.go:95] Deleting pod "simpletest.rc-qtjdf" in namespace "gc-6558"
  I0801 03:18:47.745813 23 delete.go:95] Deleting pod "simpletest.rc-qv89q" in namespace "gc-6558"
  I0801 03:18:47.773313 23 delete.go:95] Deleting pod "simpletest.rc-qv8gq" in namespace "gc-6558"
  E0801 03:18:47.800703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:47.850432 23 delete.go:95] Deleting pod "simpletest.rc-rbthk" in namespace "gc-6558"
  I0801 03:18:47.910593 23 delete.go:95] Deleting pod "simpletest.rc-rm6th" in namespace "gc-6558"
  I0801 03:18:47.994691 23 delete.go:95] Deleting pod "simpletest.rc-rp4dx" in namespace "gc-6558"
  I0801 03:18:48.134389 23 delete.go:95] Deleting pod "simpletest.rc-sjh8c" in namespace "gc-6558"
  I0801 03:18:48.246938 23 delete.go:95] Deleting pod "simpletest.rc-skg2m" in namespace "gc-6558"
  I0801 03:18:48.393886 23 delete.go:95] Deleting pod "simpletest.rc-ssrcl" in namespace "gc-6558"
  I0801 03:18:48.453082 23 delete.go:95] Deleting pod "simpletest.rc-t6zxl" in namespace "gc-6558"
  I0801 03:18:48.542966 23 delete.go:95] Deleting pod "simpletest.rc-tbjdw" in namespace "gc-6558"
  I0801 03:18:48.611647 23 delete.go:95] Deleting pod "simpletest.rc-tdhsn" in namespace "gc-6558"
  I0801 03:18:48.680273 23 delete.go:95] Deleting pod "simpletest.rc-v2l9f" in namespace "gc-6558"
  I0801 03:18:48.731606 23 delete.go:95] Deleting pod "simpletest.rc-v9thb" in namespace "gc-6558"
  I0801 03:18:48.798381 23 delete.go:95] Deleting pod "simpletest.rc-vczkw" in namespace "gc-6558"
  E0801 03:18:48.801406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:18:48.870523 23 delete.go:95] Deleting pod "simpletest.rc-vkgpq" in namespace "gc-6558"
  I0801 03:18:48.939158 23 delete.go:95] Deleting pod "simpletest.rc-vmqv2" in namespace "gc-6558"
  I0801 03:18:48.973170 23 delete.go:95] Deleting pod "simpletest.rc-vvnrl" in namespace "gc-6558"
  I0801 03:18:49.062832 23 delete.go:95] Deleting pod "simpletest.rc-w9rtp" in namespace "gc-6558"
  I0801 03:18:49.093464 23 delete.go:95] Deleting pod "simpletest.rc-wzwrz" in namespace "gc-6558"
  I0801 03:18:49.147557 23 delete.go:95] Deleting pod "simpletest.rc-xbvxp" in namespace "gc-6558"
  I0801 03:18:49.241358 23 delete.go:95] Deleting pod "simpletest.rc-xc28c" in namespace "gc-6558"
  I0801 03:18:49.378779 23 delete.go:95] Deleting pod "simpletest.rc-z62nt" in namespace "gc-6558"
  I0801 03:18:49.431991 23 delete.go:95] Deleting pod "simpletest.rc-zjkrb" in namespace "gc-6558"
  I0801 03:18:49.491315 23 delete.go:95] Deleting pod "simpletest.rc-zqf7q" in namespace "gc-6558"
  I0801 03:18:49.541308 23 delete.go:95] Deleting pod "simpletest.rc-zqrpt" in namespace "gc-6558"
  I0801 03:18:49.582780 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6558" for this suite. @ 08/01/25 03:18:49.623
â€¢ [96.625 seconds]
------------------------------
SSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 08/01/25 03:18:49.649
  I0801 03:18:49.649813 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename volumeattachment @ 08/01/25 03:18:49.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:18:49.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:18:49.717
  STEP: Create VolumeAttachment "va-e2e-2kc2p" on node "k3k-k3kcluster-server-0" @ 08/01/25 03:18:49.735
  STEP: Patch VolumeAttachment "va-e2e-2kc2p" on node "k3k-k3kcluster-server-0" @ 08/01/25 03:18:49.761
  E0801 03:18:49.804401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading "va-e2e-2kc2p" Status @ 08/01/25 03:18:49.829
  STEP: Patching "va-e2e-2kc2p" Status @ 08/01/25 03:18:49.895
  I0801 03:18:49.977255 23 volume_attachment.go:224] "va-e2e-2kc2p" Status.Attached: true
  STEP: Updating "va-e2e-2kc2p" Status @ 08/01/25 03:18:49.977
  I0801 03:18:50.043887 23 volume_attachment.go:240] "va-e2e-2kc2p" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-2kc2p" on node "k3k-k3kcluster-server-0" @ 08/01/25 03:18:50.044
  STEP: Confirm deletion of VolumeAttachment "va-e2e-2kc2p" on node "k3k-k3kcluster-server-0" @ 08/01/25 03:18:50.074
  I0801 03:18:50.095046 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-3500" for this suite. @ 08/01/25 03:18:50.105
â€¢ [0.498 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 08/01/25 03:18:50.148
  I0801 03:18:50.148170 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename dns @ 08/01/25 03:18:50.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:18:50.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:18:50.205
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 08/01/25 03:18:50.213
  I0801 03:18:50.266142 23 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3266  b14cc781-eceb-4bdd-80b7-ac8bfb950b79 40379 1 2025-08-01 03:18:50 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-08-01 03:18:50 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-l4w4r,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-l4w4r,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  E0801 03:18:50.807605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:51.808686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:52.812164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:53.812639      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:54.814951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:55.815596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:56.815850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:57.819059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:58.824687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:18:59.825622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:00.825733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:01.825950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:02.826760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:03.826968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:04.829221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:05.835313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:06.835440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:07.837823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:08.838444      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:09.839869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:10.844445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:11.845241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:12.849293      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:13.853712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:14.855476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:15.857843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 08/01/25 03:19:16.578
  I0801 03:19:16.578268 23 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3266 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 03:19:16.578473 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 03:19:16.578548 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/dns-3266/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  E0801 03:19:16.858045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:19:16.941186 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 08/01/25 03:19:16.941
  I0801 03:19:16.941300 23 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3266 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 03:19:16.941314 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 03:19:16.950916 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/dns-3266/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0801 03:19:17.261305 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 03:19:17.261413 23 dns.go:451] Deleting pod test-dns-nameservers...
  I0801 03:19:17.388804 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3266" for this suite. @ 08/01/25 03:19:17.699
â€¢ [27.600 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 08/01/25 03:19:17.748
  I0801 03:19:17.748524 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename downward-api @ 08/01/25 03:19:17.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:19:17.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:19:17.817
  STEP: Creating a pod to test downward API volume plugin @ 08/01/25 03:19:17.826
  E0801 03:19:17.858911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:18.859310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:19.861927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:20.861942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:21.862594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:19:21.87
  I0801 03:19:21.873718 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod downwardapi-volume-8b94f275-c438-45f8-b0b0-4ea37b879d27 container client-container: <nil>
  STEP: delete the pod @ 08/01/25 03:19:21.893
  I0801 03:19:21.932729 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7505" for this suite. @ 08/01/25 03:19:21.935
â€¢ [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 08/01/25 03:19:21.946
  I0801 03:19:21.946430 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename statefulset @ 08/01/25 03:19:21.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:19:21.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:19:21.988
  STEP: Creating service test in namespace statefulset-4302 @ 08/01/25 03:19:21.995
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 08/01/25 03:19:22.022
  STEP: Creating stateful set ss in namespace statefulset-4302 @ 08/01/25 03:19:22.037
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4302 @ 08/01/25 03:19:22.065
  I0801 03:19:22.150204 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0801 03:19:22.872342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:23.865596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:24.867261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:25.867178      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:26.867437      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:27.867435      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:28.868776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:29.868914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:30.871026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:31.870535      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:19:32.074563 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 08/01/25 03:19:32.074
  I0801 03:19:32.081251 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-4302 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0801 03:19:32.346646 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0801 03:19:32.346709 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0801 03:19:32.346728 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0801 03:19:32.350165 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0801 03:19:32.872012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:33.872394      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:34.876854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:35.873991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:36.874640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:37.875396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:38.875425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:39.875858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:40.876824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:41.878065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:19:42.358686 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0801 03:19:42.358747 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0801 03:19:42.471075 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999999603s
  E0801 03:19:42.878041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:19:43.484671 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.992120049s
  E0801 03:19:43.878189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:19:44.544675 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.981399554s
  E0801 03:19:44.879067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:19:45.548979 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.921487256s
  E0801 03:19:45.879749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:19:46.560629 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.916356898s
  E0801 03:19:46.882142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:19:47.600293 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.904082473s
  E0801 03:19:47.883572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:19:48.607484 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.865638667s
  E0801 03:19:48.884240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:19:49.613895 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.859384057s
  E0801 03:19:49.885092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:19:50.728996 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.852188858s
  E0801 03:19:50.885088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:19:51.747051 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 737.856874ms
  E0801 03:19:51.886762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4302 @ 08/01/25 03:19:52.748
  I0801 03:19:52.751925 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-4302 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0801 03:19:52.887604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:19:53.049120 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0801 03:19:53.049175 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0801 03:19:53.049190 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0801 03:19:53.052612 23 wait.go:44] Found 1 stateful pods, waiting for 3
  E0801 03:19:53.887957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:54.888733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:55.889277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:56.890108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:57.890950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:58.894127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:19:59.891591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:00.893370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:01.894219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:02.894470      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:03.059668 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0801 03:20:03.059716 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0801 03:20:03.059726 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 08/01/25 03:20:03.059
  STEP: Scale down will halt with unhealthy stateful pod @ 08/01/25 03:20:03.059
  I0801 03:20:03.079622 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-4302 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0801 03:20:03.486928 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0801 03:20:03.486986 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0801 03:20:03.487250 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0801 03:20:03.487314 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-4302 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0801 03:20:03.795286 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0801 03:20:03.796117 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0801 03:20:03.796217 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0801 03:20:03.796342 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-4302 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0801 03:20:03.899842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:04.366134 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0801 03:20:04.366193 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0801 03:20:04.366209 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0801 03:20:04.366224 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0801 03:20:04.433880 23 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0801 03:20:04.904306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:05.905114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:06.912425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:07.913684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:08.914219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:09.914107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:10.917812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:11.918575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:12.919335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:13.920082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:14.378606 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0801 03:20:14.378710 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0801 03:20:14.378729 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0801 03:20:14.493143 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999392s
  E0801 03:20:14.920446      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:15.522750 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.90437197s
  E0801 03:20:15.920653      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:16.535734 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.873539152s
  E0801 03:20:16.921191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:17.547368 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.861830451s
  E0801 03:20:17.921991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:18.556111 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.845350807s
  E0801 03:20:18.923565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:19.561347 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.840352087s
  E0801 03:20:19.924005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:20.584863 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.833967262s
  E0801 03:20:20.927633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:21.593141 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.812556354s
  E0801 03:20:21.927982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:22.602277 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.803507807s
  E0801 03:20:22.928674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:23.608850 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 794.144336ms
  E0801 03:20:23.929357      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4302 @ 08/01/25 03:20:24.609
  I0801 03:20:24.614922 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-4302 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0801 03:20:24.790494 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0801 03:20:24.790553 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0801 03:20:24.790571 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0801 03:20:24.790628 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-4302 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0801 03:20:24.930556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:25.018034 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0801 03:20:25.018091 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0801 03:20:25.018107 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0801 03:20:25.018165 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=statefulset-4302 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0801 03:20:25.328371 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0801 03:20:25.328426 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0801 03:20:25.328443 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0801 03:20:25.328459 23 rest.go:153] Scaling statefulset ss to 0
  E0801 03:20:25.933544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:26.932864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:27.933199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:28.944666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:29.935555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:30.936277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:31.936690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:32.937474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:33.938796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:34.939142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 08/01/25 03:20:35.34
  I0801 03:20:35.340817 23 statefulset.go:138] Deleting all statefulset in ns statefulset-4302
  I0801 03:20:35.346155 23 rest.go:153] Scaling statefulset ss to 0
  I0801 03:20:35.353016 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0801 03:20:35.356405 23 rest.go:91] Deleting statefulset ss
  I0801 03:20:35.378767 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4302" for this suite. @ 08/01/25 03:20:35.382
â€¢ [73.463 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 08/01/25 03:20:35.409
  I0801 03:20:35.409748 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename disruption @ 08/01/25 03:20:35.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:20:35.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:20:35.44
  STEP: creating the pdb @ 08/01/25 03:20:35.451
  STEP: Waiting for the pdb to be processed @ 08/01/25 03:20:35.471
  E0801 03:20:35.941345      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:36.940704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 08/01/25 03:20:37.476
  STEP: Waiting for the pdb to be processed @ 08/01/25 03:20:37.497
  E0801 03:20:37.944326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:38.944644      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 08/01/25 03:20:39.512
  STEP: Waiting for the pdb to be processed @ 08/01/25 03:20:39.537
  E0801 03:20:39.947767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:40.947733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 08/01/25 03:20:41.564
  I0801 03:20:41.566771 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1086" for this suite. @ 08/01/25 03:20:41.57
â€¢ [6.174 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 08/01/25 03:20:41.584
  I0801 03:20:41.584112 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename hostport @ 08/01/25 03:20:41.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:20:41.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:20:41.64
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 08/01/25 03:20:41.681
  E0801 03:20:41.948894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:42.953171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:43.950848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:44.951144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.42.0.18 on the node which pod1 resides and expect scheduled @ 08/01/25 03:20:45.787
  E0801 03:20:45.956867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:46.957977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:47.958241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:48.958511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.42.0.18 but use UDP protocol on the node which pod2 resides @ 08/01/25 03:20:49.829
  E0801 03:20:49.960317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:50.962019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:51.963478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:52.964708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:53.968334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:54.965011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 08/01/25 03:20:55.959
  I0801 03:20:55.960373 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.42.0.18 http://127.0.0.1:54323/hostname] Namespace:hostport-3685 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 03:20:55.960402 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 03:20:55.960645 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/hostport-3685/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.42.0.18+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  E0801 03:20:55.968194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:20:56.090754 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.42.0.18, port: 54323 @ 08/01/25 03:20:56.09
  I0801 03:20:56.090957 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.42.0.18:54323/hostname] Namespace:hostport-3685 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 03:20:56.090975 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 03:20:56.091049 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/hostport-3685/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.42.0.18%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0801 03:20:56.199223 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.42.0.18, port: 54323 UDP @ 08/01/25 03:20:56.199
  I0801 03:20:56.199656 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.42.0.18 54323] Namespace:hostport-3685 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 03:20:56.199733 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 03:20:56.199869 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/hostport-3685/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.42.0.18+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0801 03:20:56.969033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:57.972595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:58.972690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:20:59.973326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:00.973008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:01.355110 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 03:21:01.355761 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-3685" for this suite. @ 08/01/25 03:21:01.361
â€¢ [19.805 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 08/01/25 03:21:01.389
  I0801 03:21:01.389614 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-probe @ 08/01/25 03:21:01.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:21:01.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:21:01.477
  STEP: Creating pod liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af in namespace container-probe-7394 @ 08/01/25 03:21:01.5
  E0801 03:21:01.973251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:02.973976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/01/25 03:21:03.637
  I0801 03:21:03.657356 23 container_probe.go:1748] Initial restart count of pod liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af is 0
  I0801 03:21:03.661075 23 container_probe.go:1758] Get pod liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af in namespace container-probe-7394
  E0801 03:21:03.974581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:04.974776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:05.666367 23 container_probe.go:1758] Get pod liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af in namespace container-probe-7394
  E0801 03:21:05.974998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:06.975887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:07.683049 23 container_probe.go:1758] Get pod liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af in namespace container-probe-7394
  E0801 03:21:07.976300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:08.977432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:09.687312 23 container_probe.go:1758] Get pod liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af in namespace container-probe-7394
  E0801 03:21:09.978276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:10.978575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:11.716862 23 container_probe.go:1758] Get pod liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af in namespace container-probe-7394
  E0801 03:21:11.978926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:12.979191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:13.724267 23 container_probe.go:1758] Get pod liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af in namespace container-probe-7394
  E0801 03:21:13.990242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:14.989169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:15.732769 23 container_probe.go:1758] Get pod liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af in namespace container-probe-7394
  E0801 03:21:15.993295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:16.992728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:17.737347 23 container_probe.go:1758] Get pod liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af in namespace container-probe-7394
  E0801 03:21:17.995512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:18.995776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:19.742843 23 container_probe.go:1758] Get pod liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af in namespace container-probe-7394
  E0801 03:21:19.996096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:20.996378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:21.760773 23 container_probe.go:1758] Get pod liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af in namespace container-probe-7394
  E0801 03:21:21.997027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:22.998043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:23.764838 23 container_probe.go:1758] Get pod liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af in namespace container-probe-7394
  I0801 03:21:23.764890 23 container_probe.go:1762] Restart count of pod container-probe-7394/liveness-8e8dbd93-d5ae-49f3-a52f-f7728b9ef8af is now 1 (20.107330449s elapsed)
  STEP: deleting the pod @ 08/01/25 03:21:23.765
  I0801 03:21:23.796239 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7394" for this suite. @ 08/01/25 03:21:23.804
â€¢ [22.440 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 08/01/25 03:21:23.829
  I0801 03:21:23.829962 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-probe @ 08/01/25 03:21:23.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:21:23.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:21:23.877
  STEP: Creating pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841 @ 08/01/25 03:21:23.885
  E0801 03:21:24.001602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:25.001790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/01/25 03:21:25.911
  I0801 03:21:25.914600 23 container_probe.go:1748] Initial restart count of pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 is 0
  I0801 03:21:25.918509 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:26.001845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:27.003603      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:27.955192 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:28.004445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:29.005019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:29.959700 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:30.006389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:31.007101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:31.963470 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:32.006819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:33.008932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:33.995467 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:34.011750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:35.016689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:36.000608 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:36.016725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:37.019991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:38.007931 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:38.021309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:39.021762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:40.016121 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:40.022145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:41.022772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:42.023411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:42.023486 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:43.033777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:44.033024 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:44.035525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:45.035906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:46.036268      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:46.036603 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:47.036424      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:48.036744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:48.041177 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:49.038713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:50.041978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:50.045636 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:51.042882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:52.042948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:52.068976 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:53.043121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:54.043386      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:54.073749 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:55.043734      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:56.044010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:56.085505 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:57.044871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:21:58.045256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:21:58.090231 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:21:59.045427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:00.046461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:00.095435 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:01.046761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:02.046917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:02.099983 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:03.047204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:04.049228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:04.116946 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:05.047823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:06.048689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:06.142657 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:07.049570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:08.050096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:08.148301 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:09.050723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:10.051276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:10.153126 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:11.054056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:12.054936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:12.160370 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:13.054736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:14.055157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:14.171435 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:15.056384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:16.057284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:16.187418 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:17.057828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:18.059347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:18.197128 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:19.059664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:20.059795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:20.201232 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:21.060945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:22.060742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:22.205711 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:23.061839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:24.063070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:24.211989 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:25.063849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:26.064869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:26.216380 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:27.064703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:28.065838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:28.221642 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:29.066616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:30.066750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:30.233157 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:31.067781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:32.068213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:32.247085 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:33.068106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:34.068850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:34.257426 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:35.069997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:36.071000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:36.276013 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:37.071885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:38.072994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:38.285918 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:39.076712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:40.077740      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:40.291010 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:41.078278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:42.078713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:42.295448 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:43.079316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:44.082423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:44.299146 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:45.080966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:46.081843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:46.304995 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:47.082011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:48.082129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:48.341514 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:49.084804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:50.089799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:50.346671 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:51.090508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:52.091141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:52.352734 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:53.090825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:54.091445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:54.377304 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:55.091753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:56.093973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:56.383045 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:57.093387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:22:58.100207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:22:58.389432 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:22:59.100991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:00.101200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:00.394327 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:01.101981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:02.102587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:02.398718 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:03.103493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:04.104680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:04.409547 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:05.106428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:06.108234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:06.418657 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:07.108787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:08.108993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:08.422719 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:09.109947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:10.110173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:10.433416 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:11.110422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:12.111981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:12.461205 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:13.113313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:14.114094      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:14.472863 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:15.114840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:16.116059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:16.503001 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:17.116329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:18.116664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:18.529938 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:19.117257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:20.119382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:20.533908 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:21.128439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:22.129636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:22.538691 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:23.129703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:24.129954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:24.545497 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:25.130113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:26.130256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:26.550528 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:27.130941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:28.131506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:28.556885 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:29.131595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:30.133402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:30.566245 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:31.133853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:32.134353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:32.570577 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:33.135406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:34.136047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:34.574877 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:35.136294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:36.136719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:36.579232 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:37.137466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:38.138262      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:38.584721 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:39.139830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:40.139843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:40.588851 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:41.140794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:42.140683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:42.592833 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:43.141529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:44.141631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:44.600718 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:45.142147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:46.142915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:46.608794 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:47.143264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:48.145502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:48.613099 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:49.146260      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:50.147276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:50.618074 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:51.147486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:52.147717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:52.622271 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:53.149328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:54.149512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:54.634466 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:55.152647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:56.156309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:56.646445 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:57.156726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:23:58.160033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:23:58.656349 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:23:59.160855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:00.163025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:00.661778 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:01.163344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:02.163829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:02.668673 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:03.167693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:04.167768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:04.684017 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:05.171065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:06.171905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:06.687952 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:07.172814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:08.173235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:08.695354 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:09.173829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:10.174256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:10.721769 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:11.176180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:12.175404      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:12.742040 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:13.176227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:14.176496      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:14.745547 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:15.177117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:16.177339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:16.753062 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:17.178865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:18.184006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:18.764831 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:19.184578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:20.184937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:20.776694 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:21.185826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:22.186245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:22.782122 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:23.186258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:24.188402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:24.785948 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:25.187492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:26.187881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:26.790162 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:27.187893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:28.188028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:28.793919 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:29.188266      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:30.188855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:30.799965 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:31.189593      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:32.189953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:32.820005 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:33.190641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:34.191254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:34.830337 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:35.191538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:36.193293      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:36.834290 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:37.194019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:38.195805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:38.859756 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:39.196092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:40.197008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:40.862836 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:41.197540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:42.198591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:42.883532 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:43.198996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:44.199185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:44.891125 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:45.199557      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:46.199927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:46.898604 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:47.201095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:48.201308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:48.903505 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:49.202014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:50.202440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:50.912443 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:51.202695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:52.202845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:52.925131 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:53.204342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:54.205130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:54.929147 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:55.205988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:56.206154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:56.941262 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:57.206540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:24:58.207270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:24:58.946268 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:24:59.207608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:00.208796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:00.963028 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:25:01.208512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:02.208667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:02.966671 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:25:03.209185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:04.211925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:04.969951 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:25:05.212261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:06.212678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:06.973548 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:25:07.212986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:08.213988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:08.981028 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:25:09.214396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:10.214778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:10.987202 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:25:11.215603      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:12.215999      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:12.997556 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:25:13.216036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:14.216430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:15.013100 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:25:15.216646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:16.216754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:17.020850 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:25:17.217160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:18.217545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:19.033689 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:25:19.217873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:20.217997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:21.038180 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:25:21.218210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:22.219927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:23.046921 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:25:23.219275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:24.219546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:25.053169 23 container_probe.go:1758] Get pod liveness-8554d865-8785-49b7-a697-9edeb984ade5 in namespace container-probe-841
  E0801 03:25:25.222702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:26.221720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 08/01/25 03:25:27.054
  I0801 03:25:27.095764 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-841" for this suite. @ 08/01/25 03:25:27.118
â€¢ [243.300 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 08/01/25 03:25:27.13
  I0801 03:25:27.130182 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename kubectl @ 08/01/25 03:25:27.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:25:27.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:25:27.166
  I0801 03:25:27.171231 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9932 create -f -'
  E0801 03:25:27.224272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:27.437917 23 builder.go:146] stderr: ""
  I0801 03:25:27.437977 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0801 03:25:27.438042 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9932 create -f -'
  I0801 03:25:27.860037 23 builder.go:146] stderr: ""
  I0801 03:25:27.860248 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/01/25 03:25:27.86
  E0801 03:25:28.228443      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:28.872568 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0801 03:25:28.872623 23 framework.go:733] Found 0 / 1
  E0801 03:25:29.229483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:29.863718 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0801 03:25:29.863776 23 framework.go:733] Found 1 / 1
  I0801 03:25:29.863802 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0801 03:25:29.874076 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0801 03:25:29.874299 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0801 03:25:29.874449 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9932 describe pod agnhost-primary-j55bq'
  I0801 03:25:30.014363 23 builder.go:146] stderr: ""
  I0801 03:25:30.018055 23 builder.go:147] stdout: "Name:             agnhost-primary-j55bq\nNamespace:        kubectl-9932\nPriority:         0\nService Account:  default\nNode:             k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc/10.42.0.16\nStart Time:       Fri, 01 Aug 2025 03:25:27 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.52.1.221\nIPs:\n  IP:           10.52.1.221\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://a5ed1a2977c4b5547ba40f2b7b0b289f8906b83e95b16d2829d0567eb159ad89\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Fri, 01 Aug 2025 03:25:28 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-z9jjg (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-z9jjg:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-9932/agnhost-primary-j55bq to k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0801 03:25:30.018139 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9932 describe rc agnhost-primary'
  I0801 03:25:30.165340 23 builder.go:146] stderr: ""
  I0801 03:25:30.165418 23 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9932\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-j55bq\n"
  I0801 03:25:30.165490 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9932 describe service agnhost-primary'
  E0801 03:25:30.230578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:30.283576 23 builder.go:146] stderr: ""
  I0801 03:25:30.283646 23 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-9932\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.53.206.66\nIPs:                      10.53.206.66\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.52.1.221:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0801 03:25:30.287905 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9932 describe node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc'
  I0801 03:25:30.486570 23 builder.go:146] stderr: ""
  I0801 03:25:30.486679 23 builder.go:147] stdout: "Name:               k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=k3s\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc\n                    kubernetes.io/os=linux\n                    node.kubernetes.io/instance-type=k3s\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 10.42.0.16\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"ae:6f:d3:2a:f5:4a\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 10.42.0.16\n                    k3s.io/hostname: k3k-k3kcluster-agent-94b969f7b-9csql\n                    k3s.io/internal-ip: 10.42.0.16\n                    k3s.io/node-args:\n                      [\"agent\",\"--server\",\"https://10.43.175.145\",\"--token\",\"********\",\"--with-node-id\",\"true\",\"--config\",\"/opt/rancher/k3s/config.yaml\"]\n                    k3s.io/node-config-hash: JIKPEPQ452UG427OMY5ECPGGXNX3OAAZOPAPWL67XRTIK3BKXDTQ====\n                    k3s.io/node-env: {}\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Fri, 01 Aug 2025 01:29:00 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc\n  AcquireTime:     <unset>\n  RenewTime:       Fri, 01 Aug 2025 03:25:20 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Fri, 01 Aug 2025 03:22:49 +0000   Fri, 01 Aug 2025 01:29:00 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Fri, 01 Aug 2025 03:22:49 +0000   Fri, 01 Aug 2025 01:29:00 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Fri, 01 Aug 2025 03:22:49 +0000   Fri, 01 Aug 2025 01:29:00 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Fri, 01 Aug 2025 03:22:49 +0000   Fri, 01 Aug 2025 01:29:02 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.42.0.16\n  Hostname:    k3k-k3kcluster-agent-94b969f7b-9csql\nCapacity:\n  cpu:                4\n  ephemeral-storage:  41853932Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16171792Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  40715505018\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16171792Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 \n  System UUID:                ec2a1473-9121-4a73-4eb8-75191f998598\n  Boot ID:                    8e4d9d8d-9c17-4f22-84b1-3d7c03d337b9\n  Kernel Version:             6.4.0-150600.23.33-default\n  OS Image:                   K3s v1.33.3+k3s1\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.0.5-k3s2\n  Kubelet Version:            v1.33.3+k3s1\n  Kube-Proxy Version:         \nPodCIDR:                      10.52.1.0/24\nPodCIDRs:                     10.52.1.0/24\nProviderID:                   k3s://k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc\nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 svclb-traefik-f3709a6a-bbx5s                               0 (0%)        0 (0%)      0 (0%)           0 (0%)         45m\n  kubectl-9932                agnhost-primary-j55bq                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         3s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         115m\n  sonobuoy                    sonobuoy-e2e-job-df5b01beee5e4694                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         115m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-17f975e496f9456c-s2s2c    0 (0%)        0 (0%)      0 (0%)           0 (0%)         115m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests  Limits\n  --------           --------  ------\n  cpu                0 (0%)    0 (0%)\n  memory             0 (0%)    0 (0%)\n  ephemeral-storage  0 (0%)    0 (0%)\n  hugepages-1Gi      0 (0%)    0 (0%)\n  hugepages-2Mi      0 (0%)    0 (0%)\nEvents:              <none>\n"
  I0801 03:25:30.486751 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-844543265 --namespace=kubectl-9932 describe namespace kubectl-9932'
  I0801 03:25:30.600845 23 builder.go:146] stderr: ""
  I0801 03:25:30.600912 23 builder.go:147] stdout: "Name:         kubectl-9932\nLabels:       e2e-framework=kubectl\n              e2e-run=76f7947d-4280-45a5-99d3-e8336dd2b590\n              kubernetes.io/metadata.name=kubectl-9932\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0801 03:25:30.601079 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9932" for this suite. @ 08/01/25 03:25:30.604
â€¢ [3.485 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 08/01/25 03:25:30.614
  I0801 03:25:30.614988 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename proxy @ 08/01/25 03:25:30.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:25:30.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:25:30.653
  I0801 03:25:30.657566 23 proxy.go:430] Creating pod...
  E0801 03:25:31.231532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:32.231908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:32.727477 23 proxy.go:454] Creating service...
  I0801 03:25:32.775941 23 proxy.go:491] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/pods/agnhost/proxy?method=DELETE
  I0801 03:25:32.791813 23 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0801 03:25:32.791883 23 proxy.go:491] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/pods/agnhost/proxy?method=OPTIONS
  I0801 03:25:32.795836 23 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0801 03:25:32.796272 23 proxy.go:491] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/pods/agnhost/proxy?method=PATCH
  I0801 03:25:32.800592 23 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0801 03:25:32.800656 23 proxy.go:491] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/pods/agnhost/proxy?method=POST
  I0801 03:25:32.808022 23 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0801 03:25:32.808077 23 proxy.go:491] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/pods/agnhost/proxy?method=PUT
  I0801 03:25:32.810599 23 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0801 03:25:32.810655 23 proxy.go:502] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/services/e2e-proxy-test-service/proxy?method=DELETE
  I0801 03:25:32.824614 23 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0801 03:25:32.824679 23 proxy.go:502] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0801 03:25:32.828635 23 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0801 03:25:32.828702 23 proxy.go:502] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/services/e2e-proxy-test-service/proxy?method=PATCH
  I0801 03:25:32.843572 23 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0801 03:25:32.843636 23 proxy.go:502] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/services/e2e-proxy-test-service/proxy?method=POST
  I0801 03:25:32.846555 23 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0801 03:25:32.846606 23 proxy.go:502] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/services/e2e-proxy-test-service/proxy?method=PUT
  I0801 03:25:32.849238 23 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0801 03:25:32.849439 23 proxy.go:522] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/pods/agnhost/proxy?method=GET
  I0801 03:25:32.851360 23 proxy.go:530] http.Client request:GET StatusCode:301
  I0801 03:25:32.851416 23 proxy.go:522] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/services/e2e-proxy-test-service/proxy?method=GET
  I0801 03:25:32.854026 23 proxy.go:530] http.Client request:GET StatusCode:301
  I0801 03:25:32.854095 23 proxy.go:522] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/pods/agnhost/proxy?method=HEAD
  I0801 03:25:32.856091 23 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0801 03:25:32.856206 23 proxy.go:522] Starting http.Client for https://10.53.0.1:443/api/v1/namespaces/proxy-752/services/e2e-proxy-test-service/proxy?method=HEAD
  I0801 03:25:32.858993 23 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0801 03:25:32.859123 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-752" for this suite. @ 08/01/25 03:25:32.862
â€¢ [2.257 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 08/01/25 03:25:32.872
  I0801 03:25:32.872453 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename endpointslice @ 08/01/25 03:25:32.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:25:32.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:25:32.973
  E0801 03:25:33.232106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:34.232675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 08/01/25 03:25:35.197
  I0801 03:25:35.205331      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 08/01/25 03:25:35.205
  I0801 03:25:35.209598      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 08/01/25 03:25:35.209
  I0801 03:25:35.216416      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 08/01/25 03:25:35.216
  E0801 03:25:35.232873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:35.265366 23 endpointslice.go:938] EndpointSlice for Service endpointslice-123/example-named-port not found
  E0801 03:25:36.234283      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:37.235292      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:37.269091      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 03:25:37.269328 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-123" for this suite. @ 08/01/25 03:25:37.286
â€¢ [4.427 seconds]
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 08/01/25 03:25:37.299
  I0801 03:25:37.299908 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pods @ 08/01/25 03:25:37.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:25:37.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:25:37.326
  STEP: creating the pod @ 08/01/25 03:25:37.331
  STEP: submitting the pod to kubernetes @ 08/01/25 03:25:37.331
  STEP: verifying QOS class is set on the pod @ 08/01/25 03:25:37.351
  I0801 03:25:37.355106 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6600" for this suite. @ 08/01/25 03:25:37.391
â€¢ [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 08/01/25 03:25:37.408
  I0801 03:25:37.408615 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pod-network-test @ 08/01/25 03:25:37.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:25:37.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:25:37.448
  STEP: Performing setup for networking test in namespace pod-network-test-6132 @ 08/01/25 03:25:37.458
  STEP: creating a selector @ 08/01/25 03:25:37.458
  STEP: Creating the service pods in kubernetes @ 08/01/25 03:25:37.458
  I0801 03:25:37.458753 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0801 03:25:38.236322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:39.240636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:40.242211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:41.244469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:42.245326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:43.248257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:44.249728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:45.250090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:46.252919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:47.252838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:48.252978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:49.253355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:50.255964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:51.256264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/01/25 03:25:51.642
  E0801 03:25:52.260038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:53.257671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:53.742546 23 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0801 03:25:53.742600 23 utils.go:495] Going to poll 10.52.1.224 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0801 03:25:53.745374 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.52.1.224 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6132 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 03:25:53.745426 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 03:25:53.745486 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/pod-network-test-6132/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.52.1.224+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0801 03:25:54.258850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:54.840048 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 03:25:54.840096 23 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0801 03:25:54.840110 23 utils.go:495] Going to poll 10.52.0.76 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0801 03:25:54.842365 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.52.0.76 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6132 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0801 03:25:54.842404 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0801 03:25:54.842469 23 exec_util.go:84] ExecWithOptions: execute(https://10.53.0.1:443/api/v1/namespaces/pod-network-test-6132/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.52.0.76+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0801 03:25:55.259078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:25:55.940253 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0801 03:25:55.940468 23 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0801 03:25:55.942287 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6132" for this suite. @ 08/01/25 03:25:55.954
â€¢ [18.557 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 08/01/25 03:25:55.966
  I0801 03:25:55.966032 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename job @ 08/01/25 03:25:55.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:25:56.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:25:56.035
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 08/01/25 03:25:56.046
  STEP: Awaiting for the job to fail as there are failed indexes @ 08/01/25 03:25:56.064
  E0801 03:25:56.259719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:57.259853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:58.267719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:25:59.267903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:00.268272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:01.269129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:02.270933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:03.271067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:04.272072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:05.272572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:06.273257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:07.273389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:08.273640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:09.273758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:10.275951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:11.276107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:12.276286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:13.276788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:14.277987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:15.278141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:16.278285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:17.278538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:18.282950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:19.283092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 08/01/25 03:26:20.195
  I0801 03:26:20.200201 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5532" for this suite. @ 08/01/25 03:26:20.204
â€¢ [24.247 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 08/01/25 03:26:20.213
  I0801 03:26:20.213275 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename certificates @ 08/01/25 03:26:20.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:26:20.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:26:20.252
  E0801 03:26:20.283459      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:21.283653      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting /apis @ 08/01/25 03:26:21.741
  STEP: getting /apis/certificates.k8s.io @ 08/01/25 03:26:21.747
  STEP: getting /apis/certificates.k8s.io/v1 @ 08/01/25 03:26:21.749
  STEP: creating @ 08/01/25 03:26:21.75
  STEP: getting @ 08/01/25 03:26:21.791
  STEP: listing @ 08/01/25 03:26:21.794
  STEP: watching @ 08/01/25 03:26:21.797
  I0801 03:26:21.797466 23 certificates.go:316] starting watch
  STEP: patching @ 08/01/25 03:26:21.798
  STEP: updating @ 08/01/25 03:26:21.814
  I0801 03:26:21.826613 23 certificates.go:332] waiting for watch events with expected annotations
  I0801 03:26:21.826676 23 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 08/01/25 03:26:21.826
  STEP: patching /approval @ 08/01/25 03:26:21.832
  STEP: updating /approval @ 08/01/25 03:26:21.848
  STEP: getting /status @ 08/01/25 03:26:21.862
  STEP: patching /status @ 08/01/25 03:26:21.865
  STEP: updating /status @ 08/01/25 03:26:21.914
  STEP: deleting @ 08/01/25 03:26:21.936
  STEP: deleting a collection @ 08/01/25 03:26:21.96
  I0801 03:26:21.984195 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-8171" for this suite. @ 08/01/25 03:26:21.991
â€¢ [1.789 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 08/01/25 03:26:22.002
  I0801 03:26:22.002284 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename webhook @ 08/01/25 03:26:22.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:26:22.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:26:22.039
  STEP: Setting up server cert @ 08/01/25 03:26:22.096
  E0801 03:26:22.284251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/01/25 03:26:22.885
  STEP: Deploying the webhook pod @ 08/01/25 03:26:22.897
  STEP: Wait for the deployment to be ready @ 08/01/25 03:26:22.926
  I0801 03:26:22.951999 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0801 03:26:23.285189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:24.285590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/01/25 03:26:24.964
  STEP: Verifying the service has paired with the endpoint @ 08/01/25 03:26:25.001
  E0801 03:26:25.292411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:26:26.001907 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 08/01/25 03:26:26.006
  I0801 03:26:26.163390 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3458" for this suite. @ 08/01/25 03:26:26.171
  STEP: Destroying namespace "webhook-markers-529" for this suite. @ 08/01/25 03:26:26.206
â€¢ [4.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 08/01/25 03:26:26.22
  I0801 03:26:26.220453 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename emptydir @ 08/01/25 03:26:26.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:26:26.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:26:26.26
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 08/01/25 03:26:26.265
  E0801 03:26:26.295102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:27.296158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:28.296857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:29.298292      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/01/25 03:26:30.294
  E0801 03:26:30.298654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:26:30.304337 23 output.go:207] Trying to get logs from node k3k-k3kcluster-agent-94b969f7b-9csql-62e94efc pod pod-10ac2451-7cd6-471a-abf8-b5beb3564321 container test-container: <nil>
  STEP: delete the pod @ 08/01/25 03:26:30.364
  I0801 03:26:30.399415 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5015" for this suite. @ 08/01/25 03:26:30.402
â€¢ [4.198 seconds]
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 08/01/25 03:26:30.418
  I0801 03:26:30.418619 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename chunking @ 08/01/25 03:26:30.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:26:30.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:26:30.509
  STEP: creating a large number of resources @ 08/01/25 03:26:30.516
  E0801 03:26:31.298636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:32.300721      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:33.300750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:34.301697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:35.307078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:36.303852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:37.304001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:38.305327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:39.305755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:40.306488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:41.307352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:42.307697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:43.308761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:44.308768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:45.309432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:46.309755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:47.311370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 08/01/25 03:26:48.146
  I0801 03:26:48.175673 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0801 03:26:48.226495 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0801 03:26:48.275605 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  E0801 03:26:48.311384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:26:48.335777 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0801 03:26:48.373757 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0801 03:26:48.424398 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0801 03:26:48.474294 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0801 03:26:48.523543 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0801 03:26:48.573718 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0801 03:26:48.625151 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0801 03:26:48.674086 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0801 03:26:48.725003 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0801 03:26:48.775969 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0801 03:26:48.826494 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0801 03:26:48.875380 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0801 03:26:48.922690 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0801 03:26:48.988179 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0801 03:26:49.038205 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0801 03:26:49.075006 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0801 03:26:49.129305 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0801 03:26:49.174061 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0801 03:26:49.226667 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0801 03:26:49.274007 23 chunking.go:98] Retrieved 17/17 results with rv 43503 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  E0801 03:26:49.312571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:26:49.322918 23 chunking.go:98] Retrieved 9/17 results with rv 43503 and continue 
  I0801 03:26:49.375901 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0801 03:26:49.424002 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0801 03:26:49.474600 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0801 03:26:49.527462 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0801 03:26:49.574699 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0801 03:26:49.636832 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0801 03:26:49.679472 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0801 03:26:49.723284 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0801 03:26:49.775377 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0801 03:26:49.824541 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0801 03:26:49.874419 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0801 03:26:49.935560 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0801 03:26:49.975466 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0801 03:26:50.024099 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0801 03:26:50.074725 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0801 03:26:50.123536 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0801 03:26:50.175509 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0801 03:26:50.224314 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0801 03:26:50.275270 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  E0801 03:26:50.314515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:26:50.324514 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0801 03:26:50.374974 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0801 03:26:50.423474 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0801 03:26:50.479549 23 chunking.go:98] Retrieved 17/17 results with rv 43505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0801 03:26:50.524078 23 chunking.go:98] Retrieved 9/17 results with rv 43505 and continue 
  I0801 03:26:50.585760 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0801 03:26:50.632063 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0801 03:26:50.679174 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0801 03:26:50.730104 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0801 03:26:50.793103 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0801 03:26:50.831232 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0801 03:26:50.876344 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0801 03:26:50.923280 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0801 03:26:50.975638 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0801 03:26:51.030036 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0801 03:26:51.077551 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0801 03:26:51.142470 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0801 03:26:51.175519 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0801 03:26:51.228321 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0801 03:26:51.288058 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  E0801 03:26:51.314822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:26:51.324770 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0801 03:26:51.376861 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0801 03:26:51.426825 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0801 03:26:51.473938 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0801 03:26:51.539593 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0801 03:26:51.579530 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0801 03:26:51.627540 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0801 03:26:51.682000 23 chunking.go:98] Retrieved 17/17 results with rv 43509 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM1MDksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0801 03:26:51.726904 23 chunking.go:98] Retrieved 9/17 results with rv 43509 and continue 
  STEP: retrieving those results all at once @ 08/01/25 03:26:51.726
  I0801 03:26:51.791454 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7746" for this suite. @ 08/01/25 03:26:51.833
â€¢ [21.461 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 08/01/25 03:26:51.879
  I0801 03:26:51.879632 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename svc-latency @ 08/01/25 03:26:51.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:26:51.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:26:51.934
  I0801 03:26:51.946487 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  I0801 03:26:51.982751 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0801 03:26:52.315033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:26:53.315328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:26:53.992842      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 03:26:53.995496      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0801 03:26:54.141918 23 service_latency.go:351] Created: latency-svc-6thvs
  I0801 03:26:54.173812 23 service_latency.go:358] Got endpoints: latency-svc-6thvs [86.042135ms]
  I0801 03:26:54.234630 23 service_latency.go:351] Created: latency-svc-jsrtx
  I0801 03:26:54.251919 23 service_latency.go:351] Created: latency-svc-rx8s8
  I0801 03:26:54.257452 23 service_latency.go:358] Got endpoints: latency-svc-jsrtx [82.964426ms]
  I0801 03:26:54.295845 23 service_latency.go:351] Created: latency-svc-xx59g
  I0801 03:26:54.297508 23 service_latency.go:358] Got endpoints: latency-svc-rx8s8 [122.070396ms]
  E0801 03:26:54.315866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:26:54.324665 23 service_latency.go:351] Created: latency-svc-5v2sg
  I0801 03:26:54.328247 23 service_latency.go:358] Got endpoints: latency-svc-xx59g [151.570288ms]
  I0801 03:26:54.355693 23 service_latency.go:358] Got endpoints: latency-svc-5v2sg [179.727613ms]
  I0801 03:26:54.382698 23 service_latency.go:351] Created: latency-svc-7kcn9
  I0801 03:26:54.391691 23 service_latency.go:351] Created: latency-svc-6vphq
  I0801 03:26:54.407426 23 service_latency.go:358] Got endpoints: latency-svc-7kcn9 [231.836393ms]
  I0801 03:26:54.416753 23 service_latency.go:358] Got endpoints: latency-svc-6vphq [240.391219ms]
  I0801 03:26:54.420619 23 service_latency.go:351] Created: latency-svc-m8cmm
  I0801 03:26:54.438042 23 service_latency.go:358] Got endpoints: latency-svc-m8cmm [263.146677ms]
  I0801 03:26:54.450844 23 service_latency.go:351] Created: latency-svc-vm6pk
  I0801 03:26:54.463684 23 service_latency.go:358] Got endpoints: latency-svc-vm6pk [288.564606ms]
  I0801 03:26:54.478553 23 service_latency.go:351] Created: latency-svc-bhnqz
  I0801 03:26:54.498848 23 service_latency.go:358] Got endpoints: latency-svc-bhnqz [322.774061ms]
  I0801 03:26:54.514318 23 service_latency.go:351] Created: latency-svc-d9fqp
  I0801 03:26:54.545164 23 service_latency.go:358] Got endpoints: latency-svc-d9fqp [368.717261ms]
  I0801 03:26:54.568593 23 service_latency.go:351] Created: latency-svc-gv7jf
  I0801 03:26:54.568674 23 service_latency.go:351] Created: latency-svc-rtwht
  I0801 03:26:54.587531 23 service_latency.go:358] Got endpoints: latency-svc-gv7jf [410.94882ms]
  I0801 03:26:54.587701 23 service_latency.go:358] Got endpoints: latency-svc-rtwht [412.405277ms]
  I0801 03:26:54.591626 23 service_latency.go:351] Created: latency-svc-mbr62
  I0801 03:26:54.608310 23 service_latency.go:358] Got endpoints: latency-svc-mbr62 [432.069696ms]
  I0801 03:26:54.644767 23 service_latency.go:351] Created: latency-svc-8qkf9
  I0801 03:26:54.675637 23 service_latency.go:358] Got endpoints: latency-svc-8qkf9 [499.917945ms]
  I0801 03:26:54.697211 23 service_latency.go:351] Created: latency-svc-rwtrx
  I0801 03:26:54.706505 23 service_latency.go:358] Got endpoints: latency-svc-rwtrx [530.637685ms]
  I0801 03:26:54.720805 23 service_latency.go:351] Created: latency-svc-rtdrr
  I0801 03:26:54.751141 23 service_latency.go:358] Got endpoints: latency-svc-rtdrr [493.612423ms]
  I0801 03:26:54.763215 23 service_latency.go:351] Created: latency-svc-6nndx
  I0801 03:26:54.786703 23 service_latency.go:351] Created: latency-svc-xb4kr
  I0801 03:26:54.794175 23 service_latency.go:358] Got endpoints: latency-svc-6nndx [496.609691ms]
  I0801 03:26:54.806090 23 service_latency.go:358] Got endpoints: latency-svc-xb4kr [477.779685ms]
  I0801 03:26:54.820281 23 service_latency.go:351] Created: latency-svc-hsqm9
  I0801 03:26:54.840673 23 service_latency.go:358] Got endpoints: latency-svc-hsqm9 [484.80082ms]
  I0801 03:26:54.869566 23 service_latency.go:351] Created: latency-svc-g8mt9
  I0801 03:26:54.917487 23 service_latency.go:351] Created: latency-svc-nlxfn
  I0801 03:26:54.918174 23 service_latency.go:358] Got endpoints: latency-svc-g8mt9 [509.711426ms]
  I0801 03:26:54.946199 23 service_latency.go:358] Got endpoints: latency-svc-nlxfn [529.199768ms]
  I0801 03:26:54.946982 23 service_latency.go:351] Created: latency-svc-wj4n5
  I0801 03:26:54.973710 23 service_latency.go:358] Got endpoints: latency-svc-wj4n5 [535.509024ms]
  I0801 03:26:54.977298 23 service_latency.go:351] Created: latency-svc-pv65w
  I0801 03:26:54.992742 23 service_latency.go:358] Got endpoints: latency-svc-pv65w [528.985391ms]
  I0801 03:26:55.004903 23 service_latency.go:351] Created: latency-svc-tfphg
  I0801 03:26:55.035657 23 service_latency.go:358] Got endpoints: latency-svc-tfphg [536.742086ms]
  I0801 03:26:55.076380 23 service_latency.go:351] Created: latency-svc-kh9kj
  I0801 03:26:55.083054 23 service_latency.go:351] Created: latency-svc-db7dl
  I0801 03:26:55.093256 23 service_latency.go:358] Got endpoints: latency-svc-kh9kj [548.02856ms]
  I0801 03:26:55.097026 23 service_latency.go:351] Created: latency-svc-k9mpr
  I0801 03:26:55.099089 23 service_latency.go:358] Got endpoints: latency-svc-db7dl [511.29498ms]
  I0801 03:26:55.132862 23 service_latency.go:351] Created: latency-svc-wtlrf
  I0801 03:26:55.134477 23 service_latency.go:358] Got endpoints: latency-svc-k9mpr [546.423709ms]
  I0801 03:26:55.171630 23 service_latency.go:358] Got endpoints: latency-svc-wtlrf [563.262022ms]
  I0801 03:26:55.197064 23 service_latency.go:351] Created: latency-svc-59bpd
  I0801 03:26:55.209896 23 service_latency.go:351] Created: latency-svc-gxxjs
  I0801 03:26:55.215127 23 service_latency.go:358] Got endpoints: latency-svc-59bpd [539.423352ms]
  I0801 03:26:55.229866 23 service_latency.go:358] Got endpoints: latency-svc-gxxjs [523.285306ms]
  I0801 03:26:55.237007 23 service_latency.go:351] Created: latency-svc-tss42
  I0801 03:26:55.277179 23 service_latency.go:358] Got endpoints: latency-svc-tss42 [525.978003ms]
  I0801 03:26:55.300771 23 service_latency.go:351] Created: latency-svc-zlf9f
  E0801 03:26:55.316563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:26:55.332448 23 service_latency.go:358] Got endpoints: latency-svc-zlf9f [538.20339ms]
  I0801 03:26:55.335217 23 service_latency.go:351] Created: latency-svc-jvvvv
  I0801 03:26:55.380535 23 service_latency.go:358] Got endpoints: latency-svc-jvvvv [574.379304ms]
  I0801 03:26:55.380783 23 service_latency.go:351] Created: latency-svc-vwlpv
  I0801 03:26:55.400235 23 service_latency.go:358] Got endpoints: latency-svc-vwlpv [559.32868ms]
  I0801 03:26:55.423638 23 service_latency.go:351] Created: latency-svc-k7xlw
  I0801 03:26:55.451639 23 service_latency.go:358] Got endpoints: latency-svc-k7xlw [533.416935ms]
  I0801 03:26:55.454797 23 service_latency.go:351] Created: latency-svc-vm9zz
  I0801 03:26:55.502080 23 service_latency.go:358] Got endpoints: latency-svc-vm9zz [555.813427ms]
  I0801 03:26:55.503201 23 service_latency.go:351] Created: latency-svc-pdlj6
  I0801 03:26:55.542785 23 service_latency.go:351] Created: latency-svc-wzp2j
  I0801 03:26:55.546285 23 service_latency.go:358] Got endpoints: latency-svc-pdlj6 [572.510204ms]
  I0801 03:26:55.568222 23 service_latency.go:358] Got endpoints: latency-svc-wzp2j [575.233794ms]
  I0801 03:26:55.591704 23 service_latency.go:351] Created: latency-svc-pmnmq
  I0801 03:26:55.594430 23 service_latency.go:351] Created: latency-svc-m2nct
  I0801 03:26:55.645836 23 service_latency.go:358] Got endpoints: latency-svc-m2nct [552.529139ms]
  I0801 03:26:55.646136 23 service_latency.go:358] Got endpoints: latency-svc-pmnmq [610.269307ms]
  I0801 03:26:55.657610 23 service_latency.go:351] Created: latency-svc-cnt99
  I0801 03:26:55.708476 23 service_latency.go:358] Got endpoints: latency-svc-cnt99 [609.312415ms]
  I0801 03:26:55.800413 23 service_latency.go:351] Created: latency-svc-9qmqv
  I0801 03:26:55.806194 23 service_latency.go:351] Created: latency-svc-kb9xr
  I0801 03:26:55.827813 23 service_latency.go:358] Got endpoints: latency-svc-9qmqv [655.904893ms]
  I0801 03:26:55.827820 23 service_latency.go:358] Got endpoints: latency-svc-kb9xr [693.285882ms]
  I0801 03:26:55.831685 23 service_latency.go:351] Created: latency-svc-jfh2t
  I0801 03:26:55.857080 23 service_latency.go:358] Got endpoints: latency-svc-jfh2t [640.646485ms]
  I0801 03:26:55.883992 23 service_latency.go:351] Created: latency-svc-ls72r
  I0801 03:26:55.899520 23 service_latency.go:358] Got endpoints: latency-svc-ls72r [669.580221ms]
  I0801 03:26:55.999438 23 service_latency.go:351] Created: latency-svc-wk9lh
  I0801 03:26:56.038826 23 service_latency.go:351] Created: latency-svc-l6s87
  I0801 03:26:56.039523 23 service_latency.go:358] Got endpoints: latency-svc-wk9lh [762.269308ms]
  I0801 03:26:56.062322 23 service_latency.go:358] Got endpoints: latency-svc-l6s87 [729.63028ms]
  I0801 03:26:56.078661 23 service_latency.go:351] Created: latency-svc-8mmsh
  I0801 03:26:56.186070 23 service_latency.go:358] Got endpoints: latency-svc-8mmsh [805.465051ms]
  I0801 03:26:56.199991 23 service_latency.go:351] Created: latency-svc-nlggt
  I0801 03:26:56.221531 23 service_latency.go:358] Got endpoints: latency-svc-nlggt [821.240047ms]
  I0801 03:26:56.231017 23 service_latency.go:351] Created: latency-svc-q5pm9
  I0801 03:26:56.263627 23 service_latency.go:351] Created: latency-svc-sn4sq
  I0801 03:26:56.265740 23 service_latency.go:358] Got endpoints: latency-svc-q5pm9 [814.030423ms]
  I0801 03:26:56.290539 23 service_latency.go:358] Got endpoints: latency-svc-sn4sq [788.379014ms]
  E0801 03:26:56.318056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:26:56.357276 23 service_latency.go:351] Created: latency-svc-pxtb6
  I0801 03:26:56.364873 23 service_latency.go:358] Got endpoints: latency-svc-pxtb6 [818.541755ms]
  I0801 03:26:56.366166 23 service_latency.go:351] Created: latency-svc-7dmt6
  I0801 03:26:56.389028 23 service_latency.go:358] Got endpoints: latency-svc-7dmt6 [820.756416ms]
  I0801 03:26:56.408063 23 service_latency.go:351] Created: latency-svc-xmpwq
  I0801 03:26:56.433040 23 service_latency.go:358] Got endpoints: latency-svc-xmpwq [787.147817ms]
  I0801 03:26:56.518413 23 service_latency.go:351] Created: latency-svc-tzm8b
  I0801 03:26:56.518461 23 service_latency.go:351] Created: latency-svc-9sq5l
  I0801 03:26:56.540862 23 service_latency.go:351] Created: latency-svc-4xvvq
  I0801 03:26:56.541506 23 service_latency.go:358] Got endpoints: latency-svc-tzm8b [832.800799ms]
  I0801 03:26:56.541843 23 service_latency.go:358] Got endpoints: latency-svc-9sq5l [895.67803ms]
  I0801 03:26:56.582693 23 service_latency.go:358] Got endpoints: latency-svc-4xvvq [754.809278ms]
  I0801 03:26:56.588274 23 service_latency.go:351] Created: latency-svc-xjmzq
  I0801 03:26:56.604468 23 service_latency.go:351] Created: latency-svc-l7tl5
  I0801 03:26:56.609656 23 service_latency.go:358] Got endpoints: latency-svc-xjmzq [781.708662ms]
  I0801 03:26:56.688649 23 service_latency.go:358] Got endpoints: latency-svc-l7tl5 [831.493615ms]
  I0801 03:26:56.710017 23 service_latency.go:351] Created: latency-svc-drnsm
  I0801 03:26:56.742939 23 service_latency.go:358] Got endpoints: latency-svc-drnsm [843.35089ms]
  I0801 03:26:56.750401 23 service_latency.go:351] Created: latency-svc-nj5f4
  I0801 03:26:56.770509 23 service_latency.go:358] Got endpoints: latency-svc-nj5f4 [730.941229ms]
  I0801 03:26:56.771454 23 service_latency.go:351] Created: latency-svc-pc95c
  I0801 03:26:56.878209 23 service_latency.go:358] Got endpoints: latency-svc-pc95c [815.819147ms]
  I0801 03:26:56.894770 23 service_latency.go:351] Created: latency-svc-bkbbk
  I0801 03:26:56.918414 23 service_latency.go:358] Got endpoints: latency-svc-bkbbk [732.282825ms]
  I0801 03:26:56.943215 23 service_latency.go:351] Created: latency-svc-gcd6m
  I0801 03:26:56.947589 23 service_latency.go:351] Created: latency-svc-ww5mg
  I0801 03:26:56.953888 23 service_latency.go:358] Got endpoints: latency-svc-gcd6m [732.286614ms]
  I0801 03:26:57.035233 23 service_latency.go:358] Got endpoints: latency-svc-ww5mg [769.42514ms]
  I0801 03:26:57.051460 23 service_latency.go:351] Created: latency-svc-r8q55
  I0801 03:26:57.077807 23 service_latency.go:358] Got endpoints: latency-svc-r8q55 [787.192246ms]
  I0801 03:26:57.083629 23 service_latency.go:351] Created: latency-svc-fhcp9
  I0801 03:26:57.090005 23 service_latency.go:358] Got endpoints: latency-svc-fhcp9 [725.061458ms]
  I0801 03:26:57.113479 23 service_latency.go:351] Created: latency-svc-wvrr5
  I0801 03:26:57.189857 23 service_latency.go:358] Got endpoints: latency-svc-wvrr5 [800.75751ms]
  I0801 03:26:57.217295 23 service_latency.go:351] Created: latency-svc-8v558
  I0801 03:26:57.249453 23 service_latency.go:358] Got endpoints: latency-svc-8v558 [816.325585ms]
  E0801 03:26:57.318159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:26:57.342307 23 service_latency.go:351] Created: latency-svc-rkcsc
  I0801 03:26:57.342437 23 service_latency.go:351] Created: latency-svc-hcc6w
  I0801 03:26:57.387281 23 service_latency.go:358] Got endpoints: latency-svc-hcc6w [804.518492ms]
  I0801 03:26:57.387605 23 service_latency.go:358] Got endpoints: latency-svc-rkcsc [845.637487ms]
  I0801 03:26:57.389038 23 service_latency.go:351] Created: latency-svc-hlsm6
  I0801 03:26:57.410945 23 service_latency.go:351] Created: latency-svc-h4h85
  I0801 03:26:57.414123 23 service_latency.go:358] Got endpoints: latency-svc-hlsm6 [804.394465ms]
  I0801 03:26:57.431983 23 service_latency.go:358] Got endpoints: latency-svc-h4h85 [743.086734ms]
  I0801 03:26:57.524532 23 service_latency.go:351] Created: latency-svc-m4rnr
  I0801 03:26:57.524588 23 service_latency.go:358] Got endpoints: latency-svc-m4rnr [781.588944ms]
  I0801 03:26:57.538394 23 service_latency.go:351] Created: latency-svc-n65dm
  I0801 03:26:57.584862 23 service_latency.go:358] Got endpoints: latency-svc-n65dm [814.292628ms]
  I0801 03:26:57.594556 23 service_latency.go:351] Created: latency-svc-v8gmt
  I0801 03:26:57.653459 23 service_latency.go:358] Got endpoints: latency-svc-v8gmt [775.182332ms]
  I0801 03:26:57.661809 23 service_latency.go:351] Created: latency-svc-fjmv5
  I0801 03:26:57.682599 23 service_latency.go:358] Got endpoints: latency-svc-fjmv5 [764.118983ms]
  I0801 03:26:57.693975 23 service_latency.go:351] Created: latency-svc-9bxps
  I0801 03:26:57.706470 23 service_latency.go:358] Got endpoints: latency-svc-9bxps [752.514966ms]
  I0801 03:26:57.719488 23 service_latency.go:351] Created: latency-svc-2pps7
  I0801 03:26:57.740432 23 service_latency.go:358] Got endpoints: latency-svc-2pps7 [705.126668ms]
  I0801 03:26:57.744902 23 service_latency.go:351] Created: latency-svc-n49nb
  I0801 03:26:57.811173 23 service_latency.go:358] Got endpoints: latency-svc-n49nb [733.198475ms]
  I0801 03:26:57.853135 23 service_latency.go:351] Created: latency-svc-4srd7
  I0801 03:26:57.857721 23 service_latency.go:351] Created: latency-svc-w44h2
  I0801 03:26:57.881230 23 service_latency.go:358] Got endpoints: latency-svc-4srd7 [790.998077ms]
  I0801 03:26:57.881603 23 service_latency.go:358] Got endpoints: latency-svc-w44h2 [1.340039178s]
  I0801 03:26:57.959019 23 service_latency.go:351] Created: latency-svc-6v6rf
  I0801 03:26:57.981659 23 service_latency.go:358] Got endpoints: latency-svc-6v6rf [791.733922ms]
  I0801 03:26:57.987614 23 service_latency.go:351] Created: latency-svc-4rnmn
  I0801 03:26:58.007881 23 service_latency.go:358] Got endpoints: latency-svc-4rnmn [758.341596ms]
  I0801 03:26:58.152448 23 service_latency.go:351] Created: latency-svc-blb6f
  I0801 03:26:58.159202 23 service_latency.go:351] Created: latency-svc-4t7qf
  I0801 03:26:58.177707 23 service_latency.go:351] Created: latency-svc-qwkwq
  I0801 03:26:58.185126 23 service_latency.go:358] Got endpoints: latency-svc-blb6f [797.48179ms]
  I0801 03:26:58.185484 23 service_latency.go:358] Got endpoints: latency-svc-4t7qf [798.14412ms]
  I0801 03:26:58.216209 23 service_latency.go:358] Got endpoints: latency-svc-qwkwq [802.030098ms]
  I0801 03:26:58.287080 23 service_latency.go:351] Created: latency-svc-68wcn
  I0801 03:26:58.317623 23 service_latency.go:351] Created: latency-svc-xstxp
  E0801 03:26:58.323124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:26:58.323234 23 service_latency.go:358] Got endpoints: latency-svc-68wcn [890.861326ms]
  I0801 03:26:58.335115 23 service_latency.go:358] Got endpoints: latency-svc-xstxp [810.494579ms]
  I0801 03:26:58.350003 23 service_latency.go:351] Created: latency-svc-6dpwh
  I0801 03:26:58.383733 23 service_latency.go:358] Got endpoints: latency-svc-6dpwh [798.812716ms]
  I0801 03:26:58.384185 23 service_latency.go:351] Created: latency-svc-q69d6
  I0801 03:26:58.444547 23 service_latency.go:358] Got endpoints: latency-svc-q69d6 [791.027047ms]
  I0801 03:26:58.463343 23 service_latency.go:351] Created: latency-svc-dc6t9
  I0801 03:26:58.472994 23 service_latency.go:358] Got endpoints: latency-svc-dc6t9 [790.326837ms]
  I0801 03:26:58.505610 23 service_latency.go:351] Created: latency-svc-zrvgr
  I0801 03:26:58.589951 23 service_latency.go:351] Created: latency-svc-sgbcn
  I0801 03:26:58.595248 23 service_latency.go:358] Got endpoints: latency-svc-zrvgr [888.727547ms]
  I0801 03:26:58.600141 23 service_latency.go:351] Created: latency-svc-nhvtq
  I0801 03:26:58.607371 23 service_latency.go:358] Got endpoints: latency-svc-sgbcn [866.837089ms]
  I0801 03:26:58.613846 23 service_latency.go:358] Got endpoints: latency-svc-nhvtq [802.563086ms]
  I0801 03:26:58.625637 23 service_latency.go:351] Created: latency-svc-sjv22
  I0801 03:26:58.669555 23 service_latency.go:358] Got endpoints: latency-svc-sjv22 [788.26289ms]
  I0801 03:26:58.702591 23 service_latency.go:351] Created: latency-svc-wpdjv
  I0801 03:26:58.801816 23 service_latency.go:351] Created: latency-svc-gbq9m
  I0801 03:26:58.808752 23 service_latency.go:358] Got endpoints: latency-svc-wpdjv [927.111192ms]
  I0801 03:26:58.824524 23 service_latency.go:358] Got endpoints: latency-svc-gbq9m [842.796889ms]
  I0801 03:26:58.847215 23 service_latency.go:351] Created: latency-svc-mx6nn
  I0801 03:26:58.884302 23 service_latency.go:358] Got endpoints: latency-svc-mx6nn [876.35602ms]
  I0801 03:26:58.894177 23 service_latency.go:351] Created: latency-svc-dh4g6
  I0801 03:26:58.960246 23 service_latency.go:358] Got endpoints: latency-svc-dh4g6 [775.051713ms]
  I0801 03:26:58.989226 23 service_latency.go:351] Created: latency-svc-rdwwm
  I0801 03:26:59.011973 23 service_latency.go:358] Got endpoints: latency-svc-rdwwm [826.451247ms]
  I0801 03:26:59.014257 23 service_latency.go:351] Created: latency-svc-lb8ms
  I0801 03:26:59.026135 23 service_latency.go:358] Got endpoints: latency-svc-lb8ms [809.857612ms]
  I0801 03:26:59.117317 23 service_latency.go:351] Created: latency-svc-dfn8l
  I0801 03:26:59.149384 23 service_latency.go:358] Got endpoints: latency-svc-dfn8l [826.118169ms]
  I0801 03:26:59.150974 23 service_latency.go:351] Created: latency-svc-6glzp
  I0801 03:26:59.218667 23 service_latency.go:351] Created: latency-svc-g8mhq
  I0801 03:26:59.221021 23 service_latency.go:358] Got endpoints: latency-svc-6glzp [885.846286ms]
  I0801 03:26:59.230455 23 service_latency.go:351] Created: latency-svc-trg98
  I0801 03:26:59.289781 23 service_latency.go:358] Got endpoints: latency-svc-g8mhq [905.980434ms]
  I0801 03:26:59.292685 23 service_latency.go:358] Got endpoints: latency-svc-trg98 [848.078659ms]
  E0801 03:26:59.324079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:26:59.375863 23 service_latency.go:351] Created: latency-svc-rlnvs
  I0801 03:26:59.390850 23 service_latency.go:358] Got endpoints: latency-svc-rlnvs [917.792984ms]
  I0801 03:26:59.391148 23 service_latency.go:351] Created: latency-svc-vl6wd
  I0801 03:26:59.445611 23 service_latency.go:351] Created: latency-svc-4s5pb
  I0801 03:26:59.450222 23 service_latency.go:358] Got endpoints: latency-svc-vl6wd [854.769626ms]
  I0801 03:26:59.460783 23 service_latency.go:351] Created: latency-svc-m42dt
  I0801 03:26:59.463789 23 service_latency.go:358] Got endpoints: latency-svc-4s5pb [856.370041ms]
  I0801 03:26:59.531568 23 service_latency.go:358] Got endpoints: latency-svc-m42dt [917.656568ms]
  I0801 03:26:59.572434 23 service_latency.go:351] Created: latency-svc-9nd9m
  I0801 03:26:59.590351 23 service_latency.go:358] Got endpoints: latency-svc-9nd9m [920.326511ms]
  I0801 03:26:59.598357 23 service_latency.go:351] Created: latency-svc-ttk4q
  I0801 03:26:59.616424 23 service_latency.go:358] Got endpoints: latency-svc-ttk4q [807.441706ms]
  I0801 03:26:59.690456 23 service_latency.go:351] Created: latency-svc-b2ptm
  I0801 03:26:59.731803 23 service_latency.go:358] Got endpoints: latency-svc-b2ptm [907.175727ms]
  I0801 03:26:59.737629 23 service_latency.go:351] Created: latency-svc-l42ds
  I0801 03:26:59.748717 23 service_latency.go:358] Got endpoints: latency-svc-l42ds [864.355274ms]
  I0801 03:26:59.761284 23 service_latency.go:351] Created: latency-svc-mhxmn
  I0801 03:26:59.823210 23 service_latency.go:358] Got endpoints: latency-svc-mhxmn [862.894907ms]
  I0801 03:26:59.835805 23 service_latency.go:351] Created: latency-svc-sr9vh
  I0801 03:26:59.867756 23 service_latency.go:351] Created: latency-svc-2jsmg
  I0801 03:26:59.871111 23 service_latency.go:358] Got endpoints: latency-svc-sr9vh [859.072633ms]
  I0801 03:26:59.884824 23 service_latency.go:358] Got endpoints: latency-svc-2jsmg [858.633641ms]
  I0801 03:26:59.912720 23 service_latency.go:351] Created: latency-svc-p9kjh
  I0801 03:26:59.929428 23 service_latency.go:358] Got endpoints: latency-svc-p9kjh [779.72058ms]
  I0801 03:27:00.000959 23 service_latency.go:351] Created: latency-svc-rwb44
  I0801 03:27:00.029566 23 service_latency.go:358] Got endpoints: latency-svc-rwb44 [808.339383ms]
  I0801 03:27:00.055478 23 service_latency.go:351] Created: latency-svc-w2nrd
  I0801 03:27:00.055554 23 service_latency.go:351] Created: latency-svc-gbw26
  I0801 03:27:00.155167 23 service_latency.go:358] Got endpoints: latency-svc-gbw26 [865.168962ms]
  I0801 03:27:00.155532 23 service_latency.go:358] Got endpoints: latency-svc-w2nrd [862.671126ms]
  I0801 03:27:00.156826 23 service_latency.go:351] Created: latency-svc-dxvpk
  I0801 03:27:00.195469 23 service_latency.go:358] Got endpoints: latency-svc-dxvpk [804.180248ms]
  I0801 03:27:00.235806 23 service_latency.go:351] Created: latency-svc-xktkl
  I0801 03:27:00.285961 23 service_latency.go:351] Created: latency-svc-nwb96
  I0801 03:27:00.317752 23 service_latency.go:358] Got endpoints: latency-svc-xktkl [853.815654ms]
  E0801 03:27:00.324605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:00.327139 23 service_latency.go:358] Got endpoints: latency-svc-nwb96 [171.910917ms]
  I0801 03:27:00.334983 23 service_latency.go:351] Created: latency-svc-6cjwx
  I0801 03:27:00.356146 23 service_latency.go:351] Created: latency-svc-77jlb
  I0801 03:27:00.358866 23 service_latency.go:358] Got endpoints: latency-svc-6cjwx [203.291996ms]
  I0801 03:27:00.399217 23 service_latency.go:358] Got endpoints: latency-svc-77jlb [867.426534ms]
  I0801 03:27:00.466524 23 service_latency.go:351] Created: latency-svc-kp2gl
  I0801 03:27:00.487856 23 service_latency.go:358] Got endpoints: latency-svc-kp2gl [897.436746ms]
  I0801 03:27:00.512647 23 service_latency.go:351] Created: latency-svc-sjqzs
  I0801 03:27:00.524402 23 service_latency.go:358] Got endpoints: latency-svc-sjqzs [907.700948ms]
  I0801 03:27:00.599326 23 service_latency.go:351] Created: latency-svc-xpwfz
  I0801 03:27:00.614797 23 service_latency.go:358] Got endpoints: latency-svc-xpwfz [882.810232ms]
  I0801 03:27:00.624067 23 service_latency.go:351] Created: latency-svc-q9mx4
  I0801 03:27:00.644389 23 service_latency.go:358] Got endpoints: latency-svc-q9mx4 [895.472962ms]
  I0801 03:27:00.658275 23 service_latency.go:351] Created: latency-svc-g2mfz
  I0801 03:27:00.689307 23 service_latency.go:358] Got endpoints: latency-svc-g2mfz [865.748557ms]
  I0801 03:27:00.762656 23 service_latency.go:351] Created: latency-svc-vpszw
  I0801 03:27:00.779671 23 service_latency.go:358] Got endpoints: latency-svc-vpszw [894.704345ms]
  I0801 03:27:00.793907 23 service_latency.go:351] Created: latency-svc-dv4kj
  I0801 03:27:00.956530 23 service_latency.go:351] Created: latency-svc-nxmrt
  I0801 03:27:00.957297 23 service_latency.go:358] Got endpoints: latency-svc-dv4kj [1.027652083s]
  I0801 03:27:01.148531 23 service_latency.go:358] Got endpoints: latency-svc-nxmrt [1.118897647s]
  I0801 03:27:01.149237 23 service_latency.go:351] Created: latency-svc-kg2wc
  I0801 03:27:01.303919 23 service_latency.go:358] Got endpoints: latency-svc-kg2wc [1.853625911s]
  I0801 03:27:01.304309 23 service_latency.go:351] Created: latency-svc-xnx2f
  E0801 03:27:01.325698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:01.486579 23 service_latency.go:351] Created: latency-svc-j9xtp
  I0801 03:27:01.486993 23 service_latency.go:358] Got endpoints: latency-svc-xnx2f [1.291465561s]
  I0801 03:27:01.561404 23 service_latency.go:351] Created: latency-svc-6z5gn
  I0801 03:27:01.571503 23 service_latency.go:358] Got endpoints: latency-svc-j9xtp [1.25369327s]
  I0801 03:27:01.651047 23 service_latency.go:358] Got endpoints: latency-svc-6z5gn [1.32384805s]
  I0801 03:27:01.662141 23 service_latency.go:351] Created: latency-svc-sq7zp
  I0801 03:27:01.670378 23 service_latency.go:358] Got endpoints: latency-svc-sq7zp [1.311454098s]
  I0801 03:27:01.709470 23 service_latency.go:351] Created: latency-svc-679q8
  I0801 03:27:01.861513 23 service_latency.go:358] Got endpoints: latency-svc-679q8 [1.462221251s]
  I0801 03:27:01.862115 23 service_latency.go:351] Created: latency-svc-xpqj4
  I0801 03:27:02.005699 23 service_latency.go:351] Created: latency-svc-76qwb
  I0801 03:27:02.005825 23 service_latency.go:358] Got endpoints: latency-svc-xpqj4 [1.517791892s]
  I0801 03:27:02.208377 23 service_latency.go:358] Got endpoints: latency-svc-76qwb [1.683747508s]
  I0801 03:27:02.223971 23 service_latency.go:351] Created: latency-svc-mwlqd
  I0801 03:27:02.224060 23 service_latency.go:351] Created: latency-svc-2ckqg
  E0801 03:27:02.326509      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:02.422239 23 service_latency.go:358] Got endpoints: latency-svc-2ckqg [2.551058307s]
  I0801 03:27:02.422785 23 service_latency.go:358] Got endpoints: latency-svc-mwlqd [1.807762879s]
  I0801 03:27:02.423588 23 service_latency.go:351] Created: latency-svc-7nglf
  I0801 03:27:02.466974 23 service_latency.go:358] Got endpoints: latency-svc-7nglf [1.822365926s]
  I0801 03:27:02.481108 23 service_latency.go:351] Created: latency-svc-g25x5
  I0801 03:27:02.506987 23 service_latency.go:358] Got endpoints: latency-svc-g25x5 [1.817516481s]
  I0801 03:27:02.508361 23 service_latency.go:351] Created: latency-svc-xr2kq
  I0801 03:27:02.615172 23 service_latency.go:358] Got endpoints: latency-svc-xr2kq [1.83542928s]
  I0801 03:27:02.666973 23 service_latency.go:351] Created: latency-svc-k6cwt
  I0801 03:27:02.772722 23 service_latency.go:358] Got endpoints: latency-svc-k6cwt [1.815233431s]
  I0801 03:27:02.780768 23 service_latency.go:351] Created: latency-svc-cfs29
  I0801 03:27:02.830591 23 service_latency.go:358] Got endpoints: latency-svc-cfs29 [1.681805893s]
  I0801 03:27:02.831405 23 service_latency.go:351] Created: latency-svc-m24br
  I0801 03:27:02.978690 23 service_latency.go:358] Got endpoints: latency-svc-m24br [1.674237982s]
  I0801 03:27:03.020611 23 service_latency.go:351] Created: latency-svc-f8qln
  I0801 03:27:03.037244 23 service_latency.go:358] Got endpoints: latency-svc-f8qln [1.550187393s]
  I0801 03:27:03.090776 23 service_latency.go:351] Created: latency-svc-pghmq
  I0801 03:27:03.187979 23 service_latency.go:358] Got endpoints: latency-svc-pghmq [1.616397345s]
  I0801 03:27:03.291751 23 service_latency.go:351] Created: latency-svc-g29cn
  E0801 03:27:03.329256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:03.477380 23 service_latency.go:358] Got endpoints: latency-svc-g29cn [1.826094194s]
  I0801 03:27:03.479485 23 service_latency.go:351] Created: latency-svc-cjc9m
  I0801 03:27:03.560278 23 service_latency.go:358] Got endpoints: latency-svc-cjc9m [1.889705757s]
  I0801 03:27:03.682410 23 service_latency.go:351] Created: latency-svc-ltlqj
  I0801 03:27:03.752222 23 service_latency.go:358] Got endpoints: latency-svc-ltlqj [1.890200277s]
  I0801 03:27:03.851159 23 service_latency.go:351] Created: latency-svc-2c89j
  I0801 03:27:03.856455 23 service_latency.go:351] Created: latency-svc-gxxvm
  I0801 03:27:03.943689 23 service_latency.go:358] Got endpoints: latency-svc-gxxvm [1.937834139s]
  I0801 03:27:03.944076 23 service_latency.go:358] Got endpoints: latency-svc-2c89j [1.735639105s]
  I0801 03:27:03.944888 23 service_latency.go:351] Created: latency-svc-6r2c2
  I0801 03:27:04.020807 23 service_latency.go:351] Created: latency-svc-hwhdz
  I0801 03:27:04.020822 23 service_latency.go:358] Got endpoints: latency-svc-6r2c2 [1.598186601s]
  I0801 03:27:04.056543 23 service_latency.go:358] Got endpoints: latency-svc-hwhdz [1.632806991s]
  I0801 03:27:04.062275 23 service_latency.go:351] Created: latency-svc-qmpf6
  I0801 03:27:04.086150 23 service_latency.go:358] Got endpoints: latency-svc-qmpf6 [1.619107739s]
  I0801 03:27:04.172584 23 service_latency.go:351] Created: latency-svc-rmmpd
  I0801 03:27:04.183729 23 service_latency.go:358] Got endpoints: latency-svc-rmmpd [1.676680938s]
  I0801 03:27:04.312020 23 service_latency.go:351] Created: latency-svc-mpm7l
  I0801 03:27:04.321253 23 service_latency.go:351] Created: latency-svc-l2ktk
  E0801 03:27:04.330489      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:04.341415 23 service_latency.go:358] Got endpoints: latency-svc-l2ktk [1.568494216s]
  I0801 03:27:04.341793 23 service_latency.go:358] Got endpoints: latency-svc-mpm7l [1.726557681s]
  I0801 03:27:04.359588 23 service_latency.go:351] Created: latency-svc-lslql
  I0801 03:27:04.379897 23 service_latency.go:351] Created: latency-svc-n72vp
  I0801 03:27:04.383183 23 service_latency.go:358] Got endpoints: latency-svc-lslql [1.552530908s]
  I0801 03:27:04.396748 23 service_latency.go:358] Got endpoints: latency-svc-n72vp [1.417977358s]
  I0801 03:27:04.461620 23 service_latency.go:351] Created: latency-svc-lvrsl
  I0801 03:27:04.494856 23 service_latency.go:351] Created: latency-svc-qdjf6
  I0801 03:27:04.497661 23 service_latency.go:358] Got endpoints: latency-svc-lvrsl [1.460209693s]
  I0801 03:27:04.526709 23 service_latency.go:358] Got endpoints: latency-svc-qdjf6 [1.338437917s]
  I0801 03:27:04.527019 23 service_latency.go:351] Created: latency-svc-cp2v7
  I0801 03:27:04.594835 23 service_latency.go:358] Got endpoints: latency-svc-cp2v7 [1.117240074s]
  I0801 03:27:04.606411 23 service_latency.go:351] Created: latency-svc-rq4md
  I0801 03:27:04.655491 23 service_latency.go:351] Created: latency-svc-gwfn4
  I0801 03:27:04.752952 23 service_latency.go:358] Got endpoints: latency-svc-rq4md [1.19240102s]
  I0801 03:27:04.764566 23 service_latency.go:358] Got endpoints: latency-svc-gwfn4 [1.012093924s]
  I0801 03:27:04.798247 23 service_latency.go:351] Created: latency-svc-pkgbq
  I0801 03:27:04.813945 23 service_latency.go:358] Got endpoints: latency-svc-pkgbq [870.18447ms]
  I0801 03:27:04.835800 23 service_latency.go:351] Created: latency-svc-nfm9r
  I0801 03:27:04.901841 23 service_latency.go:351] Created: latency-svc-jr7jh
  I0801 03:27:04.903249 23 service_latency.go:358] Got endpoints: latency-svc-nfm9r [958.95926ms]
  I0801 03:27:04.924662 23 service_latency.go:351] Created: latency-svc-668r9
  I0801 03:27:04.941680 23 service_latency.go:358] Got endpoints: latency-svc-jr7jh [920.571481ms]
  I0801 03:27:04.951073 23 service_latency.go:358] Got endpoints: latency-svc-668r9 [894.313703ms]
  I0801 03:27:04.967451 23 service_latency.go:351] Created: latency-svc-k4jz9
  I0801 03:27:04.984553 23 service_latency.go:358] Got endpoints: latency-svc-k4jz9 [898.196289ms]
  I0801 03:27:04.996301 23 service_latency.go:351] Created: latency-svc-xvddk
  I0801 03:27:05.093785 23 service_latency.go:358] Got endpoints: latency-svc-xvddk [909.843206ms]
  I0801 03:27:05.121839 23 service_latency.go:351] Created: latency-svc-7x5wf
  I0801 03:27:05.153586 23 service_latency.go:358] Got endpoints: latency-svc-7x5wf [812.098878ms]
  I0801 03:27:05.159490 23 service_latency.go:351] Created: latency-svc-hrkdj
  I0801 03:27:05.245405 23 service_latency.go:358] Got endpoints: latency-svc-hrkdj [903.568061ms]
  I0801 03:27:05.260742 23 service_latency.go:351] Created: latency-svc-xhrx9
  I0801 03:27:05.292806 23 service_latency.go:358] Got endpoints: latency-svc-xhrx9 [909.351723ms]
  I0801 03:27:05.312208 23 service_latency.go:351] Created: latency-svc-7bqgm
  E0801 03:27:05.331878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:05.395439 23 service_latency.go:358] Got endpoints: latency-svc-7bqgm [998.079157ms]
  I0801 03:27:05.456674 23 service_latency.go:351] Created: latency-svc-s2jtd
  I0801 03:27:05.473291 23 service_latency.go:351] Created: latency-svc-qzsvc
  I0801 03:27:05.543598 23 service_latency.go:351] Created: latency-svc-59ssn
  I0801 03:27:05.544566 23 service_latency.go:358] Got endpoints: latency-svc-qzsvc [1.017789854s]
  I0801 03:27:05.544927 23 service_latency.go:358] Got endpoints: latency-svc-s2jtd [1.047206857s]
  I0801 03:27:05.574776 23 service_latency.go:358] Got endpoints: latency-svc-59ssn [979.71411ms]
  I0801 03:27:05.577206 23 service_latency.go:351] Created: latency-svc-jmz8p
  I0801 03:27:05.606852 23 service_latency.go:358] Got endpoints: latency-svc-jmz8p [853.620754ms]
  I0801 03:27:05.622148 23 service_latency.go:351] Created: latency-svc-9dzxn
  I0801 03:27:05.684871 23 service_latency.go:358] Got endpoints: latency-svc-9dzxn [920.249454ms]
  I0801 03:27:05.685628 23 service_latency.go:351] Created: latency-svc-d65st
  I0801 03:27:05.725643 23 service_latency.go:358] Got endpoints: latency-svc-d65st [911.629552ms]
  I0801 03:27:05.726845 23 service_latency.go:351] Created: latency-svc-rdgcd
  I0801 03:27:05.759864 23 service_latency.go:358] Got endpoints: latency-svc-rdgcd [856.27375ms]
  I0801 03:27:05.761228 23 service_latency.go:351] Created: latency-svc-nxn96
  I0801 03:27:05.775097 23 service_latency.go:358] Got endpoints: latency-svc-nxn96 [833.352158ms]
  I0801 03:27:05.860747 23 service_latency.go:351] Created: latency-svc-tspzc
  I0801 03:27:05.885462 23 service_latency.go:358] Got endpoints: latency-svc-tspzc [934.317154ms]
  I0801 03:27:05.915203 23 service_latency.go:351] Created: latency-svc-4q49h
  I0801 03:27:05.994579 23 service_latency.go:358] Got endpoints: latency-svc-4q49h [1.009958972s]
  I0801 03:27:06.001433 23 service_latency.go:351] Created: latency-svc-8w2xg
  I0801 03:27:06.031278 23 service_latency.go:351] Created: latency-svc-drhk5
  I0801 03:27:06.043728 23 service_latency.go:358] Got endpoints: latency-svc-8w2xg [949.686718ms]
  I0801 03:27:06.053041 23 service_latency.go:351] Created: latency-svc-rzvjs
  I0801 03:27:06.063168 23 service_latency.go:358] Got endpoints: latency-svc-drhk5 [909.395114ms]
  I0801 03:27:06.085240 23 service_latency.go:358] Got endpoints: latency-svc-rzvjs [839.652537ms]
  I0801 03:27:06.125476 23 service_latency.go:351] Created: latency-svc-dzfb6
  I0801 03:27:06.141871 23 service_latency.go:358] Got endpoints: latency-svc-dzfb6 [849.006581ms]
  I0801 03:27:06.152958 23 service_latency.go:351] Created: latency-svc-vqcb6
  I0801 03:27:06.196786 23 service_latency.go:358] Got endpoints: latency-svc-vqcb6 [801.279638ms]
  I0801 03:27:06.258813 23 service_latency.go:351] Created: latency-svc-fxrvx
  I0801 03:27:06.274419 23 service_latency.go:358] Got endpoints: latency-svc-fxrvx [729.79808ms]
  I0801 03:27:06.300798 23 service_latency.go:351] Created: latency-svc-njlxh
  E0801 03:27:06.332961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:06.345628 23 service_latency.go:358] Got endpoints: latency-svc-njlxh [800.661825ms]
  I0801 03:27:06.355789 23 service_latency.go:351] Created: latency-svc-fhntt
  I0801 03:27:06.407196 23 service_latency.go:358] Got endpoints: latency-svc-fhntt [832.359377ms]
  I0801 03:27:06.414599 23 service_latency.go:351] Created: latency-svc-p5h2p
  I0801 03:27:06.441831 23 service_latency.go:358] Got endpoints: latency-svc-p5h2p [834.929411ms]
  I0801 03:27:06.470977 23 service_latency.go:351] Created: latency-svc-j685g
  I0801 03:27:06.505159 23 service_latency.go:358] Got endpoints: latency-svc-j685g [820.224062ms]
  I0801 03:27:06.505693 23 service_latency.go:114] Latencies: [82.964426ms 122.070396ms 151.570288ms 171.910917ms 179.727613ms 203.291996ms 231.836393ms 240.391219ms 263.146677ms 288.564606ms 322.774061ms 368.717261ms 410.94882ms 412.405277ms 432.069696ms 477.779685ms 484.80082ms 493.612423ms 496.609691ms 499.917945ms 509.711426ms 511.29498ms 523.285306ms 525.978003ms 528.985391ms 529.199768ms 530.637685ms 533.416935ms 535.509024ms 536.742086ms 538.20339ms 539.423352ms 546.423709ms 548.02856ms 552.529139ms 555.813427ms 559.32868ms 563.262022ms 572.510204ms 574.379304ms 575.233794ms 609.312415ms 610.269307ms 640.646485ms 655.904893ms 669.580221ms 693.285882ms 705.126668ms 725.061458ms 729.63028ms 729.79808ms 730.941229ms 732.282825ms 732.286614ms 733.198475ms 743.086734ms 752.514966ms 754.809278ms 758.341596ms 762.269308ms 764.118983ms 769.42514ms 775.051713ms 775.182332ms 779.72058ms 781.588944ms 781.708662ms 787.147817ms 787.192246ms 788.26289ms 788.379014ms 790.326837ms 790.998077ms 791.027047ms 791.733922ms 797.48179ms 798.14412ms 798.812716ms 800.661825ms 800.75751ms 801.279638ms 802.030098ms 802.563086ms 804.180248ms 804.394465ms 804.518492ms 805.465051ms 807.441706ms 808.339383ms 809.857612ms 810.494579ms 812.098878ms 814.030423ms 814.292628ms 815.819147ms 816.325585ms 818.541755ms 820.224062ms 820.756416ms 821.240047ms 826.118169ms 826.451247ms 831.493615ms 832.359377ms 832.800799ms 833.352158ms 834.929411ms 839.652537ms 842.796889ms 843.35089ms 845.637487ms 848.078659ms 849.006581ms 853.620754ms 853.815654ms 854.769626ms 856.27375ms 856.370041ms 858.633641ms 859.072633ms 862.671126ms 862.894907ms 864.355274ms 865.168962ms 865.748557ms 866.837089ms 867.426534ms 870.18447ms 876.35602ms 882.810232ms 885.846286ms 888.727547ms 890.861326ms 894.313703ms 894.704345ms 895.472962ms 895.67803ms 897.436746ms 898.196289ms 903.568061ms 905.980434ms 907.175727ms 907.700948ms 909.351723ms 909.395114ms 909.843206ms 911.629552ms 917.656568ms 917.792984ms 920.249454ms 920.326511ms 920.571481ms 927.111192ms 934.317154ms 949.686718ms 958.95926ms 979.71411ms 998.079157ms 1.009958972s 1.012093924s 1.017789854s 1.027652083s 1.047206857s 1.117240074s 1.118897647s 1.19240102s 1.25369327s 1.291465561s 1.311454098s 1.32384805s 1.338437917s 1.340039178s 1.417977358s 1.460209693s 1.462221251s 1.517791892s 1.550187393s 1.552530908s 1.568494216s 1.598186601s 1.616397345s 1.619107739s 1.632806991s 1.674237982s 1.676680938s 1.681805893s 1.683747508s 1.726557681s 1.735639105s 1.807762879s 1.815233431s 1.817516481s 1.822365926s 1.826094194s 1.83542928s 1.853625911s 1.889705757s 1.890200277s 1.937834139s 2.551058307s]
  I0801 03:27:06.505780 23 service_latency.go:118] 50 %ile: 826.118169ms
  I0801 03:27:06.505813 23 service_latency.go:119] 90 %ile: 1.616397345s
  I0801 03:27:06.505830 23 service_latency.go:120] 99 %ile: 1.937834139s
  I0801 03:27:06.505845 23 service_latency.go:121] Total sample count: 200
  I0801 03:27:06.506107 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3479" for this suite. @ 08/01/25 03:27:06.511
â€¢ [14.656 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 08/01/25 03:27:06.535
  I0801 03:27:06.535601 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename namespaces @ 08/01/25 03:27:06.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:27:06.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:27:06.572
  STEP: creating a Namespace @ 08/01/25 03:27:06.577
  STEP: patching the Namespace @ 08/01/25 03:27:06.599
  STEP: get the Namespace and ensuring it has the label @ 08/01/25 03:27:06.616
  I0801 03:27:06.630809 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1500" for this suite. @ 08/01/25 03:27:06.635
  STEP: Destroying namespace "nspatchtest-c6261acc-7981-41db-9de4-226980fa48cd-1237" for this suite. @ 08/01/25 03:27:06.658
â€¢ [0.145 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 08/01/25 03:27:06.681
  I0801 03:27:06.681533 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename pods @ 08/01/25 03:27:06.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:27:06.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:27:06.731
  STEP: Create set of pods @ 08/01/25 03:27:06.747
  I0801 03:27:06.788399 23 pods.go:874] created test-pod-1
  I0801 03:27:06.808616 23 pods.go:874] created test-pod-2
  I0801 03:27:06.869042 23 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 08/01/25 03:27:06.869
  E0801 03:27:07.333796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:27:08.334274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:27:09.335318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:27:10.335409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 08/01/25 03:27:11.11
  I0801 03:27:11.149490 23 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0801 03:27:11.336613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:27:12.337136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:12.829653 23 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0801 03:27:13.337602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:13.617114 23 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I0801 03:27:14.131832 23 pods.go:1139] Pod quantity 2 is different from expected quantity 0
  E0801 03:27:14.338898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:15.155993 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2551" for this suite. @ 08/01/25 03:27:15.164
â€¢ [8.515 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 08/01/25 03:27:15.2
  I0801 03:27:15.201094 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename validating-admission-policy @ 08/01/25 03:27:15.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:27:15.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:27:15.235
  STEP: getting /apis @ 08/01/25 03:27:15.284
  STEP: getting /apis/admissionregistration.k8s.io @ 08/01/25 03:27:15.319
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 08/01/25 03:27:15.321
  STEP: creating @ 08/01/25 03:27:15.327
  E0801 03:27:15.339386      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting @ 08/01/25 03:27:15.412
  STEP: listing @ 08/01/25 03:27:15.434
  STEP: watching @ 08/01/25 03:27:15.468
  I0801 03:27:15.468842 23 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 08/01/25 03:27:15.474
  STEP: updating @ 08/01/25 03:27:15.528
  I0801 03:27:15.602736 23 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 08/01/25 03:27:15.602
  STEP: patching /status @ 08/01/25 03:27:15.625
  STEP: updating /status @ 08/01/25 03:27:15.679
  STEP: deleting @ 08/01/25 03:27:15.81
  STEP: deleting a collection @ 08/01/25 03:27:15.897
  I0801 03:27:16.197689 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3023" for this suite. @ 08/01/25 03:27:16.221
â€¢ [1.055 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 08/01/25 03:27:16.256
  I0801 03:27:16.256318 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename container-runtime @ 08/01/25 03:27:16.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:27:16.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:27:16.31
  STEP: create the container @ 08/01/25 03:27:16.314
  E0801 03:27:16.340422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:16.349560      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 08/01/25 03:27:16.349
  E0801 03:27:17.341112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:27:18.341634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:27:19.342253      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0801 03:27:20.342254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 08/01/25 03:27:20.429
  STEP: the container should be terminated @ 08/01/25 03:27:20.436
  STEP: the termination message should be set @ 08/01/25 03:27:20.436
  I0801 03:27:20.436465 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 08/01/25 03:27:20.436
  I0801 03:27:20.480056 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3857" for this suite. @ 08/01/25 03:27:20.488
â€¢ [4.253 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 08/01/25 03:27:20.508
  I0801 03:27:20.508654 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename daemonsets @ 08/01/25 03:27:20.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:27:20.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:27:20.549
  I0801 03:27:20.608080 23 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 08/01/25 03:27:20.621
  I0801 03:27:20.628267 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 03:27:20.628313 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 08/01/25 03:27:20.628
  I0801 03:27:20.759776 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 03:27:20.759981 23 fixtures.go:131] Node k3k-k3kcluster-server-0 is running 0 daemon pod, expected 1
  E0801 03:27:21.342435      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:21.759449 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 03:27:21.759506 23 fixtures.go:131] Node k3k-k3kcluster-server-0 is running 0 daemon pod, expected 1
  E0801 03:27:22.342598      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:22.753274 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 03:27:22.753331 23 fixtures.go:131] Node k3k-k3kcluster-server-0 is running 0 daemon pod, expected 1
  E0801 03:27:23.343707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:23.757172 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 03:27:23.757227 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 08/01/25 03:27:23.774
  I0801 03:27:23.873810 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 03:27:23.873863 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 08/01/25 03:27:23.873
  I0801 03:27:23.968995 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 03:27:23.969123 23 fixtures.go:131] Node k3k-k3kcluster-server-0 is running 0 daemon pod, expected 1
  E0801 03:27:24.344756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:24.927548 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 03:27:24.927675 23 fixtures.go:131] Node k3k-k3kcluster-server-0 is running 0 daemon pod, expected 1
  E0801 03:27:25.345166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:25.959545 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 03:27:25.959606 23 fixtures.go:131] Node k3k-k3kcluster-server-0 is running 0 daemon pod, expected 1
  E0801 03:27:26.345251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:26.938151 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0801 03:27:26.938361 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/01/25 03:27:26.954
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7291, will wait for the garbage collector to delete the pods @ 08/01/25 03:27:26.954
  I0801 03:27:27.062328 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 44.385123ms
  I0801 03:27:27.165820 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 103.466376ms
  E0801 03:27:27.348042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0801 03:27:28.078143 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0801 03:27:28.078203 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0801 03:27:28.098010 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46252"},"items":null}

  I0801 03:27:28.178689 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46257"},"items":null}

  I0801 03:27:28.272083 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7291" for this suite. @ 08/01/25 03:27:28.277
â€¢ [7.790 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 08/01/25 03:27:28.299
  I0801 03:27:28.299193 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-844543265
  STEP: Building a namespace api object, basename watch @ 08/01/25 03:27:28.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/01/25 03:27:28.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/01/25 03:27:28.344
  E0801 03:27:28.348305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a watch on configmaps @ 08/01/25 03:27:28.349
  STEP: creating a new configmap @ 08/01/25 03:27:28.35
  STEP: modifying the configmap once @ 08/01/25 03:27:28.368
  STEP: closing the watch once it receives two notifications @ 08/01/25 03:27:28.418
  I0801 03:27:28.418141 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8658  d5590d10-9d25-46fa-99d3-705f4e09004c 46273 0 2025-08-01 03:27:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-08-01 03:27:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 03:27:28.418318 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8658  d5590d10-9d25-46fa-99d3-705f4e09004c 46275 0 2025-08-01 03:27:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-08-01 03:27:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 08/01/25 03:27:28.418
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 08/01/25 03:27:28.442
  STEP: deleting the configmap @ 08/01/25 03:27:28.444
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 08/01/25 03:27:28.492
  I0801 03:27:28.492340 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8658  d5590d10-9d25-46fa-99d3-705f4e09004c 46278 0 2025-08-01 03:27:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-08-01 03:27:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 03:27:28.495039 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8658  d5590d10-9d25-46fa-99d3-705f4e09004c 46280 0 2025-08-01 03:27:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-08-01 03:27:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0801 03:27:28.495394 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8658" for this suite. @ 08/01/25 03:27:28.499
â€¢ [0.224 seconds]
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0801 03:27:28.522761 23 suites.go:34] Running AfterSuite actions on node 1
  I0801 03:27:28.522782 23 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.088 seconds]
------------------------------

Ran 419 of 6731 Specs in 7000.631 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h56m42.907022796s
Test Suite Passed
